                                                                               
            88                                      88                         
            ""                                      88                         
                                                    88                         
8b       d8 88 88,dPYba,,adPYba,            ,adPPYb,88 ,adPPYYba, 8b,dPPYba,   
`8b     d8' 88 88P'   "88"    "8a aaaaaaaa a8"    `Y88 ""     `Y8 88P'   `"8a  
 `8b   d8'  88 88      88      88 """""""" 8b       88 ,adPPPPP88 88       88  
  `8b,d8'   88 88      88      88          "8a,   ,d88 88,    ,88 88       88  
    "8"     88 88      88      88           `"8bbdP"Y8 `"8bbdP"Y8 88       88  
                                                                               
                                                                               
           _       _                              _ 
  __ _  __| | ___ | |__   ___       _ __  ___  __| |
 / _` |/ _` |/ _ \| '_ \ / _ \_____| '_ \/ __|/ _` |
| (_| | (_| | (_) | |_) |  __/_____| |_) \__ \ (_| |
 \__,_|\__,_|\___/|_.__/ \___|     | .__/|___/\__,_|
                                   |_|              
Documentation indexed from : https://theiviaxx.github.io/photoshop-docs/scripting.html 
Last parsed on : Fri Feb 16 04:49:54 PM GMT 2024
 _           _           
(_)_ __   __| | _____  __
| | '_ \ / _` |/ _ \ \/ /
| | | | | (_| |  __/>  < 
|_|_| |_|\__,_|\___/_/\_\
                         
- downloaded
      - & @downloaded@ Extension SDK Documentation (CEP) &
      - & @downloaded@ Index&
      - & @downloaded@ Photoshop Scripting & Extension Reference 

Indices and tables &
      - & @downloaded@ Photoshop Scripting Reseources &
      - & @downloaded@ Photoshop Scripting Documentation &
      - & @downloaded@ &
- CEP
        - & @CEP@ CSInterface &
        - & @CEP@ Event Codes &
- Core
        - & @Core@ $ &
        - & @Core@ AliasArray &
        - & @Core@ Array &
        - & @Core@ Boolean &
        - & @Core@ Date &
        - & @Core@ Error &
        - & @Core@ FileArray &
        - & @Core@ File &
        - & @Core@ Folder &
        - & @Core@ Function &
        - & @Core@ global &
        - & @Core@ Core &
        - & @Core@ Math &
        - & @Core@ Namespace &
        - & @Core@ Number &
        - & @Core@ Object &
        - & @Core@ QName &
        - & @Core@ Reflection &
        - & @Core@ ReflectionInfo &
        - & @Core@ RegExp &
        - & @Core@ Socket &
        - & @Core@ String &
        - & @Core@ UnitPoint &
        - & @Core@ UnitRect &
        - & @Core@ UnitValue &
        - & @Core@ XML &
        - & @Core@ XMLList &
- Photoshop
        - & @Photoshop@ ActionDescriptor &
        - & @Photoshop@ ActionList &
        - & @Photoshop@ ActionReference &
        - & @Photoshop@ AdjustmentReference &
        - & @Photoshop@ AnchorPosition &
        - & @Photoshop@ AntiAlias &
        - & @Photoshop@ Application &
        - & @Photoshop@ ArtLayer &
        - & @Photoshop@ ArtLayers &
        - & @Photoshop@ AutoKernType &
        - & @Photoshop@ BatchDestinationType &
        - & @Photoshop@ BatchOptions &
        - & @Photoshop@ BitmapConversionOptions &
        - & @Photoshop@ BitmapConversionType &
        - & @Photoshop@ BitmapHalfToneType &
        - & @Photoshop@ BitsPerChannelType &
        - & @Photoshop@ BlendMode &
        - & @Photoshop@ BMPDepthType &
        - & @Photoshop@ BMPSaveOptions &
        - & @Photoshop@ ByteOrderType &
        - & @Photoshop@ CameraRAWOpenOptions &
        - & @Photoshop@ CameraRAWSettingsType &
        - & @Photoshop@ CameraRAWSize &
        - & @Photoshop@ Case &
        - & @Photoshop@ ChangeMode &
        - & @Photoshop@ Channel &
        - & @Photoshop@ Channels &
        - & @Photoshop@ ChannelType &
        - & @Photoshop@ CMYKColor &
        - & @Photoshop@ ColorBlendMode &
        - & @Photoshop@ Color &
        - & @Photoshop@ ColorModel &
        - & @Photoshop@ ColorPicker &
        - & @Photoshop@ ColorProfileType &
        - & @Photoshop@ ColorReductionType &
        - & @Photoshop@ ColorSampler &
        - & @Photoshop@ ColorSamplers &
        - & @Photoshop@ ColorSpaceType &
        - & @Photoshop@ ContactSheetOptions &
        - & @Photoshop@ CopyrightedType &
        - & @Photoshop@ CountItem &
        - & @Photoshop@ CountItems &
        - & @Photoshop@ CreateFields &
        - & @Photoshop@ CropToType &
        - & @Photoshop@ DCS1_SaveOptions &
        - & @Photoshop@ DCS2_SaveOptions &
        - & @Photoshop@ DCSType &
        - & @Photoshop@ DepthMapSource &
        - & @Photoshop@ DescValueType &
        - & @Photoshop@ DialogModes &
        - & @Photoshop@ DICOMOpenOptions &
        - & @Photoshop@ Direction &
        - & @Photoshop@ DisplacementMapType &
        - & @Photoshop@ DitherType &
        - & @Photoshop@ DocPositionStyle &
        - & @Photoshop@ DocumentConversionOptions &
        - & @Photoshop@ DocumentFill &
        - & @Photoshop@ Document &
        - & @Photoshop@ DocumentInfo &
        - & @Photoshop@ DocumentMode &
        - & @Photoshop@ DocumentPrintSettings &
        - & @Photoshop@ Documents &
        - & @Photoshop@ EditLogItemsType &
        - & @Photoshop@ ElementPlacement &
        - & @Photoshop@ EliminateFields &
        - & @Photoshop@ EPSSaveOptions &
        - & @Photoshop@ ExportOptions &
        - & @Photoshop@ ExportOptionsIllustrator &
        - & @Photoshop@ ExportOptionsSaveForWeb &
        - & @Photoshop@ ExportType &
        - & @Photoshop@ FileNamingType &
        - & @Photoshop@ FontPreviewType &
        - & @Photoshop@ FontSize &
        - & @Photoshop@ ForcedColors &
        - & @Photoshop@ FormatOptionsType &
        - & @Photoshop@ GalleryBannerOptions &
        - & @Photoshop@ GalleryConstrainType &
        - & @Photoshop@ GalleryCustomColorOptions &
        - & @Photoshop@ GalleryFontType &
        - & @Photoshop@ GalleryImagesOptions &
        - & @Photoshop@ GalleryOptions &
        - & @Photoshop@ GallerySecurityOptions &
        - & @Photoshop@ GallerySecurityTextColorType &
        - & @Photoshop@ GallerySecurityTextPositionType &
        - & @Photoshop@ GallerySecurityTextRotateType &
        - & @Photoshop@ GallerySecurityType &
        - & @Photoshop@ GalleryThumbnailOptions &
        - & @Photoshop@ GalleryThumbSizeType &
        - & @Photoshop@ GenericEPSOpenOptions &
        - & @Photoshop@ GenericPDFOpenOptions &
        - & @Photoshop@ Geometry &
        - & @Photoshop@ GIFSaveOptions &
        - & @Photoshop@ GrayColor &
        - & @Photoshop@ GridLineStyle &
        - & @Photoshop@ GridSize &
        - & @Photoshop@ Guide &
        - & @Photoshop@ GuideLineStyle &
        - & @Photoshop@ Guides &
        - & @Photoshop@ HistoryState &
        - & @Photoshop@ HistoryStates &
        - & @Photoshop@ HSBColor &
        - & @Photoshop@ IllustratorPathType &
        - & @Photoshop@ IndexedConversionOptions &
        - & @Photoshop@ Photoshop &
        - & @Photoshop@ Intent &
        - & @Photoshop@ JavaScriptExecutionMode &
        - & @Photoshop@ JPEGSaveOptions &
        - & @Photoshop@ Justification &
        - & @Photoshop@ LabColor &
        - & @Photoshop@ Language &
        - & @Photoshop@ LayerComp &
        - & @Photoshop@ LayerCompressionType &
        - & @Photoshop@ LayerComps &
        - & @Photoshop@ Layer &
        - & @Photoshop@ LayerKind &
        - & @Photoshop@ LayerSet &
        - & @Photoshop@ LayerSets &
        - & @Photoshop@ Layers &
        - & @Photoshop@ LensType &
        - & @Photoshop@ MacExtensionType &
        - & @Photoshop@ MacPreviewType &
        - & @Photoshop@ MagnificationType &
        - & @Photoshop@ MatteType &
        - & @Photoshop@ MeasurementLog &
        - & @Photoshop@ MeasurementRange &
        - & @Photoshop@ MeasurementScale &
        - & @Photoshop@ MeasurementSource &
        - & @Photoshop@ NewDocumentMode &
        - & @Photoshop@ NoColor &
        - & @Photoshop@ NoiseDistribution &
        - & @Photoshop@ Notifier &
        - & @Photoshop@ Notifiers &
        - & @Photoshop@ OffsetUndefinedAreas &
        - & @Photoshop@ OpenDocumentMode &
        - & @Photoshop@ OpenDocumentType &
        - & @Photoshop@ OpenOptions &
        - & @Photoshop@ OperatingSystem &
        - & @Photoshop@ Orientation &
        - & @Photoshop@ OtherPaintingCursors &
        - & @Photoshop@ PaintingCursors &
        - & @Photoshop@ PaletteType &
        - & @Photoshop@ PathItem &
        - & @Photoshop@ PathItems &
        - & @Photoshop@ PathKind &
        - & @Photoshop@ PathPoint &
        - & @Photoshop@ PathPointInfo &
        - & @Photoshop@ PathPoints &
        - & @Photoshop@ PDFCompatibilityType &
        - & @Photoshop@ PDFEncodingType &
        - & @Photoshop@ PDFResampleType &
        - & @Photoshop@ PDFSaveOptions &
        - & @Photoshop@ PDFStandardType &
        - & @Photoshop@ PhotoCDColorSpace &
        - & @Photoshop@ PhotoCDOpenOptions &
        - & @Photoshop@ PhotoCDSize &
        - & @Photoshop@ PhotoshopSaveOptions &
        - & @Photoshop@ PICTBitsPerPixels &
        - & @Photoshop@ PICTCompression &
        - & @Photoshop@ PICTFileSaveOptions &
        - & @Photoshop@ PICTResourceSaveOptions &
        - & @Photoshop@ PicturePackageOptions &
        - & @Photoshop@ PicturePackageTextType &
        - & @Photoshop@ PixarSaveOptions &
        - & @Photoshop@ PNGSaveOptions &
        - & @Photoshop@ PointKind &
        - & @Photoshop@ PointType &
        - & @Photoshop@ PolarConversionType &
        - & @Photoshop@ Preferences &
        - & @Photoshop@ PresentationOptions &
        - & @Photoshop@ PrintColorHandling &
        - & @Photoshop@ PurgeTarget &
        - & @Photoshop@ QueryStateType &
        - & @Photoshop@ RadialBlurMethod &
        - & @Photoshop@ RadialBlurQuality &
        - & @Photoshop@ RasterizeType &
        - & @Photoshop@ RawFormatOpenOptions &
        - & @Photoshop@ RawSaveOptions &
        - & @Photoshop@ Rectangle &
        - & @Photoshop@ ReferenceFormType &
        - & @Photoshop@ ResampleMethod &
        - & @Photoshop@ ResetTarget &
        - & @Photoshop@ RGBColor &
        - & @Photoshop@ RippleSize &
        - & @Photoshop@ SaveBehavior &
        - & @Photoshop@ SaveDocumentType &
        - & @Photoshop@ SaveEncoding &
        - & @Photoshop@ SaveLogItemsType &
        - & @Photoshop@ SaveOptions &
        - & @Photoshop@ SaveOptionsType &
        - & @Photoshop@ Selection &
        - & @Photoshop@ SelectionType &
        - & @Photoshop@ SGIRGBSaveOptions &
        - & @Photoshop@ ShapeOperation &
        - & @Photoshop@ SmartBlurMode &
        - & @Photoshop@ SmartBlurQuality &
        - & @Photoshop@ SolidColor &
        - & @Photoshop@ SourceSpaceType &
        - & @Photoshop@ SpherizeMode &
        - & @Photoshop@ StrikeThruType &
        - & @Photoshop@ StrokeLocation &
        - & @Photoshop@ SubPathInfo &
        - & @Photoshop@ SubPathItem &
        - & @Photoshop@ SubPathItems &
        - & @Photoshop@ TargaBitsPerPixels &
        - & @Photoshop@ TargaSaveOptions &
        - & @Photoshop@ TextComposer &
        - & @Photoshop@ TextFont &
        - & @Photoshop@ TextFonts &
        - & @Photoshop@ TextItem &
        - & @Photoshop@ TextType &
        - & @Photoshop@ TextureType &
        - & @Photoshop@ TiffEncodingType &
        - & @Photoshop@ TiffSaveOptions &
        - & @Photoshop@ ToolType &
        - & @Photoshop@ TransitionType &
        - & @Photoshop@ TrimType &
        - & @Photoshop@ TypeUnits &
        - & @Photoshop@ UndefinedAreas &
        - & @Photoshop@ UnderlineType &
        - & @Photoshop@ Units &
        - & @Photoshop@ Urgency &
        - & @Photoshop@ WarpStyle &
        - & @Photoshop@ WaveType &
        - & @Photoshop@ WhiteBalanceType &
        - & @Photoshop@ XMPMetadata &
        - & @Photoshop@ ZigZagType &
- ScriptUI
        - & @ScriptUI@ Bounds &
        - & @ScriptUI@ Button &
        - & @ScriptUI@ Checkbox &
        - & @ScriptUI@ Dimension &
        - & @ScriptUI@ DrawState &
        - & @ScriptUI@ DropDownList &
        - & @ScriptUI@ EditText &
        - & @ScriptUI@ Environment &
        - & @ScriptUI@ Event &
        - & @ScriptUI@ Events &
        - & @ScriptUI@ FlashPlayer &
        - & @ScriptUI@ Group &
        - & @ScriptUI@ IconButton &
        - & @ScriptUI@ Scriptui &
        - & @ScriptUI@ KeyboardState &
        - & @ScriptUI@ LayoutManager &
        - & @ScriptUI@ ListBox &
        - & @ScriptUI@ ListItem &
        - & @ScriptUI@ Panel &
        - & @ScriptUI@ Point &
        - & @ScriptUI@ Progressbar &
        - & @ScriptUI@ RadioButton &
        - & @ScriptUI@ ScriptUIBrush &
        - & @ScriptUI@ ScriptUIFont &
        - & @ScriptUI@ ScriptUIGraphics &
        - & @ScriptUI@ ScriptUI &
        - & @ScriptUI@ ScriptUIImage &
        - & @ScriptUI@ ScriptUIPath &
        - & @ScriptUI@ ScriptUIPen &
        - & @ScriptUI@ Scrollbar &
        - & @ScriptUI@ Slider &
        - & @ScriptUI@ StaticText &
        - & @ScriptUI@ TreeView &
        - & @ScriptUI@ UIEvent &
        - & @ScriptUI@ Window &
- $
          - & @$@ $.about &
          - & @$@ $.bp &
          - & @$@ $.buildDate &
          - & @$@ $.build &
          - & @$@ $.colorPicker &
          - & @$@ $.decimalPoint &
          - & @$@ $.engineName &
          - & @$@ $.error &
          - & @$@ $.evalFile &
          - & @$@ $.fileName &
          - & @$@ $.flags &
          - & @$@ $.gc &
          - & @$@ $.getenv &
          - & @$@ $.global &
          - & @$@ $.hiresTimer &
          - & @$@ $.includePath &
          - & @$@ $.level &
          - & @$@ $.line &
          - & @$@ $.locale &
          - & @$@ $.localize &
          - & @$@ $.memCache &
          - & @$@ $.os &
          - & @$@ $.screens &
          - & @$@ $.setenv &
          - & @$@ $.sleep &
          - & @$@ $.stack &
          - & @$@ $.strict &
          - & @$@ $.toString &
          - & @$@ $.version &
          - & @$@ $.write &
          - & @$@ $.writeln &
- Array
          - & @Array@ Array.Array &
          - & @Array@ Array.concat &
          - & @Array@ Array.join &
          - & @Array@ Array.length &
          - & @Array@ Array.pop &
          - & @Array@ Array.push &
          - & @Array@ Array.reverse &
          - & @Array@ Array.shift &
          - & @Array@ Array.slice &
          - & @Array@ Array.sort &
          - & @Array@ Array.splice &
          - & @Array@ Array.toLocaleString &
          - & @Array@ Array.toSource &
          - & @Array@ Array.toString &
          - & @Array@ Array.unshift &
- Boolean
          - & @Boolean@ Boolean.Boolean &
          - & @Boolean@ Boolean.toSource &
          - & @Boolean@ Boolean.toString &
          - & @Boolean@ Boolean.valueOf &
- Date
          - & @Date@ Date.Date &
          - & @Date@ Date.getDate &
          - & @Date@ Date.getDay &
          - & @Date@ Date.getFullYear &
          - & @Date@ Date.getHours &
          - & @Date@ Date.getMilliseconds &
          - & @Date@ Date.getMinutes &
          - & @Date@ Date.getMonth &
          - & @Date@ Date.getSeconds &
          - & @Date@ Date.getTime &
          - & @Date@ Date.getTimezoneOffset &
          - & @Date@ Date.getUTCDate &
          - & @Date@ Date.getUTCDay &
          - & @Date@ Date.getUTCFullYear &
          - & @Date@ Date.getUTCHours &
          - & @Date@ Date.getUTCMilliseconds &
          - & @Date@ Date.getUTCMinutes &
          - & @Date@ Date.getUTCMonth &
          - & @Date@ Date.getUTCSeconds &
          - & @Date@ Date.getYear &
          - & @Date@ Date.parse &
          - & @Date@ Date.setDate &
          - & @Date@ Date.setFullYear &
          - & @Date@ Date.setHours &
          - & @Date@ Date.setMilliseconds &
          - & @Date@ Date.setMinutes &
          - & @Date@ Date.setMonth &
          - & @Date@ Date.setSeconds &
          - & @Date@ Date.setTime &
          - & @Date@ Date.setUTCDate &
          - & @Date@ Date.setUTCFullYear &
          - & @Date@ Date.setUTCHours &
          - & @Date@ Date.setUTCMilliseconds &
          - & @Date@ Date.setUTCMinutes &
          - & @Date@ Date.setUTCMonth &
          - & @Date@ Date.setUTCSeconds &
          - & @Date@ Date.setYear &
          - & @Date@ Date.toDateString &
          - & @Date@ Date.toGMTString &
          - & @Date@ Date.toLocaleDateString &
          - & @Date@ Date.toLocaleString &
          - & @Date@ Date.toLocaleTimeString &
          - & @Date@ Date.toSource &
          - & @Date@ Date.toString &
          - & @Date@ Date.toTimeString &
          - & @Date@ Date.toUTCString &
          - & @Date@ Date.UTC &
          - & @Date@ Date.valueOf &
- Error
          - & @Error@ Error.description &
          - & @Error@ Error.Error &
          - & @Error@ Error.toSource &
          - & @Error@ Error.toString &
- File
          - & @File@ File.absoluteURI &
          - & @File@ File.alias &
          - & @File@ File.changePath &
          - & @File@ File.close &
          - & @File@ File.copy &
          - & @File@ File.createAlias &
          - & @File@ File.created &
          - & @File@ File.creator &
          - & @File@ File.decode &
          - & @File@ File.displayName &
          - & @File@ File.encode &
          - & @File@ File.encoding &
          - & @File@ File.eof &
          - & @File@ File.error &
          - & @File@ File.execute &
          - & @File@ File.exists &
          - & @File@ File.File &
          - & @File@ File.fs &
          - & @File@ File.fsName &
          - & @File@ File.fullName &
          - & @File@ File.getRelativeURI &
          - & @File@ File.hidden &
          - & @File@ File.isEncodingAvailable &
          - & @File@ File.length &
          - & @File@ File.lineFeed &
          - & @File@ File.modified &
          - & @File@ File.name &
          - & @File@ File.openDialog &
          - & @File@ File.openDlg &
          - & @File@ File.open &
          - & @File@ File.parent &
          - & @File@ File.path &
          - & @File@ File.readch &
          - & @File@ File.read &
          - & @File@ File.readln &
          - & @File@ File.readonly &
          - & @File@ File.relativeURI &
          - & @File@ File.remove &
          - & @File@ File.rename &
          - & @File@ File.resolve &
          - & @File@ File.saveDialog &
          - & @File@ File.saveDlg &
          - & @File@ File.seek &
          - & @File@ File.tell &
          - & @File@ File.toSource &
          - & @File@ File.toString &
          - & @File@ File.type &
          - & @File@ File.write &
          - & @File@ File.writeln &
- Folder
          - & @Folder@ Folder.absoluteURI &
          - & @Folder@ Folder.alias &
          - & @Folder@ Folder.appData &
          - & @Folder@ Folder.appPackage &
          - & @Folder@ Folder.changePath &
          - & @Folder@ Folder.commonFiles &
          - & @Folder@ Folder.created &
          - & @Folder@ Folder.create &
          - & @Folder@ Folder.current &
          - & @Folder@ Folder.decode &
          - & @Folder@ Folder.desktop &
          - & @Folder@ Folder.displayName &
          - & @Folder@ Folder.encode &
          - & @Folder@ Folder.error &
          - & @Folder@ Folder.execute &
          - & @Folder@ Folder.exists &
          - & @Folder@ Folder.Folder &
          - & @Folder@ Folder.fs &
          - & @Folder@ Folder.fsName &
          - & @Folder@ Folder.fullName &
          - & @Folder@ Folder.getFiles &
          - & @Folder@ Folder.getRelativeURI &
          - & @Folder@ Folder.isEncodingAvailable &
          - & @Folder@ Folder.modified &
          - & @Folder@ Folder.myDocuments &
          - & @Folder@ Folder.name &
          - & @Folder@ Folder.parent &
          - & @Folder@ Folder.path &
          - & @Folder@ Folder.relativeURI &
          - & @Folder@ Folder.remove &
          - & @Folder@ Folder.rename &
          - & @Folder@ Folder.resolve &
          - & @Folder@ Folder.selectDialog &
          - & @Folder@ Folder.selectDlg &
          - & @Folder@ Folder.startup &
          - & @Folder@ Folder.system &
          - & @Folder@ Folder.temp &
          - & @Folder@ Folder.toSource &
          - & @Folder@ Folder.toString &
          - & @Folder@ Folder.trash &
          - & @Folder@ Folder.userData &
- Function
          - & @Function@ Function.apply &
          - & @Function@ Function.arguments &
          - & @Function@ Function.arity &
          - & @Function@ Function.call &
          - & @Function@ Function.Function &
          - & @Function@ Function.length &
          - & @Function@ Function.name &
          - & @Function@ Function.toSource &
          - & @Function@ Function.toString &
- global
          - & @global@ global.alert &
          - & @global@ global.confirm &
          - & @global@ global.decodeURIComponent &
          - & @global@ global.decodeURI &
          - & @global@ global.encodeURIComponent &
          - & @global@ global.encodeURI &
          - & @global@ global.escape &
          - & @global@ global.eval &
          - & @global@ global.Infinity &
          - & @global@ global.isFinite &
          - & @global@ global.isNaN &
          - & @global@ global.isXMLName &
          - & @global@ global.localize &
          - & @global@ global.NaN &
          - & @global@ global.parseFloat &
          - & @global@ global.parseInt &
          - & @global@ global.prompt &
          - & @global@ global.setDefaultXMLNamespace &
          - & @global@ global.undefined &
          - & @global@ global.unescape &
          - & @global@ global.uneval &
- Math
          - & @Math@ Math.abs &
          - & @Math@ Math.acos &
          - & @Math@ Math.asin &
          - & @Math@ Math.atan2 &
          - & @Math@ Math.atan &
          - & @Math@ Math.ceil &
          - & @Math@ Math.cos &
          - & @Math@ Math.E &
          - & @Math@ Math.exp &
          - & @Math@ Math.floor &
          - & @Math@ Math.LN10 &
          - & @Math@ Math.LN2 &
          - & @Math@ Math.LOG10E &
          - & @Math@ Math.LOG2E &
          - & @Math@ Math.log &
          - & @Math@ Math.max &
          - & @Math@ Math.min &
          - & @Math@ Math.PI &
          - & @Math@ Math.pow &
          - & @Math@ Math.random &
          - & @Math@ Math.round &
          - & @Math@ Math.sin &
          - & @Math@ Math.SQRT1_2 &
          - & @Math@ Math.SQRT2 &
          - & @Math@ Math.sqrt &
          - & @Math@ Math.tan &
- Namespace
          - & @Namespace@ Namespace.Namespace &
          - & @Namespace@ Namespace.prefix &
          - & @Namespace@ Namespace.uri &
- Number
          - & @Number@ Number.MAX_VALUE &
          - & @Number@ Number.MIN_VALUE &
          - & @Number@ Number.NaN &
          - & @Number@ Number.NEGATIVE_INFINITY &
          - & @Number@ Number.Number &
          - & @Number@ Number.POSITIVE_INFINITY &
          - & @Number@ Number.toExponential &
          - & @Number@ Number.toFixed &
          - & @Number@ Number.toLocaleString &
          - & @Number@ Number.toPrecision &
          - & @Number@ Number.toSource &
          - & @Number@ Number.toString &
          - & @Number@ Number.valueOf &
- Object
          - & @Object@ Object.constructor &
          - & @Object@ Object.hasOwnProperty &
          - & @Object@ Object.isPrototypeOf &
          - & @Object@ Object.isValid &
          - & @Object@ Object.Object &
          - & @Object@ Object.propertyIsEnumerable &
          - & @Object@ Object.prototype &
          - & @Object@ Object.reflect &
          - & @Object@ Object.toLocaleString &
          - & @Object@ Object.toSource &
          - & @Object@ Object.toString &
          - & @Object@ Object.unwatch &
          - & @Object@ Object.valueOf &
          - & @Object@ Object.watch &
- QName
          - & @QName@ QName.localName &
          - & @QName@ QName.QName &
          - & @QName@ QName.uri &
- Reflection
          - & @Reflection@ Reflection.description &
          - & @Reflection@ Reflection.find &
          - & @Reflection@ Reflection.help &
- ReflectionInfo
          - & @ReflectionInfo@ ReflectionInfo.arguments &
          - & @ReflectionInfo@ ReflectionInfo.dataType &
          - & @ReflectionInfo@ ReflectionInfo.defaultValue &
          - & @ReflectionInfo@ ReflectionInfo.description &
          - & @ReflectionInfo@ ReflectionInfo.help &
          - & @ReflectionInfo@ ReflectionInfo.isCollection &
          - & @ReflectionInfo@ ReflectionInfo.max &
          - & @ReflectionInfo@ ReflectionInfo.min &
          - & @ReflectionInfo@ ReflectionInfo.name &
          - & @ReflectionInfo@ ReflectionInfo.parent &
          - & @ReflectionInfo@ ReflectionInfo.sampleCode &
          - & @ReflectionInfo@ ReflectionInfo.sampleFile &
          - & @ReflectionInfo@ ReflectionInfo.type &
- Reflection
          - & @Reflection@ Reflection.methods &
          - & @Reflection@ Reflection.name &
          - & @Reflection@ Reflection.properties &
          - & @Reflection@ Reflection.sampleCode &
          - & @Reflection@ Reflection.sampleFile &
          - & @Reflection@ Reflection.staticMethods &
          - & @Reflection@ Reflection.staticProperties &
          - & @Reflection@ Reflection.toXML &
- RegExp
          - & @RegExp@ RegExp.$1 &
          - & @RegExp@ RegExp.$2 &
          - & @RegExp@ RegExp.$3 &
          - & @RegExp@ RegExp.$4 &
          - & @RegExp@ RegExp.$5 &
          - & @RegExp@ RegExp.$6 &
          - & @RegExp@ RegExp.$7 &
          - & @RegExp@ RegExp.$8 &
          - & @RegExp@ RegExp.$9 &
          - & @RegExp@ RegExp.compile &
          - & @RegExp@ RegExp.exec &
          - & @RegExp@ RegExp.global &
          - & @RegExp@ RegExp.ignoreCase &
          - & @RegExp@ RegExp.input &
          - & @RegExp@ RegExp.lastMatch &
          - & @RegExp@ RegExp.lastParen &
          - & @RegExp@ RegExp.leftContext &
          - & @RegExp@ RegExp.multiline &
          - & @RegExp@ RegExp.RegExp &
          - & @RegExp@ RegExp.rightContext &
          - & @RegExp@ RegExp.test &
          - & @RegExp@ RegExp.toString &
- Socket
          - & @Socket@ Socket.close &
          - & @Socket@ Socket.connected &
          - & @Socket@ Socket.encoding &
          - & @Socket@ Socket.eof &
          - & @Socket@ Socket.error &
          - & @Socket@ Socket.host &
          - & @Socket@ Socket.listen &
          - & @Socket@ Socket.open &
          - & @Socket@ Socket.poll &
          - & @Socket@ Socket.read &
          - & @Socket@ Socket.readln &
          - & @Socket@ Socket.Socket &
          - & @Socket@ Socket.timeout &
          - & @Socket@ Socket.write &
          - & @Socket@ Socket.writeln &
- String
          - & @String@ String.anchor &
          - & @String@ String.big &
          - & @String@ String.blink &
          - & @String@ String.bold &
          - & @String@ String.charAt &
          - & @String@ String.charCodeAt &
          - & @String@ String.concat &
          - & @String@ String.fixed &
          - & @String@ String.fontcolor &
          - & @String@ String.fontsize &
          - & @String@ String.fromCharCode &
          - & @String@ String.indexOf &
          - & @String@ String.italics &
          - & @String@ String.lastIndexOf &
          - & @String@ String.length &
          - & @String@ String.link &
          - & @String@ String.localeCompare &
          - & @String@ String.match &
          - & @String@ String.replace &
          - & @String@ String.search &
          - & @String@ String.slice &
          - & @String@ String.small &
          - & @String@ String.split &
          - & @String@ String.strike &
          - & @String@ String.String &
          - & @String@ String.sub &
          - & @String@ String.substr &
          - & @String@ String.substring &
          - & @String@ String.sup &
          - & @String@ String.toLocaleLowerCase &
          - & @String@ String.toLocaleUpperCase &
          - & @String@ String.toLowerCase &
          - & @String@ String.toSource &
          - & @String@ String.toString &
          - & @String@ String.toUpperCase &
          - & @String@ String.valueOf &
- UnitValue
          - & @UnitValue@ UnitValue.as &
          - & @UnitValue@ UnitValue.baseUnit &
          - & @UnitValue@ UnitValue.convert &
          - & @UnitValue@ UnitValue.type &
          - & @UnitValue@ UnitValue.value &
- XML
          - & @XML@ XML.addNamespace &
          - & @XML@ XML.appendChild &
          - & @XML@ XML.attribute &
          - & @XML@ XML.attributes &
          - & @XML@ XML.child &
          - & @XML@ XML.childIndex &
          - & @XML@ XML.children &
          - & @XML@ XML.comments &
          - & @XML@ XML.contains &
          - & @XML@ XML.copy &
          - & @XML@ XML.defaultSettings &
          - & @XML@ XML.descendants &
          - & @XML@ XML.elements &
          - & @XML@ XML.hasComplexContent &
          - & @XML@ XML.hasSimpleContent &
          - & @XML@ XML.ignoreComments &
          - & @XML@ XML.ignoreProcessingInstructions &
          - & @XML@ XML.ignoreWhitespace &
          - & @XML@ XML.inScopeNamespaces &
          - & @XML@ XML.insertChildAfter &
          - & @XML@ XML.insertChildBefore &
          - & @XML@ XML.length &
          - & @XML@ XML.localName &
          - & @XML@ XML.name &
          - & @XML@ XML.namespaceDeclarations &
          - & @XML@ XML.namespace &
          - & @XML@ XML.nodeKind &
          - & @XML@ XML.normalize &
          - & @XML@ XML.parent &
          - & @XML@ XML.prependChild &
          - & @XML@ XML.prettyIndent &
          - & @XML@ XML.prettyPrinting &
          - & @XML@ XML.processingInstructions &
          - & @XML@ XML.removeNamespace &
          - & @XML@ XML.replace &
          - & @XML@ XML.setChildren &
          - & @XML@ XML.setLocalName &
          - & @XML@ XML.setName &
          - & @XML@ XML.setNamespace &
          - & @XML@ XML.setSettings &
          - & @XML@ XML.settings &
          - & @XML@ XML.text &
          - & @XML@ XML.toString &
          - & @XML@ XML.toXMLString &
          - & @XML@ XML.XML &
          - & @XML@ XML.xpath &
- ActionDescriptor
          - & @ActionDescriptor@ ActionDescriptor.count &
- ActionList
          - & @ActionList@ ActionList.count &
- AdjustmentReference
          - & @AdjustmentReference@ AdjustmentReference.ABSOLUTE &
          - & @AdjustmentReference@ AdjustmentReference.RELATIVE &
- AnchorPosition
          - & @AnchorPosition@ AnchorPosition.BOTTOMCENTER &
          - & @AnchorPosition@ AnchorPosition.BOTTOMLEFT &
          - & @AnchorPosition@ AnchorPosition.BOTTOMRIGHT &
          - & @AnchorPosition@ AnchorPosition.MIDDLECENTER &
          - & @AnchorPosition@ AnchorPosition.MIDDLELEFT &
          - & @AnchorPosition@ AnchorPosition.MIDDLERIGHT &
          - & @AnchorPosition@ AnchorPosition.TOPCENTER &
          - & @AnchorPosition@ AnchorPosition.TOPLEFT &
          - & @AnchorPosition@ AnchorPosition.TOPRIGHT &
- AntiAlias
          - & @AntiAlias@ AntiAlias.CRISP &
          - & @AntiAlias@ AntiAlias.NONE &
          - & @AntiAlias@ AntiAlias.SHARP &
          - & @AntiAlias@ AntiAlias.SMOOTH &
          - & @AntiAlias@ AntiAlias.STRONG &
- Application
          - & @Application@ Application.activeDocument &
          - & @Application@ Application.backgroundColor &
          - & @Application@ Application.batch &
          - & @Application@ Application.beep &
          - & @Application@ Application.bringToFront &
          - & @Application@ Application.build &
          - & @Application@ Application.changeProgressText &
          - & @Application@ Application.charIDToTypeID &
          - & @Application@ Application.colorSettings &
          - & @Application@ Application.currentTool &
          - & @Application@ Application.displayDialogs &
          - & @Application@ Application.doAction &
          - & @Application@ Application.documents &
          - & @Application@ Application.doForcedProgress &
          - & @Application@ Application.doProgress &
          - & @Application@ Application.doProgressSegmentTask &
          - & @Application@ Application.doProgressSubTask &
          - & @Application@ Application.doProgressTask &
          - & @Application@ Application.eraseCustomOptions &
          - & @Application@ Application.executeActionGet &
          - & @Application@ Application.executeAction &
          - & @Application@ Application.featureEnabled &
          - & @Application@ Application.fonts &
          - & @Application@ Application.foregroundColor &
          - & @Application@ Application.freeMemory &
          - & @Application@ Application.getCustomOptions &
          - & @Application@ Application.isQuicktimeAvailable &
          - & @Application@ Application.load &
          - & @Application@ Application.locale &
          - & @Application@ Application.macintoshFileTypes &
          - & @Application@ Application.makeContactSheet &
          - & @Application@ Application.makePDFPresentation &
          - & @Application@ Application.makePhotoGallery &
          - & @Application@ Application.makePhotomerge &
          - & @Application@ Application.makePicturePackage &
          - & @Application@ Application.measurementLog &
          - & @Application@ Application.name &
          - & @Application@ Application.notifiersEnabled &
          - & @Application@ Application.notifiers &
          - & @Application@ Application.openDialog &
          - & @Application@ Application.open &
          - & @Application@ Application.parent &
          - & @Application@ Application.path &
          - & @Application@ Application.playbackDisplayDialogs &
          - & @Application@ Application.playbackParameters &
          - & @Application@ Application.preferencesFolder &
          - & @Application@ Application.preferences &
          - & @Application@ Application.purge &
          - & @Application@ Application.putCustomOptions &
          - & @Application@ Application.recentFiles &
          - & @Application@ Application.refreshFonts &
          - & @Application@ Application.refresh &
          - & @Application@ Application.runMenuItem &
          - & @Application@ Application.scriptingBuildDate &
          - & @Application@ Application.scriptingVersion &
          - & @Application@ Application.showColorPicker &
          - & @Application@ Application.stringIDToTypeID &
          - & @Application@ Application.system &
          - & @Application@ Application.systemInformation &
          - & @Application@ Application.togglePalettes &
          - & @Application@ Application.toolSupportsBrushes &
          - & @Application@ Application.typeIDToCharID &
          - & @Application@ Application.typeIDToStringID &
          - & @Application@ Application.typename &
          - & @Application@ Application.updateProgress &
          - & @Application@ Application.version &
          - & @Application@ Application.windowsFileTypes &
- ArtLayer
          - & @ArtLayer@ ArtLayer.add &
          - & @ArtLayer@ ArtLayer.adjustBrightnessContrast &
          - & @ArtLayer@ ArtLayer.adjustColorBalance &
          - & @ArtLayer@ ArtLayer.adjustCurves &
          - & @ArtLayer@ ArtLayer.adjustLevels &
          - & @ArtLayer@ ArtLayer.applyAddNoise &
          - & @ArtLayer@ ArtLayer.applyAverage &
          - & @ArtLayer@ ArtLayer.applyBlur &
          - & @ArtLayer@ ArtLayer.applyBlurMore &
          - & @ArtLayer@ ArtLayer.applyClouds &
          - & @ArtLayer@ ArtLayer.applyCustomFilter &
          - & @ArtLayer@ ArtLayer.applyDeInterlace &
          - & @ArtLayer@ ArtLayer.applyDespeckle &
          - & @ArtLayer@ ArtLayer.applyDifferenceClouds &
          - & @ArtLayer@ ArtLayer.applyDiffuseGlow &
          - & @ArtLayer@ ArtLayer.applyDisplace &
          - & @ArtLayer@ ArtLayer.applyDustAndScratches &
          - & @ArtLayer@ ArtLayer.applyGaussianBlur &
          - & @ArtLayer@ ArtLayer.applyGlassEffect &
          - & @ArtLayer@ ArtLayer.applyHighPass &
          - & @ArtLayer@ ArtLayer.applyLensBlur &
          - & @ArtLayer@ ArtLayer.applyLensFlare &
          - & @ArtLayer@ ArtLayer.applyMaximum &
          - & @ArtLayer@ ArtLayer.applyMedianNoise &
          - & @ArtLayer@ ArtLayer.applyMinimum &
          - & @ArtLayer@ ArtLayer.applyMotionBlur &
          - & @ArtLayer@ ArtLayer.applyNTSC &
          - & @ArtLayer@ ArtLayer.applyOceanRipple &
          - & @ArtLayer@ ArtLayer.applyOffset &
          - & @ArtLayer@ ArtLayer.applyPinch &
          - & @ArtLayer@ ArtLayer.applyPolarCoordinates &
          - & @ArtLayer@ ArtLayer.applyRadialBlur &
          - & @ArtLayer@ ArtLayer.applyRipple &
          - & @ArtLayer@ ArtLayer.applySharpenEdges &
          - & @ArtLayer@ ArtLayer.applySharpen &
          - & @ArtLayer@ ArtLayer.applySharpenMore &
          - & @ArtLayer@ ArtLayer.applyShear &
          - & @ArtLayer@ ArtLayer.applySmartBlur &
          - & @ArtLayer@ ArtLayer.applySpherize &
          - & @ArtLayer@ ArtLayer.applyStyleFile &
          - & @ArtLayer@ ArtLayer.applyStyle &
          - & @ArtLayer@ ArtLayer.applyTextureFill &
          - & @ArtLayer@ ArtLayer.applyTwirl &
          - & @ArtLayer@ ArtLayer.applyUnSharpMask &
          - & @ArtLayer@ ArtLayer.applyWave &
          - & @ArtLayer@ ArtLayer.applyZigZag &
          - & @ArtLayer@ ArtLayer.autoContrast &
          - & @ArtLayer@ ArtLayer.autoLevels &
          - & @ArtLayer@ ArtLayer.clear &
          - & @ArtLayer@ ArtLayer.copy &
          - & @ArtLayer@ ArtLayer.cut &
          - & @ArtLayer@ ArtLayer.desaturate &
          - & @ArtLayer@ ArtLayer.equalize &
          - & @ArtLayer@ ArtLayer.fillOpacity &
          - & @ArtLayer@ ArtLayer.filterMaskDensity &
          - & @ArtLayer@ ArtLayer.filterMaskFeather &
          - & @ArtLayer@ ArtLayer.grouped &
          - & @ArtLayer@ ArtLayer.invert &
          - & @ArtLayer@ ArtLayer.isBackgroundLayer &
          - & @ArtLayer@ ArtLayer.kind &
          - & @ArtLayer@ ArtLayer.layerMaskDensity &
          - & @ArtLayer@ ArtLayer.layerMaskFeather &
          - & @ArtLayer@ ArtLayer.merge &
          - & @ArtLayer@ ArtLayer.mixChannels &
          - & @ArtLayer@ ArtLayer.parent &
          - & @ArtLayer@ ArtLayer.photoFilter &
          - & @ArtLayer@ ArtLayer.pixelsLocked &
          - & @ArtLayer@ ArtLayer.positionLocked &
          - & @ArtLayer@ ArtLayer.posterize &
          - & @ArtLayer@ ArtLayer.rasterize &
- ArtLayers
          - & @ArtLayers@ ArtLayers.add &
- ArtLayer
          - & @ArtLayer@ ArtLayer.saveStyleFile &
          - & @ArtLayer@ ArtLayer.selectiveColor &
- ArtLayers
          - & @ArtLayers@ ArtLayers.getByName &
- ArtLayer
          - & @ArtLayer@ ArtLayer.shadowHighlight &
- ArtLayers
          - & @ArtLayers@ ArtLayers.[] &
          - & @ArtLayers@ ArtLayers.length &
          - & @ArtLayers@ ArtLayers.parent &
          - & @ArtLayers@ ArtLayers.removeAll &
          - & @ArtLayers@ ArtLayers.typename &
- ArtLayer
          - & @ArtLayer@ ArtLayer.textItem &
          - & @ArtLayer@ ArtLayer.threshold &
          - & @ArtLayer@ ArtLayer.transparentPixelsLocked &
          - & @ArtLayer@ ArtLayer.typename &
          - & @ArtLayer@ ArtLayer.vectorMaskDensity &
          - & @ArtLayer@ ArtLayer.vectorMaskFeather &
- AutoKernType
          - & @AutoKernType@ AutoKernType.MANUAL &
          - & @AutoKernType@ AutoKernType.METRICS &
          - & @AutoKernType@ AutoKernType.OPTICAL &
- BatchDestinationType
          - & @BatchDestinationType@ BatchDestinationType.FOLDER &
          - & @BatchDestinationType@ BatchDestinationType.NODESTINATION &
          - & @BatchDestinationType@ BatchDestinationType.SAVEANDCLOSE &
- BatchOptions
          - & @BatchOptions@ BatchOptions.destinationFolder &
          - & @BatchOptions@ BatchOptions.destination &
          - & @BatchOptions@ BatchOptions.errorFile &
          - & @BatchOptions@ BatchOptions.fileNaming &
          - & @BatchOptions@ BatchOptions.macintoshCompatible &
          - & @BatchOptions@ BatchOptions.overrideOpen &
          - & @BatchOptions@ BatchOptions.overrideSave &
          - & @BatchOptions@ BatchOptions.startingSerial &
          - & @BatchOptions@ BatchOptions.suppressOpen &
          - & @BatchOptions@ BatchOptions.suppressProfile &
          - & @BatchOptions@ BatchOptions.unixCompatible &
          - & @BatchOptions@ BatchOptions.windowsCompatible &
- BitmapConversionOptions
          - & @BitmapConversionOptions@ BitmapConversionOptions.angle &
          - & @BitmapConversionOptions@ BitmapConversionOptions.frequency &
          - & @BitmapConversionOptions@ BitmapConversionOptions.method &
          - & @BitmapConversionOptions@ BitmapConversionOptions.patternName &
          - & @BitmapConversionOptions@ BitmapConversionOptions.resolution &
          - & @BitmapConversionOptions@ BitmapConversionOptions.shape &
- BitmapConversionType
          - & @BitmapConversionType@ BitmapConversionType.CUSTOMPATTERN &
          - & @BitmapConversionType@ BitmapConversionType.DIFFUSIONDITHER &
          - & @BitmapConversionType@ BitmapConversionType.HALFTHRESHOLD &
          - & @BitmapConversionType@ BitmapConversionType.HALFTONESCREEN &
          - & @BitmapConversionType@ BitmapConversionType.PATTERNDITHER &
- BitmapHalfToneType
          - & @BitmapHalfToneType@ BitmapHalfToneType.CROSS &
          - & @BitmapHalfToneType@ BitmapHalfToneType.DIAMOND &
          - & @BitmapHalfToneType@ BitmapHalfToneType.ELLIPSE &
          - & @BitmapHalfToneType@ BitmapHalfToneType.LINE &
          - & @BitmapHalfToneType@ BitmapHalfToneType.ROUND &
          - & @BitmapHalfToneType@ BitmapHalfToneType.SQUARE &
- BitsPerChannelType
          - & @BitsPerChannelType@ BitsPerChannelType.EIGHT &
          - & @BitsPerChannelType@ BitsPerChannelType.ONE &
          - & @BitsPerChannelType@ BitsPerChannelType.SIXTEEN &
          - & @BitsPerChannelType@ BitsPerChannelType.THIRTYTWO &
- BlendMode
          - & @BlendMode@ BlendMode.COLORBLEND &
          - & @BlendMode@ BlendMode.COLORBURN &
          - & @BlendMode@ BlendMode.COLORDODGE &
          - & @BlendMode@ BlendMode.DARKEN &
          - & @BlendMode@ BlendMode.DARKERCOLOR &
          - & @BlendMode@ BlendMode.DIFFERENCE &
          - & @BlendMode@ BlendMode.DISSOLVE &
          - & @BlendMode@ BlendMode.DIVIDE &
          - & @BlendMode@ BlendMode.EXCLUSION &
          - & @BlendMode@ BlendMode.HARDLIGHT &
          - & @BlendMode@ BlendMode.HARDMIX &
          - & @BlendMode@ BlendMode.HUE &
          - & @BlendMode@ BlendMode.LIGHTEN &
          - & @BlendMode@ BlendMode.LIGHTERCOLOR &
          - & @BlendMode@ BlendMode.LINEARBURN &
          - & @BlendMode@ BlendMode.LINEARDODGE &
          - & @BlendMode@ BlendMode.LINEARLIGHT &
          - & @BlendMode@ BlendMode.LUMINOSITY &
          - & @BlendMode@ BlendMode.MULTIPLY &
          - & @BlendMode@ BlendMode.NORMAL &
          - & @BlendMode@ BlendMode.OVERLAY &
          - & @BlendMode@ BlendMode.PASSTHROUGH &
          - & @BlendMode@ BlendMode.PINLIGHT &
          - & @BlendMode@ BlendMode.SATURATION &
          - & @BlendMode@ BlendMode.SCREEN &
          - & @BlendMode@ BlendMode.SOFTLIGHT &
          - & @BlendMode@ BlendMode.SUBTRACT &
          - & @BlendMode@ BlendMode.VIVIDLIGHT &
- BMPDepthType
          - & @BMPDepthType@ BMPDepthType.BMP_A1R5G5B5 &
          - & @BMPDepthType@ BMPDepthType.BMP_A4R4G4B4 &
          - & @BMPDepthType@ BMPDepthType.BMP_A8R8G8B8 &
          - & @BMPDepthType@ BMPDepthType.BMP_R5G6B5 &
          - & @BMPDepthType@ BMPDepthType.BMP_R8G8B8 &
          - & @BMPDepthType@ BMPDepthType.BMP_X1R5G5B5 &
          - & @BMPDepthType@ BMPDepthType.BMP_X4R4G4B4 &
          - & @BMPDepthType@ BMPDepthType.BMP_X8R8G8B8 &
          - & @BMPDepthType@ BMPDepthType.EIGHT &
          - & @BMPDepthType@ BMPDepthType.FOUR &
          - & @BMPDepthType@ BMPDepthType.ONE &
          - & @BMPDepthType@ BMPDepthType.SIXTEEN &
          - & @BMPDepthType@ BMPDepthType.THIRTYTWO &
          - & @BMPDepthType@ BMPDepthType.TWENTYFOUR &
- BMPSaveOptions
          - & @BMPSaveOptions@ BMPSaveOptions.alphaChannels &
          - & @BMPSaveOptions@ BMPSaveOptions.depth &
          - & @BMPSaveOptions@ BMPSaveOptions.flipRowOrder &
          - & @BMPSaveOptions@ BMPSaveOptions.osType &
          - & @BMPSaveOptions@ BMPSaveOptions.rleCompression &
- ByteOrderType
          - & @ByteOrderType@ ByteOrderType.IBM &
          - & @ByteOrderType@ ByteOrderType.MACOS &
- CameraRAWOpenOptions
          - & @CameraRAWOpenOptions@ CameraRAWOpenOptions.bitsPerChannel &
          - & @CameraRAWOpenOptions@ CameraRAWOpenOptions.blueHue &
          - & @CameraRAWOpenOptions@ CameraRAWOpenOptions.blueSaturation &
          - & @CameraRAWOpenOptions@ CameraRAWOpenOptions.brightness &
          - & @CameraRAWOpenOptions@ CameraRAWOpenOptions.chromaticAberrationBY &
          - & @CameraRAWOpenOptions@ CameraRAWOpenOptions.chromaticAberrationRC &
          - & @CameraRAWOpenOptions@ CameraRAWOpenOptions.colorNoiseReduction &
          - & @CameraRAWOpenOptions@ CameraRAWOpenOptions.colorSpace &
          - & @CameraRAWOpenOptions@ CameraRAWOpenOptions.contrast &
          - & @CameraRAWOpenOptions@ CameraRAWOpenOptions.exposure &
          - & @CameraRAWOpenOptions@ CameraRAWOpenOptions.greenHue &
          - & @CameraRAWOpenOptions@ CameraRAWOpenOptions.greenSaturation &
          - & @CameraRAWOpenOptions@ CameraRAWOpenOptions.luminanceSmoothing &
          - & @CameraRAWOpenOptions@ CameraRAWOpenOptions.redHue &
          - & @CameraRAWOpenOptions@ CameraRAWOpenOptions.redSaturation &
          - & @CameraRAWOpenOptions@ CameraRAWOpenOptions.resolution &
          - & @CameraRAWOpenOptions@ CameraRAWOpenOptions.saturation &
          - & @CameraRAWOpenOptions@ CameraRAWOpenOptions.settings &
          - & @CameraRAWOpenOptions@ CameraRAWOpenOptions.shadows &
          - & @CameraRAWOpenOptions@ CameraRAWOpenOptions.shadowTint &
          - & @CameraRAWOpenOptions@ CameraRAWOpenOptions.sharpness &
          - & @CameraRAWOpenOptions@ CameraRAWOpenOptions.size &
          - & @CameraRAWOpenOptions@ CameraRAWOpenOptions.temperature &
          - & @CameraRAWOpenOptions@ CameraRAWOpenOptions.tint &
          - & @CameraRAWOpenOptions@ CameraRAWOpenOptions.vignettingAmount &
          - & @CameraRAWOpenOptions@ CameraRAWOpenOptions.vignettingMidpoint &
          - & @CameraRAWOpenOptions@ CameraRAWOpenOptions.whiteBalance &
- CameraRAWSettingsType
          - & @CameraRAWSettingsType@ CameraRAWSettingsType.CAMERA &
          - & @CameraRAWSettingsType@ CameraRAWSettingsType.CUSTOM &
          - & @CameraRAWSettingsType@ CameraRAWSettingsType.SELECTEDIMAGE &
- CameraRAWSize
          - & @CameraRAWSize@ CameraRAWSize.EXTRALARGE &
          - & @CameraRAWSize@ CameraRAWSize.LARGE &
          - & @CameraRAWSize@ CameraRAWSize.MAXIMUM &
          - & @CameraRAWSize@ CameraRAWSize.MEDIUM &
          - & @CameraRAWSize@ CameraRAWSize.MINIMUM &
          - & @CameraRAWSize@ CameraRAWSize.SMALL &
- Case
          - & @Case@ Case.ALLCAPS &
          - & @Case@ Case.NORMAL &
          - & @Case@ Case.SMALLCAPS &
- ChangeMode
          - & @ChangeMode@ ChangeMode.BITMAP &
          - & @ChangeMode@ ChangeMode.CMYK &
          - & @ChangeMode@ ChangeMode.GRAYSCALE &
          - & @ChangeMode@ ChangeMode.INDEXEDCOLOR &
          - & @ChangeMode@ ChangeMode.LAB &
          - & @ChangeMode@ ChangeMode.MULTICHANNEL &
          - & @ChangeMode@ ChangeMode.RGB &
- Channel
          - & @Channel@ Channel.add &
          - & @Channel@ Channel.color &
          - & @Channel@ Channel.duplicate &
          - & @Channel@ Channel.histogram &
          - & @Channel@ Channel.kind &
          - & @Channel@ Channel.merge &
          - & @Channel@ Channel.name &
          - & @Channel@ Channel.opacity &
          - & @Channel@ Channel.parent &
          - & @Channel@ Channel.removeAll &
          - & @Channel@ Channel.remove &
- Channels
          - & @Channels@ Channels.add &
          - & @Channels@ Channels.getByName &
          - & @Channels@ Channels.[] &
          - & @Channels@ Channels.length &
          - & @Channels@ Channels.parent &
          - & @Channels@ Channels.removeAll &
          - & @Channels@ Channels.typename &
- ChannelType
          - & @ChannelType@ ChannelType.COMPONENT &
          - & @ChannelType@ ChannelType.MASKEDAREA &
- Channel
          - & @Channel@ Channel.typename &
- ChannelType
          - & @ChannelType@ ChannelType.SELECTEDAREA &
          - & @ChannelType@ ChannelType.SPOTCOLOR &
- Channel
          - & @Channel@ Channel.visible &
- CMYKColor
          - & @CMYKColor@ CMYKColor.black &
          - & @CMYKColor@ CMYKColor.cyan &
          - & @CMYKColor@ CMYKColor.magenta &
          - & @CMYKColor@ CMYKColor.yellow &
- ColorBlendMode
          - & @ColorBlendMode@ ColorBlendMode.BEHIND &
          - & @ColorBlendMode@ ColorBlendMode.CLEAR &
          - & @ColorBlendMode@ ColorBlendMode.COLORBURN &
          - & @ColorBlendMode@ ColorBlendMode.COLORDODGE &
          - & @ColorBlendMode@ ColorBlendMode.COLOR &
          - & @ColorBlendMode@ ColorBlendMode.DARKEN &
          - & @ColorBlendMode@ ColorBlendMode.DIFFERENCE &
          - & @ColorBlendMode@ ColorBlendMode.DISSOLVE &
          - & @ColorBlendMode@ ColorBlendMode.DIVIDE &
          - & @ColorBlendMode@ ColorBlendMode.EXCLUSION &
          - & @ColorBlendMode@ ColorBlendMode.HARDLIGHT &
          - & @ColorBlendMode@ ColorBlendMode.HARDMIXBLEND &
          - & @ColorBlendMode@ ColorBlendMode.HUE &
          - & @ColorBlendMode@ ColorBlendMode.LIGHTEN &
          - & @ColorBlendMode@ ColorBlendMode.LINEARBURN &
          - & @ColorBlendMode@ ColorBlendMode.LINEARDODGE &
          - & @ColorBlendMode@ ColorBlendMode.LINEARLIGHT &
          - & @ColorBlendMode@ ColorBlendMode.LUMINOSITY &
          - & @ColorBlendMode@ ColorBlendMode.MULTIPLY &
          - & @ColorBlendMode@ ColorBlendMode.NORMAL &
          - & @ColorBlendMode@ ColorBlendMode.OVERLAY &
          - & @ColorBlendMode@ ColorBlendMode.PINLIGHT &
          - & @ColorBlendMode@ ColorBlendMode.SATURATION &
          - & @ColorBlendMode@ ColorBlendMode.SCREEN &
          - & @ColorBlendMode@ ColorBlendMode.SOFTLIGHT &
          - & @ColorBlendMode@ ColorBlendMode.SUBTRACT &
          - & @ColorBlendMode@ ColorBlendMode.VIVIDLIGHT &
- ColorModel
          - & @ColorModel@ ColorModel.CMYK &
          - & @ColorModel@ ColorModel.GRAYSCALE &
          - & @ColorModel@ ColorModel.HSB &
          - & @ColorModel@ ColorModel.LAB &
          - & @ColorModel@ ColorModel.NONE &
          - & @ColorModel@ ColorModel.RGB &
- ColorPicker
          - & @ColorPicker@ ColorPicker.ADOBE &
          - & @ColorPicker@ ColorPicker.APPLE &
          - & @ColorPicker@ ColorPicker.PLUGIN &
          - & @ColorPicker@ ColorPicker.WINDOWS &
- ColorProfileType
          - & @ColorProfileType@ ColorProfileType.CUSTOM &
          - & @ColorProfileType@ ColorProfileType.NONE &
          - & @ColorProfileType@ ColorProfileType.WORKING &
- ColorReductionType
          - & @ColorReductionType@ ColorReductionType.ADAPTIVE &
          - & @ColorReductionType@ ColorReductionType.BLACKWHITE &
          - & @ColorReductionType@ ColorReductionType.CUSTOM &
          - & @ColorReductionType@ ColorReductionType.GRAYSCALE &
          - & @ColorReductionType@ ColorReductionType.MACINTOSH &
          - & @ColorReductionType@ ColorReductionType.PERCEPTUAL &
          - & @ColorReductionType@ ColorReductionType.RESTRICTIVE &
          - & @ColorReductionType@ ColorReductionType.SELECTIVE &
          - & @ColorReductionType@ ColorReductionType.WINDOWS &
- ColorSampler
          - & @ColorSampler@ ColorSampler.add &
          - & @ColorSampler@ ColorSampler.color &
          - & @ColorSampler@ ColorSampler.move &
          - & @ColorSampler@ ColorSampler.parent &
          - & @ColorSampler@ ColorSampler.position &
          - & @ColorSampler@ ColorSampler.removeAll &
          - & @ColorSampler@ ColorSampler.remove &
- ColorSamplers
          - & @ColorSamplers@ ColorSamplers.add &
          - & @ColorSamplers@ ColorSamplers.getByName &
          - & @ColorSamplers@ ColorSamplers.[] &
          - & @ColorSamplers@ ColorSamplers.length &
          - & @ColorSamplers@ ColorSamplers.parent &
          - & @ColorSamplers@ ColorSamplers.typename &
- ColorSampler
          - & @ColorSampler@ ColorSampler.typename &
- ColorSpaceType
          - & @ColorSpaceType@ ColorSpaceType.ADOBERGB &
          - & @ColorSpaceType@ ColorSpaceType.COLORMATCHRGB &
          - & @ColorSpaceType@ ColorSpaceType.PROPHOTORGB &
          - & @ColorSpaceType@ ColorSpaceType.SRGB &
- ContactSheetOptions
          - & @ContactSheetOptions@ ContactSheetOptions.acrossFirst &
          - & @ContactSheetOptions@ ContactSheetOptions.bestFit &
          - & @ContactSheetOptions@ ContactSheetOptions.caption &
          - & @ContactSheetOptions@ ContactSheetOptions.columnCount &
          - & @ContactSheetOptions@ ContactSheetOptions.flatten &
          - & @ContactSheetOptions@ ContactSheetOptions.font &
          - & @ContactSheetOptions@ ContactSheetOptions.fontSize &
          - & @ContactSheetOptions@ ContactSheetOptions.height &
          - & @ContactSheetOptions@ ContactSheetOptions.horizontal &
          - & @ContactSheetOptions@ ContactSheetOptions.mode &
          - & @ContactSheetOptions@ ContactSheetOptions.resolution &
          - & @ContactSheetOptions@ ContactSheetOptions.rowCount &
          - & @ContactSheetOptions@ ContactSheetOptions.useAutoSpacing &
          - & @ContactSheetOptions@ ContactSheetOptions.vertical &
          - & @ContactSheetOptions@ ContactSheetOptions.width &
- CopyrightedType
          - & @CopyrightedType@ CopyrightedType.COPYRIGHTEDWORK &
          - & @CopyrightedType@ CopyrightedType.PUBLICDOMAIN &
          - & @CopyrightedType@ CopyrightedType.UNMARKED &
- CountItem
          - & @CountItem@ CountItem.add &
          - & @CountItem@ CountItem.parent &
          - & @CountItem@ CountItem.position &
          - & @CountItem@ CountItem.removeAll &
          - & @CountItem@ CountItem.remove &
- CountItems
          - & @CountItems@ CountItems.add &
          - & @CountItems@ CountItems.getByName &
          - & @CountItems@ CountItems.[] &
          - & @CountItems@ CountItems.length &
          - & @CountItems@ CountItems.parent &
          - & @CountItems@ CountItems.typename &
- CountItem
          - & @CountItem@ CountItem.typename &
- CreateFields
          - & @CreateFields@ CreateFields.DUPLICATION &
          - & @CreateFields@ CreateFields.INTERPOLATION &
- CropToType
          - & @CropToType@ CropToType.ARTBOX &
          - & @CropToType@ CropToType.BLEEDBOX &
          - & @CropToType@ CropToType.BOUNDINGBOX &
          - & @CropToType@ CropToType.CROPBOX &
          - & @CropToType@ CropToType.MEDIABOX &
          - & @CropToType@ CropToType.TRIMBOX &
- DCS1_SaveOptions
          - & @DCS1_SaveOptions@ DCS1_SaveOptions.DCS &
          - & @DCS1_SaveOptions@ DCS1_SaveOptions.embedColorProfile &
          - & @DCS1_SaveOptions@ DCS1_SaveOptions.encoding &
          - & @DCS1_SaveOptions@ DCS1_SaveOptions.halftoneScreen &
          - & @DCS1_SaveOptions@ DCS1_SaveOptions.interpolation &
          - & @DCS1_SaveOptions@ DCS1_SaveOptions.preview &
          - & @DCS1_SaveOptions@ DCS1_SaveOptions.transferFunction &
          - & @DCS1_SaveOptions@ DCS1_SaveOptions.vectorData &
- DCS2_SaveOptions
          - & @DCS2_SaveOptions@ DCS2_SaveOptions.DCS &
          - & @DCS2_SaveOptions@ DCS2_SaveOptions.embedColorProfile &
          - & @DCS2_SaveOptions@ DCS2_SaveOptions.encoding &
          - & @DCS2_SaveOptions@ DCS2_SaveOptions.halftoneScreen &
          - & @DCS2_SaveOptions@ DCS2_SaveOptions.interpolation &
          - & @DCS2_SaveOptions@ DCS2_SaveOptions.multiFileDCS &
          - & @DCS2_SaveOptions@ DCS2_SaveOptions.preview &
          - & @DCS2_SaveOptions@ DCS2_SaveOptions.spotColors &
          - & @DCS2_SaveOptions@ DCS2_SaveOptions.transferFunction &
          - & @DCS2_SaveOptions@ DCS2_SaveOptions.vectorData &
- DCSType
          - & @DCSType@ DCSType.COLORCOMPOSITE &
          - & @DCSType@ DCSType.GRAYSCALECOMPOSITE &
          - & @DCSType@ DCSType.NOCOMPOSITE &
- DepthMapSource
          - & @DepthMapSource@ DepthMapSource.IMAGEHIGHLIGHT &
          - & @DepthMapSource@ DepthMapSource.LAYERMASK &
          - & @DepthMapSource@ DepthMapSource.NONE &
          - & @DepthMapSource@ DepthMapSource.TRANSPARENCYCHANNEL &
- DescValueType
          - & @DescValueType@ DescValueType.ALIASTYPE &
          - & @DescValueType@ DescValueType.BOOLEANTYPE &
          - & @DescValueType@ DescValueType.CLASSTYPE &
          - & @DescValueType@ DescValueType.DOUBLETYPE &
          - & @DescValueType@ DescValueType.ENUMERATEDTYPE &
          - & @DescValueType@ DescValueType.INTEGERTYPE &
          - & @DescValueType@ DescValueType.LARGEINTEGERTYPE &
          - & @DescValueType@ DescValueType.LISTTYPE &
          - & @DescValueType@ DescValueType.OBJECTTYPE &
          - & @DescValueType@ DescValueType.RAWTYPE &
          - & @DescValueType@ DescValueType.REFERENCETYPE &
          - & @DescValueType@ DescValueType.STRINGTYPE &
          - & @DescValueType@ DescValueType.UNITDOUBLE &
- DialogModes
          - & @DialogModes@ DialogModes.ALL &
          - & @DialogModes@ DialogModes.ERROR &
          - & @DialogModes@ DialogModes.NO &
- DICOMOpenOptions
          - & @DICOMOpenOptions@ DICOMOpenOptions.anonymize &
          - & @DICOMOpenOptions@ DICOMOpenOptions.columns &
          - & @DICOMOpenOptions@ DICOMOpenOptions.reverse &
          - & @DICOMOpenOptions@ DICOMOpenOptions.rows &
          - & @DICOMOpenOptions@ DICOMOpenOptions.showOverlays &
          - & @DICOMOpenOptions@ DICOMOpenOptions.windowLevel &
          - & @DICOMOpenOptions@ DICOMOpenOptions.windowWidth &
- Direction
          - & @Direction@ Direction.HORIZONTAL &
          - & @Direction@ Direction.VERTICAL &
- DisplacementMapType
          - & @DisplacementMapType@ DisplacementMapType.STRETCHTOFIT &
          - & @DisplacementMapType@ DisplacementMapType.TILE &
- DitherType
          - & @DitherType@ DitherType.DIFFUSION &
          - & @DitherType@ DitherType.NOISE &
          - & @DitherType@ DitherType.NONE &
          - & @DitherType@ DitherType.PATTERN &
- DocPositionStyle
          - & @DocPositionStyle@ DocPositionStyle.PRINTCENTERED &
          - & @DocPositionStyle@ DocPositionStyle.SIZETOFIT &
          - & @DocPositionStyle@ DocPositionStyle.USERDEFINED &
- Document
          - & @Document@ Document.activeChannels &
          - & @Document@ Document.activeHistoryBrushSource &
          - & @Document@ Document.activeHistoryState &
          - & @Document@ Document.activeLayer &
          - & @Document@ Document.artLayers &
          - & @Document@ Document.autoCount &
          - & @Document@ Document.backgroundLayer &
          - & @Document@ Document.bitsPerChannel &
          - & @Document@ Document.changeMode &
          - & @Document@ Document.channels &
          - & @Document@ Document.close &
          - & @Document@ Document.colorProfileName &
          - & @Document@ Document.colorProfileType &
          - & @Document@ Document.colorSamplers &
          - & @Document@ Document.componentChannels &
          - & @Document@ Document.convertProfile &
          - & @Document@ Document.countItems &
          - & @Document@ Document.crop &
          - & @Document@ Document.duplicate &
          - & @Document@ Document.exportDocument &
- DocumentFill
          - & @DocumentFill@ DocumentFill.BACKGROUNDCOLOR &
          - & @DocumentFill@ DocumentFill.TRANSPARENT &
          - & @DocumentFill@ DocumentFill.WHITE &
- Document
          - & @Document@ Document.flatten &
          - & @Document@ Document.flipCanvas &
          - & @Document@ Document.fullName &
          - & @Document@ Document.guides &
          - & @Document@ Document.height &
          - & @Document@ Document.histogram &
          - & @Document@ Document.historyStates &
          - & @Document@ Document.id &
          - & @Document@ Document.importAnnotations &
- DocumentInfo
          - & @DocumentInfo@ DocumentInfo.author &
          - & @DocumentInfo@ DocumentInfo.authorPosition &
          - & @DocumentInfo@ DocumentInfo.caption &
          - & @DocumentInfo@ DocumentInfo.captionWriter &
          - & @DocumentInfo@ DocumentInfo.category &
          - & @DocumentInfo@ DocumentInfo.city &
          - & @DocumentInfo@ DocumentInfo.copyrighted &
          - & @DocumentInfo@ DocumentInfo.copyrightNotice &
          - & @DocumentInfo@ DocumentInfo.country &
          - & @DocumentInfo@ DocumentInfo.creationDate &
          - & @DocumentInfo@ DocumentInfo.credit &
          - & @DocumentInfo@ DocumentInfo.exif &
          - & @DocumentInfo@ DocumentInfo.headline &
- Document
          - & @Document@ Document.info &
- DocumentInfo
          - & @DocumentInfo@ DocumentInfo.instructions &
          - & @DocumentInfo@ DocumentInfo.jobName &
          - & @DocumentInfo@ DocumentInfo.keywords &
          - & @DocumentInfo@ DocumentInfo.ownerUrl &
          - & @DocumentInfo@ DocumentInfo.parent &
          - & @DocumentInfo@ DocumentInfo.provinceState &
          - & @DocumentInfo@ DocumentInfo.source &
          - & @DocumentInfo@ DocumentInfo.supplementalCategories &
          - & @DocumentInfo@ DocumentInfo.title &
          - & @DocumentInfo@ DocumentInfo.transmissionReference &
          - & @DocumentInfo@ DocumentInfo.typename &
          - & @DocumentInfo@ DocumentInfo.urgency &
- Document
          - & @Document@ Document.layerComps &
          - & @Document@ Document.layerSets &
          - & @Document@ Document.layers &
          - & @Document@ Document.managed &
          - & @Document@ Document.measurementScale &
          - & @Document@ Document.mergeVisibleLayers &
- DocumentMode
          - & @DocumentMode@ DocumentMode.BITMAP &
          - & @DocumentMode@ DocumentMode.CMYK &
          - & @DocumentMode@ DocumentMode.DUOTONE &
          - & @DocumentMode@ DocumentMode.GRAYSCALE &
- Document
          - & @Document@ Document.mode &
- DocumentMode
          - & @DocumentMode@ DocumentMode.INDEXEDCOLOR &
          - & @DocumentMode@ DocumentMode.LAB &
          - & @DocumentMode@ DocumentMode.MULTICHANNEL &
          - & @DocumentMode@ DocumentMode.RGB &
- Document
          - & @Document@ Document.name &
          - & @Document@ Document.parent &
          - & @Document@ Document.paste &
          - & @Document@ Document.path &
          - & @Document@ Document.pathItems &
          - & @Document@ Document.pixelAspectRatio &
          - & @Document@ Document.print &
          - & @Document@ Document.printOneCopy &
- DocumentPrintSettings
          - & @DocumentPrintSettings@ DocumentPrintSettings.activePrinter &
          - & @DocumentPrintSettings@ DocumentPrintSettings.backgroundColor &
          - & @DocumentPrintSettings@ DocumentPrintSettings.bleedWidth &
          - & @DocumentPrintSettings@ DocumentPrintSettings.caption &
          - & @DocumentPrintSettings@ DocumentPrintSettings.centerCropMarks &
          - & @DocumentPrintSettings@ DocumentPrintSettings.colorBars &
          - & @DocumentPrintSettings@ DocumentPrintSettings.colorHandling &
          - & @DocumentPrintSettings@ DocumentPrintSettings.copies &
          - & @DocumentPrintSettings@ DocumentPrintSettings.cornerCropMarks &
          - & @DocumentPrintSettings@ DocumentPrintSettings.docPosition &
          - & @DocumentPrintSettings@ DocumentPrintSettings.flip &
          - & @DocumentPrintSettings@ DocumentPrintSettings.hardProof &
- Document
          - & @Document@ Document.printSettings &
- DocumentPrintSettings
          - & @DocumentPrintSettings@ DocumentPrintSettings.interpolate &
          - & @DocumentPrintSettings@ DocumentPrintSettings.labels &
          - & @DocumentPrintSettings@ DocumentPrintSettings.mapBlack &
          - & @DocumentPrintSettings@ DocumentPrintSettings.negative &
          - & @DocumentPrintSettings@ DocumentPrintSettings.parent &
          - & @DocumentPrintSettings@ DocumentPrintSettings.posX &
          - & @DocumentPrintSettings@ DocumentPrintSettings.posY &
          - & @DocumentPrintSettings@ DocumentPrintSettings.printBorder &
          - & @DocumentPrintSettings@ DocumentPrintSettings.printerName &
          - & @DocumentPrintSettings@ DocumentPrintSettings.printers &
          - & @DocumentPrintSettings@ DocumentPrintSettings.printSpace &
          - & @DocumentPrintSettings@ DocumentPrintSettings.registrationMarks &
          - & @DocumentPrintSettings@ DocumentPrintSettings.renderIntent &
          - & @DocumentPrintSettings@ DocumentPrintSettings.scale &
          - & @DocumentPrintSettings@ DocumentPrintSettings.setPagePosition &
          - & @DocumentPrintSettings@ DocumentPrintSettings.typename &
          - & @DocumentPrintSettings@ DocumentPrintSettings.vectorData &
- Document
          - & @Document@ Document.quickMaskMode &
          - & @Document@ Document.rasterizeAllLayers &
          - & @Document@ Document.recordMeasurements &
          - & @Document@ Document.resizeCanvas &
          - & @Document@ Document.resizeImage &
          - & @Document@ Document.resolution &
          - & @Document@ Document.revealAll &
          - & @Document@ Document.rotateCanvas &
- Documents
          - & @Documents@ Documents.add &
- Document
          - & @Document@ Document.saveAs &
          - & @Document@ Document.saved &
          - & @Document@ Document.save &
          - & @Document@ Document.selection &
- Documents
          - & @Documents@ Documents.getByName &
          - & @Documents@ Documents.[] &
          - & @Documents@ Documents.length &
          - & @Documents@ Documents.parent &
- Document
          - & @Document@ Document.splitChannels &
- Documents
          - & @Documents@ Documents.typename &
- Document
          - & @Document@ Document.suspendHistory &
          - & @Document@ Document.trap &
          - & @Document@ Document.trim &
          - & @Document@ Document.typename &
          - & @Document@ Document.width &
          - & @Document@ Document.xmpMetadata &
- EditLogItemsType
          - & @EditLogItemsType@ EditLogItemsType.CONCISE &
          - & @EditLogItemsType@ EditLogItemsType.DETAILED &
          - & @EditLogItemsType@ EditLogItemsType.SESSIONONLY &
- ElementPlacement
          - & @ElementPlacement@ ElementPlacement.PLACEAFTER &
          - & @ElementPlacement@ ElementPlacement.PLACEATEND &
          - & @ElementPlacement@ ElementPlacement.PLACEBEFORE &
- EliminateFields
          - & @EliminateFields@ EliminateFields.EVENFIELDS &
          - & @EliminateFields@ EliminateFields.ODDFIELDS &
- EPSSaveOptions
          - & @EPSSaveOptions@ EPSSaveOptions.embedColorProfile &
          - & @EPSSaveOptions@ EPSSaveOptions.encoding &
          - & @EPSSaveOptions@ EPSSaveOptions.halftoneScreen &
          - & @EPSSaveOptions@ EPSSaveOptions.interpolation &
          - & @EPSSaveOptions@ EPSSaveOptions.preview &
          - & @EPSSaveOptions@ EPSSaveOptions.psColorManagement &
          - & @EPSSaveOptions@ EPSSaveOptions.transferFunction &
          - & @EPSSaveOptions@ EPSSaveOptions.transparentWhites &
          - & @EPSSaveOptions@ EPSSaveOptions.vectorData &
- ExportOptionsIllustrator
          - & @ExportOptionsIllustrator@ ExportOptionsIllustrator.path &
          - & @ExportOptionsIllustrator@ ExportOptionsIllustrator.pathName &
- ExportOptionsSaveForWeb
          - & @ExportOptionsSaveForWeb@ ExportOptionsSaveForWeb.blur &
          - & @ExportOptionsSaveForWeb@ ExportOptionsSaveForWeb.colorReduction &
          - & @ExportOptionsSaveForWeb@ ExportOptionsSaveForWeb.colors &
          - & @ExportOptionsSaveForWeb@ ExportOptionsSaveForWeb.ditherAmount &
          - & @ExportOptionsSaveForWeb@ ExportOptionsSaveForWeb.dither &
          - & @ExportOptionsSaveForWeb@ ExportOptionsSaveForWeb.format &
          - & @ExportOptionsSaveForWeb@ ExportOptionsSaveForWeb.includeProfile &
          - & @ExportOptionsSaveForWeb@ ExportOptionsSaveForWeb.interlaced &
          - & @ExportOptionsSaveForWeb@ ExportOptionsSaveForWeb.lossy &
          - & @ExportOptionsSaveForWeb@ ExportOptionsSaveForWeb.matteColor &
          - & @ExportOptionsSaveForWeb@ ExportOptionsSaveForWeb.optimized &
          - & @ExportOptionsSaveForWeb@ ExportOptionsSaveForWeb.PNG8 &
          - & @ExportOptionsSaveForWeb@ ExportOptionsSaveForWeb.quality &
          - & @ExportOptionsSaveForWeb@ ExportOptionsSaveForWeb.transparencyAmount &
          - & @ExportOptionsSaveForWeb@ ExportOptionsSaveForWeb.transparencyDither &
          - & @ExportOptionsSaveForWeb@ ExportOptionsSaveForWeb.transparency &
          - & @ExportOptionsSaveForWeb@ ExportOptionsSaveForWeb.webSnap &
- ExportType
          - & @ExportType@ ExportType.ILLUSTRATORPATHS &
          - & @ExportType@ ExportType.SAVEFORWEB &
- FileNamingType
          - & @FileNamingType@ FileNamingType.DDMM &
          - & @FileNamingType@ FileNamingType.DDMMYY &
          - & @FileNamingType@ FileNamingType.DOCUMENTNAMELOWER &
          - & @FileNamingType@ FileNamingType.DOCUMENTNAMEMIXED &
          - & @FileNamingType@ FileNamingType.DOCUMENTNAMEUPPER &
          - & @FileNamingType@ FileNamingType.EXTENSIONLOWER &
          - & @FileNamingType@ FileNamingType.EXTENSIONUPPER &
          - & @FileNamingType@ FileNamingType.MMDD &
          - & @FileNamingType@ FileNamingType.MMDDYY &
          - & @FileNamingType@ FileNamingType.SERIALLETTERLOWER &
          - & @FileNamingType@ FileNamingType.SERIALLETTERUPPER &
          - & @FileNamingType@ FileNamingType.SERIALNUMBER1 &
          - & @FileNamingType@ FileNamingType.SERIALNUMBER2 &
          - & @FileNamingType@ FileNamingType.SERIALNUMBER3 &
          - & @FileNamingType@ FileNamingType.SERIALNUMBER4 &
          - & @FileNamingType@ FileNamingType.YYDDMM &
          - & @FileNamingType@ FileNamingType.YYMMDD &
          - & @FileNamingType@ FileNamingType.YYYYMMDD &
- FontPreviewType
          - & @FontPreviewType@ FontPreviewType.EXTRALARGE &
          - & @FontPreviewType@ FontPreviewType.HUGE &
          - & @FontPreviewType@ FontPreviewType.LARGE &
          - & @FontPreviewType@ FontPreviewType.MEDIUM &
          - & @FontPreviewType@ FontPreviewType.NONE &
          - & @FontPreviewType@ FontPreviewType.SMALL &
- FontSize
          - & @FontSize@ FontSize.LARGE &
          - & @FontSize@ FontSize.MEDIUM &
          - & @FontSize@ FontSize.SMALL &
- ForcedColors
          - & @ForcedColors@ ForcedColors.BLACKWHITE &
          - & @ForcedColors@ ForcedColors.NONE &
          - & @ForcedColors@ ForcedColors.PRIMARIES &
          - & @ForcedColors@ ForcedColors.WEB &
- FormatOptionsType
          - & @FormatOptionsType@ FormatOptionsType.OPTIMIZEDBASELINE &
          - & @FormatOptionsType@ FormatOptionsType.PROGRESSIVE &
          - & @FormatOptionsType@ FormatOptionsType.STANDARDBASELINE &
- GalleryBannerOptions
          - & @GalleryBannerOptions@ GalleryBannerOptions.contactInfo &
          - & @GalleryBannerOptions@ GalleryBannerOptions.date &
          - & @GalleryBannerOptions@ GalleryBannerOptions.font &
          - & @GalleryBannerOptions@ GalleryBannerOptions.fontSize &
          - & @GalleryBannerOptions@ GalleryBannerOptions.photographer &
          - & @GalleryBannerOptions@ GalleryBannerOptions.siteName &
- GalleryConstrainType
          - & @GalleryConstrainType@ GalleryConstrainType.CONSTRAINBOTH &
          - & @GalleryConstrainType@ GalleryConstrainType.CONSTRAINHEIGHT &
          - & @GalleryConstrainType@ GalleryConstrainType.CONSTRAINWIDTH &
- GalleryCustomColorOptions
          - & @GalleryCustomColorOptions@ GalleryCustomColorOptions.activeLinkColor &
          - & @GalleryCustomColorOptions@ GalleryCustomColorOptions.backgroundColor &
          - & @GalleryCustomColorOptions@ GalleryCustomColorOptions.bannerColor &
          - & @GalleryCustomColorOptions@ GalleryCustomColorOptions.linkColor &
          - & @GalleryCustomColorOptions@ GalleryCustomColorOptions.textColor &
          - & @GalleryCustomColorOptions@ GalleryCustomColorOptions.visitedLinkColor &
- GalleryFontType
          - & @GalleryFontType@ GalleryFontType.ARIAL &
          - & @GalleryFontType@ GalleryFontType.COURIERNEW &
          - & @GalleryFontType@ GalleryFontType.HELVETICA &
          - & @GalleryFontType@ GalleryFontType.TIMESNEWROMAN &
- GalleryImagesOptions
          - & @GalleryImagesOptions@ GalleryImagesOptions.border &
          - & @GalleryImagesOptions@ GalleryImagesOptions.caption &
          - & @GalleryImagesOptions@ GalleryImagesOptions.dimension &
          - & @GalleryImagesOptions@ GalleryImagesOptions.font &
          - & @GalleryImagesOptions@ GalleryImagesOptions.fontSize &
          - & @GalleryImagesOptions@ GalleryImagesOptions.imageQuality &
          - & @GalleryImagesOptions@ GalleryImagesOptions.includeCopyright &
          - & @GalleryImagesOptions@ GalleryImagesOptions.includeCredits &
          - & @GalleryImagesOptions@ GalleryImagesOptions.includeFilename &
          - & @GalleryImagesOptions@ GalleryImagesOptions.includeTitle &
          - & @GalleryImagesOptions@ GalleryImagesOptions.numericLinks &
          - & @GalleryImagesOptions@ GalleryImagesOptions.resizeConstraint &
          - & @GalleryImagesOptions@ GalleryImagesOptions.resizeImages &
- GalleryOptions
          - & @GalleryOptions@ GalleryOptions.addSizeAttributes &
          - & @GalleryOptions@ GalleryOptions.bannerOptions &
          - & @GalleryOptions@ GalleryOptions.customColorOptions &
          - & @GalleryOptions@ GalleryOptions.emailAddress &
          - & @GalleryOptions@ GalleryOptions.imagesOptions &
          - & @GalleryOptions@ GalleryOptions.includeSubFolders &
          - & @GalleryOptions@ GalleryOptions.layoutStyle &
          - & @GalleryOptions@ GalleryOptions.preserveAllMetadata &
          - & @GalleryOptions@ GalleryOptions.securityOptions &
          - & @GalleryOptions@ GalleryOptions.thumbnailOptions &
          - & @GalleryOptions@ GalleryOptions.useShortExtension &
          - & @GalleryOptions@ GalleryOptions.useUTF8Encoding &
- GallerySecurityOptions
          - & @GallerySecurityOptions@ GallerySecurityOptions.content &
          - & @GallerySecurityOptions@ GallerySecurityOptions.font &
          - & @GallerySecurityOptions@ GallerySecurityOptions.fontSize &
          - & @GallerySecurityOptions@ GallerySecurityOptions.opacity &
          - & @GallerySecurityOptions@ GallerySecurityOptions.textColor &
          - & @GallerySecurityOptions@ GallerySecurityOptions.text &
          - & @GallerySecurityOptions@ GallerySecurityOptions.textPosition &
          - & @GallerySecurityOptions@ GallerySecurityOptions.textRotate &
- GallerySecurityTextColorType
          - & @GallerySecurityTextColorType@ GallerySecurityTextColorType.BLACK &
          - & @GallerySecurityTextColorType@ GallerySecurityTextColorType.CUSTOM &
          - & @GallerySecurityTextColorType@ GallerySecurityTextColorType.WHITE &
- GallerySecurityTextPositionType
          - & @GallerySecurityTextPositionType@ GallerySecurityTextPositionType.CENTERED &
          - & @GallerySecurityTextPositionType@ GallerySecurityTextPositionType.LOWERLEFT &
          - & @GallerySecurityTextPositionType@ GallerySecurityTextPositionType.LOWERRIGHT &
          - & @GallerySecurityTextPositionType@ GallerySecurityTextPositionType.UPPERLEFT &
          - & @GallerySecurityTextPositionType@ GallerySecurityTextPositionType.UPPERRIGHT &
- GallerySecurityTextRotateType
          - & @GallerySecurityTextRotateType@ GallerySecurityTextRotateType.CLOCKWISE45 &
          - & @GallerySecurityTextRotateType@ GallerySecurityTextRotateType.CLOCKWISE90 &
          - & @GallerySecurityTextRotateType@ GallerySecurityTextRotateType.COUNTERCLOCKWISE45 &
          - & @GallerySecurityTextRotateType@ GallerySecurityTextRotateType.COUNTERCLOCKWISE90 &
          - & @GallerySecurityTextRotateType@ GallerySecurityTextRotateType.ZERO &
- GallerySecurityType
          - & @GallerySecurityType@ GallerySecurityType.CAPTION &
          - & @GallerySecurityType@ GallerySecurityType.COPYRIGHT &
          - & @GallerySecurityType@ GallerySecurityType.CREDIT &
          - & @GallerySecurityType@ GallerySecurityType.CUSTOMTEXT &
          - & @GallerySecurityType@ GallerySecurityType.FILENAME &
          - & @GallerySecurityType@ GallerySecurityType.NONE &
          - & @GallerySecurityType@ GallerySecurityType.TITLE &
- GalleryThumbnailOptions
          - & @GalleryThumbnailOptions@ GalleryThumbnailOptions.border &
          - & @GalleryThumbnailOptions@ GalleryThumbnailOptions.caption &
          - & @GalleryThumbnailOptions@ GalleryThumbnailOptions.columnCount &
          - & @GalleryThumbnailOptions@ GalleryThumbnailOptions.dimension &
          - & @GalleryThumbnailOptions@ GalleryThumbnailOptions.font &
          - & @GalleryThumbnailOptions@ GalleryThumbnailOptions.fontSize &
          - & @GalleryThumbnailOptions@ GalleryThumbnailOptions.includeCopyright &
          - & @GalleryThumbnailOptions@ GalleryThumbnailOptions.includeCredits &
          - & @GalleryThumbnailOptions@ GalleryThumbnailOptions.includeFilename &
          - & @GalleryThumbnailOptions@ GalleryThumbnailOptions.includeTitle &
          - & @GalleryThumbnailOptions@ GalleryThumbnailOptions.rowCount &
          - & @GalleryThumbnailOptions@ GalleryThumbnailOptions.size &
- GalleryThumbSizeType
          - & @GalleryThumbSizeType@ GalleryThumbSizeType.CUSTOM &
          - & @GalleryThumbSizeType@ GalleryThumbSizeType.LARGE &
          - & @GalleryThumbSizeType@ GalleryThumbSizeType.MEDIUM &
          - & @GalleryThumbSizeType@ GalleryThumbSizeType.SMALL &
- GenericEPSOpenOptions
          - & @GenericEPSOpenOptions@ GenericEPSOpenOptions.antiAlias &
          - & @GenericEPSOpenOptions@ GenericEPSOpenOptions.constrainProportions &
          - & @GenericEPSOpenOptions@ GenericEPSOpenOptions.height &
          - & @GenericEPSOpenOptions@ GenericEPSOpenOptions.mode &
          - & @GenericEPSOpenOptions@ GenericEPSOpenOptions.resolution &
          - & @GenericEPSOpenOptions@ GenericEPSOpenOptions.width &
- GenericPDFOpenOptions
          - & @GenericPDFOpenOptions@ GenericPDFOpenOptions.antiAlias &
          - & @GenericPDFOpenOptions@ GenericPDFOpenOptions.bitsPerChannel &
          - & @GenericPDFOpenOptions@ GenericPDFOpenOptions.constrainProportions &
          - & @GenericPDFOpenOptions@ GenericPDFOpenOptions.cropPage &
          - & @GenericPDFOpenOptions@ GenericPDFOpenOptions.height &
          - & @GenericPDFOpenOptions@ GenericPDFOpenOptions.mode &
          - & @GenericPDFOpenOptions@ GenericPDFOpenOptions.name &
          - & @GenericPDFOpenOptions@ GenericPDFOpenOptions.object &
          - & @GenericPDFOpenOptions@ GenericPDFOpenOptions.page &
          - & @GenericPDFOpenOptions@ GenericPDFOpenOptions.resolution &
          - & @GenericPDFOpenOptions@ GenericPDFOpenOptions.suppressWarnings &
          - & @GenericPDFOpenOptions@ GenericPDFOpenOptions.use3DObjectNumber &
          - & @GenericPDFOpenOptions@ GenericPDFOpenOptions.usePageNumber &
          - & @GenericPDFOpenOptions@ GenericPDFOpenOptions.width &
- Geometry
          - & @Geometry@ Geometry.HEPTAGON &
          - & @Geometry@ Geometry.HEXAGON &
          - & @Geometry@ Geometry.OCTAGON &
          - & @Geometry@ Geometry.PENTAGON &
          - & @Geometry@ Geometry.SQUARE &
          - & @Geometry@ Geometry.TRIANGLE &
- GIFSaveOptions
          - & @GIFSaveOptions@ GIFSaveOptions.colors &
          - & @GIFSaveOptions@ GIFSaveOptions.ditherAmount &
          - & @GIFSaveOptions@ GIFSaveOptions.dither &
          - & @GIFSaveOptions@ GIFSaveOptions.forced &
          - & @GIFSaveOptions@ GIFSaveOptions.interlaced &
          - & @GIFSaveOptions@ GIFSaveOptions.matte &
          - & @GIFSaveOptions@ GIFSaveOptions.palette &
          - & @GIFSaveOptions@ GIFSaveOptions.preserveExactColors &
          - & @GIFSaveOptions@ GIFSaveOptions.transparency &
- GrayColor
          - & @GrayColor@ GrayColor.gray &
- GridLineStyle
          - & @GridLineStyle@ GridLineStyle.DASHED &
          - & @GridLineStyle@ GridLineStyle.DOTTED &
          - & @GridLineStyle@ GridLineStyle.SOLID &
- GridSize
          - & @GridSize@ GridSize.LARGE &
          - & @GridSize@ GridSize.MEDIUM &
          - & @GridSize@ GridSize.NONE &
          - & @GridSize@ GridSize.SMALL &
- Guide
          - & @Guide@ Guide.coordinate &
          - & @Guide@ Guide.direction &
- GuideLineStyle
          - & @GuideLineStyle@ GuideLineStyle.DASHED &
          - & @GuideLineStyle@ GuideLineStyle.SOLID &
- Guide
          - & @Guide@ Guide.parent &
          - & @Guide@ Guide.removeAll &
          - & @Guide@ Guide.remove &
- Guides
          - & @Guides@ Guides.add &
          - & @Guides@ Guides.getByName &
          - & @Guides@ Guides.length &
          - & @Guides@ Guides.parent &
          - & @Guides@ Guides.typename &
- Guide
          - & @Guide@ Guide.typename &
- HistoryState
          - & @HistoryState@ HistoryState.name &
          - & @HistoryState@ HistoryState.parent &
- HistoryStates
          - & @HistoryStates@ HistoryStates.getByName &
          - & @HistoryStates@ HistoryStates.[] &
          - & @HistoryStates@ HistoryStates.length &
- HistoryState
          - & @HistoryState@ HistoryState.snapshot &
- HistoryStates
          - & @HistoryStates@ HistoryStates.parent &
          - & @HistoryStates@ HistoryStates.typename &
- HistoryState
          - & @HistoryState@ HistoryState.typename &
- HSBColor
          - & @HSBColor@ HSBColor.brightness &
          - & @HSBColor@ HSBColor.hue &
          - & @HSBColor@ HSBColor.saturation &
- IllustratorPathType
          - & @IllustratorPathType@ IllustratorPathType.ALLPATHS &
          - & @IllustratorPathType@ IllustratorPathType.DOCUMENTBOUNDS &
          - & @IllustratorPathType@ IllustratorPathType.NAMEDPATH &
- IndexedConversionOptions
          - & @IndexedConversionOptions@ IndexedConversionOptions.colors &
          - & @IndexedConversionOptions@ IndexedConversionOptions.ditherAmount &
          - & @IndexedConversionOptions@ IndexedConversionOptions.dither &
          - & @IndexedConversionOptions@ IndexedConversionOptions.forced &
          - & @IndexedConversionOptions@ IndexedConversionOptions.matte &
          - & @IndexedConversionOptions@ IndexedConversionOptions.palette &
          - & @IndexedConversionOptions@ IndexedConversionOptions.preserveExactColors &
          - & @IndexedConversionOptions@ IndexedConversionOptions.transparency &
- Intent
          - & @Intent@ Intent.ABSOLUTECOLORIMETRIC &
          - & @Intent@ Intent.PERCEPTUAL &
          - & @Intent@ Intent.RELATIVECOLORIMETRIC &
          - & @Intent@ Intent.SATURATION &
- JavaScriptExecutionMode
          - & @JavaScriptExecutionMode@ JavaScriptExecutionMode.BEFORERUNNING &
          - & @JavaScriptExecutionMode@ JavaScriptExecutionMode.NEVER &
          - & @JavaScriptExecutionMode@ JavaScriptExecutionMode.ONRUNTIMEERROR &
- JPEGSaveOptions
          - & @JPEGSaveOptions@ JPEGSaveOptions.embedColorProfile &
          - & @JPEGSaveOptions@ JPEGSaveOptions.formatOptions &
          - & @JPEGSaveOptions@ JPEGSaveOptions.matte &
          - & @JPEGSaveOptions@ JPEGSaveOptions.quality &
          - & @JPEGSaveOptions@ JPEGSaveOptions.scans &
- Justification
          - & @Justification@ Justification.CENTER &
          - & @Justification@ Justification.CENTERJUSTIFIED &
          - & @Justification@ Justification.FULLYJUSTIFIED &
          - & @Justification@ Justification.LEFT &
          - & @Justification@ Justification.LEFTJUSTIFIED &
          - & @Justification@ Justification.RIGHT &
          - & @Justification@ Justification.RIGHTJUSTIFIED &
- LabColor
          - & @LabColor@ LabColor.A &
          - & @LabColor@ LabColor.B &
          - & @LabColor@ LabColor.L &
- Language
          - & @Language@ Language.BRAZILLIANPORTUGUESE &
          - & @Language@ Language.CANADIANFRENCH &
          - & @Language@ Language.DANISH &
          - & @Language@ Language.DUTCH &
          - & @Language@ Language.ENGLISHUK &
          - & @Language@ Language.ENGLISHUSA &
          - & @Language@ Language.FINNISH &
          - & @Language@ Language.FRENCH &
          - & @Language@ Language.GERMAN &
          - & @Language@ Language.ITALIAN &
          - & @Language@ Language.NORWEGIAN &
          - & @Language@ Language.NYNORSKNORWEGIAN &
          - & @Language@ Language.OLDGERMAN &
          - & @Language@ Language.PORTUGUESE &
          - & @Language@ Language.SPANISH &
          - & @Language@ Language.SWEDISH &
          - & @Language@ Language.SWISSGERMAN &
- Layer
          - & @Layer@ Layer.allLocked &
          - & @Layer@ Layer.blendMode &
          - & @Layer@ Layer.bounds &
          - & @Layer@ Layer.boundsNoEffects &
- LayerComp
          - & @LayerComp@ LayerComp.add &
          - & @LayerComp@ LayerComp.appearance &
          - & @LayerComp@ LayerComp.apply &
          - & @LayerComp@ LayerComp.comment &
          - & @LayerComp@ LayerComp.name &
          - & @LayerComp@ LayerComp.parent &
          - & @LayerComp@ LayerComp.position &
          - & @LayerComp@ LayerComp.recapture &
          - & @LayerComp@ LayerComp.removeAll &
          - & @LayerComp@ LayerComp.remove &
          - & @LayerComp@ LayerComp.resetFromComp &
- LayerCompressionType
          - & @LayerCompressionType@ LayerCompressionType.RLE &
          - & @LayerCompressionType@ LayerCompressionType.ZIP &
- LayerComps
          - & @LayerComps@ LayerComps.add &
- LayerComp
          - & @LayerComp@ LayerComp.selected &
- LayerComps
          - & @LayerComps@ LayerComps.getByName &
          - & @LayerComps@ LayerComps.[] &
          - & @LayerComps@ LayerComps.length &
          - & @LayerComps@ LayerComps.parent &
          - & @LayerComps@ LayerComps.typename &
- LayerComp
          - & @LayerComp@ LayerComp.typename &
          - & @LayerComp@ LayerComp.visibility &
- Layer
          - & @Layer@ Layer.duplicate &
          - & @Layer@ Layer.id &
          - & @Layer@ Layer.itemIndex &
- LayerKind
          - & @LayerKind@ LayerKind.BLACKANDWHITE &
          - & @LayerKind@ LayerKind.BRIGHTNESSCONTRAST &
          - & @LayerKind@ LayerKind.CHANNELMIXER &
          - & @LayerKind@ LayerKind.COLORBALANCE &
          - & @LayerKind@ LayerKind.COLORLOOKUP &
          - & @LayerKind@ LayerKind.CURVES &
          - & @LayerKind@ LayerKind.EXPOSURE &
          - & @LayerKind@ LayerKind.GRADIENTFILL &
          - & @LayerKind@ LayerKind.GRADIENTMAP &
          - & @LayerKind@ LayerKind.HUESATURATION &
          - & @LayerKind@ LayerKind.INVERSION &
          - & @LayerKind@ LayerKind.LAYER3D &
          - & @LayerKind@ LayerKind.LEVELS &
          - & @LayerKind@ LayerKind.NORMAL &
          - & @LayerKind@ LayerKind.PATTERNFILL &
          - & @LayerKind@ LayerKind.PHOTOFILTER &
          - & @LayerKind@ LayerKind.POSTERIZE &
          - & @LayerKind@ LayerKind.SELECTIVECOLOR &
          - & @LayerKind@ LayerKind.SMARTOBJECT &
          - & @LayerKind@ LayerKind.SOLIDFILL &
          - & @LayerKind@ LayerKind.TEXT &
          - & @LayerKind@ LayerKind.THRESHOLD &
          - & @LayerKind@ LayerKind.VIBRANCE &
          - & @LayerKind@ LayerKind.VIDEO &
- Layer
          - & @Layer@ Layer.linkedLayers &
          - & @Layer@ Layer.link &
          - & @Layer@ Layer.move &
          - & @Layer@ Layer.moveToEnd &
          - & @Layer@ Layer.name &
          - & @Layer@ Layer.opacity &
          - & @Layer@ Layer.parent &
          - & @Layer@ Layer.removeAll &
          - & @Layer@ Layer.remove &
          - & @Layer@ Layer.resize &
          - & @Layer@ Layer.rotate &
- LayerSet
          - & @LayerSet@ LayerSet.add &
          - & @LayerSet@ LayerSet.artLayers &
          - & @LayerSet@ LayerSet.enabledChannels &
          - & @LayerSet@ LayerSet.layerSets &
          - & @LayerSet@ LayerSet.layers &
          - & @LayerSet@ LayerSet.merge &
          - & @LayerSet@ LayerSet.parent &
- LayerSets
          - & @LayerSets@ LayerSets.add &
          - & @LayerSets@ LayerSets.getByName &
          - & @LayerSets@ LayerSets.[] &
          - & @LayerSets@ LayerSets.length &
          - & @LayerSets@ LayerSets.parent &
          - & @LayerSets@ LayerSets.removeAll &
          - & @LayerSets@ LayerSets.typename &
- LayerSet
          - & @LayerSet@ LayerSet.typename &
- Layers
          - & @Layers@ Layers.getByName &
          - & @Layers@ Layers.[] &
          - & @Layers@ Layers.length &
          - & @Layers@ Layers.parent &
          - & @Layers@ Layers.removeAll &
          - & @Layers@ Layers.typename &
- Layer
          - & @Layer@ Layer.translate &
          - & @Layer@ Layer.typename &
          - & @Layer@ Layer.unlink &
          - & @Layer@ Layer.visible &
          - & @Layer@ Layer.xmpMetadata &
- LensType
          - & @LensType@ LensType.MOVIEPRIME &
          - & @LensType@ LensType.PRIME105 &
          - & @LensType@ LensType.PRIME35 &
          - & @LensType@ LensType.ZOOMLENS &
- MacExtensionType
          - & @MacExtensionType@ MacExtensionType.LOWERCASE &
          - & @MacExtensionType@ MacExtensionType.NONE &
          - & @MacExtensionType@ MacExtensionType.UPPERCASE &
- MacPreviewType
          - & @MacPreviewType@ MacPreviewType.EIGHTBITTIFF &
          - & @MacPreviewType@ MacPreviewType.MACOSEIGHTBIT &
          - & @MacPreviewType@ MacPreviewType.MACOSJPEG &
          - & @MacPreviewType@ MacPreviewType.MACOSMONOCHROME &
          - & @MacPreviewType@ MacPreviewType.MONOCHROMETIFF &
          - & @MacPreviewType@ MacPreviewType.NONE &
- MagnificationType
          - & @MagnificationType@ MagnificationType.ACTUALSIZE &
          - & @MagnificationType@ MagnificationType.FITPAGE &
- MatteType
          - & @MatteType@ MatteType.BACKGROUND &
          - & @MatteType@ MatteType.BLACK &
          - & @MatteType@ MatteType.FOREGROUND &
          - & @MatteType@ MatteType.NETSCAPE &
          - & @MatteType@ MatteType.NONE &
          - & @MatteType@ MatteType.SEMIGRAY &
          - & @MatteType@ MatteType.WHITE &
- MeasurementLog
          - & @MeasurementLog@ MeasurementLog.deleteMeasurements &
          - & @MeasurementLog@ MeasurementLog.exportMeasurements &
          - & @MeasurementLog@ MeasurementLog.parent &
          - & @MeasurementLog@ MeasurementLog.typename &
- MeasurementRange
          - & @MeasurementRange@ MeasurementRange.ACTIVEMEASUREMENTS &
          - & @MeasurementRange@ MeasurementRange.ALLMEASUREMENTS &
- MeasurementScale
          - & @MeasurementScale@ MeasurementScale.logicalLength &
          - & @MeasurementScale@ MeasurementScale.logicalUnits &
          - & @MeasurementScale@ MeasurementScale.name &
          - & @MeasurementScale@ MeasurementScale.parent &
          - & @MeasurementScale@ MeasurementScale.pixelLength &
          - & @MeasurementScale@ MeasurementScale.typename &
- MeasurementSource
          - & @MeasurementSource@ MeasurementSource.MEASURECOUNTTOOL &
          - & @MeasurementSource@ MeasurementSource.MEASURERULERTOOL &
          - & @MeasurementSource@ MeasurementSource.MEASURESELECTION &
- NewDocumentMode
          - & @NewDocumentMode@ NewDocumentMode.BITMAP &
          - & @NewDocumentMode@ NewDocumentMode.CMYK &
          - & @NewDocumentMode@ NewDocumentMode.GRAYSCALE &
          - & @NewDocumentMode@ NewDocumentMode.LAB &
          - & @NewDocumentMode@ NewDocumentMode.RGB &
- NoiseDistribution
          - & @NoiseDistribution@ NoiseDistribution.GAUSSIAN &
          - & @NoiseDistribution@ NoiseDistribution.UNIFORM &
- Notifier
          - & @Notifier@ Notifier.eventClass &
          - & @Notifier@ Notifier.eventFile &
          - & @Notifier@ Notifier.event &
          - & @Notifier@ Notifier.parent &
          - & @Notifier@ Notifier.removeAll &
          - & @Notifier@ Notifier.remove &
- Notifiers
          - & @Notifiers@ Notifiers.add &
          - & @Notifiers@ Notifiers.getByName &
          - & @Notifiers@ Notifiers.[] &
          - & @Notifiers@ Notifiers.length &
          - & @Notifiers@ Notifiers.parent &
          - & @Notifiers@ Notifiers.removeAll &
          - & @Notifiers@ Notifiers.typename &
- Notifier
          - & @Notifier@ Notifier.typename &
- OffsetUndefinedAreas
          - & @OffsetUndefinedAreas@ OffsetUndefinedAreas.REPEATEDGEPIXELS &
          - & @OffsetUndefinedAreas@ OffsetUndefinedAreas.SETTOBACKGROUND &
          - & @OffsetUndefinedAreas@ OffsetUndefinedAreas.WRAPAROUND &
- OpenDocumentMode
          - & @OpenDocumentMode@ OpenDocumentMode.CMYK &
          - & @OpenDocumentMode@ OpenDocumentMode.GRAYSCALE &
          - & @OpenDocumentMode@ OpenDocumentMode.LAB &
          - & @OpenDocumentMode@ OpenDocumentMode.RGB &
- OpenDocumentType
          - & @OpenDocumentType@ OpenDocumentType.ALIASPIX &
          - & @OpenDocumentType@ OpenDocumentType.BMP &
          - & @OpenDocumentType@ OpenDocumentType.CAMERARAW &
          - & @OpenDocumentType@ OpenDocumentType.COMPUSERVEGIF &
          - & @OpenDocumentType@ OpenDocumentType.DICOM &
          - & @OpenDocumentType@ OpenDocumentType.ELECTRICIMAGE &
          - & @OpenDocumentType@ OpenDocumentType.EPS &
          - & @OpenDocumentType@ OpenDocumentType.EPSPICTPREVIEW &
          - & @OpenDocumentType@ OpenDocumentType.EPSTIFFPREVIEW &
          - & @OpenDocumentType@ OpenDocumentType.FILMSTRIP &
          - & @OpenDocumentType@ OpenDocumentType.JPEG &
          - & @OpenDocumentType@ OpenDocumentType.PCX &
          - & @OpenDocumentType@ OpenDocumentType.PDF &
          - & @OpenDocumentType@ OpenDocumentType.PHOTOCD &
          - & @OpenDocumentType@ OpenDocumentType.PHOTOSHOPDCS_1 &
          - & @OpenDocumentType@ OpenDocumentType.PHOTOSHOPDCS_2 &
          - & @OpenDocumentType@ OpenDocumentType.PHOTOSHOPEPS &
          - & @OpenDocumentType@ OpenDocumentType.PHOTOSHOP &
          - & @OpenDocumentType@ OpenDocumentType.PHOTOSHOPPDF &
          - & @OpenDocumentType@ OpenDocumentType.PICTFILEFORMAT &
          - & @OpenDocumentType@ OpenDocumentType.PICTRESOURCEFORMAT &
          - & @OpenDocumentType@ OpenDocumentType.PIXAR &
          - & @OpenDocumentType@ OpenDocumentType.PNG &
          - & @OpenDocumentType@ OpenDocumentType.PORTABLEBITMAP &
          - & @OpenDocumentType@ OpenDocumentType.RAW &
          - & @OpenDocumentType@ OpenDocumentType.SCITEXCT &
          - & @OpenDocumentType@ OpenDocumentType.SGIRGB &
          - & @OpenDocumentType@ OpenDocumentType.SOFTIMAGE &
          - & @OpenDocumentType@ OpenDocumentType.TARGA &
          - & @OpenDocumentType@ OpenDocumentType.TIFF &
          - & @OpenDocumentType@ OpenDocumentType.WAVEFRONTRLA &
          - & @OpenDocumentType@ OpenDocumentType.WIRELESSBITMAP &
- OperatingSystem
          - & @OperatingSystem@ OperatingSystem.OS2 &
          - & @OperatingSystem@ OperatingSystem.WINDOWS &
- Orientation
          - & @Orientation@ Orientation.LANDSCAPE &
          - & @Orientation@ Orientation.PORTRAIT &
- OtherPaintingCursors
          - & @OtherPaintingCursors@ OtherPaintingCursors.PRECISEOTHER &
          - & @OtherPaintingCursors@ OtherPaintingCursors.STANDARDOTHER &
- PaintingCursors
          - & @PaintingCursors@ PaintingCursors.BRUSHSIZE &
          - & @PaintingCursors@ PaintingCursors.PRECISE &
          - & @PaintingCursors@ PaintingCursors.STANDARD &
- PaletteType
          - & @PaletteType@ PaletteType.EXACT &
          - & @PaletteType@ PaletteType.LOCALADAPTIVE &
          - & @PaletteType@ PaletteType.LOCALPERCEPTUAL &
          - & @PaletteType@ PaletteType.LOCALSELECTIVE &
          - & @PaletteType@ PaletteType.MACOSPALETTE &
          - & @PaletteType@ PaletteType.MASTERADAPTIVE &
          - & @PaletteType@ PaletteType.MASTERPERCEPTUAL &
          - & @PaletteType@ PaletteType.MASTERSELECTIVE &
          - & @PaletteType@ PaletteType.PREVIOUSPALETTE &
          - & @PaletteType@ PaletteType.UNIFORM &
          - & @PaletteType@ PaletteType.WEBPALETTE &
          - & @PaletteType@ PaletteType.WINDOWSPALETTE &
- PathItem
          - & @PathItem@ PathItem.add &
          - & @PathItem@ PathItem.deselect &
          - & @PathItem@ PathItem.duplicate &
          - & @PathItem@ PathItem.fillPath &
          - & @PathItem@ PathItem.kind &
          - & @PathItem@ PathItem.makeClippingPath &
          - & @PathItem@ PathItem.makeSelection &
          - & @PathItem@ PathItem.name &
          - & @PathItem@ PathItem.parent &
          - & @PathItem@ PathItem.removeAll &
          - & @PathItem@ PathItem.remove &
- PathItems
          - & @PathItems@ PathItems.add &
- PathItem
          - & @PathItem@ PathItem.select &
- PathItems
          - & @PathItems@ PathItems.getByName &
          - & @PathItems@ PathItems.[] &
          - & @PathItems@ PathItems.length &
          - & @PathItems@ PathItems.parent &
- PathItem
          - & @PathItem@ PathItem.strokePath &
- PathItems
          - & @PathItems@ PathItems.typename &
- PathItem
          - & @PathItem@ PathItem.subPathItems &
          - & @PathItem@ PathItem.typename &
- PathKind
          - & @PathKind@ PathKind.CLIPPINGPATH &
          - & @PathKind@ PathKind.NORMALPATH &
          - & @PathKind@ PathKind.TEXTMASK &
          - & @PathKind@ PathKind.VECTORMASK &
          - & @PathKind@ PathKind.WORKPATH &
- PathPoint
          - & @PathPoint@ PathPoint.anchor &
- PathPointInfo
          - & @PathPointInfo@ PathPointInfo.anchor &
          - & @PathPointInfo@ PathPointInfo.kind &
          - & @PathPointInfo@ PathPointInfo.leftDirection &
          - & @PathPointInfo@ PathPointInfo.rightDirection &
- PathPoint
          - & @PathPoint@ PathPoint.kind &
          - & @PathPoint@ PathPoint.leftDirection &
          - & @PathPoint@ PathPoint.parent &
          - & @PathPoint@ PathPoint.rightDirection &
- PathPoints
          - & @PathPoints@ PathPoints.getByName &
          - & @PathPoints@ PathPoints.[] &
          - & @PathPoints@ PathPoints.length &
          - & @PathPoints@ PathPoints.parent &
          - & @PathPoints@ PathPoints.typename &
- PathPoint
          - & @PathPoint@ PathPoint.typename &
- PDFCompatibilityType
          - & @PDFCompatibilityType@ PDFCompatibilityType.PDF13 &
          - & @PDFCompatibilityType@ PDFCompatibilityType.PDF14 &
          - & @PDFCompatibilityType@ PDFCompatibilityType.PDF15 &
          - & @PDFCompatibilityType@ PDFCompatibilityType.PDF16 &
          - & @PDFCompatibilityType@ PDFCompatibilityType.PDF17 &
- PDFEncodingType
          - & @PDFEncodingType@ PDFEncodingType.JPEG2000HIGH &
          - & @PDFEncodingType@ PDFEncodingType.JPEG2000LOSSLESS &
          - & @PDFEncodingType@ PDFEncodingType.JPEG2000LOW &
          - & @PDFEncodingType@ PDFEncodingType.JPEG2000MEDHIGH &
          - & @PDFEncodingType@ PDFEncodingType.JPEG2000MED &
          - & @PDFEncodingType@ PDFEncodingType.JPEG2000MEDLOW &
          - & @PDFEncodingType@ PDFEncodingType.JPEGHIGH &
          - & @PDFEncodingType@ PDFEncodingType.JPEG &
          - & @PDFEncodingType@ PDFEncodingType.JPEGLOW &
          - & @PDFEncodingType@ PDFEncodingType.JPEGMEDHIGH &
          - & @PDFEncodingType@ PDFEncodingType.JPEGMED &
          - & @PDFEncodingType@ PDFEncodingType.JPEGMEDLOW &
          - & @PDFEncodingType@ PDFEncodingType.NONE &
          - & @PDFEncodingType@ PDFEncodingType.PDFZIP4BIT &
          - & @PDFEncodingType@ PDFEncodingType.PDFZIP &
- PDFResampleType
          - & @PDFResampleType@ PDFResampleType.NONE &
          - & @PDFResampleType@ PDFResampleType.PDFAVERAGE &
          - & @PDFResampleType@ PDFResampleType.PDFBICUBIC &
          - & @PDFResampleType@ PDFResampleType.PDFSUBSAMPLE &
- PDFSaveOptions
          - & @PDFSaveOptions@ PDFSaveOptions.alphaChannels &
          - & @PDFSaveOptions@ PDFSaveOptions.annotations &
          - & @PDFSaveOptions@ PDFSaveOptions.colorConversion &
          - & @PDFSaveOptions@ PDFSaveOptions.convertToEightBit &
          - & @PDFSaveOptions@ PDFSaveOptions.description &
          - & @PDFSaveOptions@ PDFSaveOptions.destinationProfile &
          - & @PDFSaveOptions@ PDFSaveOptions.downgradeColorProfile &
          - & @PDFSaveOptions@ PDFSaveOptions.downSample &
          - & @PDFSaveOptions@ PDFSaveOptions.downSampleSize &
          - & @PDFSaveOptions@ PDFSaveOptions.downSampleSizeLimit &
          - & @PDFSaveOptions@ PDFSaveOptions.embedColorProfile &
          - & @PDFSaveOptions@ PDFSaveOptions.embedFonts &
          - & @PDFSaveOptions@ PDFSaveOptions.embedThumbnail &
          - & @PDFSaveOptions@ PDFSaveOptions.encoding &
          - & @PDFSaveOptions@ PDFSaveOptions.interpolation &
          - & @PDFSaveOptions@ PDFSaveOptions.jpegQuality &
          - & @PDFSaveOptions@ PDFSaveOptions.layers &
          - & @PDFSaveOptions@ PDFSaveOptions.optimizeForWeb &
          - & @PDFSaveOptions@ PDFSaveOptions.outputCondition &
          - & @PDFSaveOptions@ PDFSaveOptions.outputConditionID &
          - & @PDFSaveOptions@ PDFSaveOptions.PDFCompatibility &
          - & @PDFSaveOptions@ PDFSaveOptions.PDFStandard &
          - & @PDFSaveOptions@ PDFSaveOptions.preserveEditing &
          - & @PDFSaveOptions@ PDFSaveOptions.presetFile &
          - & @PDFSaveOptions@ PDFSaveOptions.profileInclusionPolicy &
          - & @PDFSaveOptions@ PDFSaveOptions.registryName &
          - & @PDFSaveOptions@ PDFSaveOptions.spotColors &
          - & @PDFSaveOptions@ PDFSaveOptions.tileSize &
          - & @PDFSaveOptions@ PDFSaveOptions.transparency &
          - & @PDFSaveOptions@ PDFSaveOptions.useOutlines &
          - & @PDFSaveOptions@ PDFSaveOptions.vectorData &
          - & @PDFSaveOptions@ PDFSaveOptions.view &
- PDFStandardType
          - & @PDFStandardType@ PDFStandardType.NONE &
          - & @PDFStandardType@ PDFStandardType.PDFX1A2001 &
          - & @PDFStandardType@ PDFStandardType.PDFX1A2003 &
          - & @PDFStandardType@ PDFStandardType.PDFX32002 &
          - & @PDFStandardType@ PDFStandardType.PDFX32003 &
          - & @PDFStandardType@ PDFStandardType.PDFX42008 &
- PhotoCDColorSpace
          - & @PhotoCDColorSpace@ PhotoCDColorSpace.LAB16 &
          - & @PhotoCDColorSpace@ PhotoCDColorSpace.LAB8 &
          - & @PhotoCDColorSpace@ PhotoCDColorSpace.RGB16 &
          - & @PhotoCDColorSpace@ PhotoCDColorSpace.RGB8 &
- PhotoCDOpenOptions
          - & @PhotoCDOpenOptions@ PhotoCDOpenOptions.colorProfileName &
          - & @PhotoCDOpenOptions@ PhotoCDOpenOptions.colorSpace &
          - & @PhotoCDOpenOptions@ PhotoCDOpenOptions.orientation &
          - & @PhotoCDOpenOptions@ PhotoCDOpenOptions.pixelSize &
          - & @PhotoCDOpenOptions@ PhotoCDOpenOptions.resolution &
- PhotoCDSize
          - & @PhotoCDSize@ PhotoCDSize.EXTRALARGE &
          - & @PhotoCDSize@ PhotoCDSize.LARGE &
          - & @PhotoCDSize@ PhotoCDSize.MAXIMUM &
          - & @PhotoCDSize@ PhotoCDSize.MEDIUM &
          - & @PhotoCDSize@ PhotoCDSize.MINIMUM &
          - & @PhotoCDSize@ PhotoCDSize.SMALL &
- PhotoshopSaveOptions
          - & @PhotoshopSaveOptions@ PhotoshopSaveOptions.alphaChannels &
          - & @PhotoshopSaveOptions@ PhotoshopSaveOptions.annotations &
          - & @PhotoshopSaveOptions@ PhotoshopSaveOptions.embedColorProfile &
          - & @PhotoshopSaveOptions@ PhotoshopSaveOptions.layers &
          - & @PhotoshopSaveOptions@ PhotoshopSaveOptions.spotColors &
- PICTBitsPerPixels
          - & @PICTBitsPerPixels@ PICTBitsPerPixels.EIGHT &
          - & @PICTBitsPerPixels@ PICTBitsPerPixels.FOUR &
          - & @PICTBitsPerPixels@ PICTBitsPerPixels.SIXTEEN &
          - & @PICTBitsPerPixels@ PICTBitsPerPixels.THIRTYTWO &
          - & @PICTBitsPerPixels@ PICTBitsPerPixels.TWO &
- PICTCompression
          - & @PICTCompression@ PICTCompression.JPEGHIGHPICT &
          - & @PICTCompression@ PICTCompression.JPEGLOWPICT &
          - & @PICTCompression@ PICTCompression.JPEGMAXIMUMPICT &
          - & @PICTCompression@ PICTCompression.JPEGMEDIUMPICT &
          - & @PICTCompression@ PICTCompression.NONE &
- PICTFileSaveOptions
          - & @PICTFileSaveOptions@ PICTFileSaveOptions.alphaChannels &
          - & @PICTFileSaveOptions@ PICTFileSaveOptions.compression &
          - & @PICTFileSaveOptions@ PICTFileSaveOptions.embedColorProfile &
          - & @PICTFileSaveOptions@ PICTFileSaveOptions.resolution &
- PICTResourceSaveOptions
          - & @PICTResourceSaveOptions@ PICTResourceSaveOptions.alphaChannels &
          - & @PICTResourceSaveOptions@ PICTResourceSaveOptions.compression &
          - & @PICTResourceSaveOptions@ PICTResourceSaveOptions.embedColorProfile &
          - & @PICTResourceSaveOptions@ PICTResourceSaveOptions.name &
          - & @PICTResourceSaveOptions@ PICTResourceSaveOptions.resolution &
          - & @PICTResourceSaveOptions@ PICTResourceSaveOptions.resourceID &
- PicturePackageOptions
          - & @PicturePackageOptions@ PicturePackageOptions.content &
          - & @PicturePackageOptions@ PicturePackageOptions.flatten &
          - & @PicturePackageOptions@ PicturePackageOptions.font &
          - & @PicturePackageOptions@ PicturePackageOptions.fontSize &
          - & @PicturePackageOptions@ PicturePackageOptions.layout &
          - & @PicturePackageOptions@ PicturePackageOptions.mode &
          - & @PicturePackageOptions@ PicturePackageOptions.opacity &
          - & @PicturePackageOptions@ PicturePackageOptions.resolution &
          - & @PicturePackageOptions@ PicturePackageOptions.textColor &
          - & @PicturePackageOptions@ PicturePackageOptions.text &
          - & @PicturePackageOptions@ PicturePackageOptions.textPosition &
          - & @PicturePackageOptions@ PicturePackageOptions.textRotate &
- PicturePackageTextType
          - & @PicturePackageTextType@ PicturePackageTextType.CAPTION &
          - & @PicturePackageTextType@ PicturePackageTextType.COPYRIGHT &
          - & @PicturePackageTextType@ PicturePackageTextType.CREDIT &
          - & @PicturePackageTextType@ PicturePackageTextType.FILENAME &
          - & @PicturePackageTextType@ PicturePackageTextType.NONE &
          - & @PicturePackageTextType@ PicturePackageTextType.ORIGIN &
          - & @PicturePackageTextType@ PicturePackageTextType.USER &
- PixarSaveOptions
          - & @PixarSaveOptions@ PixarSaveOptions.alphaChannels &
- PNGSaveOptions
          - & @PNGSaveOptions@ PNGSaveOptions.compression &
          - & @PNGSaveOptions@ PNGSaveOptions.interlaced &
- PointKind
          - & @PointKind@ PointKind.CORNERPOINT &
          - & @PointKind@ PointKind.SMOOTHPOINT &
- PointType
          - & @PointType@ PointType.POSTSCRIPT &
          - & @PointType@ PointType.TRADITIONAL &
- PolarConversionType
          - & @PolarConversionType@ PolarConversionType.POLARTORECTANGULAR &
          - & @PolarConversionType@ PolarConversionType.RECTANGULARTOPOLAR &
- Preferences
          - & @Preferences@ Preferences.additionalPluginFolder &
          - & @Preferences@ Preferences.appendExtension &
          - & @Preferences@ Preferences.askBeforeSavingLayeredTIFF &
          - & @Preferences@ Preferences.autoUpdateOpenDocuments &
          - & @Preferences@ Preferences.beepWhenDone &
          - & @Preferences@ Preferences.colorChannelsInColor &
          - & @Preferences@ Preferences.colorPicker &
          - & @Preferences@ Preferences.columnGutter &
          - & @Preferences@ Preferences.columnWidth &
          - & @Preferences@ Preferences.createFirstSnapshot &
          - & @Preferences@ Preferences.dynamicColorSliders &
          - & @Preferences@ Preferences.editLogItems &
          - & @Preferences@ Preferences.exportClipboard &
          - & @Preferences@ Preferences.fontPreviewSize &
          - & @Preferences@ Preferences.fullSizePreview &
          - & @Preferences@ Preferences.gamutWarningOpacity &
          - & @Preferences@ Preferences.gridSize &
          - & @Preferences@ Preferences.gridStyle &
          - & @Preferences@ Preferences.gridSubDivisions &
          - & @Preferences@ Preferences.guideStyle &
          - & @Preferences@ Preferences.iconPreview &
          - & @Preferences@ Preferences.imageCacheForHistograms &
          - & @Preferences@ Preferences.imageCacheLevels &
          - & @Preferences@ Preferences.imagePreviews &
          - & @Preferences@ Preferences.interpolation &
          - & @Preferences@ Preferences.keyboardZoomResizesWindows &
          - & @Preferences@ Preferences.macOSThumbnail &
          - & @Preferences@ Preferences.maximizeCompatibility &
          - & @Preferences@ Preferences.maxRAMuse &
          - & @Preferences@ Preferences.nonLinearHistory &
          - & @Preferences@ Preferences.numberOfHistoryStates &
          - & @Preferences@ Preferences.otherCursors &
          - & @Preferences@ Preferences.paintingCursors &
          - & @Preferences@ Preferences.parent &
          - & @Preferences@ Preferences.pixelDoubling &
          - & @Preferences@ Preferences.pointSize &
          - & @Preferences@ Preferences.recentFileListLength &
          - & @Preferences@ Preferences.rulerUnits &
          - & @Preferences@ Preferences.saveLogItemsFile &
          - & @Preferences@ Preferences.saveLogItems &
          - & @Preferences@ Preferences.savePaletteLocations &
          - & @Preferences@ Preferences.showAsianTextOptions &
          - & @Preferences@ Preferences.showEnglishFontNames &
          - & @Preferences@ Preferences.showSliceNumber &
          - & @Preferences@ Preferences.showToolTips &
          - & @Preferences@ Preferences.smartQuotes &
          - & @Preferences@ Preferences.textFontSize &
          - & @Preferences@ Preferences.typename &
          - & @Preferences@ Preferences.typeUnits &
          - & @Preferences@ Preferences.useAdditionalPluginFolder &
          - & @Preferences@ Preferences.useDiffusionDither &
          - & @Preferences@ Preferences.useHistoryLog &
          - & @Preferences@ Preferences.useLowerCaseExtension &
          - & @Preferences@ Preferences.useShiftKeyForToolSwitch &
          - & @Preferences@ Preferences.useVideoAlpha &
          - & @Preferences@ Preferences.windowsThumbnail &
- PresentationOptions
          - & @PresentationOptions@ PresentationOptions.autoAdvance &
          - & @PresentationOptions@ PresentationOptions.includeFilename &
          - & @PresentationOptions@ PresentationOptions.interval &
          - & @PresentationOptions@ PresentationOptions.loop &
          - & @PresentationOptions@ PresentationOptions.magnification &
          - & @PresentationOptions@ PresentationOptions.PDFFileOptions &
          - & @PresentationOptions@ PresentationOptions.presentation &
          - & @PresentationOptions@ PresentationOptions.transition &
- PrintColorHandling
          - & @PrintColorHandling@ PrintColorHandling.PHOTOSHOPMANAGED &
          - & @PrintColorHandling@ PrintColorHandling.PRINTERMANAGED &
          - & @PrintColorHandling@ PrintColorHandling.SEPARATIONS &
- PurgeTarget
          - & @PurgeTarget@ PurgeTarget.ALLCACHES &
          - & @PurgeTarget@ PurgeTarget.CLIPBOARDCACHE &
          - & @PurgeTarget@ PurgeTarget.HISTORYCACHES &
          - & @PurgeTarget@ PurgeTarget.UNDOCACHES &
- QueryStateType
          - & @QueryStateType@ QueryStateType.ALWAYS &
          - & @QueryStateType@ QueryStateType.ASK &
          - & @QueryStateType@ QueryStateType.NEVER &
- RadialBlurMethod
          - & @RadialBlurMethod@ RadialBlurMethod.SPIN &
          - & @RadialBlurMethod@ RadialBlurMethod.ZOOM &
- RadialBlurQuality
          - & @RadialBlurQuality@ RadialBlurQuality.BEST &
          - & @RadialBlurQuality@ RadialBlurQuality.DRAFT &
          - & @RadialBlurQuality@ RadialBlurQuality.GOOD &
- RasterizeType
          - & @RasterizeType@ RasterizeType.ENTIRELAYER &
          - & @RasterizeType@ RasterizeType.FILLCONTENT &
          - & @RasterizeType@ RasterizeType.LAYERCLIPPINGPATH &
          - & @RasterizeType@ RasterizeType.LINKEDLAYERS &
          - & @RasterizeType@ RasterizeType.SHAPE &
          - & @RasterizeType@ RasterizeType.TEXTCONTENTS &
- RawFormatOpenOptions
          - & @RawFormatOpenOptions@ RawFormatOpenOptions.bitsPerChannel &
          - & @RawFormatOpenOptions@ RawFormatOpenOptions.byteOrder &
          - & @RawFormatOpenOptions@ RawFormatOpenOptions.channelNumber &
          - & @RawFormatOpenOptions@ RawFormatOpenOptions.headerSize &
          - & @RawFormatOpenOptions@ RawFormatOpenOptions.height &
          - & @RawFormatOpenOptions@ RawFormatOpenOptions.interleaveChannels &
          - & @RawFormatOpenOptions@ RawFormatOpenOptions.retainHeader &
          - & @RawFormatOpenOptions@ RawFormatOpenOptions.width &
- RawSaveOptions
          - & @RawSaveOptions@ RawSaveOptions.alphaChannels &
          - & @RawSaveOptions@ RawSaveOptions.spotColors &
- Rectangle
          - & @Rectangle@ Rectangle.bottom &
          - & @Rectangle@ Rectangle.height &
          - & @Rectangle@ Rectangle.left &
          - & @Rectangle@ Rectangle.length &
          - & @Rectangle@ Rectangle.right &
          - & @Rectangle@ Rectangle.top &
          - & @Rectangle@ Rectangle.width &
          - & @Rectangle@ Rectangle.x &
          - & @Rectangle@ Rectangle.y &
- ReferenceFormType
          - & @ReferenceFormType@ ReferenceFormType.CLASSTYPE &
          - & @ReferenceFormType@ ReferenceFormType.ENUMERATED &
          - & @ReferenceFormType@ ReferenceFormType.IDENTIFIER &
          - & @ReferenceFormType@ ReferenceFormType.INDEX &
          - & @ReferenceFormType@ ReferenceFormType.NAME &
          - & @ReferenceFormType@ ReferenceFormType.OFFSET &
          - & @ReferenceFormType@ ReferenceFormType.PROPERTY &
- ResampleMethod
          - & @ResampleMethod@ ResampleMethod.AUTOMATIC &
          - & @ResampleMethod@ ResampleMethod.BICUBICAUTOMATIC &
          - & @ResampleMethod@ ResampleMethod.BICUBIC &
          - & @ResampleMethod@ ResampleMethod.BICUBICSHARPER &
          - & @ResampleMethod@ ResampleMethod.BICUBICSMOOTHER &
          - & @ResampleMethod@ ResampleMethod.BILINEAR &
          - & @ResampleMethod@ ResampleMethod.NEARESTNEIGHBOR &
          - & @ResampleMethod@ ResampleMethod.NONE &
          - & @ResampleMethod@ ResampleMethod.PRESERVEDETAILS &
- ResetTarget
          - & @ResetTarget@ ResetTarget.ALLTOOLS &
          - & @ResetTarget@ ResetTarget.ALLWARNINGS &
          - & @ResetTarget@ ResetTarget.EVERYTHING &
- RGBColor
          - & @RGBColor@ RGBColor.blue &
          - & @RGBColor@ RGBColor.green &
          - & @RGBColor@ RGBColor.hexValue &
          - & @RGBColor@ RGBColor.red &
- RippleSize
          - & @RippleSize@ RippleSize.LARGE &
          - & @RippleSize@ RippleSize.MEDIUM &
          - & @RippleSize@ RippleSize.SMALL &
- SaveBehavior
          - & @SaveBehavior@ SaveBehavior.ALWAYSSAVE &
          - & @SaveBehavior@ SaveBehavior.ASKWHENSAVING &
          - & @SaveBehavior@ SaveBehavior.NEVERSAVE &
- SaveDocumentType
          - & @SaveDocumentType@ SaveDocumentType.ALIASPIX &
          - & @SaveDocumentType@ SaveDocumentType.BMP &
          - & @SaveDocumentType@ SaveDocumentType.COMPUSERVEGIF &
          - & @SaveDocumentType@ SaveDocumentType.ELECTRICIMAGE &
          - & @SaveDocumentType@ SaveDocumentType.JPEG &
          - & @SaveDocumentType@ SaveDocumentType.PCX &
          - & @SaveDocumentType@ SaveDocumentType.PHOTOSHOPDCS_1 &
          - & @SaveDocumentType@ SaveDocumentType.PHOTOSHOPDCS_2 &
          - & @SaveDocumentType@ SaveDocumentType.PHOTOSHOPEPS &
          - & @SaveDocumentType@ SaveDocumentType.PHOTOSHOP &
          - & @SaveDocumentType@ SaveDocumentType.PHOTOSHOPPDF &
          - & @SaveDocumentType@ SaveDocumentType.PICTFileFORMAT &
          - & @SaveDocumentType@ SaveDocumentType.PICTRESOURCEFORMAT &
          - & @SaveDocumentType@ SaveDocumentType.PIXAR &
          - & @SaveDocumentType@ SaveDocumentType.PNG &
          - & @SaveDocumentType@ SaveDocumentType.PORTABLEBITMAP &
          - & @SaveDocumentType@ SaveDocumentType.RAW &
          - & @SaveDocumentType@ SaveDocumentType.SCITEXCT &
          - & @SaveDocumentType@ SaveDocumentType.SGIRGB &
          - & @SaveDocumentType@ SaveDocumentType.SOFTIMAGE &
          - & @SaveDocumentType@ SaveDocumentType.TARGA &
          - & @SaveDocumentType@ SaveDocumentType.TIFF &
          - & @SaveDocumentType@ SaveDocumentType.WAVEFRONTRLA &
          - & @SaveDocumentType@ SaveDocumentType.WIRELESSBITMAP &
- SaveEncoding
          - & @SaveEncoding@ SaveEncoding.ASCII &
          - & @SaveEncoding@ SaveEncoding.BINARY &
          - & @SaveEncoding@ SaveEncoding.JPEGHIGH &
          - & @SaveEncoding@ SaveEncoding.JPEGLOW &
          - & @SaveEncoding@ SaveEncoding.JPEGMAXIMUM &
          - & @SaveEncoding@ SaveEncoding.JPEGMEDIUM &
- SaveLogItemsType
          - & @SaveLogItemsType@ SaveLogItemsType.LOGFILEANDMETADATA &
          - & @SaveLogItemsType@ SaveLogItemsType.LOGFILE &
          - & @SaveLogItemsType@ SaveLogItemsType.METADATA &
- SaveOptions
          - & @SaveOptions@ SaveOptions.DONOTSAVECHANGES &
          - & @SaveOptions@ SaveOptions.PROMPTTOSAVECHANGES &
          - & @SaveOptions@ SaveOptions.SAVECHANGES &
- SaveOptionsType
          - & @SaveOptionsType@ SaveOptionsType.DONOTSAVECHANGES &
          - & @SaveOptionsType@ SaveOptionsType.PROMPTTOSAVECHANGES &
          - & @SaveOptionsType@ SaveOptionsType.SAVECHANGES &
- Selection
          - & @Selection@ Selection.bounds &
          - & @Selection@ Selection.clear &
          - & @Selection@ Selection.contract &
          - & @Selection@ Selection.copy &
          - & @Selection@ Selection.cut &
          - & @Selection@ Selection.deselect &
          - & @Selection@ Selection.expand &
          - & @Selection@ Selection.feather &
          - & @Selection@ Selection.fill &
          - & @Selection@ Selection.grow &
          - & @Selection@ Selection.invert &
          - & @Selection@ Selection.load &
          - & @Selection@ Selection.makeWorkPath &
          - & @Selection@ Selection.parent &
          - & @Selection@ Selection.resizeBoundary &
          - & @Selection@ Selection.resize &
          - & @Selection@ Selection.rotateBoundary &
          - & @Selection@ Selection.rotate &
          - & @Selection@ Selection.selectAll &
          - & @Selection@ Selection.selectBorder &
          - & @Selection@ Selection.select &
          - & @Selection@ Selection.similar &
          - & @Selection@ Selection.smooth &
          - & @Selection@ Selection.solid &
          - & @Selection@ Selection.store &
          - & @Selection@ Selection.stroke &
          - & @Selection@ Selection.translateBoundary &
          - & @Selection@ Selection.translate &
- SelectionType
          - & @SelectionType@ SelectionType.DIMINISH &
          - & @SelectionType@ SelectionType.EXTEND &
          - & @SelectionType@ SelectionType.INTERSECT &
- Selection
          - & @Selection@ Selection.typename &
- SelectionType
          - & @SelectionType@ SelectionType.REPLACE &
- SGIRGBSaveOptions
          - & @SGIRGBSaveOptions@ SGIRGBSaveOptions.alphaChannels &
          - & @SGIRGBSaveOptions@ SGIRGBSaveOptions.spotColors &
- ShapeOperation
          - & @ShapeOperation@ ShapeOperation.SHAPEADD &
          - & @ShapeOperation@ ShapeOperation.SHAPEINTERSECT &
          - & @ShapeOperation@ ShapeOperation.SHAPESUBTRACT &
          - & @ShapeOperation@ ShapeOperation.SHAPEXOR &
- SmartBlurMode
          - & @SmartBlurMode@ SmartBlurMode.EDGEONLY &
          - & @SmartBlurMode@ SmartBlurMode.NORMAL &
          - & @SmartBlurMode@ SmartBlurMode.OVERLAYEDGE &
- SmartBlurQuality
          - & @SmartBlurQuality@ SmartBlurQuality.HIGH &
          - & @SmartBlurQuality@ SmartBlurQuality.LOW &
          - & @SmartBlurQuality@ SmartBlurQuality.MEDIUM &
- SolidColor
          - & @SolidColor@ SolidColor.cmyk &
          - & @SolidColor@ SolidColor.gray &
          - & @SolidColor@ SolidColor.hsb &
          - & @SolidColor@ SolidColor.isEqual &
          - & @SolidColor@ SolidColor.lab &
          - & @SolidColor@ SolidColor.model &
          - & @SolidColor@ SolidColor.nearestWebColor &
          - & @SolidColor@ SolidColor.rgb &
- SourceSpaceType
          - & @SourceSpaceType@ SourceSpaceType.DOCUMENT &
          - & @SourceSpaceType@ SourceSpaceType.PROOF &
- SpherizeMode
          - & @SpherizeMode@ SpherizeMode.HORIZONTAL &
          - & @SpherizeMode@ SpherizeMode.NORMAL &
          - & @SpherizeMode@ SpherizeMode.VERTICAL &
- StrikeThruType
          - & @StrikeThruType@ StrikeThruType.STRIKEBOX &
          - & @StrikeThruType@ StrikeThruType.STRIKEHEIGHT &
          - & @StrikeThruType@ StrikeThruType.STRIKEOFF &
- StrokeLocation
          - & @StrokeLocation@ StrokeLocation.CENTER &
          - & @StrokeLocation@ StrokeLocation.INSIDE &
          - & @StrokeLocation@ StrokeLocation.OUTSIDE &
- SubPathInfo
          - & @SubPathInfo@ SubPathInfo.closed &
          - & @SubPathInfo@ SubPathInfo.entireSubPath &
          - & @SubPathInfo@ SubPathInfo.operation &
- SubPathItem
          - & @SubPathItem@ SubPathItem.closed &
          - & @SubPathItem@ SubPathItem.operation &
          - & @SubPathItem@ SubPathItem.parent &
          - & @SubPathItem@ SubPathItem.pathPoints &
- SubPathItems
          - & @SubPathItems@ SubPathItems.getByName &
          - & @SubPathItems@ SubPathItems.[] &
          - & @SubPathItems@ SubPathItems.length &
          - & @SubPathItems@ SubPathItems.parent &
          - & @SubPathItems@ SubPathItems.typename &
- SubPathItem
          - & @SubPathItem@ SubPathItem.typename &
- TargaBitsPerPixels
          - & @TargaBitsPerPixels@ TargaBitsPerPixels.SIXTEEN &
          - & @TargaBitsPerPixels@ TargaBitsPerPixels.THIRTYTWO &
          - & @TargaBitsPerPixels@ TargaBitsPerPixels.TWENTYFOUR &
- TargaSaveOptions
          - & @TargaSaveOptions@ TargaSaveOptions.alphaChannels &
          - & @TargaSaveOptions@ TargaSaveOptions.resolution &
          - & @TargaSaveOptions@ TargaSaveOptions.rleCompression &
- TextComposer
          - & @TextComposer@ TextComposer.ADOBEEVERYLINE &
          - & @TextComposer@ TextComposer.ADOBESINGLELINE &
- TextFont
          - & @TextFont@ TextFont.family &
          - & @TextFont@ TextFont.name &
          - & @TextFont@ TextFont.parent &
          - & @TextFont@ TextFont.postScriptName &
- TextFonts
          - & @TextFonts@ TextFonts.getByName &
          - & @TextFonts@ TextFonts.[] &
          - & @TextFonts@ TextFonts.length &
          - & @TextFonts@ TextFonts.parent &
- TextFont
          - & @TextFont@ TextFont.style &
- TextFonts
          - & @TextFonts@ TextFonts.typename &
- TextFont
          - & @TextFont@ TextFont.typename &
- TextItem
          - & @TextItem@ TextItem.alternateLigatures &
          - & @TextItem@ TextItem.antiAliasMethod &
          - & @TextItem@ TextItem.autoKerning &
          - & @TextItem@ TextItem.autoLeadingAmount &
          - & @TextItem@ TextItem.baselineShift &
          - & @TextItem@ TextItem.capitalization &
          - & @TextItem@ TextItem.color &
          - & @TextItem@ TextItem.contents &
          - & @TextItem@ TextItem.convertToShape &
          - & @TextItem@ TextItem.createPath &
          - & @TextItem@ TextItem.desiredGlyphScaling &
          - & @TextItem@ TextItem.desiredLetterScaling &
          - & @TextItem@ TextItem.desiredWordScaling &
          - & @TextItem@ TextItem.direction &
          - & @TextItem@ TextItem.fauxBold &
          - & @TextItem@ TextItem.fauxItalic &
          - & @TextItem@ TextItem.firstLineIndent &
          - & @TextItem@ TextItem.font &
          - & @TextItem@ TextItem.hangingPuntuation &
          - & @TextItem@ TextItem.height &
          - & @TextItem@ TextItem.horizontalScale &
          - & @TextItem@ TextItem.hyphenateAfterFirst &
          - & @TextItem@ TextItem.hyphenateBeforeLast &
          - & @TextItem@ TextItem.hyphenateCapitalWords &
          - & @TextItem@ TextItem.hyphenateWordsLongerThan &
          - & @TextItem@ TextItem.hyphenation &
          - & @TextItem@ TextItem.hyphenationZone &
          - & @TextItem@ TextItem.hyphenLimit &
          - & @TextItem@ TextItem.justification &
          - & @TextItem@ TextItem.kind &
          - & @TextItem@ TextItem.language &
          - & @TextItem@ TextItem.leading &
          - & @TextItem@ TextItem.leftIndent &
          - & @TextItem@ TextItem.ligatures &
          - & @TextItem@ TextItem.maximumGlyphScaling &
          - & @TextItem@ TextItem.maximumLetterScaling &
          - & @TextItem@ TextItem.maximumWordScaling &
          - & @TextItem@ TextItem.minimumGlyphScaling &
          - & @TextItem@ TextItem.minimumLetterScaling &
          - & @TextItem@ TextItem.minimumWordScaling &
          - & @TextItem@ TextItem.noBreak &
          - & @TextItem@ TextItem.oldStyle &
          - & @TextItem@ TextItem.parent &
          - & @TextItem@ TextItem.position &
          - & @TextItem@ TextItem.rightIndent &
          - & @TextItem@ TextItem.size &
          - & @TextItem@ TextItem.spaceAfter &
          - & @TextItem@ TextItem.spaceBefore &
          - & @TextItem@ TextItem.strikeThru &
          - & @TextItem@ TextItem.textComposer &
          - & @TextItem@ TextItem.tracking &
          - & @TextItem@ TextItem.typename &
          - & @TextItem@ TextItem.underline &
          - & @TextItem@ TextItem.useAutoLeading &
          - & @TextItem@ TextItem.verticalScale &
          - & @TextItem@ TextItem.warpBend &
          - & @TextItem@ TextItem.warpDirection &
          - & @TextItem@ TextItem.warpHorizontalDistortion &
          - & @TextItem@ TextItem.warpStyle &
          - & @TextItem@ TextItem.warpVerticalDistortion &
          - & @TextItem@ TextItem.width &
- TextType
          - & @TextType@ TextType.PARAGRAPHTEXT &
          - & @TextType@ TextType.POINTTEXT &
- TextureType
          - & @TextureType@ TextureType.BLOCKS &
          - & @TextureType@ TextureType.CANVAS &
          - & @TextureType@ TextureType.FILE &
          - & @TextureType@ TextureType.FROSTED &
          - & @TextureType@ TextureType.TINYLENS &
- TiffEncodingType
          - & @TiffEncodingType@ TiffEncodingType.JPEG &
          - & @TiffEncodingType@ TiffEncodingType.NONE &
          - & @TiffEncodingType@ TiffEncodingType.TIFFLZW &
          - & @TiffEncodingType@ TiffEncodingType.TIFFZIP &
- TiffSaveOptions
          - & @TiffSaveOptions@ TiffSaveOptions.alphaChannels &
          - & @TiffSaveOptions@ TiffSaveOptions.annotations &
          - & @TiffSaveOptions@ TiffSaveOptions.byteOrder &
          - & @TiffSaveOptions@ TiffSaveOptions.embedColorProfile &
          - & @TiffSaveOptions@ TiffSaveOptions.imageCompression &
          - & @TiffSaveOptions@ TiffSaveOptions.interleaveChannels &
          - & @TiffSaveOptions@ TiffSaveOptions.jpegQuality &
          - & @TiffSaveOptions@ TiffSaveOptions.layerCompression &
          - & @TiffSaveOptions@ TiffSaveOptions.layers &
          - & @TiffSaveOptions@ TiffSaveOptions.saveImagePyramid &
          - & @TiffSaveOptions@ TiffSaveOptions.spotColors &
          - & @TiffSaveOptions@ TiffSaveOptions.transparency &
- ToolType
          - & @ToolType@ ToolType.ARTHISTORYBRUSH &
          - & @ToolType@ ToolType.BACKGROUNDERASER &
          - & @ToolType@ ToolType.BLUR &
          - & @ToolType@ ToolType.BRUSH &
          - & @ToolType@ ToolType.BURN &
          - & @ToolType@ ToolType.CLONESTAMP &
          - & @ToolType@ ToolType.COLORREPLACEMENTTOOL &
          - & @ToolType@ ToolType.DODGE &
          - & @ToolType@ ToolType.ERASER &
          - & @ToolType@ ToolType.HEALINGBRUSH &
          - & @ToolType@ ToolType.HISTORYBRUSH &
          - & @ToolType@ ToolType.PATTERNSTAMP &
          - & @ToolType@ ToolType.PENCIL &
          - & @ToolType@ ToolType.SHARPEN &
          - & @ToolType@ ToolType.SMUDGE &
          - & @ToolType@ ToolType.SPONGE &
- TransitionType
          - & @TransitionType@ TransitionType.BLINDSHORIZONTAL &
          - & @TransitionType@ TransitionType.BLINDSVERTICAL &
          - & @TransitionType@ TransitionType.BOXIN &
          - & @TransitionType@ TransitionType.BOXOUT &
          - & @TransitionType@ TransitionType.DISSOLVE &
          - & @TransitionType@ TransitionType.GLITTERDOWN &
          - & @TransitionType@ TransitionType.GLITTERRIGHTDOWN &
          - & @TransitionType@ TransitionType.GLITTERRIGHT &
          - & @TransitionType@ TransitionType.NONE &
          - & @TransitionType@ TransitionType.RANDOM &
          - & @TransitionType@ TransitionType.SPLITHORIZONTALIN &
          - & @TransitionType@ TransitionType.SPLITHORIZONTALOUT &
          - & @TransitionType@ TransitionType.SPLITVERTICALIN &
          - & @TransitionType@ TransitionType.SPLITVERTICALOUT &
          - & @TransitionType@ TransitionType.WIPEDOWN &
          - & @TransitionType@ TransitionType.WIPELEFT &
          - & @TransitionType@ TransitionType.WIPERIGHT &
          - & @TransitionType@ TransitionType.WIPEUP &
- TrimType
          - & @TrimType@ TrimType.BOTTOMRIGHT &
          - & @TrimType@ TrimType.TOPLEFT &
          - & @TrimType@ TrimType.TRANSPARENT &
- TypeUnits
          - & @TypeUnits@ TypeUnits.MM &
          - & @TypeUnits@ TypeUnits.PIXELS &
          - & @TypeUnits@ TypeUnits.POINTS &
- UndefinedAreas
          - & @UndefinedAreas@ UndefinedAreas.REPEATEDGEPIXELS &
          - & @UndefinedAreas@ UndefinedAreas.WRAPAROUND &
- UnderlineType
          - & @UnderlineType@ UnderlineType.UNDERLINELEFT &
          - & @UnderlineType@ UnderlineType.UNDERLINEOFF &
          - & @UnderlineType@ UnderlineType.UNDERLINERIGHT &
- Units
          - & @Units@ Units.CM &
          - & @Units@ Units.INCHES &
          - & @Units@ Units.MM &
          - & @Units@ Units.PERCENT &
          - & @Units@ Units.PICAS &
          - & @Units@ Units.PIXELS &
          - & @Units@ Units.POINTS &
- Urgency
          - & @Urgency@ Urgency.FOUR &
          - & @Urgency@ Urgency.HIGH &
          - & @Urgency@ Urgency.LOW &
          - & @Urgency@ Urgency.NONE &
          - & @Urgency@ Urgency.NORMAL &
          - & @Urgency@ Urgency.SEVEN &
          - & @Urgency@ Urgency.SIX &
          - & @Urgency@ Urgency.THREE &
          - & @Urgency@ Urgency.TWO &
- WarpStyle
          - & @WarpStyle@ WarpStyle.ARCH &
          - & @WarpStyle@ WarpStyle.ARC &
          - & @WarpStyle@ WarpStyle.ARCLOWER &
          - & @WarpStyle@ WarpStyle.ARCUPPER &
          - & @WarpStyle@ WarpStyle.BULGE &
          - & @WarpStyle@ WarpStyle.FISHEYE &
          - & @WarpStyle@ WarpStyle.FISH &
          - & @WarpStyle@ WarpStyle.FLAG &
          - & @WarpStyle@ WarpStyle.INFLATE &
          - & @WarpStyle@ WarpStyle.NONE &
          - & @WarpStyle@ WarpStyle.RISE &
          - & @WarpStyle@ WarpStyle.SHELLLOWER &
          - & @WarpStyle@ WarpStyle.SHELLUPPER &
          - & @WarpStyle@ WarpStyle.SQUEEZE &
          - & @WarpStyle@ WarpStyle.TWIST &
          - & @WarpStyle@ WarpStyle.WAVE &
- WaveType
          - & @WaveType@ WaveType.SINE &
          - & @WaveType@ WaveType.SQUARE &
          - & @WaveType@ WaveType.TRIANGULAR &
- WhiteBalanceType
          - & @WhiteBalanceType@ WhiteBalanceType.ASSHOT &
          - & @WhiteBalanceType@ WhiteBalanceType.AUTO &
          - & @WhiteBalanceType@ WhiteBalanceType.CLOUDY &
          - & @WhiteBalanceType@ WhiteBalanceType.CUSTOM &
          - & @WhiteBalanceType@ WhiteBalanceType.DAYLIGHT &
          - & @WhiteBalanceType@ WhiteBalanceType.FLASH &
          - & @WhiteBalanceType@ WhiteBalanceType.FLUORESCENT &
          - & @WhiteBalanceType@ WhiteBalanceType.SHADE &
          - & @WhiteBalanceType@ WhiteBalanceType.TUNGSTEN &
- XMPMetadata
          - & @XMPMetadata@ XMPMetadata.parent &
          - & @XMPMetadata@ XMPMetadata.rawData &
          - & @XMPMetadata@ XMPMetadata.typename &
- ZigZagType
          - & @ZigZagType@ ZigZagType.AROUNDCENTER &
          - & @ZigZagType@ ZigZagType.OUTFROMCENTER &
          - & @ZigZagType@ ZigZagType.PONDRIPPLES &
- Bounds
          - & @Bounds@ Bounds.bottom &
          - & @Bounds@ Bounds.height &
          - & @Bounds@ Bounds.left &
          - & @Bounds@ Bounds.length &
          - & @Bounds@ Bounds.right &
          - & @Bounds@ Bounds.top &
          - & @Bounds@ Bounds.width &
          - & @Bounds@ Bounds.x &
          - & @Bounds@ Bounds.y &
- Button
          - & @Button@ Button.active &
          - & @Button@ Button.addEventListener &
          - & @Button@ Button.alignment &
          - & @Button@ Button.bounds &
          - & @Button@ Button.characters &
          - & @Button@ Button.children &
          - & @Button@ Button.dispatchEvent &
          - & @Button@ Button.enabled &
          - & @Button@ Button.graphics &
          - & @Button@ Button.helpTip &
          - & @Button@ Button.hide &
          - & @Button@ Button.indent &
          - & @Button@ Button.justify &
          - & @Button@ Button.location &
          - & @Button@ Button.maximumSize &
          - & @Button@ Button.minimumSize &
          - & @Button@ Button.notify &
          - & @Button@ Button.onActivate &
          - & @Button@ Button.onClick &
          - & @Button@ Button.onDeactivate &
          - & @Button@ Button.onDraw &
          - & @Button@ Button.onShortcutKey &
          - & @Button@ Button.parent &
          - & @Button@ Button.preferredSize &
          - & @Button@ Button.properties &
          - & @Button@ Button.removeEventListener &
          - & @Button@ Button.shortcutKey &
          - & @Button@ Button.show &
          - & @Button@ Button.size &
          - & @Button@ Button.text &
          - & @Button@ Button.type &
          - & @Button@ Button.visible &
          - & @Button@ Button.windowBounds &
          - & @Button@ Button.window &
- Checkbox
          - & @Checkbox@ Checkbox.active &
          - & @Checkbox@ Checkbox.addEventListener &
          - & @Checkbox@ Checkbox.alignment &
          - & @Checkbox@ Checkbox.bounds &
          - & @Checkbox@ Checkbox.characters &
          - & @Checkbox@ Checkbox.children &
          - & @Checkbox@ Checkbox.dispatchEvent &
          - & @Checkbox@ Checkbox.enabled &
          - & @Checkbox@ Checkbox.graphics &
          - & @Checkbox@ Checkbox.helpTip &
          - & @Checkbox@ Checkbox.hide &
          - & @Checkbox@ Checkbox.indent &
          - & @Checkbox@ Checkbox.justify &
          - & @Checkbox@ Checkbox.location &
          - & @Checkbox@ Checkbox.maximumSize &
          - & @Checkbox@ Checkbox.minimumSize &
          - & @Checkbox@ Checkbox.notify &
          - & @Checkbox@ Checkbox.onActivate &
          - & @Checkbox@ Checkbox.onClick &
          - & @Checkbox@ Checkbox.onDeactivate &
          - & @Checkbox@ Checkbox.onDraw &
          - & @Checkbox@ Checkbox.onShortcutKey &
          - & @Checkbox@ Checkbox.parent &
          - & @Checkbox@ Checkbox.preferredSize &
          - & @Checkbox@ Checkbox.properties &
          - & @Checkbox@ Checkbox.removeEventListener &
          - & @Checkbox@ Checkbox.shortcutKey &
          - & @Checkbox@ Checkbox.show &
          - & @Checkbox@ Checkbox.size &
          - & @Checkbox@ Checkbox.text &
          - & @Checkbox@ Checkbox.type &
          - & @Checkbox@ Checkbox.value &
          - & @Checkbox@ Checkbox.visible &
          - & @Checkbox@ Checkbox.windowBounds &
          - & @Checkbox@ Checkbox.window &
- Dimension
          - & @Dimension@ Dimension.height &
          - & @Dimension@ Dimension.length &
          - & @Dimension@ Dimension.width &
- DrawState
          - & @DrawState@ DrawState.altKeyPressed &
          - & @DrawState@ DrawState.capsLockKeyPressed &
          - & @DrawState@ DrawState.cmdKeyPressed &
          - & @DrawState@ DrawState.ctrlKeyPressed &
          - & @DrawState@ DrawState.hasFocus &
          - & @DrawState@ DrawState.leftButtonPressed &
          - & @DrawState@ DrawState.middleButtonPressed &
          - & @DrawState@ DrawState.mouseOver &
          - & @DrawState@ DrawState.numLockKeyPressed &
          - & @DrawState@ DrawState.optKeyPressed &
          - & @DrawState@ DrawState.rightButtonPressed &
          - & @DrawState@ DrawState.shiftKeyPressed &
- DropDownList
          - & @DropDownList@ DropDownList.active &
          - & @DropDownList@ DropDownList.addEventListener &
          - & @DropDownList@ DropDownList.add &
          - & @DropDownList@ DropDownList.alignment &
          - & @DropDownList@ DropDownList.bounds &
          - & @DropDownList@ DropDownList.children &
          - & @DropDownList@ DropDownList.dispatchEvent &
          - & @DropDownList@ DropDownList.enabled &
          - & @DropDownList@ DropDownList.find &
          - & @DropDownList@ DropDownList.graphics &
          - & @DropDownList@ DropDownList.helpTip &
          - & @DropDownList@ DropDownList.hide &
          - & @DropDownList@ DropDownList.indent &
          - & @DropDownList@ DropDownList.items &
          - & @DropDownList@ DropDownList.itemSize &
          - & @DropDownList@ DropDownList.location &
          - & @DropDownList@ DropDownList.maximumSize &
          - & @DropDownList@ DropDownList.minimumSize &
          - & @DropDownList@ DropDownList.notify &
          - & @DropDownList@ DropDownList.onActivate &
          - & @DropDownList@ DropDownList.onChange &
          - & @DropDownList@ DropDownList.onDeactivate &
          - & @DropDownList@ DropDownList.onDraw &
          - & @DropDownList@ DropDownList.onShortcutKey &
          - & @DropDownList@ DropDownList.parent &
          - & @DropDownList@ DropDownList.preferredSize &
          - & @DropDownList@ DropDownList.properties &
          - & @DropDownList@ DropDownList.removeAll &
          - & @DropDownList@ DropDownList.removeEventListener &
          - & @DropDownList@ DropDownList.remove &
          - & @DropDownList@ DropDownList.selection &
          - & @DropDownList@ DropDownList.shortcutKey &
          - & @DropDownList@ DropDownList.show &
          - & @DropDownList@ DropDownList.size &
          - & @DropDownList@ DropDownList.type &
          - & @DropDownList@ DropDownList.visible &
          - & @DropDownList@ DropDownList.windowBounds &
          - & @DropDownList@ DropDownList.window &
- EditText
          - & @EditText@ EditText.active &
          - & @EditText@ EditText.addEventListener &
          - & @EditText@ EditText.alignment &
          - & @EditText@ EditText.bounds &
          - & @EditText@ EditText.characters &
          - & @EditText@ EditText.children &
          - & @EditText@ EditText.dispatchEvent &
          - & @EditText@ EditText.enabled &
          - & @EditText@ EditText.graphics &
          - & @EditText@ EditText.helpTip &
          - & @EditText@ EditText.hide &
          - & @EditText@ EditText.indent &
          - & @EditText@ EditText.justify &
          - & @EditText@ EditText.location &
          - & @EditText@ EditText.maximumSize &
          - & @EditText@ EditText.minimumSize &
          - & @EditText@ EditText.notify &
          - & @EditText@ EditText.onActivate &
          - & @EditText@ EditText.onChange &
          - & @EditText@ EditText.onChanging &
          - & @EditText@ EditText.onDeactivate &
          - & @EditText@ EditText.onDraw &
          - & @EditText@ EditText.onShortcutKey &
          - & @EditText@ EditText.parent &
          - & @EditText@ EditText.preferredSize &
          - & @EditText@ EditText.properties &
          - & @EditText@ EditText.removeEventListener &
          - & @EditText@ EditText.shortcutKey &
          - & @EditText@ EditText.show &
          - & @EditText@ EditText.size &
          - & @EditText@ EditText.text &
          - & @EditText@ EditText.textselection &
          - & @EditText@ EditText.type &
          - & @EditText@ EditText.visible &
          - & @EditText@ EditText.windowBounds &
          - & @EditText@ EditText.window &
- Environment
          - & @Environment@ Environment.keyboardState &
- Event
          - & @Event@ Event.AT_TARGET &
          - & @Event@ Event.bubbles &
          - & @Event@ Event.BUBBLING_PHASE &
          - & @Event@ Event.cancelable &
          - & @Event@ Event.captures &
          - & @Event@ Event.CAPTURING_PHASE &
          - & @Event@ Event.currentTarget &
          - & @Event@ Event.eventPhase &
          - & @Event@ Event.NOT_DISPATCHING &
          - & @Event@ Event.preventDefault &
- Events
          - & @Events@ Events.createEvent &
- Event
          - & @Event@ Event.stopPropagation &
          - & @Event@ Event.target &
          - & @Event@ Event.timeStamp &
          - & @Event@ Event.type &
- FlashPlayer
          - & @FlashPlayer@ FlashPlayer.active &
          - & @FlashPlayer@ FlashPlayer.addEventListener &
          - & @FlashPlayer@ FlashPlayer.alignment &
          - & @FlashPlayer@ FlashPlayer.bounds &
          - & @FlashPlayer@ FlashPlayer.callback &
          - & @FlashPlayer@ FlashPlayer.dispatchEvent &
          - & @FlashPlayer@ FlashPlayer.enabled &
          - & @FlashPlayer@ FlashPlayer.helpTip &
          - & @FlashPlayer@ FlashPlayer.hide &
          - & @FlashPlayer@ FlashPlayer.indent &
          - & @FlashPlayer@ FlashPlayer.invokePlayerFunction &
          - & @FlashPlayer@ FlashPlayer.loadMovie &
          - & @FlashPlayer@ FlashPlayer.location &
          - & @FlashPlayer@ FlashPlayer.maximumSize &
          - & @FlashPlayer@ FlashPlayer.minimumSize &
          - & @FlashPlayer@ FlashPlayer.notify &
          - & @FlashPlayer@ FlashPlayer.parent &
          - & @FlashPlayer@ FlashPlayer.playMovie &
          - & @FlashPlayer@ FlashPlayer.preferredSize &
          - & @FlashPlayer@ FlashPlayer.properties &
          - & @FlashPlayer@ FlashPlayer.removeEventListener &
          - & @FlashPlayer@ FlashPlayer.show &
          - & @FlashPlayer@ FlashPlayer.size &
          - & @FlashPlayer@ FlashPlayer.stopMovie &
          - & @FlashPlayer@ FlashPlayer.type &
          - & @FlashPlayer@ FlashPlayer.visible &
          - & @FlashPlayer@ FlashPlayer.windowBounds &
          - & @FlashPlayer@ FlashPlayer.window &
- Group
          - & @Group@ Group.addEventListener &
          - & @Group@ Group.add &
          - & @Group@ Group.alignChildren &
          - & @Group@ Group.alignment &
          - & @Group@ Group.bounds &
          - & @Group@ Group.children &
          - & @Group@ Group.dispatchEvent &
          - & @Group@ Group.enabled &
          - & @Group@ Group.graphics &
          - & @Group@ Group.helpTip &
          - & @Group@ Group.hide &
          - & @Group@ Group.indent &
          - & @Group@ Group.layout &
          - & @Group@ Group.location &
          - & @Group@ Group.margins &
          - & @Group@ Group.maximumSize &
          - & @Group@ Group.minimumSize &
          - & @Group@ Group.onDraw &
          - & @Group@ Group.orientation &
          - & @Group@ Group.parent &
          - & @Group@ Group.preferredSize &
          - & @Group@ Group.properties &
          - & @Group@ Group.removeEventListener &
          - & @Group@ Group.remove &
          - & @Group@ Group.show &
          - & @Group@ Group.size &
          - & @Group@ Group.spacing &
          - & @Group@ Group.type &
          - & @Group@ Group.visible &
          - & @Group@ Group.windowBounds &
          - & @Group@ Group.window &
- IconButton
          - & @IconButton@ IconButton.active &
          - & @IconButton@ IconButton.addEventListener &
          - & @IconButton@ IconButton.alignment &
          - & @IconButton@ IconButton.bounds &
          - & @IconButton@ IconButton.children &
          - & @IconButton@ IconButton.dispatchEvent &
          - & @IconButton@ IconButton.enabled &
          - & @IconButton@ IconButton.graphics &
          - & @IconButton@ IconButton.helpTip &
          - & @IconButton@ IconButton.hide &
          - & @IconButton@ IconButton.image &
          - & @IconButton@ IconButton.indent &
          - & @IconButton@ IconButton.location &
          - & @IconButton@ IconButton.maximumSize &
          - & @IconButton@ IconButton.minimumSize &
          - & @IconButton@ IconButton.notify &
          - & @IconButton@ IconButton.onActivate &
          - & @IconButton@ IconButton.onClick &
          - & @IconButton@ IconButton.onDeactivate &
          - & @IconButton@ IconButton.onDraw &
          - & @IconButton@ IconButton.onShortcutKey &
          - & @IconButton@ IconButton.parent &
          - & @IconButton@ IconButton.preferredSize &
          - & @IconButton@ IconButton.properties &
          - & @IconButton@ IconButton.removeEventListener &
          - & @IconButton@ IconButton.shortcutKey &
          - & @IconButton@ IconButton.show &
          - & @IconButton@ IconButton.size &
          - & @IconButton@ IconButton.type &
          - & @IconButton@ IconButton.visible &
          - & @IconButton@ IconButton.windowBounds &
          - & @IconButton@ IconButton.window &
- KeyboardState
          - & @KeyboardState@ KeyboardState.altKey &
          - & @KeyboardState@ KeyboardState.ctrlKey &
          - & @KeyboardState@ KeyboardState.keyName &
          - & @KeyboardState@ KeyboardState.metaKey &
          - & @KeyboardState@ KeyboardState.shiftKey &
- LayoutManager
          - & @LayoutManager@ LayoutManager.layout &
          - & @LayoutManager@ LayoutManager.resize &
- ListBox
          - & @ListBox@ ListBox.active &
          - & @ListBox@ ListBox.addEventListener &
          - & @ListBox@ ListBox.add &
          - & @ListBox@ ListBox.alignment &
          - & @ListBox@ ListBox.bounds &
          - & @ListBox@ ListBox.children &
          - & @ListBox@ ListBox.columns &
          - & @ListBox@ ListBox.dispatchEvent &
          - & @ListBox@ ListBox.enabled &
          - & @ListBox@ ListBox.find &
          - & @ListBox@ ListBox.graphics &
          - & @ListBox@ ListBox.helpTip &
          - & @ListBox@ ListBox.hide &
          - & @ListBox@ ListBox.indent &
          - & @ListBox@ ListBox.items &
          - & @ListBox@ ListBox.itemSize &
          - & @ListBox@ ListBox.location &
          - & @ListBox@ ListBox.maximumSize &
          - & @ListBox@ ListBox.minimumSize &
          - & @ListBox@ ListBox.notify &
          - & @ListBox@ ListBox.onActivate &
          - & @ListBox@ ListBox.onChange &
          - & @ListBox@ ListBox.onDeactivate &
          - & @ListBox@ ListBox.onDoubleClick &
          - & @ListBox@ ListBox.onDraw &
          - & @ListBox@ ListBox.onShortcutKey &
          - & @ListBox@ ListBox.parent &
          - & @ListBox@ ListBox.preferredSize &
          - & @ListBox@ ListBox.properties &
          - & @ListBox@ ListBox.removeAll &
          - & @ListBox@ ListBox.removeEventListener &
          - & @ListBox@ ListBox.remove &
          - & @ListBox@ ListBox.selection &
          - & @ListBox@ ListBox.shortcutKey &
          - & @ListBox@ ListBox.show &
          - & @ListBox@ ListBox.size &
          - & @ListBox@ ListBox.type &
          - & @ListBox@ ListBox.visible &
          - & @ListBox@ ListBox.windowBounds &
          - & @ListBox@ ListBox.window &
- ListItem
          - & @ListItem@ ListItem.checked &
          - & @ListItem@ ListItem.expanded &
          - & @ListItem@ ListItem.image &
          - & @ListItem@ ListItem.index &
          - & @ListItem@ ListItem.parent &
          - & @ListItem@ ListItem.properties &
          - & @ListItem@ ListItem.selected &
          - & @ListItem@ ListItem.subItems &
          - & @ListItem@ ListItem.text &
          - & @ListItem@ ListItem.type &
- Panel
          - & @Panel@ Panel.addEventListener &
          - & @Panel@ Panel.add &
          - & @Panel@ Panel.alignChildren &
          - & @Panel@ Panel.alignment &
          - & @Panel@ Panel.bounds &
          - & @Panel@ Panel.characters &
          - & @Panel@ Panel.children &
          - & @Panel@ Panel.dispatchEvent &
          - & @Panel@ Panel.enabled &
          - & @Panel@ Panel.graphics &
          - & @Panel@ Panel.helpTip &
          - & @Panel@ Panel.hide &
          - & @Panel@ Panel.indent &
          - & @Panel@ Panel.justify &
          - & @Panel@ Panel.layout &
          - & @Panel@ Panel.location &
          - & @Panel@ Panel.margins &
          - & @Panel@ Panel.maximumSize &
          - & @Panel@ Panel.minimumSize &
          - & @Panel@ Panel.onDraw &
          - & @Panel@ Panel.orientation &
          - & @Panel@ Panel.parent &
          - & @Panel@ Panel.preferredSize &
          - & @Panel@ Panel.properties &
          - & @Panel@ Panel.removeEventListener &
          - & @Panel@ Panel.remove &
          - & @Panel@ Panel.show &
          - & @Panel@ Panel.size &
          - & @Panel@ Panel.spacing &
          - & @Panel@ Panel.text &
          - & @Panel@ Panel.type &
          - & @Panel@ Panel.visible &
          - & @Panel@ Panel.windowBounds &
          - & @Panel@ Panel.window &
- Point
          - & @Point@ Point.left &
          - & @Point@ Point.length &
          - & @Point@ Point.top &
          - & @Point@ Point.x &
          - & @Point@ Point.y &
- Progressbar
          - & @Progressbar@ Progressbar.addEventListener &
          - & @Progressbar@ Progressbar.alignment &
          - & @Progressbar@ Progressbar.bounds &
          - & @Progressbar@ Progressbar.children &
          - & @Progressbar@ Progressbar.dispatchEvent &
          - & @Progressbar@ Progressbar.enabled &
          - & @Progressbar@ Progressbar.graphics &
          - & @Progressbar@ Progressbar.helpTip &
          - & @Progressbar@ Progressbar.hide &
          - & @Progressbar@ Progressbar.indent &
          - & @Progressbar@ Progressbar.location &
          - & @Progressbar@ Progressbar.maximumSize &
          - & @Progressbar@ Progressbar.maxvalue &
          - & @Progressbar@ Progressbar.minimumSize &
          - & @Progressbar@ Progressbar.minvalue &
          - & @Progressbar@ Progressbar.onDraw &
          - & @Progressbar@ Progressbar.parent &
          - & @Progressbar@ Progressbar.preferredSize &
          - & @Progressbar@ Progressbar.properties &
          - & @Progressbar@ Progressbar.removeEventListener &
          - & @Progressbar@ Progressbar.show &
          - & @Progressbar@ Progressbar.size &
          - & @Progressbar@ Progressbar.type &
          - & @Progressbar@ Progressbar.value &
          - & @Progressbar@ Progressbar.visible &
          - & @Progressbar@ Progressbar.windowBounds &
          - & @Progressbar@ Progressbar.window &
- RadioButton
          - & @RadioButton@ RadioButton.active &
          - & @RadioButton@ RadioButton.addEventListener &
          - & @RadioButton@ RadioButton.alignment &
          - & @RadioButton@ RadioButton.bounds &
          - & @RadioButton@ RadioButton.characters &
          - & @RadioButton@ RadioButton.children &
          - & @RadioButton@ RadioButton.dispatchEvent &
          - & @RadioButton@ RadioButton.enabled &
          - & @RadioButton@ RadioButton.graphics &
          - & @RadioButton@ RadioButton.helpTip &
          - & @RadioButton@ RadioButton.hide &
          - & @RadioButton@ RadioButton.indent &
          - & @RadioButton@ RadioButton.justify &
          - & @RadioButton@ RadioButton.location &
          - & @RadioButton@ RadioButton.maximumSize &
          - & @RadioButton@ RadioButton.minimumSize &
          - & @RadioButton@ RadioButton.notify &
          - & @RadioButton@ RadioButton.onActivate &
          - & @RadioButton@ RadioButton.onClick &
          - & @RadioButton@ RadioButton.onDeactivate &
          - & @RadioButton@ RadioButton.onDraw &
          - & @RadioButton@ RadioButton.onShortcutKey &
          - & @RadioButton@ RadioButton.parent &
          - & @RadioButton@ RadioButton.preferredSize &
          - & @RadioButton@ RadioButton.properties &
          - & @RadioButton@ RadioButton.removeEventListener &
          - & @RadioButton@ RadioButton.shortcutKey &
          - & @RadioButton@ RadioButton.show &
          - & @RadioButton@ RadioButton.size &
          - & @RadioButton@ RadioButton.text &
          - & @RadioButton@ RadioButton.type &
          - & @RadioButton@ RadioButton.value &
          - & @RadioButton@ RadioButton.visible &
          - & @RadioButton@ RadioButton.windowBounds &
          - & @RadioButton@ RadioButton.window &
- ScriptUI
          - & @ScriptUI@ ScriptUI.Alignment &
          - & @ScriptUI@ ScriptUI.applicationFonts &
- ScriptUIBrush
          - & @ScriptUIBrush@ ScriptUIBrush.color &
          - & @ScriptUIBrush@ ScriptUIBrush.theme &
          - & @ScriptUIBrush@ ScriptUIBrush.type &
- ScriptUI
          - & @ScriptUI@ ScriptUI.compatibility &
          - & @ScriptUI@ ScriptUI.coreVersion &
          - & @ScriptUI@ ScriptUI.environment &
          - & @ScriptUI@ ScriptUI.events &
- ScriptUIFont
          - & @ScriptUIFont@ ScriptUIFont.family &
          - & @ScriptUIFont@ ScriptUIFont.name &
          - & @ScriptUIFont@ ScriptUIFont.size &
          - & @ScriptUIFont@ ScriptUIFont.style &
- ScriptUI
          - & @ScriptUI@ ScriptUI.FontStyle &
- ScriptUIFont
          - & @ScriptUIFont@ ScriptUIFont.substitute &
- ScriptUI
          - & @ScriptUI@ ScriptUI.frameworkName &
          - & @ScriptUI@ ScriptUI.getResourceText &
- ScriptUIGraphics
          - & @ScriptUIGraphics@ ScriptUIGraphics.backgroundColor &
          - & @ScriptUIGraphics@ ScriptUIGraphics.BrushType &
          - & @ScriptUIGraphics@ ScriptUIGraphics.closePath &
          - & @ScriptUIGraphics@ ScriptUIGraphics.currentPath &
          - & @ScriptUIGraphics@ ScriptUIGraphics.currentPoint &
          - & @ScriptUIGraphics@ ScriptUIGraphics.disabledBackgroundColor &
          - & @ScriptUIGraphics@ ScriptUIGraphics.disabledForegroundColor &
          - & @ScriptUIGraphics@ ScriptUIGraphics.drawFocusRing &
          - & @ScriptUIGraphics@ ScriptUIGraphics.drawImage &
          - & @ScriptUIGraphics@ ScriptUIGraphics.drawOSControl &
          - & @ScriptUIGraphics@ ScriptUIGraphics.drawString &
          - & @ScriptUIGraphics@ ScriptUIGraphics.ellipsePath &
          - & @ScriptUIGraphics@ ScriptUIGraphics.fillPath &
          - & @ScriptUIGraphics@ ScriptUIGraphics.font &
          - & @ScriptUIGraphics@ ScriptUIGraphics.foregroundColor &
          - & @ScriptUIGraphics@ ScriptUIGraphics.lineTo &
          - & @ScriptUIGraphics@ ScriptUIGraphics.measureString &
          - & @ScriptUIGraphics@ ScriptUIGraphics.moveTo &
          - & @ScriptUIGraphics@ ScriptUIGraphics.newBrush &
          - & @ScriptUIGraphics@ ScriptUIGraphics.newPath &
          - & @ScriptUIGraphics@ ScriptUIGraphics.newPen &
          - & @ScriptUIGraphics@ ScriptUIGraphics.PenType &
          - & @ScriptUIGraphics@ ScriptUIGraphics.rectPath &
          - & @ScriptUIGraphics@ ScriptUIGraphics.strokePath &
- ScriptUIImage
          - & @ScriptUIImage@ ScriptUIImage.format &
          - & @ScriptUIImage@ ScriptUIImage.name &
          - & @ScriptUIImage@ ScriptUIImage.pathname &
          - & @ScriptUIImage@ ScriptUIImage.size &
- ScriptUI
          - & @ScriptUI@ ScriptUI.newFont &
          - & @ScriptUI@ ScriptUI.newImage &
- ScriptUIPen
          - & @ScriptUIPen@ ScriptUIPen.color &
          - & @ScriptUIPen@ ScriptUIPen.lineWidth &
          - & @ScriptUIPen@ ScriptUIPen.theme &
          - & @ScriptUIPen@ ScriptUIPen.type &
- ScriptUI
          - & @ScriptUI@ ScriptUI.version &
- Scrollbar
          - & @Scrollbar@ Scrollbar.active &
          - & @Scrollbar@ Scrollbar.addEventListener &
          - & @Scrollbar@ Scrollbar.alignment &
          - & @Scrollbar@ Scrollbar.bounds &
          - & @Scrollbar@ Scrollbar.children &
          - & @Scrollbar@ Scrollbar.dispatchEvent &
          - & @Scrollbar@ Scrollbar.enabled &
          - & @Scrollbar@ Scrollbar.graphics &
          - & @Scrollbar@ Scrollbar.helpTip &
          - & @Scrollbar@ Scrollbar.hide &
          - & @Scrollbar@ Scrollbar.indent &
          - & @Scrollbar@ Scrollbar.jumpdelta &
          - & @Scrollbar@ Scrollbar.location &
          - & @Scrollbar@ Scrollbar.maximumSize &
          - & @Scrollbar@ Scrollbar.maxvalue &
          - & @Scrollbar@ Scrollbar.minimumSize &
          - & @Scrollbar@ Scrollbar.minvalue &
          - & @Scrollbar@ Scrollbar.notify &
          - & @Scrollbar@ Scrollbar.onActivate &
          - & @Scrollbar@ Scrollbar.onChange &
          - & @Scrollbar@ Scrollbar.onChanging &
          - & @Scrollbar@ Scrollbar.onDeactivate &
          - & @Scrollbar@ Scrollbar.onDraw &
          - & @Scrollbar@ Scrollbar.onShortcutKey &
          - & @Scrollbar@ Scrollbar.parent &
          - & @Scrollbar@ Scrollbar.preferredSize &
          - & @Scrollbar@ Scrollbar.properties &
          - & @Scrollbar@ Scrollbar.removeEventListener &
          - & @Scrollbar@ Scrollbar.shortcutKey &
          - & @Scrollbar@ Scrollbar.show &
          - & @Scrollbar@ Scrollbar.size &
          - & @Scrollbar@ Scrollbar.stepdelta &
          - & @Scrollbar@ Scrollbar.type &
          - & @Scrollbar@ Scrollbar.value &
          - & @Scrollbar@ Scrollbar.visible &
          - & @Scrollbar@ Scrollbar.windowBounds &
          - & @Scrollbar@ Scrollbar.window &
- Slider
          - & @Slider@ Slider.active &
          - & @Slider@ Slider.addEventListener &
          - & @Slider@ Slider.alignment &
          - & @Slider@ Slider.bounds &
          - & @Slider@ Slider.children &
          - & @Slider@ Slider.dispatchEvent &
          - & @Slider@ Slider.enabled &
          - & @Slider@ Slider.graphics &
          - & @Slider@ Slider.helpTip &
          - & @Slider@ Slider.hide &
          - & @Slider@ Slider.indent &
          - & @Slider@ Slider.location &
          - & @Slider@ Slider.maximumSize &
          - & @Slider@ Slider.maxvalue &
          - & @Slider@ Slider.minimumSize &
          - & @Slider@ Slider.minvalue &
          - & @Slider@ Slider.notify &
          - & @Slider@ Slider.onActivate &
          - & @Slider@ Slider.onChange &
          - & @Slider@ Slider.onChanging &
          - & @Slider@ Slider.onDeactivate &
          - & @Slider@ Slider.onDraw &
          - & @Slider@ Slider.onShortcutKey &
          - & @Slider@ Slider.parent &
          - & @Slider@ Slider.preferredSize &
          - & @Slider@ Slider.properties &
          - & @Slider@ Slider.removeEventListener &
          - & @Slider@ Slider.shortcutKey &
          - & @Slider@ Slider.show &
          - & @Slider@ Slider.size &
          - & @Slider@ Slider.type &
          - & @Slider@ Slider.value &
          - & @Slider@ Slider.visible &
          - & @Slider@ Slider.windowBounds &
          - & @Slider@ Slider.window &
- StaticText
          - & @StaticText@ StaticText.active &
          - & @StaticText@ StaticText.addEventListener &
          - & @StaticText@ StaticText.alignment &
          - & @StaticText@ StaticText.bounds &
          - & @StaticText@ StaticText.characters &
          - & @StaticText@ StaticText.children &
          - & @StaticText@ StaticText.dispatchEvent &
          - & @StaticText@ StaticText.enabled &
          - & @StaticText@ StaticText.graphics &
          - & @StaticText@ StaticText.helpTip &
          - & @StaticText@ StaticText.hide &
          - & @StaticText@ StaticText.indent &
          - & @StaticText@ StaticText.justify &
          - & @StaticText@ StaticText.location &
          - & @StaticText@ StaticText.maximumSize &
          - & @StaticText@ StaticText.minimumSize &
          - & @StaticText@ StaticText.notify &
          - & @StaticText@ StaticText.onDraw &
          - & @StaticText@ StaticText.onShortcutKey &
          - & @StaticText@ StaticText.parent &
          - & @StaticText@ StaticText.preferredSize &
          - & @StaticText@ StaticText.properties &
          - & @StaticText@ StaticText.removeEventListener &
          - & @StaticText@ StaticText.shortcutKey &
          - & @StaticText@ StaticText.show &
          - & @StaticText@ StaticText.size &
          - & @StaticText@ StaticText.text &
          - & @StaticText@ StaticText.type &
          - & @StaticText@ StaticText.visible &
          - & @StaticText@ StaticText.windowBounds &
          - & @StaticText@ StaticText.window &
- TreeView
          - & @TreeView@ TreeView.active &
          - & @TreeView@ TreeView.addEventListener &
          - & @TreeView@ TreeView.add &
          - & @TreeView@ TreeView.alignment &
          - & @TreeView@ TreeView.bounds &
          - & @TreeView@ TreeView.children &
          - & @TreeView@ TreeView.dispatchEvent &
          - & @TreeView@ TreeView.enabled &
          - & @TreeView@ TreeView.find &
          - & @TreeView@ TreeView.graphics &
          - & @TreeView@ TreeView.helpTip &
          - & @TreeView@ TreeView.hide &
          - & @TreeView@ TreeView.indent &
          - & @TreeView@ TreeView.items &
          - & @TreeView@ TreeView.itemSize &
          - & @TreeView@ TreeView.location &
          - & @TreeView@ TreeView.maximumSize &
          - & @TreeView@ TreeView.minimumSize &
          - & @TreeView@ TreeView.notify &
          - & @TreeView@ TreeView.onActivate &
          - & @TreeView@ TreeView.onChange &
          - & @TreeView@ TreeView.onCollapse &
          - & @TreeView@ TreeView.onDeactivate &
          - & @TreeView@ TreeView.onDraw &
          - & @TreeView@ TreeView.onExpand &
          - & @TreeView@ TreeView.onShortcutKey &
          - & @TreeView@ TreeView.parent &
          - & @TreeView@ TreeView.preferredSize &
          - & @TreeView@ TreeView.properties &
          - & @TreeView@ TreeView.removeAll &
          - & @TreeView@ TreeView.removeEventListener &
          - & @TreeView@ TreeView.remove &
          - & @TreeView@ TreeView.selection &
          - & @TreeView@ TreeView.shortcutKey &
          - & @TreeView@ TreeView.show &
          - & @TreeView@ TreeView.size &
          - & @TreeView@ TreeView.type &
          - & @TreeView@ TreeView.visible &
          - & @TreeView@ TreeView.windowBounds &
          - & @TreeView@ TreeView.window &
- UIEvent
          - & @UIEvent@ UIEvent.bubbles &
          - & @UIEvent@ UIEvent.cancelable &
          - & @UIEvent@ UIEvent.captures &
          - & @UIEvent@ UIEvent.currentTarget &
          - & @UIEvent@ UIEvent.detail &
          - & @UIEvent@ UIEvent.eventPhase &
          - & @UIEvent@ UIEvent.initEvent &
          - & @UIEvent@ UIEvent.initUIEvent &
          - & @UIEvent@ UIEvent.preventDefault &
          - & @UIEvent@ UIEvent.stopPropagation &
          - & @UIEvent@ UIEvent.target &
          - & @UIEvent@ UIEvent.timeStamp &
          - & @UIEvent@ UIEvent.type &
          - & @UIEvent@ UIEvent.UIEvent &
          - & @UIEvent@ UIEvent.view &
- Window
          - & @Window@ Window.active &
          - & @Window@ Window.addEventListener &
          - & @Window@ Window.add &
          - & @Window@ Window.alert &
          - & @Window@ Window.alignChildren &
          - & @Window@ Window.alignment &
          - & @Window@ Window.bounds &
          - & @Window@ Window.cancelElement &
          - & @Window@ Window.center &
          - & @Window@ Window.characters &
          - & @Window@ Window.children &
          - & @Window@ Window.close &
          - & @Window@ Window.confirm &
          - & @Window@ Window.defaultElement &
          - & @Window@ Window.dispatchEvent &
          - & @Window@ Window.enabled &
          - & @Window@ Window.find &
          - & @Window@ Window.frameBounds &
          - & @Window@ Window.frameLocation &
          - & @Window@ Window.frameSize &
          - & @Window@ Window.frameworkName &
          - & @Window@ Window.graphics &
          - & @Window@ Window.helpTip &
          - & @Window@ Window.hide &
          - & @Window@ Window.indent &
          - & @Window@ Window.justify &
          - & @Window@ Window.layout &
          - & @Window@ Window.location &
          - & @Window@ Window.margins &
          - & @Window@ Window.maximized &
          - & @Window@ Window.maximumSize &
          - & @Window@ Window.minimized &
          - & @Window@ Window.minimumSize &
          - & @Window@ Window.notify &
          - & @Window@ Window.onActivate &
          - & @Window@ Window.onClose &
          - & @Window@ Window.onDeactivate &
          - & @Window@ Window.onMove &
          - & @Window@ Window.onMoving &
          - & @Window@ Window.onResize &
          - & @Window@ Window.onResizing &
          - & @Window@ Window.onShortcutKey &
          - & @Window@ Window.onShow &
          - & @Window@ Window.opacity &
          - & @Window@ Window.orientation &
          - & @Window@ Window.parent &
          - & @Window@ Window.preferredSize &
          - & @Window@ Window.prompt &
          - & @Window@ Window.properties &
          - & @Window@ Window.removeEventListener &
          - & @Window@ Window.remove &
          - & @Window@ Window.shortcutKey &
          - & @Window@ Window.show &
          - & @Window@ Window.size &
          - & @Window@ Window.spacing &
          - & @Window@ Window.text &
          - & @Window@ Window.type &
          - & @Window@ Window.version &
          - & @Window@ Window.visible &
          - & @Window@ Window.windowBounds &
          - & @Window@ Window.Window &
# downloaded Extension SDK Documentation (CEP) #
Extension SDK Documentation (CEP) #

Note

This document was copied from the official Adobe-CEP github project and
all credit is due there for providing in depth documentation into CEP. I
copied it simply to keep everything related to Photoshop in one place.

-   CSInterface
-   Event Codes

Overview #

This cookbook is a guide to creating CEP 8.0 HTML/JavaScript Extensions
for Creative Cloud applications. CSXS is the old name before CS6, and
CEP (Common Extensibility Platform) is the new name from CS6. When we
talk about CEP or CSXS, they refer to the same project.

CEP Extensions #

CEP (formerly CSXS) Extensions extend the functionality of the Adobe
point products in which they run. Extensions are loaded into
applications through the PlugPlug Library architecture. Starting from
CEP 4.0, HTML/CSS and JavaScript (ECMAScript 5) can be used to develop
extensions.

-   Boilerplate Extension

Extension Types #

These extension types are supported by CEP. You need to specify an
extension’s type in its manifest.xml.

-   Panel
    -   The Panel type behaves like any other application panel. It can
        be docked, participates in workspaces, has fly-out menus, and is
        re-opened at start-up if open at shutdown.
-   ModalDialog
    -   A Modal Dialog type opens a new extension window and forces the
        user to interact only with the extenison window before returning
        control to the host application. User can interact with host
        application only after closing extension window.
-   Modeless
    -   A Modeless Dialog type opens a new extension window but doesn’t
        force the user to interact with the extension window.
-   Custom (Since CEP 5.0)
    -   This type is for invisible extensions. An invisible extension
        remains hidden and never becomes visible during its whole life
        cycle. Read “Invisible HTML Extensions” for more details.

Applications Integrated with CEP #

These applications support CEP HTML extensions.

+-------+-------+-------+-------+-------+-------+-------+---------+
| Appli | Host  | CC    | CC    | CC    | CC    | CC    | CC 2018 |
| catio | ID    | Versi | 2014  | 2015  | 2015  | 2017  | Versio  |
| n     |       | on    | Versi | Versi | Dot   | Versi | n       |
|       |       |       | on    | on    | Versi | on    |         |
|       |       |       |       |       | on    |       |         |
+=======+=======+=======+=======+=======+=======+=======+=========+
| Photo | PHSP/ | 14    | 15    | 16    | 17.0. | 18    | 19 (CEP |
| shop  | PHXS  | (CEP  | (CEP  | (CEP  | 2     | (CEP  | 8)      |
|       |       | 4)    | 5)    | 6)    | (CEP  | 7)    |         |
|       |       |       |       |       | 7)    |       |         |
+-------+-------+-------+-------+-------+-------+-------+---------+
| InDes | IDSN  | 9     | 10    | 11    | -     | 12    | 13 (CEP |
| ign   |       | (CEP  | (CEP  | (CEP  |       | (CEP  | 8)      |
|       |       | 4)    | 5)    | 6)    |       | 7)    |         |
+-------+-------+-------+-------+-------+-------+-------+---------+
| InCop | AICY  | 9     | 10    | 11    | -     | 12    | 13 (CEP |
| y     |       | (CEP  | (CEP  | (CEP  |       | (CEP  | 8)      |
|       |       | 4)    | 5)    | 6)    |       | 7)    |         |
+-------+-------+-------+-------+-------+-------+-------+---------+
| Illus | ILST  | 17    | 18    | 19    | 20    | 21    | 22 (CEP |
| trato |       | (CEP  | (CEP  | (CEP  | (CEP  | (CEP  | 8)      |
| r     |       | 4)    | 5)    | 6)    | 7)    | 7)    |         |
+-------+-------+-------+-------+-------+-------+-------+---------+
| Premi | PPRO  | 7     | 8     | 9     | 10.3  | 11    | 12 (CEP |
| ere   |       | (CEP  |       |       | (CEP  | (CEP  | 8)      |
| Pro   |       | 4)    |       |       | 6)    | 6)    |         |
+-------+-------+-------+-------+-------+-------+-------+---------+
| Prelu | PRLD  | 2     | 3     | 4     | 5.0.1 | 6     | 7 (CEP  |
| de    |       | (CEP  |       |       | (CEP  | (CEP  | 8)      |
|       |       | 4)    |       |       | 6)    | 7)    |         |
+-------+-------+-------+-------+-------+-------+-------+---------+
| After | AEFT  | 12    | 13    | 13.5  | 13.8. | 14    | 15 (CEP |
| Effec |       |       |       |       | 1     | (CEP  | 8)      |
| ts    |       |       |       |       | (CEP  | 6)    |         |
|       |       |       |       |       | 6)    |       |         |
+-------+-------+-------+-------+-------+-------+-------+---------+
| Anima | FLPR  | 13    | 14    | 15    | 15.2  | 16    | 18 (CEP |
| te    |       |       | (CEP  | (CEP  | (CEP  | (CEP  | 8)      |
| (Flas |       |       | 5)    | 6)    | 6.1)  | 6.1)  |         |
| h     |       |       |       |       |       |       |         |
| Pro)  |       |       |       |       |       |       |         |
+-------+-------+-------+-------+-------+-------+-------+---------+
| Audit | AUDT  | 6     | 7     | 8     | 9.2.1 | 10    | 11      |
| ion   |       |       |       |       | (CEP  | (CEP  |         |
|       |       |       |       |       | 6)    | 6)    |         |
+-------+-------+-------+-------+-------+-------+-------+---------+
| Dream | DRWV  | 13    | 15    | 16    | -     | 17    | 18 (CEP |
| weave |       | (CEP  | (CEP  | (CEP  |       | (CEP  | 8)      |
| r     |       | 4)    | 5)    | 6)    |       | 6.1)  |         |
+-------+-------+-------+-------+-------+-------+-------+---------+
| Muse  | MUSE  | 7.4   | -     | 2015  | -     | 2017  | 2018    |
+-------+-------+-------+-------+-------+-------+-------+---------+
| Bridg | KBRG  | 6     | -     | 6.3.1 | -     | -     | 8 (CEP  |
| e     |       |       |       |       |       |       | 8)      |
+-------+-------+-------+-------+-------+-------+-------+---------+

Chromium Embedded Framework (CEF) #

CEP HTML engine is based on Chromium Embedded Framework version 3
(CEF3). You can find more information about CEF here . Here are the
versions used in CEP:

  -----------------------------------------------------------------------
  Compone   CEP 6.1 and CEP 8.0
  nt        CEP 7.0     
  --------- ----------- -------------------------------------------------
  CEF 3     CEF 3       CEF 3 release branch 2987
            release     
            branch      
            2272Commi t 
            e8e1f98ee   
            026a62778   
            eb2269c8e   
            883426db6   
            45ea        

  Chromiu m 41.0.2272   57.0.2987.74
            .104        

  Node.js   IO.js 1.2.0 Node.js 7.7.4

  CEF/Nod e Node-WebK   Node-Webkit 0.21.5
  integra   it 0.12.1   
  tion      (nw.js)     
  -----------------------------------------------------------------------

Browser Features supported by CEP #

HTTP Cookie #

CEP supports two kinds of cookies:

-   Session Cookies - Temporary in-memory cookie which will expire and
    disappear when user closes extension
-   Persistent Cookies - No expiry date or validity interval, stored in
    user’s file system

Persistent Cookies location:

-   CEP 4.x
    -   Windows:   C:\Users\<USERNAME>\AppData\Local\Temp\cep_cookies\ 
    -   Mac:   /Users/<USERNAME>/Library/Logs/CSXS/cep_cookies/ 
-   CEP 5.x
    -   Windows:   C:\Users\<USERNAME>\AppData\Local\Temp\cep_cache\ 
    -   Mac:   /Users/<USERNAME>/Library/Logs/CSXS/cep_cache/ 
-   CEP 6.x and later releases
    -   Windows:   C:\Users\<USERNAME>\AppData\Local\Temp\cep_cache\ 
    -   Mac:   /Users/<USERNAME>/Library/Caches/CSXS/cep_cache/ 

Each persistent cookie is a file. File name is
HostID_HostVersion_ExtensionName, such as
PHXS_15.0.0_com.adobe.extension1.

Development and Debugging #

Guide for migrating from CEP 7 to CEP 8 #

Changes for Extensions Developers** #

Please be aware that, we are moving to chromium version 57.0.2987.74
from 41.0.2272.104. Similarly for nodejs, we are moving to 7.7.4 from
iojs 1.2.0. This migration guide is written based on CEP team’s testing
and if you find any new issues, please document or share with CEP team.

Chromium #

Following Chromium APIs have been removed:

-   MediaStream.label, MediaStream.ended and MediaStream.stop()
-   Remove getUserMedia() from Insecure Contexts
-   SVG hasExtension() methods
-   SVGSVGElement.pixelUnitToMillimeterX and friends
-   Fetch API: Deprecate and remove Request.context
-   Document.charset setter
-   NPAPI plug-in support Range.compareNode() and Range.expand()
-   WebAudio: Disallow setting AudioBufferSourceNode.buffer more than
    once
-   Deprecate and remove SVGViewElement.viewTarget attribute
-   Deprecate SVGSVGElement.viewport attribute
-   Remove FileError interface
-   Deprecate and remove: WebKit legacy window.postMessage() overload
-   Deprecate and remove: ‘results’ attribute for

NodeJS #

Below listed changes are applicable when –enable-nodejs is passed as
CEFCommandline parameter.

New Symbols in the global context #

CEP 8 introduces additional symbol: cep_node in the global context when
nodejs is enabled. cep_node will hold following node specific symbols:

  cep_node members Buffer, global, process and require

Accessing nodejs APIs in iframe #

nodejs symbols will not be available in iframe’s global context, only
way you can access nodejs APIs within iframe’s context is through
cep_node. When –mixed-context is enabled, global node symbols and
cep_node is available within iframe’s global context as browser and node
gets executed at the same context. It is also important to note that, if
you have existing code to check or use nodejs symbols in iframe’s global
context, it used to work till last release and in the current release,
it breaks in separate context mode.

JS Lib Break due to node symbols (possible for many other libraries) #

Newly integrated nodejs adds “module” and “exports” symbols to the
global context. Many libraries such as JQuery relies on its booting
based on the availability of “module” symbol in the global scope. For
ex, JQuery has following code while booting:

  JQuery startup code

    if ( typeof module === "object" && typeof module.exports === "object" ) {
        // set jQuery in `module`
    } else {
       // set jQuery in `window`
    }

When this code is executed in CEP’s browser with nodejs enabled, it will
make JQuery to load in module context instead of Browser context. This
would cause issues to extension’s startup. Please use below code to
handle such scenarios:

  global symbols handling

    <!-- Insert this line above script imports -->
    <script>if (typeof module === 'object') {window.module = module; module = undefined;}</script>
    <script>if (typeof exports === 'object') {window.exports = exports; exports = undefined;}</script>
    <!-- extension's imports -->
    <script src="scripts/jquery.min.js"></script>
    <script src="scripts/csinterface.js"></script>
    <!-- Insert this line after script imports -->
    <script>if (window.module) module = window.module;</script>
    <script>if (window.exports) exports = window.exports;</script>

If you are not using “module” and “exports” in the extension, you could
skip last 2 lines of above code. This logic is similar to how users
handled nodejs’s require while importing. If you are handling require
already, you should continue to handle same way.

require path is absolute instead of relative #

Nodejs 7.7.4 requires path to be included as absolute path. So, if you
have nodejs require for the js file,replace the path to absolute instead
of relative. For eg. replace:

    require("./js/lib/jquery.js");

with

  Win require absolute path for nodejs

    var loc = window.location.pathname;
    var dir = decodeURI(loc.substring(1, loc.lastIndexOf('/')));
    require(dir + "/js/lib/jquery.js");

In Mac (there is a change in index passed on to substring)

  Mac require absolute path for nodejs

    var loc = window.location.pathname;
    var dir = decodeURI(loc.substring(0, loc.lastIndexOf('/')));
    require(dir + "/js/lib/jquery.js");

    (or)

    require(__dirname + "/js/lib/jquery.js");

Contexts in CEP #

CEP will have multiple contexts defined at the start. Following are the
default contexts:

1.  Browser Context

    This is the default JS context associated with CEP’s browser engine.
    Apart from Browser objects, CEP’s file system APIs are accessed in
    this context.

2.  Native Context

    This is extended context through “cep” object to provide file system
    access via CSInterface.js.

3.  Node Context (When nodejs is enabled through –enable-nodejs command
    line switch)

        1. Separate Context
        2. Mixed Context

4.  Host app context

    This is the context which would be accessed through evalscript API.

------------------------------------------------------------------------

Separate Context Mode

This context will be created with following command line switch:
–enable-nodejs (and –mixed-context is not passed). When CEP is starting
with this context, it would have following symbols:

1.  cep_node: This is treated as global symbol available across frames
    and helps to access node symbols. Any modification to this symbol
    will be reflected at all the frame context. This symbols is
    introduced from CEP 8.
2.  node globals: https://nodejs.org/api/globals.html could be accessed
    only in main frame (which is current document). If there is a new
    frame created in the current document, these symbols will not be
    available in frame’s context. Please note that, this behavior is
    different CEP 7 for frames. In CEP 7, node globals are available for
    access in all frames.

Following representation provides visual context:

  Separate Context

    <html>
       <head>
          <!-- cep_node and node globals are available in this context -->
       </head>
       <body>
          <!-- cep_node and node globals are available in this context -->
          <iframe name="iframe_1">
             <!-- only cep_node is available and node globals are not available within this iframe -->
          </iframe>
          <iframe name="iframe_2">
             <!-- only cep_node is available and node globals are not available within this iframe -->
             <!-- In the following line cep_node is modified and this change will be available for any frame's which is loading later than iframe_2 -->
             cep_node.process.myVar = "Hello";
          </iframe>
          <iframe name="iframe_3">
             <!-- cep_node is available with change: cep_node.process.myVar(iframe's loading order is important as change should be accessed after the modifications) and node globals are not available  -->
          </iframe>
       </body>
    </html>

Mixed Context Mode

This context will be created with following command line switch:
–enable-nodejs and –mixed-context. When CEP is starting with this
context, it would have following symbols:

1.  cep_node: This is treated as local symbol available within each
    frames and helps to access node symbols. Any modification to this
    symbol will not be reflected to other frames. This symbols is
    introduced from CEP 8.
2.  node globals: https://nodejs.org/api/globals.html could be accessed
    in all the frames which is unique to each frame.

Following representation provides visual context

  Mixed Context

    <html>
       <head>
          <!-- cep_node and node globals are available in this context -->
       </head>
       <body>
          <!-- cep_node and node globals are available in this context -->
          <iframe name="iframe_1">
             <!-- only cep_node is available and node globals are available within this iframe -->
          </iframe>
          <iframe name="iframe_2">
             <!-- only cep_node is available and node globals are available within this iframe -->
             <!-- In the following line cep_node is modified and this change will not be available for any other frames -->
             cep_node.process.myVar = "Hello";
          </iframe>
          <iframe name="iframe_3">
             <!-- cep_node is available which is unique to this context and it's built from start up time. So, it will not have the changes from previous iframe. node globals are available  -->
          </iframe>
       </body>
    </html>

Development Machine Setup #

CEP HTML Extensions can be developed on both Windows and Mac platforms.
The development machine needs to have the following applications in
order to successfully develop CSXS extensions:

-   Adobe Creative Cloud applications supporting CEP HTML extensions.
-   HTML Extension Builder (Nice to have, but not mandatory).
-   Adobe ExtendScript Tool Kit (This is available as an optional
    install).
-   Chrome browser for debug workflow.

HTML Extension Builder #

HTML Extension Builder is a tool set built on top of Eclipse and can be
used for developing and debugging HTML extensions. Please download the
Extension Builder 3 from here .

Signing extensions #

-   Before you sign the extensions, you need to get or create the
    certificate file. Configurator and Adobe Exchange Packer can create
    certificates. Developers can get all information here after logging
    in.
-   Three tools can be used to sign a HTML extension.
-   Extension Builder 3
-   CC Extensions Signing Toolkit (also on above labs web site)
    -   Example of using CC Extension signing toolkit:
        ccextensionswin64.exe -sign “d:Adobe Layer NamerAdobe Layer
        Namer” (input extension path) d:AdobeLayerNamer.zxp (output zxp
        path) d:\sign.p12 (certificate path) 1 (certificate password)
        Adobe Exchange Packer (please sign in so that you can see it.)
-   Adobe Exchange Packer (please sign in so that you can see it.)

Debugging Unsigned Extensions #

If you are in the midst of development and are not using HTML Extension
Builder for debug workflows and want to bypass the need to sign your
extensions, you can bypass the check for extension signatures by editing
the CSXS preference properties file, located at:

-   Win: regedit > HKEY_CURRENT_USER/Software/Adobe/CSXS.8, then add a
    new entry PlayerDebugMode of type “string” with the value of “1”.
-   Mac: In the terminal, type:
      defaults   write   com.adobe.CSXS.8   PlayerDebugMode   1  (The
    plist is also located at /Users/   <username> 
    /Library/Preferences/com.adobe.CSXS.8.plist)

These entries will enable debug extensions to be displayed in the host
applications. Please note that, CSXS.8 is given with the assumption
that, you are developing the extension for CEP 8. If you are developing
extension for previous version of CEP, replace 8 with corresponding
version number.

Special notes for Mac 10.9 and higher #

Staring with Mac 10.9, Apple introduced a caching mechanism for plist
files. Your modifications to plist files does not take effect until the
cache gets updated (on a periodic basis, you cannot know exactly when
the update will happen). To make sure your modifications take effect,
there are two methods.

-   Kill cfprefsd process. It will restart automatically. Then the
    update takes effect.
-   Restart your Mac, or log out the current user and re-log in.
-   More Information

Remote Debugging #

CEP supports remote debugging for HTML extensions from 5.0.

-   Create a “.debug” file to the extension root directory such as
      Test_Extension\.debug  . The .debug file contains remote debug
    ports. Developers must create this file and use valid debug ports
    because both remote debugging and dev tools are based on it.
-   “.debug” file name is special for both Windows and Mac platforms, it
    has to be created via command line.
    -   On Windows, use “copy con .debug” and “Ctrl+Z” to create an
        empty file.
    -   On Mac, use “touch .debug” to create an empty file.
-   The value of Port should be between 1024 and 65535 (not include
    65535), otherwise remote debugging and dev tools will not work.
-   One extension bundle may have multiple extensions. The .debug file
    can specify debug ports for each extension. Here is an example file:

    <?xml version="1.0" encoding="UTF-8"?>
    <ExtensionList>
        <Extension Id="com.adobe.CEPHTMLTEST.Panel1">
            <HostList>
                <Host Name="PHXS" Port="8000"/>
                <Host Name="IDSN" Port="8001"/>
                <Host Name="AICY" Port="8002"/>
                <Host Name="ILST" Port="8003"/>
                <Host Name="PPRO" Port="8004"/>
                <Host Name="PRLD" Port="8005"/>
                <Host Name="FLPR" Port="8006"/>
                <Host Name="AUDT" Port="8007"/>
            </HostList>
        </Extension>
        <Extension Id="com.adobe.CEPHTMLTEST.Panel2">
            <HostList>
                <Host Name="PHXS" Port="8100"/>
                <Host Name="IDSN" Port="8101"/>
                <Host Name="AICY" Port="8102"/>
                <Host Name="ILST" Port="8103"/>
                <Host Name="PPRO" Port="8104"/>
                <Host Name="PRLD" Port="8105"/>
                <Host Name="FLPR" Port="8106"/>
                <Host Name="AUDT" Port="8107"/>
            </HostList>
        </Extension>
        <Extension Id="com.adobe.CEPHTMLTEST.ModalDialog">
            <HostList>
                <Host Name="PHXS" Port="8200"/>
                <Host Name="IDSN" Port="8201"/>
                <Host Name="AICY" Port="8202"/>
                <Host Name="ILST" Port="8203"/>
                <Host Name="PPRO" Port="8204"/>
                <Host Name="PRLD" Port="8205"/>
                <Host Name="FLPR" Port="8206"/>
                <Host Name="AUDT" Port="8207"/>
            </HostList>
        </Extension>
        <Extension Id="com.adobe.CEPHTMLTEST.Modeless">
            <HostList>
                <Host Name="PHXS" Port="8300"/>
                <Host Name="IDSN" Port="8301"/>
                <Host Name="AICY" Port="8302"/>
                <Host Name="ILST" Port="8303"/>
                <Host Name="PPRO" Port="8304"/>
                <Host Name="PRLD" Port="8305"/>
                <Host Name="FLPR" Port="8306"/>
                <Host Name="AUDT" Port="8307"/>
            </HostList>
        </Extension>
    </ExtensionList>

If you load an extension whose debug port is 8088, you can load the
debugger through http://localhost:8088/ on Chrome.

Where are the Log Files #

PlugPlug Logs #

Log files with useful debugging information are created for each of the
applications supporting CEP extensions. The platform-specific locations
for the log files are as follows:

-   Win:   C:\Users\<USERNAME>\AppData\Local\Temp 
-   Mac:   /Users/<USERNAME>/Library/Logs/CSXS 

These files are generated with the following naming conventions:

-   CEP 4.0 - 6.0 releases: csxs   <versionNumber>  -   <HostID>  .log.
    For example, PlugPlug in Illustrator generates log file
    csxs8-ILST.log.
-   CEP 6.1 and later releases: CEP   <versionNumber>  -   <HostID> 
    .log. For example, PlugPlug in Illustrator generates log file
    CEP8-ILST.log.

Logging levels can be modified as per the following levels:

-   0 - Off (No logs are generated)
-   1 - Error (the default logging value)
-   2 - Warn
-   3 - Info
-   4 - Debug
-   5 - Trace
-   6 - All

The LogLevel key can be updated at the following location (The
application should be restarted for the log level changes to take
effect):

-   Win:   regedit   >   HKEY_CURRENT_USER/Software/Adobe/CSXS.8 
-   Mac:   /Users/<USERNAME>/Library/Preferences/com.adobe.CSXS.8.plist 

For example of Mac, in the terminal do:

    defaults write com.adobe.CSXS.8 LogLevel 6

CEPHtmlEngine Logs #

In CEP 6.1 and later releases, CEPHtmlEngine generates logs. Each
CEPHtmlEngine instance usually generate two log files, one for browser
process, the other for renderer process. These files are generated with
the following naming conventions:

-   Browser process: CEPHtmlEngine   <versionNumber>  -   <HostID>  -
      <HostVersion>  -   <ExtensionID>  .log
-   Renderer process: CEPHtmlEngine   <versionNumber>  -   <HostID>  -
      <HostVersion>  -   <ExtensionID>  -renderer.log

For example:

-   CEPHtmlEngine8-PHXS-18.1.1-com.adobe.DesignLibraries.angular.log
-   CEPHtmlEngine8-PHXS-18.1.1-com.adobe.DesignLibraries.angular-renderer.log

They are also controlled by the PlugPlug log level.

CEF Log #

In CEP 4.0 - 6.0, the Chromium Embedded Framework (CEF) in CEPHtmlEngine
also generates a log:

-   Win:   C:\Users\<USERNAME>\AppData\Local\Temp\cef_debug.log 
-   Mac:   /Users/<USERNAME>/Library/Logs/CSXS/cef_debug.log 

In CEP 6.1 and later releases, this log is merged into CEPHtmlEngine
log.

Extension Folders #

CEP supports 3 types of extension folders.

-   Product extension folder. Here is a suggestion, but each point
    product can decide where this folder should be. Third party
    extension can’t be installed at this location.
    -   ${PP}/CEP/extensions (PPs may use different folder.)
-   System extension folder
    -   Win(x86):
          C:\Program   Files\Common   Files\Adobe\CEP\extensions 
    -   Win(x64):
          C:\Program   Files   (x86)\Common   Files\Adobe\CEP\extensions 
        , and   C:\Program   Files\Common   Files\Adobe\CEP\extensions 
        (since CEP 6.1)
    -   Mac:   /Library/Application   Support/Adobe/CEP/extensions 
-   Per-user extension folder
    -   Win:   C:\Users\<USERNAME>\AppData\Roaming\Adobe\CEP/extensions 
    -   Mac:   ~/Library/Application   Support/Adobe/CEP/extensions 

How does CEP decide which extension to load?

-   CEP first searches the product extension folder, then the system
    extension folder, and finally per-user extension folder.
-   Extensions without an appropriate host application ID and version
    are filtered out.
-   If two extensions have same extension bundle ID, the one with higher
    version is loaded.
-   If two extensions have same extension bundle ID and same version,
    the one whose manifest file has latest modification date is loaded.
-   If two extensions have same extension bundle ID, same version and
    same manifest modification date, CEP loads the first one that is
    found.

Extension Installation:

-   Host application installers should install extensions to product
    extension folder.
-   Extensions installed through https://creative.adobe.com/addons
    should get install at system extension folder or per-user extension
    folder.

Note:

-   Character ‘#’ is not allowed in extension folder path on both
    Windows and Mac OSX, since CEF treats ‘#’ as a delimiter.

CEP HTML Test Extensions #

CEP provides some sample extensions for extension developers. Get its
source code from:
https://github.com/Adobe-CEP/CEP-Resources/tree/master/CEP_8.x/Samples

Extension Manifest #

The manifest.xml file is required for every extension and provides the
necessary information to configure a CEP extension.   ExtensionManifest 
is the root element of the manifest.xml file.   Extensions  ,
  ExtensionList  , and   DispatchList  are the three child elements of
the   ExtensionManifest  root element.

Extension Manifest XSD #

All HTML extensions must use 5.0 or above version. Get XSD from the
GitHub repo:
https://github.com/Adobe-CEP/CEP-Resources/tree/master/CEP_8.x

To check if the extension’s manifest is in sync with the latest schema,
perform the following steps:

1.  Download the latest schema (ExtensionManifest_``<version>``.xsd).
    Please note that, schema is not changed in CEP 8, so refer to
    https://github.com/Adobe-CEP/CEP-Resources/blob/master/CEP_7.x/ExtensionManifest_v_7_0.xsd
    for CEP 8 as well.
2.  Navigate here
3.  Upload the schema and your latest ExtensionManifest (from a real
    build to check the validity of the versions).
4.  Hit validate

Important Manifest Change for CEP 5.0 Extensions #

Make sure correct point product versions are used. Here is an example.

    <HostList>
        <Host Name="PHXS" Version="[15.0,15.9]"/>
        <Host Name="PHSP" Version="[15.0,15.9]"/>
    </HostList>

This will support Photoshop version 15.0 up to, and including, 15.9. If
you use the following syntax then you are supporting releases up to 15.9
but not including 15.9

    <HostList>
        <Host Name="PHXS" Version="[15.0,15.9)"/>
        <Host Name="PHSP" Version="[15.0,15.9)"/>
    </HostList>

Make sure correct CEP version is used.

    <RequiredRuntimeList>
        <RequiredRuntime Name="CSXS" Version="5.0"/>
    </RequiredRuntimeList>

Important Manifest Change for CEP 7.0 Extensions #

CEP 7.0 manifest files now support the use of a   HostList  specific to
an extension in the bundle. For example, the following qualifies as the
“default”   HostList  :

    ...
    <ExecutionEnvironment>
      <HostList>
        <Host Name="DRWV" Version="15.0" />
        <Host Name="FLPR" Version="15.0" />
        <Host Name="IDSN" Version="11.0 "/>
        <Host Name="AICY" Version="11.0" />
        <Host Name="ILST" Version="19.0" />
        <Host Name="PHSP" Version="16.0" />
        <Host Name="PHXS" Version="16.0" />
        <Host Name="PPRO" Version="9.0" />
        <Host Name="PRLD" Version="4.0" />
        <Host Name="AEFT" Version="13.0" />
        <Host Name="DEMO" Version="1.0" />
        <Host Name="AUDT" Version="8.0" />
        <Host Name="LTRM" Version="7.0" />
        <Host Name="MUSE" Version="2015" />
      </HostList>
      ...
    </Execution Environment>
    ...

However, you can also specify a custom   HostList  on a per extension
basis as in the following example:

    ...
    <DispatchInfoList>
      ...
      <Extension Id="com.adobe.CEPHTMLTEST.Panel1">
        <HostList>
          <Host Name="PHXS" />
        </HostList>
        ...
      </Extension>
      <DispatchInfo>
      ...
      </DispatchInfo>
      ...
    </DispatchInfoList>

  HostLists  specified under extension tags will override the default
  HostList  specified under the execution environment tag. It is
important to note that adding   HostList  nodes with no child nodes is
akin to turning that particular extension off for all host applications;
this behavior is intentional. Please refrain from specifying both
  HostList  tags and   Host  attributes in   DispatchInfo  tags for each
extension; choose one or the other. Specifying both will more than
likely result in unexpected behavior. The   Host  attribute is only
maintained for backward compatibility. New extensions should use
  HostList  tags, not the Host attribute.

Extension Size #

You can specify extension size, max size and min size in extension
manifest. Size is mandatory; max size and min size are optional.

A modal or modeless dialog is resizable if there are different max and
min size, otherwise it is un-resizable. When you move mouse pointer over
dialog border, CEP shows different cursor for resizable and un-resizable
dialogs.

    <Geometry>
        <Size>
            <Height>580</Height>
            <Width>1000</Width>
        </Size>
        <MaxSize>
            <Height>800</Height>
            <Width>1200</Width>
        </MaxSize>
        <MinSize>
            <Height>400</Height>
            <Width>600</Width>
        </MinSize>
    </Geometry>

Customize Extension Menu #

This is only supported in InDesign and InCopy.

You can customize the extension menu by editing   <menu/>  item in
manifest. Here is an example. In this example, the Adobe Add-ons
extension is displayed under Windows main menu, rather than extensions
menu under Windows. You can customize the location of extension to
somewhere else by changing the value of attribute Placement in
  <menu/>  item.

    <?xml version="1.0" encoding="UTF-8"?>
    <ExtensionList>
        <Extension Id="Adobe Add-ons" Version="1.0"/>
    </ExtensionList>
    <ExecutionEnvironment>
        <HostList>
            <Host Name="IDSN" Version="8.0"/>
        </HostList>
        ...
    </ExecutionEnvironment>
    <DispatchInfoList>
        <Extension Id="com.adobe.CEPHTMLTEST.Panel1">
            <DispatchInfo>
                 ...
                 <UI>
                    ...
                   <Menu Placement="'Main:&amp;Window',600.0,'KBSCE Window menu'">Adobe Add-ons</Menu>
    ...

High DPI Panel Icons #

In high DPI display mode, panel extensions may want to use high DPI
icons. You set these icons in extension’s manifest.

    <Icons>

     <Icon Type="Normal">./images/IconLight.png</Icon>

     <Icon Type="RollOver">./images/IconLight.png</Icon>

     <Icon Type="DarkNormal">./images/IconDark.png</Icon>

     <Icon Type="DarkRollOver">./images/IconDark.png</Icon>

    </Icons>

You pack both normal icon files (IconLight.png and IconDark.png) and
high DPI icon files ( IconLight @ 2X . png and IconDark @ 2X . png ) in
your extension.

Host applications will be able to find and use

-   IconLight.png and IconDark.png for normal display
-   IconLight @ 2X . png and IconDark @ 2X . png for 200% high DPI
    display

@2X.ext is the industry standard. Please see more details on
https://developer.apple.com/library/ios/qa/qa1686/_index.html .

Note: Photoshop supports _x2.ext format.

Dialog Size based on Screen Size #

You can specify CEP dialog size as a percentage of screen size. Here is
an example.

    <UI>
        <Type>Modeless</Type>
        ...
        <Geometry>
            <ScreenPercentage>
                <Height>50%</Height>
                <Width>50%</Width>
            </ScreenPercentage>
            ...
        </Geometry>
    </UI>

Shortcut Keys for HTML Extensions #

(Since 5.2)

CEP 5.2 supports shortcut keys for HTML extensions. When focus is on
HTML extensions, these shortcut keys are handled by extension.

  ------------------------------------------------------------------------
  Windows Keys              Mac Keys                Function
  ------------------------- ----------------------- ----------------------
  Ctrl + A                  Command + A             Select All

  Ctrl + C                  Command + C             Copy

  Ctrl + V                  Command + V             Paste

  Ctrl + X                  Command + X             Cut
  ------------------------------------------------------------------------

Other shortcut keys are handled by point products, such as pressing
Ctrl + N to create a new document.

CEP JavaScript Programming #

CEP JavaScript Libraries #

CEP JavaScript Libraries are counterparts of the Flex CSXS Library and
the CEP IMS Library. They provide JavaScript APIs to access application
and CEP information.

-   CSInterface.js
-   IMSInterface.js
-   Vulcan.js

Get them from:
https://github.com/Adobe-CEP/CEP-Resources/tree/master/CEP_8.x

To use them, please include these JavaScript files in your HTML
extension.

API version #

The CEP JavaScript APIs keep changing in each new CEP release. The
changes are guaranteed to be backward compatible. For newly added APIs,
a version tag like “Since x.x.x” is added to its API comments indicating
since which CEP version the APIs is available.

You will need to check the version tag against the version of CEP
integrated by the Adobe Product you are using to make sure the API you
want to use is available. To do so, use
  CSInterface.getCurrentApiVersion()  to retrieve the version of CEP
integrated by the Adobe Product. Please note this API itself is
available only since 4.2.0. If you get an error saying
  getCurrentApiVersion  is undefined, then you are running in CEP 4.0 or
4.1. Otherwise, the value returned will tell you the version of CEP
integrated by the Adobe product.

CEP Events #

CEP supports sending and receiving events within an extension, among
extensions in an application, and among extensions in different
applications. Since all extensions are based on the common communication
layer with the same event data format, they can communicate with each
other through CEP events, and even they can communicate with native side
as long as point products invoke
  PlugPlugAddEventListener/PlugPlugDispatchEvent  accordingly.

There are   dispatchEvent/addEventListener/removeEventListener  APIs
available in JavaScript to dispatch and listen for events. Let’s go
through CEP event data format/structure, APIs to dispatch and listen
event, and sample code snippet accordingly in JavaScript.

CSEvent #

In terms of CSEvent, it just means CEP Event here. The data structure of
CSEvent (CEP Event) is as below.

    /**
     * Class CSEvent.
     * You can use it to dispatch a standard CEP event.
     *
     * @param type            Event type.
     * @param scope       The scope of event, can be "GLOBAL" or "APPLICATION".
     * @param appId       The unique identifier of the application that generated the event. Optional.
     * @param extensionId The unique identifier of the extension that generated the event. Optional.
     *
     * @return CSEvent object
     */
    function CSEvent(type, scope, appId, extensionId)
    {
        this.type = type;
        this.scope = scope;
        this.appId = appId;
        this.extensionId = extensionId;
    };

You could create a   CSEvent  object and dispatch it by using
  CSInterface.dispatchEvent  . Also you could access its property in
your callback of   CSInterface.addEventListener  . Refer to the section
  addEventListener/dispatchEvent  below for more details.

Listen for and Dispatch CSEvent #

  dispatchEvent/addEventListener/removeEventListener  APIs are available
in JavaScript world to dispatch and listen for CSEvent.

addEventListener

Here is the definition for addEventListener. Refer to CSInterface.js for
more information:

     /**
     * Registers an interest in a CEP event of a particular type, and
     * assigns an event handler.
     * The event infrastructure notifies your extension when events of this type occur,
     * passing the event object to the registered handler function.
     *  * @param type     The name of the event type of interest.
     * @param listener The JavaScript handler function or method.
     * @param obj      Optional, the object containing the handler method, if any.
     *         Default is null.
     */
    CSInterface.prototype.addEventListener = function(type, listener, obj)

One thing needs to be mentioned here is both named and anonymous
callback functions are supported in CSInterface.addEventListener. * An
example of how to use named callback function in
  CSInterface.addEventListener  .

    function callback(event)
    {
        console.log(“type=” + event.type + “, data=” + event.data);
    }

    var csInterface = new CSInterface();
    csInterface.addEventListener(“com.adobe.cep.test”, callback); //invoke the function

-   An example of how to use anonymous callback function in
      CSInterface.addEventListener  .

    var csInterface = new CSInterface();
    csInterface.addEventListener(“com.adobe.cep.test”, function (event)
    {
         console.log(“type=” + event.type + “, data=” + event.data);
    }
    ); // Anonymous function is the second parameter

The event.data can be an object (i.e. you could use an object as
event.data).

Before CEP 6.1, we regarded every attribute in event.data object as a
regular string, but from CEP 6.1, we revised the behavior that keep the
type of each attribute in event.data as it was. If the value is a valid
JSON string, CEP will parse it natively and convert it to an object.
Here is an example on how to use it.

    var csInterface = new CSInterface();
    csInterface.addEventListener(“com.adobe.cep.test”, function (event)
    {
         var obj = event.data;
         console.log(“type=” + event.type + “, data.property1=” + obj.property1 + “, data.property2=” + obj.property2);
    }
    ); // Anonymous function is the second parameter

dispatchEvent

Here is the definition for   CSInterface.dispatchEvent  . Refer to
  CSInterface.js  for more details.

    /**
     * Triggers a CEP event programmatically. Yoy can use it to dispatch
     * an event of a predefined type, or of a type you have defined.
     *
     * @param event A \c CSEvent object.
     */
    CSInterface.prototype.dispatchEvent = function(event)

Here are three samples to demonstrate how to dispatch an event in
JavaScript.

-   An example of how to dispatch event in JavaScript.

    var csInterface = new CSInterface();
    var event = new CSEvent("com.adobe.cep.test", "APPLICATION");
    event.data = "This is a test!";
    cSInterface.dispatchEvent(event);

-   Another example of creating event object and setting property, then
    dispatch it.

    var csInterface = new CSInterface();
    var event = new CSEvent();
    event.type = "com.adobe.cep.test";
    event.scope = "APPLICATION";
    event.data = "This is a test!";
    cSInterface.dispatchEvent(event);

-   An example of dispatching an event whose data is an object.

    var event = new CSEvent("com.adobe.cep.test", "APPLICATION");
    var obj = new Object();
    obj.a = "a";
    obj.b = "b";
    event.data = obj;
    cSInterface.dispatchEvent(event);

Communication between Native Point Product and CEP extensions #

CEP event based communication between native point product and CEP
extensions is simple. You can use
  PlugPlugAddEventListener/PlugPlugDispatchEvent  to communicate with
CEP extensions.

Please refer the following steps:

First, define a callback function in CEP extension:

    function callback(event)
    {
        // do something here
    }

Then call CSInterface.addEventListener with event type you want to
listen and the callback function:

    var csInterface = new CSInterface();
    csInterface.addEventListener(“com.adobe.cep.test”, callback);

Standard Events in Point Products #

Following table lists the standard events supported by point products.

  ----------------------------------------------------------------------------------------------------------------------------
  Event Type                Event Scope   Description           Event       PS     ID      AI      AN     PR     PL     AU
                                                                Parameter                                               
  ------------------------- ------------- --------------------- ----------- ------ ------- ------- ------ ------ ------ ------
  documentAfterActivate     APPLICATION   Event fired when a    URL to the  No     Yes     Yes     No     No     No     Yes
                                          document has been     active                                                  
                                          activated(after       document.                                               
                                          new/open document;    If the doc                                              
                                          after document has    was not                                                 
                                          retrieved focus).     save, the                                               
                                                                NAME will                                               
                                                                be set                                                  
                                                                instead of                                              
                                                                the URL.                                                

  documentAfterDeactivate   APPLICATION   Event fired when the  URL to the  Yes    Yes     Yes     No     No     No     Yes
                                          active document has   active                                                  
                                          been                  document.                                               
                                          de-activated.(after   If the doc                                              
                                          document loses focus) was not                                                 
                                                                save, the                                               
                                                                name will                                               
                                                                be set                                                  
                                                                instead of                                              
                                                                the URL.                                                

  applicationBeforeQuit     APPLICATION   Event fired when the  none        No     Issue   Issue   No     No     No     No
                                          application got the                                                           
                                          signal to start to                                                            
                                          terminate.                                                                    

  applicationActivate       APPLICATION   Event fired when the  none        Yes    Yes     Yes     No     Yes    Yes    Yes
                                          Application got an                                                            
                                          ‘activation’ event                                                            
                                          from the OS.                                                                  

  documentAfterSave         APPLICATION   Event fired after the URL to the  Yes    Yes     Yes     No     No     No     Yes
                                          document has been     saved                                                   
                                          saved                 document.                                               
  ----------------------------------------------------------------------------------------------------------------------------

  :  Standard Events in Point Products #

( [Yes] = supported, [No] = not supported)

Note: CEP is unloaded from the point products ID and AI right after the
event   applicationBeforeQuit  is emitted from the point products,
therefore CEP may have no chance to get this event handled in HTML
extensions.

Specific Events in Products #

Photoshop

In Photoshop, the following specific events are defined:

-   com.adobe.PhotoshopPersistent
-   com.adobe.PhotoshopUnPersistent
-   com.adobe.PhotoshopWorkspaceSet
-   com.adobe.PhotoshopWorkspaceGet
-   com.adobe.PhotoshopWorkspaceAware
-   com.adobe.PhotoshopWorkspaceData
-   com.adobe.PhotoshopWorkspaceRequest
-   com.adobe.PhotoshopRegisterEvent
-   com.adobe.PhotoshopUnRegisterEvent
-   com.adobe.PhotoshopLoseFocus
-   com.adobe.PhotoshopQueryDockingState

For example, a CEP extension yields the mouse focus back to Photoshop by
sending the   com.adobe.PhotoshopLoseFocus  event:

    var csInterface = new CSInterface();
    var event = new CSEvent("com.adobe.PhotoshopLoseFocus", "APPLICATION");
    event.extensionId = csInterface.getExtensionID();
    csInterface.dispatchEvent(event);

  com.adobe.PhotoshopCallback  will be removed in Photoshop 17.0 as
adding a listener results in all CS Extensions receiving the event. As
of Photoshop CC 2015 June release, developers can now use this
alternative, which fixes the broadcast issue:

    csInterface.addEventListener("com.adobe.PhotoshopJSONCallback" + gExtensionID, PhotoshopCallbackUnique);

Invoke point product’s scripts from html extension #

First, define a callback function in CEP extension:

    function evalScriptCallback(result)
    {
       // process the result string here.
    }

Then call   CSInterface.evalScript  with the script you want to call and
the callback function:

    var script = "app.documents.add";  //Demo script
    CSInterface.evalScript(script, evalScriptCallback);

Please be aware that the script in evalScript and the jsx file which is
configured in   <ScriptPath>  in the extension’s manifest are executed
in host application’s ExtendScript engine, which runs in host
application’s main thread. On the other hand, CEP event is also
dispatched from host application’s main thread. If the interaction
between the script and CEP event is needed, please split the script into
small parts and call them separately so that CEP event has a chance to
be scheduled.

Vulcan messages #

Starting with CEP 5.0, global CEP Events whose scope attribute is set to
“GLOBAL” are no longer supported. Please use the APIs in Vulcan.js
instead.

Vulcan message #

The data structure of Vulcan message in JavaScript is as below.

    /**
     * @class VulcanMessage
     * Message type for sending messages between host applications.
     * A message of this type can be sent to the designated destination
     * when appId and appVersion are provided and valid. Otherwise,
     * the message is broadcast to all running Vulcan-enabled applications.
     *
     * To send a message between extensions running within one
     * application, use the <code>CSEvent</code> type in CSInterface.js.
     *
     * @param type            The message type.
     * @param appId           The peer appId.
     * @param appVersion      The peer appVersion.
     *
     */
    function VulcanMessage(type, appId, appVersion)
    {
        this.type = type;
        this.scope = VulcanMessage.SCOPE_SUITE;
        this.appId = requiredParamsValid(appId) ? appId : VulcanMessage.DEFAULT_APP_ID;
        this.appVersion = requiredParamsValid(appVersion) ? appVersion : VulcanMessage.DEFAULT_APP_VERSION;
        this.data = VulcanMessage.DEFAULT_DATA;
    }

    VulcanMessage.TYPE_PREFIX    = "vulcan.SuiteMessage.";
    VulcanMessage.SCOPE_SUITE    = "GLOBAL";
    VulcanMessage.DEFAULT_APP_ID = "UNKNOWN";
    VulcanMessage.DEFAULT_APP_VERSION = "UNKNOWN";
    VulcanMessage.DEFAULT_DATA = "<data><payload></payload></data>";
    VulcanMessage.dataTemplate = "<data>{0}</data>";
    VulcanMessage.payloadTemplate = "<payload>{0}</payload>";

Listen for and Dispatch Vulcan message #

  addMessageListener  ,   removeMessageListener  ,   dispatchMessage 
and   getPayload  APIs are available to dispatch and listen for Vulcan
messages. The API definitions are as below. Refer to Vulcan.js for more
information.

    /**
     * Registers a message listener callback function for a Vulcan message.
     *
     * @param type            The message type.
     * @param callback        The callback function that handles the message.
     *                        Takes one argument, the message object.
     * @param obj             Optional, the object containing the callback method, if any.
     *                        Default is null.
     */
    Vulcan.prototype.addMessageListener = function(type, callback, obj)

    /**
     * Removes a registered message listener callback function for a Vulcan message.
     *
     * @param type            The message type.
     * @param callback        The callback function that was registered.
     *                        Takes one argument, the message object.
     * @param obj             Optional, the object containing the callback method, if any.
     *                        Default is null.
     */
    Vulcan.prototype.removeMessageListener = function(type, callback, obj)

    /**
     * Dispatches a Vulcan message.
     *
     * @param vulcanMessage   The message object.
     */
    Vulcan.prototype.dispatchMessage = function(vulcanMessage)

    /**
     * Retrieves the message payload of a Vulcan message for the registered message listener callback function.
     *
     * @param vulcanMessage   The message object.
     * @return                A string containing the message payload.
     */
    Vulcan.prototype.getPayload = function(vulcanMessage)

Here is the example to demonstrate how to use the APIs in JavaScript.

    var testVulcanMessage = new VulcanMessage(VulcanMessage.TYPE_PREFIX + "test");
    testVulcanMessage.setPayload("To be or not to be that is a question!");

    var callback = function (message) {
        alert(VulcanInterface.getPayload(message));
    };

    VulcanInterface.addMessageListener(testVulcanMessage.type, callback);
    VulcanInterface.dispatchMessage(testVulcanMessage);
    ...
    VulcanInterface.removeMessageListener(testVulcanMessage.type, callback);

  getEndPoints  and   getSelfEndPoint  APIs are available to support
point-to-point Vulcan message. The API definitions are as below. Refer
to Vulcan.js for more information.

    /**
     * Gets all available endpoints of the running Vulcan-enabled applications.
     *
     * Since 7.0.0
     *
     * @return                The array of all available endpoints.
     * An example endpoint string:
     * <endPoint>
     *   <appId>PHXS</appId>
     *   <appVersion>16.1.0</appVersion>
     * </endPoint>
     */
    Vulcan.prototype.getEndPoints = function()

    /**
     * Gets the endpoint for itself.
     *
     * Since 7.0.0
     *
     * @return                The endpoint string for itself.
     */
    Vulcan.prototype.getSelfEndPoint = function()

The steps to send point-to-point Vulcan message are as follows:

-   Get all available endpoints.
-   Select the destination endpoint and get appId and appVersion from
    it.
-   Create Vulcan message with the destination   appId  and
      appVersion  .
-   Dispatch Vulcan message.

    var endPointList = VulcanInterface.getEndPoints();
    var destIndex = 0;
    var appId = GetValueByKey(endPointList[destIndex], "appId");
    var appVersion = GetValueByKey(endPointList[destIndex], "appVersion");
    var message = new VulcanMessage(VulcanMessage.TYPE_PREFIX + "test", appId, appVersion);
    message.setPayload("blablabla...");
    VulcanInterface.dispatchMessage(message);

Access Application DOM from Html Extension #

There are two separate JavaScript engines here.

-   JavaScript engine of host application - Application DOM/Extend
    script DOM
-   JavaScript engine of CEP HTML runtime - HTML DOM

Application DOM is not available in CEP extension’s engine and CEP DOM
is not available in host application’s engine.

To access Application DOM from CEP extensions, CEP JavaScript library
provides an API,   CSInterface.evalScript  , to execute extend script to
access the host application’s DOM. Here is a brief diagram to indicate
how to access Application DOM through this API.

[enter image description here]

enter image description here

Here is the sample JavaScript code snippet in HTML extension.

    var csInterface = new CSInterface();
    csInterface.evalScript('app.documents.add();', function(result){
      alert(result);
    });

Access HTML DOM from extend script #

There is no way to access HTML extension’s JavaScript DOM directly from
Application’s ExtendScript. If you need to access it, CEP event based
communication can be used as a substitution.

CEP creates a library which uses External Object mechanism of
ExtendScript to send CSXS events. The external object provides an
ExtendScript class CSXSEvent for creating and dispatching
application-level CSXS events. On HTML extension side, event listeners
can be registered via the   addEventListener  API in   CSInterface.js 
to listen to the events.

Some CC applications (Photoshop, Illustrator, Premiere Pro) integrated
PlugPlugExternalObject library and started to support this functionality
in CC 2014 release. Audition supports this functionality since CC 2015.1
release.

Sample Code #

ExtendScript developers need to create external object instance first.

    var externalObjectName = "PlugPlugExternalObject";
    var mylib = new ExternalObject( "lib:" + externalObjectName );

And then create the CSXSEvent instance.

    var eventObj = new CSXSEvent();
    eventObj.type="documentCreated";
    eventObj.data="blahblah";

At last use this instance to dispatch event:

    eventObj.dispatch();

Below is the sample code of ExtendScript.

    ...
    var cs = new CSInterface();

    cs.addEventListener("documentCreated", function(event){
      alert('Cool!' + event.data);
    });

    var extendScript = 'var externalObjectName = "PlugPlugExternalObject"; var mylib = new ExternalObject( "lib:" + externalObjectName ); app.document.add(); var eventObj = new CSXSEvent(); eventObj.type="documentCreated"; eventObj.data="blahblah"; eventObj.dispatch();'
    cs.evalScript(extendScript);

Fly-out menu #

For fly-out menu on the native panel of HTML extension, it has been
supported.

Two new interfaces are added to CSInterface.

    CSInterface.prototype.setPanelFlyoutMenu = function(menu){
      window.__adobe_cep__.invokeSync("setPanelFlyoutMenu", menu);
    };

    CSInterface.prototype.updatePanelMenuItem = function(menuItemLabel, enabled, checked){
      var ret = false;
      if (this.getHostCapabilities().EXTENDED_PANEL_MENU){
        var itemStatus = new MenuItemStatus(menuItemLabel, enabled, checked);
        ret = window.__adobe_cep__.invokeSync("updatePanelMenuItem", JSON.stringify(itemStatus));
      }

      return ret;
    };

The “menu” parameter for   setPanelFlyoutMenu  is a XML string. Below is
an example:

    <Menu>
      <MenuItem Id="menuItemId1" Label="TestExample1" Enabled="true" Checked="false"/>
      <MenuItem Label="TestExample2">
         <MenuItem Label="TestExample2-1" >
            <MenuItem Label="TestExample2-1-1" Enabled="false" Checked="true"/>
         </MenuItem>
         <MenuItem Label="TestExample2-2" Enabled="true" Checked="true"/>
      </MenuItem>
      <MenuItem Label="---" />
      <MenuItem Label="TestExample3" Enabled="false" Checked="false"/>
    </Menu>

If user wants to be notified when clicking a menu item, user needs to
register   com.adobe.csxs.events.flyoutMenuClicked  event by calling
  AddEventListener  . When a menu item is clicked, the event callback
function will be called. The   data  attribute of event is an object
which contains   menuId  and   menuName  attributes.

To get notified when fly-out menu is opened and closed, register event
listener for below event types respectively:

    "com.adobe.csxs.events.flyoutMenuOpened"
    "com.adobe.csxs.events.flyoutMenuClosed"

Customize Context Menu #

Set and Update Context Menu #

There are three APIs in   CSInterface  for developers to set and update
the customized context menu.

    CSInterface.prototype.setContextMenu = function(menu, callback){
      window.__adobe_cep__.invokeAsync("setContextMenu", menu, callback);
    };

    CSInterface.prototype.setContextMenuByJSON = function(menu, callback){
      window.__adobe_cep__.invokeAsync("setContextMenuByJSON", menu, callback);
    };

    CSInterface.prototype.updateContextMenuItem = function(menuItemID, enabled, checked){
      var itemStatus = new ContextMenuItemStatus(menuItemID, enabled, checked);
      ret = window.__adobe_cep__.invokeSync("updateContextMenuItem", JSON.stringify(itemStatus));
    };

The “menu” parameter for “setContextMenu” is a XML string.

-   Id - Menu item ID. It should be plain text.
-   Icon - Menu item icon path. It is a path relative to the extension
    root path. For optimal display results please supply a 16 x 16px PNG
    icon as larger dimensions will increase the size of the menu item.
-   Label - Menu item label. It supports localized languages.
-   Enabled - Whether the item is enabled or disabled. Default value is
    true.
-   Checkable - Whether the item can be checked/unchecked. Default value
    is false.
-   Checked - Whether the item is checked or unchecked. Default value is
    false.
-   The items with icons and checkable items cannot coexist on the same
    menu level. The former take precedences over the latter.

Here is an example.

    <Menu>
       <MenuItem Id="menuItemId1" Label="TestExample1" Enabled="true" Checked="false" Icon="./img/small_16X16.png"/>
       <MenuItem Id="menuItemId2" Label="TestExample2">
         <MenuItem Id="menuItemId2-1" Label="TestExample2-1" >
           <MenuItem Id="menuItemId2-1-1" Label="TestExample2-1-1" Enabled="false" Checkable="true" Checked="true"/>
         </MenuItem>
         <MenuItem Id="menuItemId2-2" Label="TestExample2-2" Enabled="true" Checkable="true" Checked="true"/>
       </MenuItem>
       <MenuItem Label="---" />
       <MenuItem Id="menuItemId3" Label="TestExample3" Enabled="false" Checked="false"/>
    </Menu>

The “callback” parameter is the callback function which is called when
user clicks a menu item. The only parameter is the ID of clicked menu
item.

If you prefer to using a JSON string to set context menu, you can
achieve it by calling   setContextMenuByJSON  .

The “menu” parameter for   setContextMenuByJSON  is a JSON string.

-   id - Menu item ID. It should be plain text.
-   icon - Menu item icon path. It is a path relative to the extension
    root path. For optimal display results please supply a 16 x 16px PNG
    icon as larger dimensions will increase the size of the menu item.
-   label - Menu item label. It supports localized languages.
-   enabled - Whether the item is enabled or disabled. Default value is
    true.
-   checkable - Whether the item can be checked/unchecked. Default value
    is false.
-   checked - Whether the item is checked or unchecked. Default value is
    false.
-   The items with icons and checkable items cannot coexist on the same
    menu level. The former take precedences over the latter.

Here is an JSON example

    {
           "menu": [
               {
                   "id": "menuItemId1",
                   "label": "testExample1",
                   "enabled": true,
                   "checkable": true,
                   "checked": false,
                   "icon": "./img/small_16X16.png"
               },
               {
                   "id": "menuItemId2",
                   "label": "testExample2",
                   "menu": [
                       {
                           "id": "menuItemId2-1",
                           "label": "testExample2-1",
                           "menu": [
                               {
                                   "id": "menuItemId2-1-1",
                                   "label": "testExample2-1-1",
                                   "enabled": false,
                                   "checkable": true,
                                   "checked": true
                               }
                           ]
                       },
                       {
                           "id": "menuItemId2-2",
                           "label": "testExample2-2",
                           "enabled": true,
                           "checkable": true,
                           "checked": true
                       }
                   ]
               },
               {
                   "label": "---"
               },
               {
                   "id": "menuItemId3",
                   "label": "testExample3",
                   "enabled": false,
                   "checkable": true,
                   "checked": false
               }
           ]
       }

If developers do not set context menu, CEP shows default items (Back,
Forward, View Source, etc.). This is compatible with previous releases.
If developers set context menu which has no any default id, CEP removes
all default items and show customized items only. If one of the
following default ids is set, the default menu item against that id will
be shown.

  -----------------------------------------------------------------------
  id
  -----------------------------------------------------------------------
  “print”

  “back”

  “view source”

  “forward”
  -----------------------------------------------------------------------

Notes:

1.  They are case-insensitive.
2.  The quotation marks is not a part of an id.
3.  The default callback associated to each id will be used and cannot
    be customised.

Disable Context Menu #

To disable the context menu, you can call   setContextMenu  by null.

Another way is to add   oncontextmenu="return   false;"  to the HTML
tag. For example,

    <body oncontextmenu="return false;">

Other Implementation of Context Menu #

See examples .

Get Display Status of HTML Extension Window #

Two ways to get HTML extension window #

-   Register “com.adobe.csxs.events.panelWindowStatusChanged” CSXS event
-   Call isWindowVisible JavaScript API.

Resister “com.adobe.csxs.events.panelWindowStatusChanged” CSXS event #

-   Observe   com.adobe.csxs.events.panelWindowStatusChanged  CSXS
    event, this is for PANEL extensions only. If user hides the panel
    window by clicking “X” or collapsing window, this event is going to
    be sent to observer with the “true” or “false” string in data
    attribute, while the event is not going to be sent if the extension
    is closed. That is to say, currently, only panel extensions which
    are running on Ai and persistent can receive this event, when the
    extension is hiding, event with “false” data is sent while the
    extension is shown, event with “true” is sent.

Call isWindowVisible API #

-   Call   isWindowVisible  JS interface. Both dialog and panel
    extension enable to access this API, but it always returns true for
    modal and modeless dialog extensions while it always returns false
    for invisible extensions.

Getting and Changing Extension Content Size #

Getting Extension Content Size #

Getting extension content size can be done using   window.innerWidth 
and   window.innerHeight  . However, if you are accessing these
properties from inside an IFrame, you are actually accessing the
properties of the IFrame’s window object, not the ones for the HTML
document. To access the top-most one, you will need to do
  parent.window.innerWidth  and   parent.window.innerWidth  .

Changing Extension Content Size #

Changing modal and modeless extension content size is supported in all
Adobe applications that supports CEP. However, changing panel HTML
extension size is not supported in Premiere Pro, Prelude, After Effects
and Audition.

    CSInterface.prototype.resizeContent = function(width, height)

The width and height parameters are expected to be unsigned integers.
The function does nothing when parameters of other types are passed.

Please note that extension min/max size constraints as specified in the
manifest file apply and take precedence. If the specified size is out of
the min/max size range, the min or max bounds will be used. When a panel
is docked with other panels, there are chances that it won’t resize as
expected even when the specified size satisfies the min and max
constraints. The restriction is imposed by host applications, not by
CEP.

Register invalid certificate error callback #

(Since 6.1) Register the invalid certificate error callback for an
extension. This callback will be triggered when the extension try to
access the web site that contains the invalid certificate on main frame.
But if the extension does not call this function and try to access the
web site containing the invalid certificate, a default error page will
be shown:

    CSInterface.prototype.registerInvalidCertificateCallback = function(callback)

Register an interest in specific key events #

(Since 6.1) Register an interest in some key events to prevent them from
being sent to the host application:

    CSInterface.prototype.registerKeyEventsInterest = function(keyEventsInterest)

This function works with modeless extensions and panel extensions.
Generally all the key events will be sent to the host application for
these two extensions if the current focused element is not text input or
dropdown.

If you want to intercept some key events and you want them to be handled
in the extension, please call this function in advance to prevent them
being sent to the host application.

-   keyEventsInterest: A JSON string describing those key events you are
    interested in. A null object or an empty string will lead to
    removing the interest

This JSON string should be an array, each object has following keys:

-   keyCode: [Required] represents an OS system dependent virtual key
    code identifying the unmodified value of the pressed key.
-   ctrlKey: [optional] a Boolean that indicates if the control key was
    pressed (true) or not (false) when the event occurred.
-   altKey: [optional] a Boolean that indicates if the alt key was
    pressed (true) or not (false) when the event occurred.
-   shiftKey: [optional] a Boolean that indicates if the shift key was
    pressed (true) or not (false) when the event occurred.
-   metaKey: [optional] (Mac Only) a Boolean that indicates if the Meta
    key was pressed (true) or not (false) when the event occurred. On
    Macintosh keyboards, this is the command key. To detect Windows key
    on Windows, please use keyCode instead.

To learn all key codes:

-   Windows
-   Mac
    -     /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/Headers/Events.h 
    -   Install Key Codes from the Mac App Store.

An example JSON string:

    [{
       "keyCode": 48
    },
    {
       "keyCode": 123,
       "ctrlKey": true
    }]

Set and Get the title of the extension windows #

(Since 6.1) CEP 6.1 introduces two APIs to set and get the title of
extension windows. Those functions work with modal and modeless
extensions in all Adobe products, and panel extensions in Photoshop,
InDesign, InCopy, Illustrator, Animate (Flash Pro) and Audition:

    CSInterface.prototype.setWindowTitle = function(title){
      window.__adobe_cep__.invokeSync("setWindowTitle", title);
    };

    CSInterface.prototype.getWindowTitle = function(){
      return window.__adobe_cep__.invokeSync("getWindowTitle", "");
    };

HI-DPI display #

CEP JavaScript library provides APIs for detecting the availability of
HI-DPI display on the Mac platform.

-     CSInterface.getScaleFactor()  Use this function to retrieve the
    scale factor of the display on which the calling extension window is
    located.
-     var   scaleFactor   =   CSLibrary.getScaleFactor(); 
-     CSInterface.setScaleFactorChangedHandler()  Use this function to
    add a event handler that will be called when calling extension
    window is moved between HI-DPI and non-HI-DPI displays.

    window.scaleFactorHandler = function(){
    var scaleFactor = CSLibrary.getScaleFactor();
    if (scaleFactor === 2){
    imgSrc = "../img/PS_AppIcon_r.png"
    } else {
    imgSrc = "../img/PS_AppIcon.png"
    }
    document.getElementById("image").src = imgSrc;
    }

    CSLibrary.setScaleFactorChangedHandler(window.scaleFactorHandler);

CEP 5.2 has already supported HiDPI on Windows.

Other JavaScript APIs #

The JavaScript engine in CEP HTML engine had been extended to provide
some APIs, including:

-   local file access
-   native process
-   others

These APIs are in JavaScript DOM and can be used as other built-in
JavaScript APIs. You do NOT need to include any JavaScript files.

API reference is as below.

  CEPEngine_extensions.js  is actually a CEF extension that is built in
CEPHtmlEngine to expand the DOM of CEPHtmlEngine, like create/delete
folder, read/write file, create/quit process, and so on. You can invoke
these built-in APIs directly in your HTML extension without any
JavaScript file reference.

For example, you want to

-   create a folder.

    var path = "/tmp/test";
    var result = window.cep.fs.makedir(path);
    if (0 == result.err){
      ...// success
    } else {
      ...// fail
    }

-   write a file.

    var data = "This is a test.";
    var path = "/tmp/test";
    var result = window.cep.fs.writeFile(path, data);
    if (0 == result.err){
      ...// success
    } else {
      ...// fail
    }

-   Write file with base64 encoding mode. To use this mode, you need to
    convert the input string to a base64-encoded string before calling
      writeFile()  . The following is an example.

    var data = "This is a test.";
    var path = "/tmp/test";
    data = cep.encoding.convertion.utf8_to_b64(data);

    var result = window.cep.fs.writeFile(fileName, data, cep.encoding.Base64);
    if (0 == result.err) {
      ...// success
    } else {
      ...// fail
    }

-   read a file.

    var path = "/tmp/test";
    var result = window.cep.fs.readFile(path);
    if(result.err === 0){
      //success
      alert(result.data); //result.data is file content
    } else {
      ...// fail
    }

-   Read file with base64 encoding mode in which the read data after
      readFile  called is converted to a base-encoded string. You need
    to decode this string to any format you want. The following is an
    example

    var path = "/tmp/test";
    result = window.cep.fs.readFile(path, cep.encoding.Base64);
    if(result.err === 0){
      //success
      var base64Data = result.data;
      var data = cep.encoding.convertion.b64_to_utf8(base64Data);
    } else {
      ...// fail
    }

-   Create a process and check if it’s running.

    var result = window.cep.process.createProcess("usr/X11/bin/xterm");

    if(result.err === 0){
      var pid = result.data;
      result = window.cep.process.isRunning(pid);
      if(result.data === true){
        // running
      }
    }

You could use other APIs like delete folder, rename folder, set file
permission, delete file, show file open dialog, quit process, etc.

We have the following samples that demonstrate use of some of these
APIs:

-   https://github.com/Adobe-CEP/Samples/tree/master/Flickr
-   https://github.com/Adobe-CEP/Samples/tree/master/Collage
-   https://github.com/Adobe-CEP/CEP-Resources/tree/master/CEP_8.x/Samples

Localization #

In order to support localization, both the extension and the host
application must provide locale information. There are two distinct
types of locale information.

-   The License Locale (returned as the applicationLocale by the AMT
    library)
-   The Effective/Language/UI Locale (which is controlled by the user in
    the OS settings).

The extension must provide the list of supported locales for both the
License Locale and the Language Locale via the   HostEnvironment  . This
is particularly important in cases where the extension has features for
a specific locale.   PlugPlug  library expects the host application to
provide the locale information as part of the environmental data.

JavaScript API   HostEnvironment  has the   appLocale  property in
place.

License Locale and locales supported by extension #

CEP checks the License Locale of host application against supported
locales declared in extensions locale list to determine if the extension
is loadable for the host application.

Locale folder structure #

Each property file should be placed in its corresponding locale folder.
For example, the en_US property file should be
  <YourExtension>/locale/en_US/messages.properties  . Users can define a
default property file (   <YourExtension>/locale/messages.properties  ),
which will be used when the corresponding locale file is not defined.

    YourExtension/
         |-csxs/
         |-locale/                      <-- Directory for localized resources
             |-- messages.properties    <-- The one to fallback to if no localized resources is provided for a locale
             |-- en_US/
             |        |- messages.properties
             |-- zh_CN/
                      |- messages.properties

A locale file contains multiple lines of   <key>=<value>  . There should
be a new line below the last property key/value.

    key1=value1
    key2=value2
    key3.value=value3
    key4.innerHTML=value4

CEP provides a JS interface named   initResourceBundle  to initialize
the locale resources. This should be called during the loading of the
extension. CEP initializes the resource bundle for the extension with
property values for the current application and UI locale. Then users
can access the resource bundle (object) to get the localized strings.

    var csInterface = new CSInterface();
    csInterface.initResourceBundle();

Sharing localization resources across multiple locales #

CEP 6.0 provided a mechanism to allow multiple locales to share the same
localization resources (   messages.properties  ).

For example, you want   es_MX  to use the   messages.properties  for
  es_ES  . To do so, supply a file named   fallback.properties  in the
  es_MX  folder as illustrated below.

    YourExtension/
         |-csxs/
         |-locale/
             |-- messages.properties
             |-- es_ES/
             |        |- messages.properties
             |-- es_MX/
                      |- fallback.properties

In the   fallback.properties  file, you specify which locale’s localized
resources you want es_MX to use, in below format

    fallback=es_ES

Side Notes:

-   The   fallback.properties  file takes precedence when both
      messages.properties  and   fallback.properties  exist at the same
    time.
-   If   fallback.properties  is malformed, or it specifies a
    non-existent fallback locale, the messages.properties file in the
    same directory will be used.

Localized menu #

In manifest, it supports to use locale string as menu. For example, in
ShareOnBehance’s manifest, it is using   %UI_share_on_Behance  .
  UI_share_on_Behance  is defined as   UI_share_on_Behance=xxx  in
  messages.properties  .

    <UI>
        <Type>ModalDialog</Type>
        <Menu>%UI_share_on_Behance</Menu>
        ...
    </UI>

Examples #

Example 1 #

    var cs = new CSInterface();
    // Get properties according to current locale of host application.
    var resourceBundle = cs.initResourceBundle();
    // Use the localized strings.
    <script type="text/javascript">document.write(resourceBundle.key1);</script>

Example 2 #

  data-locale  is the custom HTML element attribute and you can add to
each HTML element that you want to localize.

In this example, there is   key3.value=value3  in the property file. In
the HTML file, the input widget has attribute   data-locale  with
  key3  , then its value is set to   value3  .

In this example, there is   key4.innerHTML=value4  in the property file.
In the HTML file, the text area widget has attribute   data-locale  with
  key4  , then its   innerHTML  is set to   value4  .

    <script type="text/javascript">
      var cs = new CSInterface();

      // Get properties according to current locale of host application.
      var resourceBundle = cs.initResourceBundle();

      // Use the localized strings.
      document.write(resourceBundle.key1);
      document.write(resourceBundle.key2);
    </script>

    <input type="submit" value="" data-locale="key3"/>
    <textarea rows="10" cols="80" data-locale="key4"></textarea>

Example 3 #

Use parameters   ($1,   $2,   ...)  in localized strings.

    var localize = function(key){
      var cs = new CSInterface();
      var resourceBundle = cs.initResourceBundle();
      var localizedStr = resourceBundle[key];
      if (localizedStr){
        var index = 1;
        while (localizedStr.indexOf("$" + index) !== -1){
          localizedStr = localizedStr.replace("$" + index, arguments[index]);
          index++;
        }
        return localizedStr;
      } else {
        return '';
      }
    };

Supporting MENA locales #

MENA stands for “Middle East and North Africa”. Support needs to be
provided for Arabic, Hebrew, and NA French languages.

  -----------------------------------------------------------------------
  Language                                                   ISO Code
  ---------------------------------------------------------- ------------
  Arabic (Middle East Enabled English Arabic)                en_AE

  Hebrew (Middle East Enabled English Hebrew)                en_IL

  NA French                                                  fr_MA
  -----------------------------------------------------------------------

If an extension needs to be loaded in host applications in MENA locales,
MENA locales must be added to the supported locale list of the extension
manifest file. For example:

    <LocaleList>
        ...
        <Locale Code="en_AE"/>
        <Locale Code="en_IL"/>
        <Locale Code="fr_MA"/>
        ...
    </LocaleList>

Extension localization for MENA locales #

Suppose your extension has this directory layout

    Extension/
             |-csxs/
             |-locale/                                <-- Directory for localized resources
                     |-- messages.properties          <-- The one to fallback to if no localized resources is provided for a locale
                     |-- fr_FR/
                     |        |- messages.properties
                     |-- en_GB/
                              |- messages.properties

When   CSInterface.initResourceBundle()  is called, CEP uses the app UI
locale (not app locale) reported by PP to load localized resources. If
there is no localized resources for an app UI locale, for example
  fr_MA  , then CEP will fall back to use   messages.properties  located
under the   locale  folder.

With MENA feature, point products map   en_AE/en_IL  to   en_US  and
  fr_MA  to   fr_FR  for app UI locale. In this case, for   en_AE  and
  en_IL  build of point product,   en_US  resources will be used if
provided and for   fr_MA  build of point product,   fr_FR  resources
will be used if provided. What extension team needs to do in this case
is to provide   en_US  version of resources for   en_AE/en_IL  and
  fr_FR  version of resources for   fr_MA  .

Video/Audio Playback #

CEP 5.0 supports playing video and audio encoded in below formats.

  --------------------------------------------------------------------------
  Format   MIME-Type    Misc.
  -------- ------------ ----------------------------------------------------
  MP4      video/mp4    MPEG 4 files with H.264 video codec and AAC audio
                        codec

  Ogg      video/ogg    Ogg files with Theora video codec and Vorbis audio
                        codec

  mp3      audio/mpeg   
  --------------------------------------------------------------------------

Here is an example of playing video in your extension:

    <video poster="http://www.html5rocks.com/en/tutorials/video/basics/star.png" controls>
        <source src="http://www.html5rocks.com/en/tutorials/video/basics/Chrome_ImF.mp4" type='video/mp4; codecs="avc1.42E01E, mp4a.40.2"'/>
    </video>

One thing to note is that because HTML extensions are hosted in
integrating application’s windows, video cannot be played in full-screen
mode.

WebRTC #

WebRTC is targeting to serve stream audio, video capture, like online
video conference. WebRTC is not enabled by default. To enable it, the
schema below need to be added in manifest file. For details, refer to
Customize CEF command parameters.

    <CEFCommandLine> <Parameter>--enable-media-stream</Parameter> </CEFCommandLine>

For WebRTC related development, CEP runtime just keeps the same
experiences as the usage in Chrome. Please refer to samples for the
implementation.

Scroll bar tips #

On Mac, scroll bars of panel are hidden by OS (since Lion by design). It
can be always shown by settings as below.

1.  Click the Apple menu at the top-left of the screen, then select
    System Preferences.
2.  Next, select the General preferences pane; it’s the very first one,
    up at the top.
3.  Under the “Show scroll bars” heading, you’ll find three options:
    “Automatically based on input device,” “When scrolling,” and
    “Always.” Chose “Always.”

Invisible HTML Extensions #

An HTML extension can be invisible during its whole life cycle. This
means

-   It always runs in the background
-   It is never visible

To make an HTML extension invisible

-   Set extension manifest version to “5.0” or higher.
-   Specify its window type as ‘Custom’ in the manifest file.
-   Set   <AutoVisible>  to false in the manifest file.
-   If you do not want the extension to appear in the Window->Extensions
    menu, do not add the   <Menu>  tag.
-   If you want the extension to start on specific types of events,
    specify those events using   <StartOn>  tag.

Here is an example:

    <?xml version="1.0" encoding="UTF-8" standalone="no"?>
    <ExtensionManifest xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" ExtensionBundleId="IamInvisible" ExtensionBundleVersion="1.0" Version="5.0">
        <ExtensionList>
            <Extension Id="IamInvisible" Version="1.0"/>
        </ExtensionList>
        <ExecutionEnvironment>
            <HostList>
                <Host Name="PHXS" Version="13.0"/>
            </HostList>
            <LocaleList>
                <Locale Code="All"/>
            </LocaleList>
            <RequiredRuntimeList>
                <RequiredRuntime Name="CSXS" Version="5.0"/>
            </RequiredRuntimeList>
        </ExecutionEnvironment>
        <DispatchInfoList>
            <Extension Id="IamInvisible">
                <DispatchInfo>
                    <Resources>
                        <MainPath>./html/index.html</MainPath>
                    </Resources>
                    <Lifecycle>
                        <AutoVisible>false</AutoVisible>
                        <StartOn>
                            <!-- Photoshop dispatches this event on startup -->
                            <Event>applicationActivate</Event>
                            <!-- Premiere Pro dispatches this event on startup -->
                            <Event>com.adobe.csxs.events.ApplicationActivate</Event>
                            <!-- You can add more events -->
                            <Event>another_event</Event>
                        </StartOn>
                    </Lifecycle>
                    <UI>
                        <Type>Custom</Type>
                        <Geometry>
                            <Size>
                                <Height>1</Height>
                                <Width>1</Width>
                            </Size>
                        </Geometry>
                    </UI>
                </DispatchInfo>
            </Extension>
        </DispatchInfoList>
    </ExtensionManifest>

One important thing to note is that not all host applications support
Invisible HTML Extension. See table below for more information:

  -----------------------------------------------------------------------
  Point Product           Supports Invisible      Misc.
                          Extension               
  ----------------------- ----------------------- -----------------------
  Photoshop               Yes                     

  Premiere Pro            Yes                     

  Prelude                 Yes                     

  Animate (Flash Pro)     Yes                     

  Audition                Yes                     

  InDesign                No                      Doesn’t work at all
                                                  because InDesign
                                                  doesn’t support
                                                  ‘Custom’ window type.

  InCopy                  No                      Doesn’t work at all
                                                  because InCopy doesn’t
                                                  support ‘Custom’ window
                                                  type.

  Illustrator             Yes                     
  -----------------------------------------------------------------------

Customize CEF Command Line Parameters #

Chromium/CEF command line parameters can be passed to CEPHtmlEngine,
like –enable-media-stream. Available Chromium command line parameters .

CEP filters out some parameters due to various reasons:

  -----------------------------------------------------------------------
  Parameters                          What is it filtered out?
  ----------------------------------- -----------------------------------
  –remote-debugging-port              This could overwrite the one in
                                      .debug file. Filter out to avoid
                                      conflict.

  –ignore-certificate-errors          This ignores SSL certificate
                                      errors. It is a security concern to
                                      ignore invalid server certificate,
                                      which allows extensions to load
                                      files from malicious sites.
  -----------------------------------------------------------------------

All other parameters are passed to underlying CEF. It is up to CEF to
decide whether a parameter is supported and what is the behavior.

How to use CEF command line parameters #

-   Add
      <CEFCommandLine><Parameter>--param1<Parameter/>   ...   </CEFCommandLine> 
    in manifest.
-   For   key=value  parameter, add
      <CEFCommandLine><Parameter>--param1=value1<Parameter/>   ...   </CEFCommandLine> 
    in manifest.

Here is an example:

    <?xml version="1.0" encoding="UTF-8" standalone="no"?>
    <ExtensionManifest xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" ExtensionBundleId="xx.yy.zz" ExtensionBundleVersion="1.0" Version="5.0">
        <ExtensionList>
            <Extension Id="xx.yy.zz" Version="1.0"/>
        </ExtensionList>
        <ExecutionEnvironment>
            <HostList>
                <Host Name="PHXS" Version="13.0"/>
                <Host Name="PPRO" Version="6.0"/>
            </HostList>
            <LocaleList>
                <Locale Code="All"/>
            </LocaleList>
            <RequiredRuntimeList>
                <RequiredRuntime Name="CSXS" Version="5.0"/>
            </RequiredRuntimeList>
        </ExecutionEnvironment>
        <DispatchInfoList>
            <Extension Id="xx.yy.zz">
                <DispatchInfo>
                    <Resources>
                        <MainPath>./html/index.html</MainPath>
                        <CEFCommandLine>
                            <Parameter>--enable-media-stream</Parameter>
                        </CEFCommandLine>
                    </Resources>
                    ...
                </DispatchInfo>
            </Extension>
        </DispatchInfoList>
    </ExtensionManifest>

Commonly used CEF command parameters #

  -----------------------------------------------------------------------
  Parameters                          Notes
  ----------------------------------- -----------------------------------
  –enable-media-stream                Enable media (WebRTC audio/video)
                                      streaming.

  –enable-speech-input                Enable speech input
                                      (x-webkit-speech).

  –persist-session-cookies            Persist session cookies.

  –disable-image-loading              Disable loading of images from the
                                      network. A cached image will still
                                      be rendered if requested.

  –disable-javascript-open-windows    Disable opening of windows via
                                      JavaScript.

  –disable-javascript-close-windows   Disable closing of windows via
                                      JavaScript.

  –disable-javascript-access-clipbo   Disable clipboard access via
  ard                                 JavaScript.

  –enable-caret-browsing              Enable caret browsing.

  –proxy-auto-detect                  This tells Chrome to try and
                                      automatically detect your proxy
                                      configuration. See more info at
                                      http://www.chromium.org/developer
                                      s/design-documents/network-settin
                                      gs.

  –user-agent                         A string used to override the
                                      default user agent with a custom
                                      one.

  –disable-application-cache          Disable the ApplicationCache.

  –enable-nodejs                      Enable Node.js APIs in extensions.
                                      Supported since CEP 6.1.

  –disable-pinch                      Disable compositor-accelerated
                                      touch-screen pinch gestures.

  –mixed-conext                       Enable the “mixed context” mode.
                                      Supported since CEP 7.0.
  -----------------------------------------------------------------------

HTML Extension Persistent #

The purpose of persistent is to force not reload HTML extension when it
is closed or hidden. Photoshop has provided persistent since the version
14.2. Please note that, this feature is product specific and may not be
available in few host applications.

InDesign and InCopy support persistent feature from version 13.1.
Following are the specific event names to be used: Indesign and Incopy:
com.adobe.InDesignPersistent com.adobe.InDesignUnPersistent

To make an HTML extension persistent in Photoshop

-   Upgrade Photoshop version to 14.2 or later
-   Dispatch the event   com.adobe.PhotoshopPersistent  from HTML
    extension to Photoshop to request persistent

Sample code:

    var Persistent = function(inOn){
      if(inOn){
        var event = new CSEvent("com.adobe.PhotoshopPersistent", "APPLICATION"); //Photoshop
        //var event = new CSEvent("com.adobe.InDesignPersistent", "APPLICATION"); //Indesign or Incopy
      } else {
        var event = new CSEvent("com.adobe.PhotoshopUnPersistent", "APPLICATION"); //Photoshop
        //var event = new CSEvent("com.adobe.InDesignUnPersistent", "APPLICATION"); //Indesign or Incopy
      }
      event.extensionId = <extension id as per manifest definition>;
      csInterface.dispatchEvent(event);
     }

    Persistent(true); //persistent to prevent extension from unloading
    …
    Persistent(false); //unpersistent

Open URL link in default browser #

In HTML extension, URL link could be opened in the default browser by
calling   window.cep.util.openURLInDefaultBrowser(‘http://example.com') 
:

    <li><button onclick="window.cep.util.openURLInDefaultBrowser('http://www.adobe.com')">Open browser</button></li>

Interaction between extension and point product during extension unload #

When an extension is about to be unloaded, the communication channel
between extension and point product has been torn down, so there’s no
easy way for point product to get the extension-related information such
as the extension’s status.

To fulfill this functionality, the cooperation between extension and
point product is needed.

From extension’s side, a JavaScript function
  registerExtensionUnloadCallback  is provided to register its callback
function. The definition can be found at
https://github.com/Adobe-CEP/CEP-Resources/blob/CEP8/CEP_8.x/CEPEngine_extensions.js
. There’re some limitations as below:

-   If registerExtensionUnloadCallback is called more than once, the
    last callback function that’s successfully registered will be used.
-   The callback function must be context-independent and it is executed
    in the mainframe’s context.

Example

    window.cep.util.registerExtensionUnloadCallback(function(){
    window.cep.fs.writeFile("D:\\1.txt", "Hello");
    });

From point product’s side,
  csxs::event::EVENT_TYPE_CSXS_EXTENSION_UNLOADED   ("com.adobe.csxs.events.ExtensionUnloaded") 
is dispatched. When point product receives the event, it can read the
file written by extension to get the extension-related information.

Since the execution in the extension and the point product is in
parallel, the point product needs to take care of the order.

The above method does not work due to the multi-process architecture in
CEF 3.

Using Node.js APIs (CEP 6.0 and prior releases) #

Node.js Support #

One of the most prominent feature in CEP 5.0 is allowing Node.js APIs to
be used in HTML extensions. Most of the built-in APIs in Node.js version
0.8.22 are available to HTML extensions, with the below exceptions:

-   Cluster APIs are not supported.
-   Console APIs are not supported on Windows.

Other things to note:

-   CEP injects following symbols into the root HTML DOM:
    -   global, GLOBAL, root - same with the window object
    -   Buffer - node’s Buffer class
    -   process - node’s process class
    -   require - the magic function that bring you node API
    -   module - in node the main script is a special module, this is
        for the compatibility
-   Conflicts with Web-Based Require Function
    -   If your app uses libraries like   RequireJS  that inserts a
        require function into DOM, you should consider renaming CEP’s
        require function to something else before migrating.

    <script type="text/javascript">windows.nodeRequire=window.require && window.require=undefined</script>
    <script type="text/javascript" src="your/require/js/file.js"></script>

-   Conflicts with Web-Based module Function
    -   If your app uses   JQuery  that is trying to register itself as
          nodejs  plugin, then you will have to add the script below
        inside script tag to define window.module as undefined.

    <script type="text/javascript">window.module = undefined</script>

-   Disable Node.js APIs in iframe
    -   Because of security consideration, CEP provides an option to
        disable Node.js APIs in iframe. To do so, add a
          nodejs-disabled="true"  attribute to iframe tag. For example:

    <iframe id="xxx" class="xxxxx" nodejs-disabled="true">

-   Forcing the environment implementation. If you are using
      RequireJS  , and the text plugin tries to detect what environment
    is available for loading text resources,   Node  ,
      XMLHttpRequest   (XHR)  or   Rhino  , but sometimes the   Node  or
      Rhino  environment may have loaded a library that introduces an
      XHR  implementation. You can force the environment implementation
    to use by passing an   "env"  module config to the plugin:

    requirejs.config({
       config: {
       text: {
          //Valid values are 'node', 'xhr', or 'rhino'
           env: 'rhino'
          }
       }
    });

Node.js Modules #

JavaScript Modules #

All third-party node JavaScript modules are supported. The root search
path of third-party modules is the directory which contains your HTML
file. For example, when you do require in
  file:///your_extension/index.html  , CEP will lookup modules under
  file:///your_extension/node_modules  , this rule is exactly the same
with upstream node.

Native Modules #

Node.js native modules are not directly supported since CEP is using a
different V8 version from the official node.

Samples #

Use Environment Variables #

    process.env.ENV_VARIABLE // ENV_VARIABLE is the name of the variable you want to access.

Use Node.js to download files #

-   http://www.hacksparrow.com/using-node-js-to-download-files.html

Using Node.js APIs (CEP 6.1) #

Node.js Support #

CEP 6.1 upgraded its HTML engine to CEF 2272 (based on Chromium
41.0.2272.104) with IO.js version 1.2.0 integrated.

Other things to note:

-   Node.js APIs are disabled by default
    -   Due to security consideration, node.js APIs are disabled by
        default (prior to CEP 6.1, they were enabled by default) both on
        the extension level and iFrame level.

To enable Node.js APIs:

-   Set   ExtensionManifest  version and   RequiredRuntime  version 5.0
    or higher.
-   Specify   --enable-nodejs  in extension manifest. See section
    Customize CEF Command Line Parameters for details.
-   To use   Node.js  APIs in IFrames, add property   enable-nodejs  to
    it and to all its ancestor iFrames. If any of its ancestors don’t
    have this property specified,   Node.js  APIs won’t work

    <iframe id="xxx" class="xxxxx" enable-nodejs>

-   The old   nodejs-disabled  CEF command line parameter and iFrame
    property are no longer supported and ignored by the new HTML engine.
-   Node context and Browser context
    -   The way   io.js  was integrated into CEF introduced two types of
        JavaScript contexts, one for browser, the other for   io.js  .
        Global objects created in HTML pages are in browser context,
        while   required  js files run in   io.js  context. These two
        contexts don’t have direct access to each other’s data. To share
        data, pass reference to objects between the two contexts:
        -   Accessing objects in   io.js  context from browser context -
            For example, in browser context,
              var   backbone   =   require('backbone');  executes the
            backbone module’s code and then pass the result object to
            browser context.
        -   Accessing objects in browser context from   io.js  context -
            Browser context’s   window  global object is injected to
              io.js  context, providing a way to access objects in
            browser context from   io.js  context. For example, if you
            want to access a global object named   localeStrings 
            defined in browser context from your   io.js  module, use
              window.localStrings  in your   io.js  module.

Using Node.js APIs (CEP 7.0) #

In addition to the existing   Node.js  support in CEP 6.1, CEP 7.0
provided a new   mixed   context    Node.js  mode. Unlike the
  separate   context  mode in CEP 6.1 where a   required  node module is
in a separate JavaScript context, a   required  node module and the
JavaScript code that   requires  it are in the same context in the new
  mixed   context  mode, eliminating all the inconveniences in the old
  separate   context  mode.

This mode is disabled by default. To enable it, add command line
parameter   --mixed-context  to your extension manifest.

    <Parameter>--mixed-context</Parameter>

Limitation of cep.process.stdout/stderr #

There is a known limitation of   cep.process.stdout/stderr  which is
targeting to capture one time of   stdout/stderr  output.

For applications that has not integrated CEP 5, there are two
workarounds suggested as the following.

-   Embed cep.process.stdout/stderr:

    var getSTDOutput = function(){
      console.log("getSTDOutput");
      window.cep.process.stdout(pid, function(output){
      console.log(output);
      // your code is here
      });

      var result = window.cep.process.isRunning(pid);
      if (result.data === true){
        setTimeout(getSTDOutput, 1000);
      }
    }

-   Join all stdout output as one, like below

    var str1 = 'abcdef';
    var str2 = '12345';
    var str3 = 'gghhtt';
    console.log(str1 + str2 + str3);

An example on how to get curl downloading progress through stderr:

    <script>
            var downloadPid = -1;
            function getStdErrOutput()
            {
                window.cep.process.stderr(downloadPid, function(progress) {
                                          var keys = progress.split(new RegExp('[# ]', 'g'));
                                          for(i=0; i<keys.length; i++){
                                            if (keys[i] != '') {
                                             console.log(keys[i]);
                                            }
                                          }
                                        });
                var result = window.cep.process.isRunning(downloadPid);
                if (result.data == true)
                {
                    setTimeout(getStdErrOutput, 100);
                }
            }
            var doDownload = function() {
                var qURL = 'http://code.jquery.com/jquery-1.11.0.min.js';
                var dest = '/tmp/test.js';
                console.log("ext download (curl) " + qURL + " " + dest);
                var result = window.cep.process.createProcess('/usr/bin/curl', qURL, '-#', '-o', dest);
                downloadPid = result.data;
                console.log("download pid is " + downloadPid);
                getStdErrOutput();
            };

            doDownload();
    </script>

Since CEP 5, Node.js is integrated into CEP runtime and users could
invoke the standard APIs of   Node.js  in extension directly. For
applications that has integrated CEP 5, refer to
http://nodejs.org/api/process.html on how to use the global process
object in   Node.js  .

Adobe Exchange #

Sample extension is at
https://github.com/Adobe-CEP/Samples/tree/master/ExchangeExample .

Other JavaScript Information #

Load Multiple JSX files #

JSX files normally define some functions and objects which are intended
to be executed in host application’s ExtendScript environment.

There are two approaches for HTML extension to trigger JSX files to be
loaded in host application’s ExtendScript.

-   Define   <ScriptPath>  node in   manifest.xml  , and the value of
    the node is the relative path for the JSX file. For example:

    Extension Id="com.adobe.CEPHTMLTEST.Panel1">
    <DispatchInfo>
           <Resources>
               <MainPath>./html/index.html</MainPath>
                <CEFCommandLine>
                    <Parameter>--enable-speech-input</Parameter>
                    <Parameter>--enable-media-stream</Parameter>
                </CEFCommandLine>
                    <ScriptPath>./jsx/example.jsx</ScriptPath> <!-- ExtensionRootPath/jsx/example.jsx -->
                </Resources>
            ...........................
        </DispatchInfo>
    </Extension>

-   HTML extension uses CEP JavaScript API   evalScript  with the script
      $.evalFile(jsxFile)  to trigger JSX files to get loaded in host
    application’s ExtendScript. Developers may need more script code to
    determine the path of   jsxFile  before the   evalScript  call. For
    example, they may refer to   $.fileName  to find out the path and
    the value of   $.fileName  should be the currently executed   JSX 
    file path. Here is an example:

    var extensionPath = $.fileName.split('/').slice(0, -1).join('/') + '/';  // The value of $.fileName should be ExtensionRootPath/jsx/example.jsx as mentioned above, while the value of extensionPath should be "ExtensionRootPath/jsx/"
    $.evalFile(extensionPath + 'example1.jsx');
    $.evalFile(extensionPath + 'example2.jsx');
    $.evalFile(extensionPath + 'example3.jsx');

But if the   $.fileName  is referred in the FIRST LOADED JSX file, the
value is not correct. That is to say, if the snippet above runs in
  example.jsx  which is referred in the   manifest.xml  , the error will
arise. So, PLEASE AVOID using   $.fileName  in the FIRST LOADED JSX
file, maybe this is a limitation in ExtendScript. The workaround is to
refer it in the second loaded and afterward JSX files. For example:

    // After finishing loading the jsx file refered in the manifest.xml, please use evalScript of CSInterface to load other jsx files.
    // "anotherJSXFile" is not the first loaded jsx file, so the value of "$.fileName" in it's stage is correct.
    CSInterface.evalScript('$.evalFile(anotherJSXFile)', callback);

    // Or in the first loaded jsx file, load another jsx file, and the value of "$.fileName" is correct in this file.
    // Given the code is running this example.jsx which is referred in the manifest.xml.
    // In the stage of "hardCodeJSXFile", the value of "$.fileName" is correct too.
    $.evalFile(hardCodeJSXFile);

Note: Since the script in this section is intended to be executed in
host application’s ExtendScript,   $  in this section is different from
jquery global variable   $  .

Please use “namespace” if the developers want to define new
variable/function/object in Global Space or   $  object. If the same
name defined in multiple JSX files, the definition in the last loaded
JSX file will take effect, and the definition in the previous loaded JSX
files will be overridden. For example,   $.ext  is defined in a.jsx,
b.jsx and c.jsx, and in a.jsx   $.ext  is a function, in b.jsx   $.ext 
is an object and in c.jsx   $.ext  is a string, and the load sequence is
a.jsx->b.jsx->c.jsx, after loading,   $.ext  is a string, rather than an
object or a function. And this behavior will be across multiple
extension running in the same point product, for example, if a.jsx,
b.jsx and c.jsx belong to extension a,b,c separately, and extension
loading order is extension a-> extension b-> extension c,   $.ext  will
be still a string, rather than a function or an object.

Drag and Drop #

Use Drag and Drop #

CEP 5.2 support HTML 5 Drag and Drop. There are four types.

1.  Drag and drop inside HTML extension.
2.  Drag and drop between two HTML extensions
3.  Drag and drop between HTML extension and its host application.
4.  Drag and drop between HTML extension and operating system
    (e.g. Desktop or Browser).

To learn about HTML 5 Drag and Drop and how to use it by JavaScript,
please refer to http://www.w3.org/TR/html5/editing.html#dnd .

Here are some demos.

-   http://www.w3schools.com/html/html5_draganddrop.asp
-   http://html5demos.com/

Disable Drag and Drop #

Extension developers can disable the default behavior of DnD by
JavaScript.

Method 1

    <body ondragover="return false" ondrop="return false">

Method 2 (using jQuery)

    $(document.body).on('dragover drop', function(e) {
      e.preventDefault();
    });

Please read HTML 5 standard for more details.
http://www.w3.org/TR/html5/editing.html#event-dragenter

External JavaScript Libraries #

CEP HTML Engine does not restrict using any extension JavaScript
libraries. As long as a library can be used in CEF Client or Chrome
browser, it should be usable in CEP HTML Engine.

Here are some JavaScript which had been used successfully

-   JQuery - http://jquery.com/
    -   Please refer to Node.js section about resolving symbol
        conflicts.
-   RequireJS - http://requirejs.org/
    -   Please refer to Node.js section about resolving symbol
        conflicts.
-   spin.js - http://fgnass.github.com/spin.js/
-   Modernizr - http://modernizr.com/
    -   Modernizr is a JavaScript library that detects HTML5 and CSS3
        features in the user’s browser.

NPAPI plug-ins #

The support for NPAPI plug-ins had been dropped since CEP 4.2. Although
it is still supported by CEP 4.0 and 4.1, but as all the products are
moving to CEP 4.2, we suggest developers not use it.

Don’t embed Java Applet in your extension as they all depend on NPAPI
plug-in.

Increase/Decrease font size in HTML Panel #

There are couples of JavaScript ways to increase or decrease font size
in HTML panel either by plain JavaScript or JQuery. The following is the
two pieces of sample snippet to achieve this. One is in plain JavaScript
and the other uses JQuery library.

-   Plain JavaScript - Use   document.body.style.fontSize  to change
    font size in page.

    <script type="text/javascript" language="javascript">
        window.onload = function() {
            var fontchange = document.createElement("div");
            var fontchangelink = function(fontsize, desc) {
                var a = document.createElement('a');
                a.href="#";
                a.style.margin = "5px";
                a.onclick = function() {
                    document.body.style.fontSize = fontsize + 'pt';
                };
                a.innerHTML = desc;
                return a;
            };

            fontchange.appendChild(document.createTextNode("Change font size:"));
            fontchange.appendChild(fontchangelink(9, "1"));
            fontchange.appendChild(fontchangelink(11, "2"));
            fontchange.appendChild(fontchangelink(13, "3"));

           document.body.insertBefore(fontchange, document.body.childNodes[0]);
        };
    </script>

-   JQuery - Use   $('html').css('font-size',   size)  to change font
    size in page.

    <script type="text/javascript" language="javascript">
            $(document).ready(function(){
                  // Reset Font Size
                  var originalFontSize = $('html').css('font-size');
                  $(".resetFont").click(function(){
                    $('html').css('font-size', originalFontSize);
                  });

                  // Increase Font Size
                  $(".increaseFont").click(function(){
                     var currentFontSize = $('html').css('font-size');
                     var currentFontSizeNum = parseFloat(currentFontSize, 10);
                     var newFontSize = currentFontSizeNum*1.2;
                     $('html').css('font-size', newFontSize);
                     return false;
                  });

                  // Decrease Font Size
                  $(".decreaseFont").click(function(){
                     var currentFontSize = $('html').css('font-size');
                     var currentFontSizeNum = parseFloat(currentFontSize, 10);
                     var newFontSize = currentFontSizeNum*0.8;
                     $('html').css('font-size', newFontSize);
                     return false;
                  });
             });
    </script>

The ways above are the common used solution for JavaScript developers to
increase or decrease fonts.

JavaScript Tips #

Check Internet Connection #

    if (navigator.onLine === true)
    {
      //system is online
    }
    else
    {
      //system is offline
    }

Set Mouse Cursor #

Please refer to http://jsfiddle.net/BfLAh/1390/

    $(document).mousemove(function(e){
        $("#image").css({left:e.pageX, top:e.pageY});
    });

iframe #

Due to the X-Frame-Options header a number of HTTPS websites are
unavailable to host in an iframe. An alternative to displaying HTTPS
content is to use the   window.location.href  e.g.

iFrame alternative for HTTPS content

    // html
    <body onLoad="onLoaded()">
    <!--iframe src="https://www.trello.com"></iframe--> <!-- this line can be deleted as HTTPS blocks content being displayed in an iframe -->
    </body>

    // javascript
    function onLoaded() {
      window.location.href = "https://www.trello.com";
    }

Tooltip #

CEP 5.2 supports HTML title attribute to show the tooltip on Windows.
However, it’s not supported on Mac due to off-screen rendering. The
alternative is use JavaScript instead, please refer to
http://www.a2zwebhelp.com/bootstrap-tooltips for good examples.

CEPHtmlEngine #

Multi-process Architecture #

CEP and the underlying Chromium have multi-process architecture. Each
CEP extension runs in a separate CEP HTML Engine, which might have three
processes - one main/browser process, one renderer process, and one GPU
process. On Max OSX, the main process is named   CEPHtmlEngine  , and
the other two process are named   CEPHtmlEngine   Helper  . On Windows,
all the three processes are named   CEPHtmlEngine.exe  . As long as the
extensions are well implemented, having multiple processes should not be
a performance problem.

You can find what extension a CEP HTML Engine process belongs to by
checking its command line parameters. On Mac OSX, please use
  ps   -ef   |   grep   CEPHtmlEngine  in a terminal to check the
command line. On Windows, please refer to
http://superuser.com/questions/415360/how-do-i-find-out-command-line-arguments-of-a-running-program
to check the command line. The browser process does not have   --type 
in the command line, while the renderer process and the GPU process have
  --type=renderer  and   --type=gpu-process  in the command line.

Ports opened in CEPHtmlEngine #

If you use TCPView to monitor   CEPHtmlEngine  process, you may see some
ports are opened in localhost. Most of the ports are opened internally
in Chromium code for   websocket  , which is initiated by HTML extension
instead of   CEPHtmlEngine  itself. You can use RawCap to capture the
data in *.pcap file and open it in Wireshark to examine the details.

CEF/Chromium Issues #

-   HTML ``<datalist>` tag is not supported <
    https://bitbucket.org/chromiumembedded/cef/issues/906 >`__
-   HTML5 input type color is not supported

Miscellaneous #

Developers can use the following forums and github repositories to ask
questions and create bugs/feature requests

-   https://forums.adobe.com/community/creativesuites/extensionbuilder
-   https://github.com/Adobe-CEP/CEP-Resources/issues
-   https://github.com/Adobe-CEP/Samples/issues
-   https://www.adobeprerelease.com

Contribution #

If you like to contribute for extension development, please raise your
PR at https://github.com/Adobe-CEP
# downloaded Index#
Index

A | C | D | E | G | H | M | R | S | U | V

A

+-----------------------------------+-----------------------------------+
| -   ApiVersion() (class)          | -   AppSkinInfo() (class)         |
+-----------------------------------+-----------------------------------+

C

+-----------------------------------+-----------------------------------+
| -   ColorType() (class)           | -                                 |
| -   ColorType.GRADIENT (ColorType |    CSInterface.getOSInformation() |
|     attribute)                    |     (CSInterface method)          |
| -   ColorType.NONE (ColorType     | -   CSInterface.getScaleFactor()  |
|     attribute)                    |     (CSInterface method)          |
| -   ColorType.RGB (ColorType      | -   CSInterface.getSystemPath()   |
|     attribute)                    |     (CSInterface method)          |
| -   ContextMenuItemStatus()       | -   CSInterface.getWindowTitle()  |
|     (class)                       |     (CSInterface method)          |
| -   CSEvent() (class)             | -   CSInterface.hostEnvironment   |
| -   CSEvent.data (CSEvent         |     (CSInterface attribute)       |
|     attribute)                    | -                                 |
| -   CSInterface() (class)         |  CSInterface.initResourceBundle() |
| -                                 |     (CSInterface method)          |
|    CSInterface.addEventListener() | -   CSInterface.isWindowVisible() |
|     (CSInterface method)          |     (CSInterface method)          |
| -   CSInterface.closeExtension()  | -   CSIn                          |
|     (CSInterface method)          | terface.openURLInDefaultBrowser() |
| -   CSInterface.dispatchEvent()   |     (CSInterface method)          |
|     (CSInterface method)          | -   CSInterface.reg               |
| -   C                             | isterInvalidCertificateCallback() |
| SInterface.dumpInstallationInfo() |     (CSInterface method)          |
|     (CSInterface method)          | -   CSInte                        |
| -   CSInterface.evalScript()      | rface.registerKeyEventsInterest() |
|     (CSInterface method)          |     (CSInterface method)          |
| -                                 | -                                 |
|    CSInterface.getApplicationID() | CSInterface.removeEventListener() |
|     (CSInterface method)          |     (CSInterface method)          |
| -   C                             | -   C                             |
| SInterface.getCurrentApiVersion() | SInterface.requestOpenExtension() |
|     (CSInterface method)          |     (CSInterface method)          |
| -   CSInterface.getExtensionID()  | -   CSInterface.resizeContent()   |
|     (CSInterface method)          |     (CSInterface method)          |
| -   CSInterface.getExtensions()   | -   CSInterface.setContextMenu()  |
|     (CSInterface method)          |     (CSInterface method)          |
| -                                 | -   C                             |
| CSInterface.getHostCapabilities() | SInterface.setContextMenuByJSON() |
|     (CSInterface method)          |     (CSInterface method)          |
| -                                 | -                                 |
|  CSInterface.getHostEnvironment() |  CSInterface.setPanelFlyoutMenu() |
|     (CSInterface method)          |     (CSInterface method)          |
| -   CS                            | -   CSInterfa                     |
| Interface.getNetworkPreferences() | ce.setScaleFactorChangedHandler() |
|     (CSInterface method)          |     (CSInterface method)          |
|                                   | -   CSInterface.setWindowTitle()  |
|                                   |     (CSInterface method)          |
|                                   | -   CSIn                          |
|                                   | terface.THEME_COLOR_CHANGED_EVENT |
|                                   |     (CSInterface attribute)       |
|                                   | -   CS                            |
|                                   | Interface.updateContextMenuItem() |
|                                   |     (CSInterface method)          |
|                                   | -                                 |
|                                   | CSInterface.updatePanelMenuItem() |
|                                   |     (CSInterface method)          |
+-----------------------------------+-----------------------------------+

D

+-----------------------------------------------------------------------+
| -   Direction() (class)                                               |
+-----------------------------------------------------------------------+

E

+-----------------------------------------------------------------------+
| -   Extension() (class)                                               |
+-----------------------------------------------------------------------+

G

+-----------------------------------+-----------------------------------+
| -   GradientColor() (class)       | -   GradientStop() (class)        |
+-----------------------------------+-----------------------------------+

H

+-----------------------------------+-----------------------------------+
| -   HostCapabilities() (class)    | -   HostEnvironment() (class)     |
+-----------------------------------+-----------------------------------+

M

+-----------------------------------------------------------------------+
| -   MenuItemStatus() (class)                                          |
+-----------------------------------------------------------------------+

R

+-----------------------------------+-----------------------------------+
| -   RGBColor() (class)            | -   Runtime() (class)             |
+-----------------------------------+-----------------------------------+

S

+-----------------------------------+-----------------------------------+
| -   SystemPath() (class)          | -   SystemPath.EXTENSION          |
| -   SystemPath.APPLICATION        |     (SystemPath attribute)        |
|     (SystemPath attribute)        | -   SystemPath.HOST_APPLICATION   |
| -   SystemPath.COMMON_FILES       |     (SystemPath attribute)        |
|     (SystemPath attribute)        | -   SystemPath.MY_DOCUMENTS       |
|                                   |     (SystemPath attribute)        |
|                                   | -   SystemPath.USER_DATA          |
|                                   |     (SystemPath attribute)        |
+-----------------------------------+-----------------------------------+

U

+-----------------------------------------------------------------------+
| -   UIColor() (class)                                                 |
+-----------------------------------------------------------------------+

V

+-----------------------------------+-----------------------------------+
| -   Version() (class)             | -   VersionBound() (class)        |
| -   Version.MAX_NUM (Version      | -   VersionRange() (class)        |
|     attribute)                    |                                   |
+-----------------------------------+-----------------------------------+
# downloaded Photoshop Scripting & Extension Reference 

Indices and tables #
Photoshop Scripting & Extension Reference #

The primary goal of this site was to combine all resources related to
scripting and extending Photoshop. There are many resources if you know
where to look, but getting the big picture is sometimes difficult.
Anyhow, hopefully this will shed some light on this love-hate
relationship.

-   Photoshop Scripting Documentation
    -   Core
    -   Photoshop
    -   Scriptui
-   Extension SDK Documentation (CEP)
    -   CSInterface
    -   Event Codes
    -   Overview
    -   Development and Debugging
    -   CEP JavaScript Programming
    -   Other JavaScript Information
    -   CEPHtmlEngine
    -   Miscellaneous
-   Photoshop Scripting Reseources
    -   Scripting
    -   Extensions (CEP)

Special Thanks #

-   Mike Hale
-   xbytor
-   Davide Baranca

Indices and tables #

-    Index
-    Module Index
-    Search Page
# downloaded Photoshop Scripting Reseources #
Photoshop Scripting Reseources #

Below are some helpful resources for developing scripts inside Photoshop
and CEP extensions

Scripting #

-   require.jsx
-   JSON.jsx
-   underscore.jsx
-   lodash.jsx
-   PS-Scripts

Extensions (CEP) #

-   Boilerplate Extension
-   Davide Baranca
# downloaded Photoshop Scripting Documentation #
Photoshop Scripting Documentation #

Examples and notes are provided by the community, if you would like to
contribute, Open an Issue and provide an example or correction to the
documentation.

-   Core
-   Photoshop
-   Scriptui
# downloaded #
<div id="fallback" class="admonition warning"> <p class="last"> Please
activate JavaScript to enable the search functionality. </p> </div>
# CEP CSInterface #
CSInterface #

  -     Version() 
  -     VersionBound() 
  -     VersionRange() 
  -     Runtime() 
  -     Extension() 
  -     CSEvent() 
  -     SystemPath() 
  -     ColorType() 
  -     RGBColor() 
  -     Direction() 
  -     GradientStop() 
  -     GradientColor() 
  -     UIColor() 
  -     AppSkinInfo() 
  -     HostEnvironment() 
  -     HostCapabilities() 
  -     ApiVersion() 
  -     MenuItemStatus() 
  -     ContextMenuItemStatus() 
  -     CSInterface() 

class  Version  (  major , minor , micro , special  )  #

    Version Defines a version number with major, minor, micro, and
    special components. The major, minor and micro values are numeric;
    the special value can be any string.

    +------------+--------------------------------------------------------+
    | Arguments: | -   major – The major version component, a positive    |
    |            |     integer up to nine digits long.                    |
    |            | -   minor – The minor version component, a positive    |
    |            |     integer up to nine digits long.                    |
    |            | -   micro – The micro version component, a positive    |
    |            |     integer up to nine digits long.                    |
    |            | -   special – The special version component, an        |
    |            |     arbitrary string.                                  |
    +------------+--------------------------------------------------------+
    | Returns:   | A new   Version()  object.                             |
    +------------+--------------------------------------------------------+

     Version.  MAX_NUM #

        The maximum value allowed for a numeric version component. This
        reflects the maximum value allowed in PlugPlug and the manifest
        schema.

class  VersionBound  (  version , inclusive  )  #

    VersionBound Defines a boundary for a version range, which
    associates a   Version()  object with a flag for whether it is an
    inclusive or exclusive boundary.

    +------------+--------------------------------------------------------+
    | Arguments: | -   version – The   Version()  object.                 |
    |            | -   inclusive – True if this boundary is inclusive,    |
    |            |     false if it is exclusive.                          |
    +------------+--------------------------------------------------------+
    | Returns:   | A new   VersionBound()  object.                        |
    +------------+--------------------------------------------------------+

class  VersionRange  (  lowerBound , upperBound  )  #

    VersionRange Defines a range of versions using a lower boundary and
    optional upper boundary.

    +------------+--------------------------------------------------------+
    | Arguments: | -   lowerBound – The :js:class:   VersionBound()       |
    |            |     object.                                            |
    |            | -   upperBound – The :js:class:   VersionBound()       |
    |            |     object, or null for a range with no upper          |
    |            |     boundary.                                          |
    +------------+--------------------------------------------------------+
    | Returns:   | A new   VersionRange()  object.                        |
    +------------+--------------------------------------------------------+

class  Runtime  (  name , versionRange  )  #

    Runtime Represents a runtime related to the CEP infrastructure.
    Extensions can declare dependencies on particular CEP runtime
    versions in the extension manifest.

    +------------+--------------------------------------------------------+
    | Arguments: | -   name – The runtime name.                           |
    |            | -   version – A   VersionRange()  object that defines  |
    |            |     a range of valid versions.                         |
    +------------+--------------------------------------------------------+
    | Returns:   | A new   Runtime()  object.                             |
    +------------+--------------------------------------------------------+

class  Extension  (  id , name , mainPath , basePath , windowType , width , height , minWidth , minHeight , maxWidth , maxHeight , defaultExtensionDataXml , specialExtensionDataXml , requiredRuntimeList , isAutoVisible , isPluginExtension  )  #

    Extension Encapsulates a CEP-based extension to an Adobe
    application.

    +------------+--------------------------------------------------------+
    | Arguments: | -   id – The unique identifier of this extension.      |
    |            | -   name – The localizable display name of this        |
    |            |     extension.                                         |
    |            | -   mainPath – The path of the “index.html” file.      |
    |            | -   basePath – The base path of this extension.        |
    |            | -   windowType – The window type of the main window of |
    |            |     this extension. Valid values are defined by        |
    |            |       CSXSWindowType()  .                              |
    |            | -   width – The default width in pixels of the main    |
    |            |     window of this extension.                          |
    |            | -   height – The default height in pixels of the main  |
    |            |     window of this extension.                          |
    |            | -   minWidth – The minimum width in pixels of the main |
    |            |     window of this extension.                          |
    |            | -   minHeight – The minimum height in pixels of the    |
    |            |     main window of this extension.                     |
    |            | -   maxWidth – The maximum width in pixels of the main |
    |            |     window of this extension.                          |
    |            | -   maxHeight – The maximum height in pixels of the    |
    |            |     main window of this extension.                     |
    |            | -   defaultExtensionDataXml – The extension data       |
    |            |     contained in the default                           |
    |            |       ExtensionDispatchInfo()  section of the          |
    |            |     extension manifest.                                |
    |            | -   specialExtensionDataXml – The extension data       |
    |            |     contained in the application-specific              |
    |            |       ExtensionDispatchInfo()  section of the          |
    |            |     extension manifest.                                |
    |            | -   requiredRuntimeList – An array of   Runtime()      |
    |            |     objects for runtimes required by this extension.   |
    |            | -   isAutoVisible – True if this extension is visible  |
    |            |     on loading.                                        |
    |            | -   isPluginExtension – True if this extension has     |
    |            |     been deployed in the Plugins folder of the host    |
    |            |     application.                                       |
    +------------+--------------------------------------------------------+
    | Returns:   | A new   Extension()  object.                           |
    +------------+--------------------------------------------------------+

class  CSEvent  (  type , scope , appId , extensionId  )  #

    CSEvent A standard JavaScript event, the base class for CEP events.

    +------------+--------------------------------------------------------+
    | Arguments: | -   type – The name of the event type.                 |
    |            | -   scope – The scope of event, can be “GLOBAL” or     |
    |            |     “APPLICATION”.                                     |
    |            | -   appId – The unique identifier of the application   |
    |            |     that generated the event.                          |
    |            | -   extensionId – The unique identifier of the         |
    |            |     extension that generated the event.                |
    +------------+--------------------------------------------------------+
    | Returns:   | A new   CSEvent()  object                              |
    +------------+--------------------------------------------------------+

     CSEvent.  data #

        Event-specific data.

class  SystemPath  (   )  #

    SystemPath Stores operating-system-specific location constants for
    use in the   CSInterface()  .getSystemPath() method.

      ---------- -------------------------------
      Returns:   A new   SystemPath()  object.
      ---------- -------------------------------

     SystemPath.  APPLICATION #

        

     SystemPath.  COMMON_FILES #

        The path to common files for Adobe applications.

     SystemPath.  EXTENSION #

        The path to current extension.

     SystemPath.  HOST_APPLICATION #

        The path to hosting application’s executable.

     SystemPath.  MY_DOCUMENTS #

        The path to the user’s default document folder.

     SystemPath.  USER_DATA #

        The path to user data.

class  ColorType  (   )  #

    ColorType Stores color-type constants.

     ColorType.  GRADIENT #

        Gradient color type.

     ColorType.  NONE #

        Null color type.

     ColorType.  RGB #

        RGB color type.

class  RGBColor  (  red , green , blue , alpha  )  #

    RGBColor Stores an RGB color with red, green, blue, and alpha
    values. All values are in the range [0.0 to 255.0]. Invalid numeric
    values are converted to numbers within this range.

    +------------+--------------------------------------------------------+
    | Arguments: | -   red – The red value, in the range [0.0 to 255.0].  |
    |            | -   green – The green value, in the range [0.0 to      |
    |            |     255.0].                                            |
    |            | -   blue – The blue value, in the range [0.0 to        |
    |            |     255.0].                                            |
    |            | -   alpha – The alpha (transparency) value, in the     |
    |            |     range [0.0 to 255.0]. The default, 255.0, means    |
    |            |     that the color is fully opaque.                    |
    +------------+--------------------------------------------------------+
    | Returns:   | A new RGBColor object.                                 |
    +------------+--------------------------------------------------------+

class  Direction  (  x , y  )  #

    Direction A point value in which the y component is 0 and the x
    component is positive or negative for a right or left direction, or
    the x component is 0 and the y component is positive or negative for
    an up or down direction.

    +------------+------------------------------------------------+
    | Arguments: | -   x – The horizontal component of the point. |
    |            | -   y – The vertical component of the point.   |
    +------------+------------------------------------------------+
    | Returns:   | A new   Direction()  object.                   |
    +------------+------------------------------------------------+

class  GradientStop  (  offset , rgbColor  )  #

    GradientStop Stores gradient stop information.

    +------------+--------------------------------------------------------+
    | Arguments: | -   offset – The offset of the gradient stop, in the   |
    |            |     range [0.0 to 1.0].                                |
    |            | -   rgbColor – The color of the gradient at this       |
    |            |     point, an   RGBColor()  object.                    |
    +------------+--------------------------------------------------------+
    | Returns:   | GradientStop object.                                   |
    +------------+--------------------------------------------------------+

class  GradientColor  (  type , direction , numStops , arrGradientStop  )  #

    GradientColor Stores gradient color information.

    +------------+--------------------------------------------------------+
    | Arguments: | -   type – The gradient type, must be “linear”.        |
    |            | -   direction – A   Direction()  object for the        |
    |            |     direction of the gradient (up, down, right, or     |
    |            |     left).                                             |
    |            | -   numStops – The number of stops in the gradient.    |
    |            | -   gradientStopList – An array of   GradientStop()    |
    |            |     objects.                                           |
    +------------+--------------------------------------------------------+
    | Returns:   | A new   GradientColor()  object.                       |
    +------------+--------------------------------------------------------+

class  UIColor  (  type , antialiasLevel , color  )  #

    UIColor Stores color information, including the type, anti-alias
    level, and specific color values in a color object of an appropriate
    type.

    +------------+--------------------------------------------------------+
    | Arguments: | -   type – The color type, 1 for “rgb” and 2 for       |
    |            |     “gradient”. The supplied color object must         |
    |            |     correspond to this type.                           |
    |            | -   antialiasLevel – The anti-alias level constant.    |
    |            | -   color – A   RGBColor()  or   GradientColor()       |
    |            |     object containing specific color information.      |
    +------------+--------------------------------------------------------+
    | Returns:   | A new   UIColor()  object.                             |
    +------------+--------------------------------------------------------+

class  AppSkinInfo  (  baseFontFamily , baseFontSize , appBarBackgroundColor , panelBackgroundColor , appBarBackgroundColorSRGB , panelBackgroundColorSRGB , systemHighlightColor  )  #

    AppSkinInfo Stores window-skin properties, such as color and font.
    All color parameter values are   UIColor()  objects except that
    systemHighlightColor is   RGBColor()  object.

    +------------+--------------------------------------------------------+
    | Arguments: | -   baseFontFamily – The base font family of the       |
    |            |     application.                                       |
    |            | -   baseFontSize – The base font size of the           |
    |            |     application.                                       |
    |            | -   appBarBackgroundColor – The application bar        |
    |            |     background color.                                  |
    |            | -   panelBackgroundColor – The background color of the |
    |            |     extension panel.                                   |
    |            | -   appBarBackgroundColorSRGB – The application bar    |
    |            |     background color, as sRGB.                         |
    |            | -   panelBackgroundColorSRGB – The background color of |
    |            |     the extension panel, as sRGB.                      |
    |            | -   systemHighlightColor – The operating-system        |
    |            |     highlight color, as sRGB.                          |
    +------------+--------------------------------------------------------+
    | Returns:   | AppSkinInfo object.                                    |
    +------------+--------------------------------------------------------+

class  HostEnvironment  (  appName , appVersion , appLocale , appUILocale , appId , isAppOnline , appSkinInfo  )  #

    HostEnvironment Stores information about the environment in which
    the extension is loaded.

    +------------+--------------------------------------------------------+
    | Arguments: | -   appName – The application’s name.                  |
    |            | -   appVersion – The application’s version.            |
    |            | -   appLocale – The application’s current license      |
    |            |     locale.                                            |
    |            | -   appUILocale – The application’s current UI locale. |
    |            | -   appId – The application’s unique identifier.       |
    |            | -   isAppOnline – True if the application is currently |
    |            |     online.                                            |
    |            | -   appSkinInfo – An   AppSkinInfo()  object           |
    |            |     containing the application’s default color and     |
    |            |     font styles.                                       |
    +------------+--------------------------------------------------------+
    | Returns:   | A new   HostEnvironment()  object.                     |
    +------------+--------------------------------------------------------+

class  HostCapabilities  (  EXTENDED_PANEL_MENU , EXTENDED_PANEL_ICONS , DELEGATE_APE_ENGINE , SUPPORT_HTML_EXTENSIONS , DISABLE_FLASH_EXTENSIONS  )  #

    HostCapabilities Stores information about the host capabilities.

    +------------+--------------------------------------------------------+
    | Arguments: | -   EXTENDED_PANEL_MENU – True if the application      |
    |            |     supports panel menu.                               |
    |            | -   EXTENDED_PANEL_ICONS – True if the application     |
    |            |     supports panel icon.                               |
    |            | -   DELEGATE_APE_ENGINE – True if the application      |
    |            |     supports delegated APE engine.                     |
    |            | -   SUPPORT_HTML_EXTENSIONS – True if the application  |
    |            |     supports HTML extensions.                          |
    |            | -   DISABLE_FLASH_EXTENSIONS – True if the application |
    |            |     disables FLASH extensions.                         |
    +------------+--------------------------------------------------------+
    | Returns:   | A new   HostCapabilities()  object.                    |
    +------------+--------------------------------------------------------+

class  ApiVersion  (  major , minor , micro  )  #

    ApiVersion Stores current api version.

      Since   4.2.0 

    +------------+--------------------------------+
    | Arguments: | -   major – The major version  |
    |            | -   minor – The minor version. |
    |            | -   micro – The micro version. |
    +------------+--------------------------------+
    | Returns:   | ApiVersion object.             |
    +------------+--------------------------------+

class  MenuItemStatus  (  menuItemLabel , enabled , checked  )  #

    MenuItemStatus Stores flyout menu item status

      Since   5.2.0 

    +------------+-----------------------------------------------------------+
    | Arguments: | -   menuItemLabel – The menu item label.                  |
    |            | -   enabled – True if user wants to enable the menu item. |
    |            | -   checked – True if user wants to check the menu item.  |
    +------------+-----------------------------------------------------------+
    | Returns:   | MenuItemStatus object.                                    |
    +------------+-----------------------------------------------------------+

class  ContextMenuItemStatus  (  menuItemID , enabled , checked  )  #

    ContextMenuItemStatus Stores the status of the context menu item.

      Since   5.2.0 

    +------------+-----------------------------------------------------------+
    | Arguments: | -   menuItemID – The menu item id.                        |
    |            | -   enabled – True if user wants to enable the menu item. |
    |            | -   checked – True if user wants to check the menu item.  |
    +------------+-----------------------------------------------------------+
    | Returns:   | MenuItemStatus object.                                    |
    +------------+-----------------------------------------------------------+

class  CSInterface  (   )  #

    CSInterface This is the entry point to the CEP extensibility
    infrastructure. Instantiate this object and use it to:

    -   Access information about the host application in which an
        extension is running
    -   Launch an extension
    -   Register interest in event notifications, and dispatch events

      ---------- -------------------------------
      Returns:   A new   CSInterface()  object
      ---------- -------------------------------

     CSInterface.  THEME_COLOR_CHANGED_EVENT #

        User can add this event listener to handle native application
        theme color changes. Callback function gives extensions ability
        to fine-tune their theme color after the global theme color has
        been changed. The callback function should be like below:

        Examples:

            // event is a CSEvent object, but user can ignore it.
            function OnAppThemeColorChanged(event)
            {
               // Should get a latest HostEnvironment object from application.
               var skinInfo = JSON.parse(window.__adobe_cep__.getHostEnvironment()).appSkinInfo;
               // Gets the style information such as color info from the skinInfo,
               // and redraw all UI controls of your extension according to the style info.
            }

     CSInterface.  addEventListener  (  type , listener , obj  )  #

        Registers an interest in a CEP event of a particular type, and
        assigns an event handler. The event infrastructure notifies your
        extension when events of this type occur, passing the event
        object to the registered handler function.

        +------------+--------------------------------------------------------+
        | Arguments: | -   type – The name of the event type of interest.     |
        |            | -   listener – The JavaScript handler function or      |
        |            |     method.                                            |
        |            | -   obj – Optional, the object containing the handler  |
        |            |     method, if any. Default is null.                   |
        +------------+--------------------------------------------------------+

     CSInterface.  closeExtension  (   )  #

        Closes this extension.

     CSInterface.  dispatchEvent  (  event  )  #

        Triggers a CEP event programmatically. Yoy can use it to
        dispatch an event of a predefined type, or of a type you have
        defined.

        +------------+------------------------------------+
        | Arguments: | -   event – A   CSEvent()  object. |
        +------------+------------------------------------+

     CSInterface.  dumpInstallationInfo  (   )  #

        Writes installation information to a file.

          ---------- ----------------
          Returns:   The file path.
          ---------- ----------------

     CSInterface.  evalScript  (  script , callback  )  #

        Evaluates a JavaScript script, which can use the JavaScript DOM
        of the host application.

        +------------+--------------------------------------------------------+
        | Arguments: | -   script – The JavaScript script.                    |
        |            | -   callback – Optional. A callback function that      |
        |            |     receives the result of execution. If execution     |
        |            |     fails, the callback function receives the error    |
        |            |     message   EvalScript_ErrMessage()  .               |
        +------------+--------------------------------------------------------+

     CSInterface.  getApplicationID  (   )  #

        Retrieves the unique identifier of the application. in which the
        extension is currently running.

          ---------- -----------------------
          Returns:   The unique ID string.
          ---------- -----------------------

     CSInterface.  getCurrentApiVersion  (   )  #

        Retrieves current API version.

          Since   4.2.0 

          ---------- --------------------
          Returns:   ApiVersion object.
          ---------- --------------------

     CSInterface.  getExtensionID  (   )  #

        Retrieves extension ID.

          Since   4.2.0 

          ---------- ---------------
          Returns:   extension ID.
          ---------- ---------------

     CSInterface.  getExtensions  (  extensionIds  )  #

        Retrieves the list of extensions currently loaded in the current
        host application. The extension list is initialized once, and
        remains the same during the lifetime of the CEP session.

        +------------+--------------------------------------------------------+
        | Arguments: | -   extensionIds – Optional, an array of unique        |
        |            |     identifiers for extensions of interest. If         |
        |            |     omitted, retrieves data for all extensions.        |
        +------------+--------------------------------------------------------+
        | Returns:   | Zero or more   Extension()  objects.                   |
        +------------+--------------------------------------------------------+

     CSInterface.  getHostCapabilities  (   )  #

        Retrieves host capability information for the application in
        which the extension is currently running.

          ---------- ---------------------------------
          Returns:   A   HostCapabilities()  object.
          ---------- ---------------------------------

     CSInterface.  getHostEnvironment  (   )  #

        Retrieves information about the host environment in which the
        extension is currently running.

          ---------- --------------------------------
          Returns:   A   HostEnvironment()  object.
          ---------- --------------------------------

     CSInterface.  getNetworkPreferences  (   )  #

        Retrieves network-related preferences.

          ---------- -----------------------------------------------------
          Returns:   A JavaScript object containing network preferences.
          ---------- -----------------------------------------------------

     CSInterface.  getOSInformation  (   )  #

        Retrieves version information for the current Operating System,
        See http://www.useragentstring.com/pages/Chrome/ for Chrome
          navigator()  .userAgent values.

        If user customizes the User Agent by setting CEF command
        parameter “–user-agent”, only “Mac OS X” or “Windows” will be
        returned.

          ---------- --------------------------------------------------------------------
          Returns:   A string containing the OS version, or “unknown Operation System”.
          ---------- --------------------------------------------------------------------

     CSInterface.  getScaleFactor  (   )  #

        Retrieves the scale factor of screen. On Windows platform, the
        value of scale factor might be different from operating system’s
        scale factor, since host application may use its self-defined
        scale factor.

        -   -1.0 when error occurs
        -   1.0 means normal screen
        -   >1.0 means HiDPI screen

          Since   4.2.0 

          ---------- --------
          Returns:   Number
          ---------- --------

     CSInterface.  getSystemPath  (  pathType  )  #

        Retrieves a path for which a constant is defined in the system.

        +------------+--------------------------------------------------------+
        | Arguments: | -   pathType – The path-type constant defined in       |
        |            |       SystemPath()  ,                                  |
        +------------+--------------------------------------------------------+
        | Returns:   | The platform-specific system path string.              |
        +------------+--------------------------------------------------------+

     CSInterface.  getWindowTitle  (   )  #

        Get the title of the extension window. This function works with
        modal and modeless extensions in all Adobe products, and panel
        extensions in Photoshop, InDesign, InCopy, Illustrator, Flash
        Pro and Dreamweaver.

          Since   6.1.0 

          ---------- -------------------
          Returns:   The window title.
          ---------- -------------------

     CSInterface.  hostEnvironment #

        The host environment data object.

     CSInterface.  initResourceBundle  (   )  #

        Initializes the resource bundle for this extension with property
        values for the current application and locale. To support
        multiple locales, you must define a property file for each
        locale, containing keyed display-string values for that locale.
        See localization documentation for Extension Builder and related
        products.

        Keys can be in the form <code>key.value=”localized
        string”</code>, for use in HTML text elements. For example, in
        this input element, the localized   key()  .value string is
        displayed instead of the empty   value()  string:

        <code><input type=”submit” value=”” data-locale=”key”/></code>

          ---------- -------------------------------------------------------
          Returns:   An object containing the resource bundle information.
          ---------- -------------------------------------------------------

     CSInterface.  isWindowVisible  (   )  #

        Get the visibility status of an extension window.

          Since   6.0.0 

          ---------- -----------------------------------------------------------------------------------
          Returns:   true if the extension window is visible; false if the extension window is hidden.
          ---------- -----------------------------------------------------------------------------------

     CSInterface.  openURLInDefaultBrowser  (  url  )  #

        Opens a page in the default system browser.

          Since   4.2.0 

        +------------+--------------------------------------------------------+
        | Arguments: | -   url – The URL of the page/file to open, or the     |
        |            |     email address. Must use HTTP/HTTPS/file/mailto     |
        |            |     protocol. For example: “ http://www.adobe.com ” “  |
        |            |     https://github.com ” “ file:///C:/log.txt ” “      |
        |            |     mailto:test @ adobe . com ”                        |
        +------------+--------------------------------------------------------+
        | Returns:   | One of these error codes: * NO_ERROR - 0 *             |
        |            | ERR_UNKNOWN - 1 * ERR_INVALID_PARAMS - 2 *             |
        |            | ERR_INVALID_URL - 201                                  |
        +------------+--------------------------------------------------------+

     CSInterface.  registerInvalidCertificateCallback  (  callback  )  #

        Register the invalid certificate callback for an extension. This
        callback will be triggered when the extension tries to access
        the web site that contains the invalid certificate on the main
        frame. But if the extension does not call this function and
        tries to access the web site containing the invalid certificate,
        a default error page will be shown.

          Since   6.1.0 

        +------------+--------------------------------------+
        | Arguments: | -   callback – the callback function |
        +------------+--------------------------------------+

     CSInterface.  registerKeyEventsInterest  (  keyEventsInterest  )  #

        Register an interest in some key events to prevent them from
        being sent to the host application.

        This function works with modeless extensions and panel
        extensions. Generally all the key events will be sent to the
        host application for these two extensions if the current focused
        element is not text input or dropdown, If you want to intercept
        some key events and want them to be handled in the extension,
        please call this function in advance to prevent them being sent
        to the host application.

          Since   6.1.0 

        This JSON string should be an array, each object has following
        keys:

        -   keyCode: [Required] represents an OS system dependent
            virtual key code identifying the unmodified value of the
            pressed key.
        -   ctrlKey: [optional] a Boolean that indicates if the control
            key was pressed (true) or not (false) when the event
            occurred.
        -   altKey: [optional] a Boolean that indicates if the alt key
            was pressed (true) or not (false) when the event occurred.
        -   shiftKey: [optional] a Boolean that indicates if the shift
            key was pressed (true) or not (false) when the event
            occurred.
        -   metaKey: [optional] (Mac Only) a Boolean that indicates if
            the Meta key was pressed (true) or not (false) when the
            event occurred. On Macintosh keyboards, this is the command
            key. To detect Windows key on Windows, please use keyCode
            instead.

        An example JSON string:

            [
                {
                    "keyCode": 48
                },
                {
                    "keyCode": 123,
                    "ctrlKey": true
                },
                {
                    "keyCode": 123,
                    "ctrlKey": true,
                    "metaKey": true
                }
            ]

        +------------+--------------------------------------------------------+
        | Arguments: | -   keyEventsInterest – A JSON string describing those |
        |            |     key events you are interested in. A null object or |
        |            |     an empty string will lead to removing the interest |
        +------------+--------------------------------------------------------+

     CSInterface.  removeEventListener  (  type , listener , obj  )  #

        Removes a registered event listener.

        +------------+--------------------------------------------------------+
        | Arguments: | -   type – The name of the event type of interest.     |
        |            | -   listener – The JavaScript handler function or      |
        |            |     method that was registered.                        |
        |            | -   obj – Optional, the object containing the handler  |
        |            |     method, if any. Default is null.                   |
        +------------+--------------------------------------------------------+

     CSInterface.  requestOpenExtension  (  extensionId , params  )  #

        Loads and launches another extension, or activates the extension
        if it is already loaded.

        +------------+------------------------------------------------------+
        | Arguments: | -   extensionId – The extension’s unique identifier. |
        |            | -   startupParams – Not currently used, pass “”.     |
        +------------+------------------------------------------------------+

        Examples:

            To launch the extension "help" with ID "HLP" from this extension, call:
            <code>requestOpenExtension("HLP", ""); </code>

     CSInterface.  resizeContent  (  width , height  )  #

        Resize extension’s content to the specified dimensions. 1. Works
        with modal and modeless extensions in all Adobe products. 2.
        Extension’s manifest min/max size constraints apply and take
        precedence. 3. For panel extensions

          3.1 This works in all Adobe products except:

              -   Premiere Pro
              -   Prelude
              -   After Effects

          3.2 When the panel is in certain states (especially when being docked),
              it will not change to the desired dimensions even when the
              specified size satisfies min/max constraints.

          Since   6.0.0 

        +------------+-----------------------------+
        | Arguments: | -   width – The new width   |
        |            | -   height – The new height |
        +------------+-----------------------------+

     CSInterface.  setContextMenu  (  menu , callback  )  #

        An example menu XML:

            <Menu>
              <MenuItem Id="menuItemId1" Label="TestExample1" Enabled="true" Checkable="true" Checked="false" Icon="./image/small_16X16.png"/>
              <MenuItem Id="menuItemId2" Label="TestExample2">
                <MenuItem Id="menuItemId2-1" Label="TestExample2-1" >
                  <MenuItem Id="menuItemId2-1-1" Label="TestExample2-1-1" Enabled="false" Checkable="true" Checked="true"/>
                </MenuItem>
                <MenuItem Id="menuItemId2-2" Label="TestExample2-2" Enabled="true" Checkable="true" Checked="true"/>
              </MenuItem>
              <MenuItem Label="---" />
              <MenuItem Id="menuItemId3" Label="TestExample3" Enabled="false" Checkable="true" Checked="false"/>
            </Menu></code>

        +------------+--------------------------------------------------------+
        | Arguments: | -   menu – A XML string which describes menu           |
        |            |     structure.                                         |
        |            | -   callback – The callback function which is called   |
        |            |     when a menu item is clicked. The only parameter is |
        |            |     the returned ID of clicked menu item.              |
        +------------+--------------------------------------------------------+

     CSInterface.  setContextMenuByJSON  (  menu , callback  )  #

        An example menu JSON:

            {
                 "menu": [
                     {
                         "id": "menuItemId1",
                         "label": "testExample1",
                         "enabled": true,
                         "checkable": true,
                         "checked": false,
                         "icon": "./image/small_16X16.png"
                     },
                     {
                         "id": "menuItemId2",
                         "label": "testExample2",
                         "menu": [
                             {
                                 "id": "menuItemId2-1",
                                 "label": "testExample2-1",
                                 "menu": [
                                     {
                                         "id": "menuItemId2-1-1",
                                         "label": "testExample2-1-1",
                                         "enabled": false,
                                         "checkable": true,
                                         "checked": true
                                     }
                                 ]
                             },
                             {
                                 "id": "menuItemId2-2",
                                 "label": "testExample2-2",
                                 "enabled": true,
                                 "checkable": true,
                                 "checked": true
                             }
                         ]
                     },
                     {
                         "label": "---"
                     },
                     {
                         "id": "menuItemId3",
                         "label": "testExample3",
                         "enabled": false,
                         "checkable": true,
                         "checked": false
                     }
                 ]
             }

        +------------+--------------------------------------------------------+
        | Arguments: | -   menu – A JSON string which describes menu          |
        |            |     structure.                                         |
        |            | -   callback – The callback function which is called   |
        |            |     when a menu item is clicked. The only parameter is |
        |            |     the returned ID of clicked menu item.              |
        +------------+--------------------------------------------------------+

     CSInterface.  setPanelFlyoutMenu  (  menu  )  #

        An example menu XML:

            <Menu>
              <MenuItem Id="menuItemId1" Label="TestExample1" Enabled="true" Checked="false"/>
              <MenuItem Label="TestExample2">
                <MenuItem Label="TestExample2-1" >
                  <MenuItem Label="TestExample2-1-1" Enabled="false" Checked="true"/>
                </MenuItem>
                <MenuItem Label="TestExample2-2" Enabled="true" Checked="true"/>
              </MenuItem>
              <MenuItem Label="---" />
              <MenuItem Label="TestExample3" Enabled="false" Checked="false"/>
            </Menu>

        +------------+---------------------------------------------------------+
        | Arguments: | -   menu – A XML string which describes menu structure. |
        +------------+---------------------------------------------------------+

     CSInterface.  setScaleFactorChangedHandler  (  handler  )  #

        Set a handler to detect any changes of scale factor. This only
        works on Mac.

          Since   4.2.0 

        +------------+--------------------------------------------------------+
        | Arguments: | -   handler – The function to be called when scale     |
        |            |     factor is changed.                                 |
        +------------+--------------------------------------------------------+

     CSInterface.  setWindowTitle  (  title  )  #

        Set the title of the extension window. This function works with
        modal and modeless extensions in all Adobe products, and panel
        extensions in Photoshop, InDesign, InCopy, Illustrator, Flash
        Pro and Dreamweaver.

          Since   6.1.0 

        +------------+-------------------------------+
        | Arguments: | -   title – The window title. |
        +------------+-------------------------------+

     CSInterface.  updateContextMenuItem  (  menuItemID , enabled , checked  )  #

        Updates a context menu item by setting the enabled and selection
        status.

          Since   5.2.0 

        +------------+--------------------------------------------------------+
        | Arguments: | -   menuItemID – The menu item ID.                     |
        |            | -   enabled – True to enable the item, false to        |
        |            |     disable it (gray it out).                          |
        |            | -   checked – True to select the item, false to        |
        |            |     deselect it.                                       |
        +------------+--------------------------------------------------------+

     CSInterface.  updatePanelMenuItem  (  menuItemLabel , enabled , checked  )  #

        Updates a menu item in the extension window’s flyout menu, by
        setting the enabled and selection status.

          Since   5.2.0 

        +------------+--------------------------------------------------------+
        | Arguments: | -   menuItemLabel – The menu item label.               |
        |            | -   enabled – True to enable the item, false to        |
        |            |     disable it (gray it out).                          |
        |            | -   checked – True to select the item, false to        |
        |            |     deselect it.                                       |
        +------------+--------------------------------------------------------+
        | Returns:   | false when the host application does not support this  |
        |            | functionality (HostCapabilities.EXTENDED_PANEL_MENU is |
        |            | false). Fails silently if menu label is invalid.       |
        +------------+--------------------------------------------------------+
# CEP Event Codes #
Event Codes #

A list of JSON Callback events in Photoshop Photoshop JSON CallBack
Events List (up to CC2015 ver.16)

  ------------------------------------------------------------------------------------
  Name                 Char ID Type ID      Comment
  -------------------- ------- ------------ ------------------------------------------
  3DTransform          TdT     1415861280   

  Average              Avrg    1098281575   

  ApplyStyle           ASty    1095988345   

  Assert               Asrt    1098084980   

  AccentedEdges        AccE    1097032517   

  Add                  Add     1097098272   

  AddNoise             AdNs    1097092723   

  AddTo                AddT    1097098324   

  Align                Algn    1097623406   

  All                  All     1097624608   

  AngledStrokes        AngS    1097754451   

  ApplyImage           AppI    1097887817   

  BasRelief            BsRl    1114853996   

  Batch                Btch    1114923880   

  BatchFromDroplet     BtcF    1114923846   

  Blur                 Blr     1114403360   

  BlurMore             BlrM    1114403405   There is also keyBlurMethod,
                                            typeBlurMethod.

  Border               Brdr    1114793074   

  Brightness           BrgC    1114793795   

  CanvasSize           CnvS    1131312723   

  ChalkCharcoal        ChlC    1130916931   

  ChannelMixer         ChnM    1130917453   

  Charcoal             Chrc    1130918499   

  Chrome               Chrm    1130918509   

  Clear                Cler    1131177330   

  Close                Cls     1131180832   

  Clouds               Clds    1131177075   

  ColorBalance         ClrB    1131180610   

  ColorHalftone        ClrH    1131180616   

  ColorRange           ClrR    1131180626   

  ColoredPencil        ClrP    1131180624   

  ConteCrayon          CntC    1131312195   

  Contract             Cntc    1131312227   Breaks hash for Center.

  ConvertMode          CnvM    1131312717   

  Copy                 copy    1668247673   kAECopy

  CopyEffects          CpFX    1131431512   

  CopyMerged           CpyM    1131444557   

  CopyToLayer          CpTL    1131435084   

  Craquelure           Crql    1131573612   

  CreateDroplet        CrtD    1131574340   There is also an enumCreateDuplicate

  Crop                 Crop    1131573104   

  Crosshatch           Crsh    1131574120   

  Crystallize          Crst    1131574132   

  Curves               Crvs    1131574899   

  Custom               Cstm    1131639917   There is also keyCustom,
                                            enumCustomPattern.

  Cut                  cut     1668641824   kAECut

  CutToLayer           CtTL    1131697228   

  Cutout               Ct      1131683872   

  DarkStrokes          DrkS    1148349267   

  DeInterlace          Dntr    1148089458   

  DefinePattern        DfnP    1147563600   

  Defringe             Dfrg    1147564647   Breaks hash for Difference.

  Delete               Dlt     1147958304   

  Desaturate           Dstt    1148417140   Breaks hash for Distribution.

  Deselect             Dslc    1148415075   

  Despeckle            Dspc    1148416099   

  DifferenceClouds     DfrC    1147564611   

  Diffuse              Dfs     1147564832   

  DiffuseGlow          DfsG    1147564871   

  DisableLayerFX       dlfx    1684825720   

  Displace             Dspl    1148416108   

  Distribute           Dstr    1148417138   

  Draw                 Draw    1148346743   Draw Line

  DryBrush             DryB    1148352834   

  Duplicate            Dplc    1148218467   There is also a keyDuplicate.

  DustAndScratches     DstS    1148417107   

  Emboss               Embs    1164796531   There is also an enumEmboss.

  Equalize             Eqlz    1165061242   

  Exchange             Exch    1165517672   

  Expand               Expn    1165521006   

  Export               Expr    1165521010   

  Extrude              Extr    1165522034   

  Facet                Fct     1180922912   

  Fade                 Fade    1180787813   

  Feather              Fthr    1182034034   

  Fibers               Fbrs    1180856947   

  Fill                 Fl      1181491232   There is also keyFill, typeFill.

  FilmGrain            FlmG    1181510983   

  Filter               Fltr    1181512818   

  FindEdges            FndE    1181639749   

  FlattenImage         FltI    1181512777   

  Flip                 Flip    1181510000   

  Fragment             Frgm    1181902701   

  Fresco               Frsc    1181905763   

  GaussianBlur         GsnB    1198747202   

  Get                  getd    1734702180   kAEGetData

  Glass                Gls     1198289696   

  GlowingEdges         GlwE    1198290757   

  Gradient             Grdn    1198679150   

  GradientMap          GrMp    1198673264   

  Grain                Grn     1198681632   

  GraphicPen           GraP    1198678352   Breaks Hash for Group with Prev.

  Group                GrpL    1198682188   

  Grow                 Grow    1198681975   

  HalftoneScreen       HlfS    1215063635   There is also keyHalftoneScreen,
                                            enumHalftoneScreen, classHalftoneScreen.

  Hide                 Hd      1214521376   

  HighPass             HghP    1214736464   

  HSBHSL               HsbP    1215521360   

  HueSaturation        HStr    1213428850   

  ImageSize            ImgS    1231906643   

  Import               Impr    1231908978   

  InkOutlines          InkO    1231973199   

  Intersect            Intr    1231975538   

  IntersectWith        IntW    1231975511   

  Inverse              Invs    1231976051   Breaks hash for Invert.

  Invert               Invr    1231976050   

  LensFlare            LnsF    1282306886   

  Levels               Lvls    1282829427   

  LightingEffects      LghE    1281845317   

  Link                 Lnk     1282304800   

  Make                 Mk      1298866208   Was kMakeEvent.

  Maximum              Mxm     1299737888   There is also a keyMaximum,
                                            enumMaximumQuality.

  Median               Mdn     1298427424   

  MergeLayers          Mrg2    1299343154   starting in PSCS2, use this constant for
                                            merge actions

  MergeLayersOld       MrgL    1299343180   previous to PSCS2 actions use this for
                                            merge

  MergeSpotChannel     MSpt    1297313908   

  MergeVisible         MrgV    1299343190   

  Mezzotint            Mztn    1299870830   

  Minimum              Mnm     1299082528   There is also a keyMinimum.

  Mosaic               Msc     1299407648   From UActionsTerminology. CONFLICT:
                                            eventMosaic (MscT). Was kMosaicEvent.

  Mosaic_PLUGIN        MscT    1299407700   From AdobePITerminology. CONFLICT:
                                            eventMosaic (Msc ).

  MotionBlur           MtnB    1299476034   

  Move                 move    1836021349   kAEMove

  NTSCColors           NTSC    1314149187   

  NeonGlow             NGlw    1313303671   

  Next                 Nxt     1316516896   

  NotePaper            NtPr    1316245618   

  Notify               Ntfy    1316251257   PR#17472

  OceanRipple          OcnR    1331916370   

  Offset               Ofst    1332114292   There is also keyOffset, classOffset.

  Open                 Opn     1332768288   

  Paint                Pnt     1349415968   Paint stroke recording deleted for 6.0

  PaintDaubs           PntD    1349416004   

  PaletteKnife         PltK    1349284939   

  Paste                past    1885434740   kAEPaste

  PasteEffects         PaFX    1348552280   

  PasteInto            PstI    1349743689   

  PasteOutside         PstO    1349743695   

  Patchwork            Ptch    1349804904   

  Photocopy            Phtc    1349022819   

  Pinch                Pnch    1349411688   

  Place                Plc     1349280544   

  Plaster              Plst    1349284724   

  PlasticWrap          PlsW    1349284695   

  Play                 Ply     1349286176   

  Pointillize          Pntl    1349416044   

  Polar                Plr     1349284384   

  PosterEdges          PstE    1349743685   

  Posterize            Pstr    1349743730   

  Previous             Prvs    1349678707   

  Print                Prnt    1349676660   

  ProfileToProfile     PrfT    1349674580   

  Purge                Prge    1349674853   

  Quit                 quit    1903520116   kAEQuitApplication

  RadialBlur           RdlB    1382313026   

  Rasterize            Rstr    1383298162   

  RasterizeTypeSheet   RstT    1383298132   

  RemoveBlackMatte     RmvB    1382905410   

  RemoveLayerMask      RmvL    1382905420   

  RemoveWhiteMatte     RmvW    1382905431   

  Rename               Rnm     1382968608   

  ReplaceColor         RplC    1383099459   

  Reset                Rset    1383294324   

  Reticulation         Rtcl    1383359340   

  Revert               Rvrt    1383494260   

  Ripple               Rple    1383099493   

  Rotate               Rtte    1383363685   

  RoughPastels         RghP    1382508624   

  Save                 save    1935767141   kAESave

  Select               slct    1936483188   kAESelect. Was kSelectEvent.

  SelectiveColor       SlcC    1399612227   

  Set                  setd    1936028772   kAESetData

  SharpenEdges         ShrE    1399353925   

  Sharpen              Shrp    1399353968   

  SharpenMore          ShrM    1399353933   

  Shear                Shr     1399353888   

  Show                 Shw     1399355168   

  Similar              Smlr    1399680114   

  SmartBlur            SmrB    1399681602   

  Smooth               Smth    1399682152   

  SmudgeStick          SmdS    1399678035   

  Solarize             Slrz    1399616122   

  Spatter              Spt     1399878688   

  Spherize             Sphr    1399875698   

  SplitChannels        SplC    1399876675   

  Sponge               Spng    1399877223   

  SprayedStrokes       SprS    1399878227   

  StainedGlass         StnG    1400139335   

  Stamp                Stmp    1400139120   

  Stop                 Stop    1400139632   

  Stroke               Strk    1400140395   

  Subtract             Sbtr    1398961266   

  SubtractFrom         SbtF    1398961222   

  Sumie                Smie    1399679333   Breaks hash.

  TakeMergedSnapshot   TkMr    1416318322   

  TakeSnapshot         TkSn    1416319854   

  TextureFill          TxtF    1417180230   

  Texturizer           Txtz    1417180282   Breaks hash.

  Threshold            Thrs    1416131187   

  Tiles                Tls     1416393504   

  TornEdges            TrnE    1416785477   

  TraceContour         TrcC    1416782659   

  Transform            Trnf    1416785510   Breaks hash for Transparent.

  Trap                 Trap    1416782192   

  Twirl                Twrl    1417114220   

  Underpainting        Undr    1433298034   

  Undo                 undo    1970168943   kAEUndo

  Ungroup              Ungr    1433298802   

  Unlink               Unlk    1433300075   

  UnsharpMask          UnsM    1433301837   

  Variations           Vrtn    1450341486   

  Wait                 Wait    1466001780   

  WaterPaper           WtrP    1467249232   

  Watercolor           Wtrc    1467249251   

  Wave                 Wave    1466005093   Breaks hash.

  Wind                 Wnd     1466852384   

  ZigZag               ZgZg    1516722791   

  BackLight            BacL    1113678668   

  FillFlash            FilE    1181314117   rkulkarn 11/15/2000

  ColorCast            ColE    1131375685   

  OpenUntitled         OpnU    1332768341   
  ------------------------------------------------------------------------------------

  :  Event Codes #
# Core $ #
$ #

Description #

The $ object provides a number of debugging facilities and informational
methods.

Static Properties #

  -------------- ---------------------------------------------------------
  build readonly The ExtendScript build information.

  buildDate      The ExtendScript build date.
  readonly       

  decimalPoint   The character used as the decimal point character in
  readonly       formatted numeric output.

  engineName     The name of the current ExtendScript engine, if set.
  readonly       

  error readonly The most recent run-time error information.

  fileName       The file name of the current script.
  readonly       

  flags readonly Gets or sets low-level debug output flags.

  global         A reference to the global object, which contains the
  readonly       JavaScript global namespace.

  hiresTimer     A high-resolution timer, measuring the time in
  readonly       microseconds. The timer starts when ExtendScript is
                 initialized during the application startup sequence.
                 Every read access resets the timer to Zero.

  includePath    The path for include files for the current script.
  readonly       

  level readonly The current debugging level, which enables or disables
                 the JavaScript debugger.

  line readonly  The current line number of the currently executing
                 script.

  locale         Gets or sets the current locale.
  readonly       

  localize       Set to true to enable the extended localization features
  readonly       of the built-in toString() method.

  memCache       The ExtendScript memory cache size, in bytes.
  readonly       

  os readonly    The current operating system version information.

  screens        An array of objects containing information about the
  readonly       display screens attached to your computer.

  stack readonly The current stack trace.

  strict         Sets or clears strict mode for object modification.
  readonly       

  version        The version number of the ExtendScript engine.
  readonly       
  -------------- ---------------------------------------------------------

Static Methods #

  ------------------------ ----------------------------------------------
  about readonly           Shows an About box for the ExtendScript
                           component, and returns the text for the box.

  bp readonly              Breaks execution at the current position.

  colorPicker readonly     Invokes the platform-specific color selection
                           dialog, and returns the selected color.

  evalFile readonly        Loads and evaluates a file.

  gc readonly              Initiates garbage collection in the
                           ExtendScript engine.

  getenv readonly          Retrieves the value of an environment
                           variable.

  setenv readonly          Sets the value of an environment variable.

  sleep readonly           Suspends the calling thread for a number of
                           milliseconds.

  toString readonly        Converts this object to a string.

  write readonly           Prints text to the Console.

  writeln readonly         Prints text to the Console, and adds a newline
                           character.
  ------------------------ ----------------------------------------------
# Core AliasArray #
AliasArray #

Description #

  An array of Alias objects
# Core Array #
Array #

Description #

An array with integer indexing and a?length?property.

Properties #

  ------------------------------------------ ----------------------------
  length readonly                            The length of the array

  ------------------------------------------ ----------------------------

Constructors #

  ------------------------------------ ----------------------------------
  Array readonly                       Creates and returns a new array.

  ------------------------------------ ----------------------------------

Methods #

  ------------------- ---------------------------------------------------
  concat readonly     Returns a new array created by concatenating the
                      given values to the end of the original array.

  join readonly       Joins all elements of the array into a string;
                      optionally, each element is separated by delimiter.

  pop readonly        Removes the last element from the array, decreases
                      the length by 1, and returns the value of the
                      element.

  push readonly       Places one or more values onto the end of the array
                      and increases length by n.

  reverse readonly    Reverses the order of the elements in the array.

  shift readonly      Removes the first element from the array, decreases
                      the length by 1, and returns the value of the
                      element.

  slice readonly      Creates a new array, which contains a subset of the
                      original array’s elements.

  sort readonly       Sorts the elements of the array in place, using the
                      given function to compare to elements.

  splice readonly     Removes num elements from the array beginning with
                      index, start.

  toLocaleString      Converts an array to a string and returns the
  readonly            string (localized).

  toSource readonly   Creates a string representation of this object that
                      can be fed back to?eval()?to re-create an object.
                      Works only with built-in classes.

  toString readonly   Converts an array to a string and returns the
                      string.

  unshift readonly    Adds one or more elements to the beginning of the
                      array.
  ------------------- ---------------------------------------------------
# Core Boolean #
Boolean #

Description #

Wraps a Boolean value.

Constructors #

  --------------------- -------------------------------------------------
  Boolean readonly      Creates and returns a new Boolean object set to
                        the value of the argument converted to a boolean.

  --------------------- -------------------------------------------------

Methods #

  ----------------- -----------------------------------------------------
  toSource readonly Creates a string representation of this object that
                    can be fed back to?eval()?to re-create an object.
                    Works only with built-in classes.

  toString readonly Returns the string representation of the value of
                    bool.

  valueOf readonly  Returns the primitive value of bool.
  ----------------- -----------------------------------------------------
# Core Date #
Date #

Description #

A date/time object.

Constructors #

  ------------------------ ----------------------------------------------
  Date readonly            Returns a new Date object holding the current
                           date and time.

  ------------------------ ----------------------------------------------

Methods #

  ---------------------- ------------------------------------------------
  getDate readonly       Returns the day of the month of the specified
                         Date object in local time.

  getDay readonly        Returns the day of the week for the specified
                         Date object in local time.

  getFullYear readonly   Returns the four digit year of the specified
                         Date object in local time.

  getHours readonly      Returns the hour of the specified Date object in
                         local time.

  getMilliseconds        Returns the milliseconds of the specified Date
  readonly               object in local time.

  getMinutes readonly    Returns the minutes of the specified Date object
                         in local time.

  getMonth readonly      Returns the month of the specified Date object
                         in local time.

  getSeconds readonly    Returns the seconds of the specified Date object
                         in local time.

  getTime readonly       Returns the number of milliseconds since
                         midnight January 1,1970 UTC for the specified
                         Date object.

  getTimezoneOffset      Returns the difference in minutes between the
  readonly               computer’s local time and UTC.

  getUTCDate readonly    Returns the day of the month of the specified
                         Date object according to UTC.

  getUTCDay readonly     Returns the day of the week for the specified
                         Date object according to UTC.

  getUTCFullYear         Returns the four digit year of the specified
  readonly               Date object according to UTC.

  getUTCHours readonly   Returns the hour of the specified Date object
                         according to UTC.

  getUTCMilliseconds     Returns the milliseconds of the specified Date
  readonly               object according to UTC.

  getUTCMinutes readonly Returns the minutes of the specified Date object
                         according to UTC.

  getUTCMonth readonly   Returns the month of the specified Date object
                         according to UTC.

  getUTCSeconds readonly Returns the seconds of the specified Date object
                         according to UTC.

  getYear readonly       Returns the year of the specified Date object,
                         as a difference from 1900, in local time.

  setDate readonly       Sets the day of the month of a specified Date
                         object according to local time.

  setFullYear readonly   Sets the year of a specified Date object
                         according to local time.

  setHours readonly      Sets the hours of a specified Date object
                         according to local time.

  setMilliseconds        Sets the milliseconds of a specified Date object
  readonly               according to local time.

  setMinutes readonly    Sets the minutes of a specified Date object
                         according to local time.

  setMonth readonly      Sets the month of a specified Date object
                         according to local time.

  setSeconds readonly    Sets the seconds of a specified Date object
                         according to local time.

  setTime readonly       Sets the date of a specified Date object in
                         milliseconds since midnight, January 1, 1970.

  setUTCDate readonly    Sets the date of a specified Date object
                         according to universal time.

  setUTCFullYear         Sets the year of a specified Date object
  readonly               according to UTC, can also set the month and
                         date.

  setUTCHours readonly   Sets the hours of a specified Date object
                         according to UTC.

  setUTCMilliseconds     Sets the milliseconds of a specified Date object
  readonly               according to UTC.

  setUTCMinutes readonly Sets the minutes of a specified Date object
                         according to UTC.

  setUTCMonth readonly   Sets the month of a specified Date object
                         according to UTC.

  setUTCSeconds readonly Sets the seconds of a specified Date object
                         according to UTC.

  setYear readonly       Sets the year of a specified Date object
                         according to local time, as a difference between
                         the current year and 1900.

  toDateString readonly  

  toGMTString readonly   

  toLocaleDateString     
  readonly               

  toLocaleString         
  readonly               

  toLocaleTimeString     
  readonly               

  toSource readonly      Creates a string representation of this object
                         that can be fed back to?eval()?to re-create an
                         object. Works only with built-in classes.

  toString readonly      Returns a string value representing the date and
                         time stored in the Date object in human readable
                         format.

  toTimeString readonly  

  toUTCString readonly   

  valueOf readonly       The valueOf() method returns the number of
                         milliseconds that have passed since midnight,
                         Returns an integer.
  ---------------------- ------------------------------------------------

Static Methods #

  ---------------- ------------------------------------------------------
  UTC readonly     Returns the number of milliseconds between midnight
                   January 1, 1970, UTC, and the specified time.

  parse readonly   Parses a string, returning a new Date object. The
                   string should be similar to the string returned bt
                   toString().
  ---------------- ------------------------------------------------------
# Core Error #
Error #

Description #

Wraps a runtime error.

Properties #

  -------------------------------------------------- --------------------
  description readonly                               The error message.

  -------------------------------------------------- --------------------

Constructors #

  --------------------------------------- -------------------------------
  Error readonly                          Creates a new Error object.

  --------------------------------------- -------------------------------

Methods #

  ---------------- ------------------------------------------------------
  toSource         Creates a string representation of this object that
  readonly         can be fed back to?eval()?to re-create an object.
                   Works only with built-in classes.

  toString         Convert this object to a string.
  readonly         
  ---------------- ------------------------------------------------------
# Core FileArray #
FileArray #

Description #

  An array if File objects
# Core File #
File #

Description #

Represents a file in the local file system in a platform-independent
manner.

Properties #

  -------------------- --------------------------------------------------
  absoluteURI readonly The full path name for the referenced file in URI
                       notation.

  alias readonly       If true, the object refers to a file system alias
                       or shortcut.

  created readonly     The creation date of the referenced file, or null
                       if the object does not refer to a file on disk.

  creator readonly     In Mac OS, the file creator as a four-character
                       string. In Windows or UNIX, value is “????”.

  displayName readonly The localized name of the referenced file, without
                       the path specification.

  encoding readonly    Gets or sets the encoding for subsequent
                       read/write operations.

  eof readonly         When true, a read attempt caused the current
                       position to be at the end of the file, or the file
                       is not open.

  error readonly       A string containing a message describing the most
                       recent file system error.

  exists readonly      If true, this object refers to a file or
                       file-system alias that actually exists in the file
                       system.

  fsName readonly      The platform-specific full path name for the
                       referenced file.

  fullName readonly    The full path name for the referenced file in URI
                       notation.

  hidden readonly      When true, the file is not shown in the
                       platform-specific file browser.

  length readonly      The size of the file in bytes.

  lineFeed readonly    How line feed characters are written in the file
                       system.

  modified readonly    The date of the referenced file’s last
                       modification, or null if the object does not refer
                       to a file on the disk.

  name readonly        The file name portion of the absolute URI for the
                       referenced file, without the path specification.

  parent readonly      The Folder object for the folder that contains
                       this file.

  path readonly        The path portion of the absolute URI for the
                       referenced file, without the file name.

  readonly readonly    When true, prevents the file from being altered or
                       deleted.

  relativeURI readonly The path name for the object in URI notation,
                       relative to the current folder.

  type readonly        The file type as a four-character string.
  -------------------- --------------------------------------------------

Static Properties #

  ---------------------------------- ------------------------------------
  fs readonly                        The name of the file system.

  ---------------------------------- ------------------------------------

Constructors #

  -------------------- --------------------------------------------------
  File readonly        Creates and returns a new File object referring to
                       a given file system location.

  -------------------- --------------------------------------------------

Methods #

  ---------------- --------------------------------------------------------
  changePath       Changes the path specification of the referenced file.
  readonly         

  close readonly   Closes this open file.

  copy readonly    Copies this object?s referenced file to the specified
                   target location.

  createAlias      Makes this file a file-system alias or shortcut to the
  readonly         specified file.

  execute readonly Executes or opens this file using the appropriate
                   application, as if it had been double-clicked in a file
                   browser.

  getRelativeURI   Retrieves and returns the path for this file, relative
  readonly         to the specified base path, in URI notation.

  open readonly    Opens the referenced file for subsequent read/write
                   operations. The method resolves any aliases to find the
                   file.

  openDlg readonly Opens the built-in platform-specific file-browsing
                   dialog, in which the user can select an existing file or
                   files, and creates new File objects to represent the
                   selected files.

  read readonly    Reads the contents of the file, starting at the current
                   position.

  readch readonly  Reads a single text character from the file at the
                   current position.

  readln readonly  Reads a single line of text from the file at the current
                   position.

  remove readonly  Deletes the file associated with this object from disk
                   immediately, without moving it to the system trash.

  rename readonly  Renames the associated file.

  resolve readonly Attempts to resolve the file-system alias or shortcut
                   that this object refers to.

  saveDlg readonly Opens the built-in platform-specific file-browsing
                   dialog, in which the user can select an existing file
                   location to which to save information, and creates a new
                   File object to represent the selected file.

  seek readonly    Seeks to a given position in the file.

  tell readonly    Retrieves the current position as a byte offset from the
                   start of the file.

  toSource         Creates and returns a serialized string representation
  readonly         of this object.

  toString         Converts this object to a string.
  readonly         

  write readonly   Writes the specified text to the file at the current
                   position.

  writeln readonly Writes a string to the file at the current position and
                   appends a line-feed sequence.
  ---------------- --------------------------------------------------------

Static Methods #

  ----------------------------- -----------------------------------------
  decode readonly               Decodes a UTF-8 encoded string as
                                required by RFC 2396, and returns the
                                decoded string.

  encode readonly               Encodes a string as required by RFC 2396,
                                and returns the encoded string.

  isEncodingAvailable readonly  Reports whether a given encoding is
                                available.

  openDialog readonly           Opens a dialog so the user can select one
                                or more files to open.

  saveDialog readonly           Opens a dialog so the user can select a
                                file name to save to.
  ----------------------------- -----------------------------------------
# Core Folder #
Folder #

Description #

Represents a file-system folder or directory in a platform-independent
manner.

Properties #

  ------------------- ---------------------------------------------------
  absoluteURI         The full path name for the referenced folder in URI
  readonly            notation.

  alias readonly      When true, the object refers to a file system alias
                      or shortcut.

  created readonly    The creation date of the referenced folder, or null
                      if the object does not refer to a folder on disk.

  displayName         The localized name portion of the absolute URI for
  readonly            the referenced folder, without the path
                      specification.

  error readonly      A message describing the most recent file system
                      error.

  exists readonly     When true, this object refers to a folder that
                      currently exists in the file system.

  fsName readonly     The platform-specific name of the referenced folder
                      as a full path name.

  fullName readonly   The full path name for the referenced folder in URI
                      notation. .

  modified readonly   The date of the referenced folder’s last
                      modification, or null if the object does not refer
                      to a folder on disk.

  name readonly       The folder name portion of the absolute URI for the
                      referenced file, without the path specification.

  parent readonly     TThe Folder object for the folder that contains
                      this folder, or null if this object refers to the
                      root folder of a volume.

  path readonly       The path portion of the object absolute URI for the
                      referenced file, without the folder name.

  relativeURI         The path name for the referenced folder in URI
  readonly            notation, relative to the current folder.
  ------------------- ---------------------------------------------------

Static Properties #

  -------------- --------------------------------------------------------
  appData        The folder containing the application data for all
  readonly       users.

  appPackage     In Mac OS, a Folder object for the folder containing the
  readonly       bundle of the running application.

  commonFiles    A Folder object for the folder containing common files
  readonly       for all programs installed by the user.

  current        A Folder object for the current folder.
  readonly       

  desktop        A Folder object for the folder that contains the user?s
  readonly       desktop.

  fs readonly    The name of the current file system.

  myDocuments    A folder pointing to the user’s My Documents folder.
  readonly       

  startup        A Folder object for the folder containing the executable
  readonly       image of the running application.

  system         A Folder object for the folder containing the operating
  readonly       system files.

  temp readonly  A Folder object for the default folder for temporary
                 files.

  trash readonly A Folder object for the folder containing deleted items.
                 On Windows, the trash folder is a virtual folder
                 containing a database; therefore, the property value is
                 null on Windows.

  userData       A Folder object for the folder containing the user’s
  readonly       application data.
  -------------- --------------------------------------------------------

Constructors #

  ---------------------- ------------------------------------------------
  Folder readonly        Creates and returns a new Folder object
                         referring to a given file-system location.

  ---------------------- ------------------------------------------------

Methods #

  -------------------- --------------------------------------------------
  changePath readonly  Changes the path specification of the referenced
                       folder.

  create readonly      Creates a folder at the location given by this
                       object’s?path?property.

  execute readonly     Opens this folder in the platform-specific file
                       browser (as if it had been double-clicked in the
                       file browser).

  getFiles readonly    Retrieves the contents of this folder, filtered by
                       the supplied mask.

  getRelativeURI       Retrieves and returns the path for this file,
  readonly             relative to the specified base path, in URI
                       notation.

  remove readonly      Deletes the folder associated with this object
                       from disk immediately, without moving it to the
                       system trash.

  rename readonly      Renames the associated folder.

  resolve readonly     Attempts to resolve the file-system alias or
                       shortcut that this object refers to.

  selectDlg readonly   Opens the built-in platform-specific file-browsing
                       dialog, and creates a new File or Folder object
                       for the selected file or folder.

  toSource readonly    Creates and returns a serialized string
                       representation of this object.

  toString readonly    Converts this object to a string.
  -------------------- --------------------------------------------------

Static Methods #

  ----------------------- -----------------------------------------------
  decode readonly         Decodes a UTF-8 encoded string as required by
                          RFC 2396, and returns the decoded string.

  encode readonly         Encodes a string as required by RFC 2396, and
                          returns the encoded string.

  isEncodingAvailable     Reports whether a given encoding is available.
  readonly                

  selectDialog readonly   Opens the built-in platform-specific
                          file-browsing dialog, and creates a new File or
                          Folder object for the selected file or folder.
  ----------------------- -----------------------------------------------
# Core Function #
Function #

Description #

Wraps a built-in or JavaScript function.

Properties #

  ----------------------------------- -----------------------------------
  arguments readonly                  The function arguments, packed into
                                      an array.

  arity readonly                      The number of formal arguments.

  length readonly                     The number of formal arguments.

  name readonly                       The function name.
  ----------------------------------- -----------------------------------

Constructors #

  -------------------------------------------------------------------- --
  Function readonly                                                    

  -------------------------------------------------------------------- --

Methods #

  ----------------- -----------------------------------------------------
  apply readonly    Apply a?this?object and an argument list to a
                    function.

  call readonly     Apply a?this?object and arguments to a function.

  toSource readonly Creates a string representation of this object that
                    can be fed back to?eval()?to re-create an object.
                    Works only with JavaScript functions.

  toString readonly Returns the function definition as a string.
  ----------------- -----------------------------------------------------
# Core global #
global #

Description #

The global methods and properties for ExtendScript.

Properties #

  ------------------- ---------------------------------------------------
  Infinity readonly   The Infinity global property is a predefined
                      variable with the value for infinity.

  NaN readonly        The NaN global property is a predefined variable
                      with the value NaN (Not-a-Number), as specified by
                      the IEEE-754 standard.

  undefined readonly  This global property is a predefined variable with
                      the value for an undefined value.
  ------------------- ---------------------------------------------------

Methods #

  ------------------------------- ---------------------------------------
  alert readonly                  Displays an alert box

  confirm readonly                Displays an alert box with Yes and No
                                  buttons; returns true for Yes

  decodeURI readonly              Decodes a string created
                                  with?encodeURI().

  decodeURIComponent readonly     Decodes a string created
                                  with?encodeURIComponent().

  encodeURI readonly              Encodes a string after RFC2396.

  encodeURIComponent readonly     Encodes a string after RFC2396.

  escape readonly                 Creates a URL-encoded string from
                                  aString.

  eval readonly                   Evaluates its argument as a JavaScript
                                  script, and returns the result of
                                  evaluation.

  isFinite readonly               Evaluates an expression and reports
                                  whether the result is a finite number.

  isNaN readonly                  Evaluates an expression and reports
                                  whether the result is “Not-a-Number”
                                  (NaN).

  isXMLName readonly              Returns true if the supplied string is
                                  a valid XML name.

  localize readonly               Localizes a ZString-encoded string and
                                  merges additional arguments into the
                                  string.

  parseFloat readonly             Extracts a floating-point number from a
                                  string.

  parseInt readonly               Extracts an integer from a string.

  prompt readonly                 Displays a dialog allowing the user to
                                  enter text

  setDefaultXMLNamespace readonly Defines the default XML namespace.

  unescape readonly               Translates URL-encoded string into a
                                  regular string, and returns that
                                  string.

  uneval readonly                 Creates a source code representation of
                                  the supplied argument, and returns it
                                  as a string.
  ------------------------------- ---------------------------------------
# Core Core #
Core #

Classes #

-   $
-   AliasArray
-   Array
-   Boolean
-   Date
-   Error
-   File
-   FileArray
-   Folder
-   Function
-   Math
-   Namespace
-   Number
-   Object
-   QName
-   Reflection
-   ReflectionInfo
-   RegExp
-   Socket
-   String
-   UnitPoint
-   UnitRect
-   UnitValue
-   XML
-   XMLList
-   global

Module Index #

-    Module Index
# Core Math #
Math #

Description #

A global object containing a set of math functions and constants.

Static Properties #

  --------------------------- -------------------------------------------
  E readonly                  Euler’s constant and the base of natural
                              logarithms.

  LN10 readonly               The natural logarithm of 10.

  LN2 readonly                The natural logarithm of 2.

  LOG10E readonly             The base 10 logarithm of e.

  LOG2E readonly              The base 2 logarithm of e.

  PI readonly                 The ratio of the circumference of a circle
                              to its diameter.

  SQRT1_2 readonly            The reciprocal of the square root of 1/2.

  SQRT2 readonly              The square root of 2.
  --------------------------- -------------------------------------------

Static Methods #

  ------------------------ ----------------------------------------------
  abs readonly             Returns the absolute value of a number.

  acos readonly            Returns the arc cosine(in radians) of a
                           number.

  asin readonly            Returns the arc sin(in radians) of a number.

  atan readonly            Returns the arc tangent(in radians) of a
                           number.

  atan2 readonly           Returns the arc tangent of the quotient of its
                           arguments (y/x).

  ceil readonly            Rounds the number up to the nearest integer.

  cos readonly             Returns the cosine of an angle provided in
                           radians.

  exp readonly             Returns Math.E raised to the power of a
                           number.

  floor readonly           Rounds a number down to the nearest integer.

  log readonly             Returns the natural logarithm of a number.

  max readonly             Returns the largest of zero or more numbers.

  min readonly             Returns the smallest of zero or more numbers.

  pow readonly             Returns x raised to the power of y.

  random readonly          Returns a pseudo-random number from 0.0 up to
                           but not including 1.0.

  round readonly           Rounds a number to the nearest integer.

  sin readonly             Returns the sine of an angle provided in
                           radians.

  sqrt readonly            Returns the square root of a number.

  tan readonly             Returns the tangent of an angle provided in
                           radians.
  ------------------------ ----------------------------------------------
# Core Namespace #
Namespace #

Description #

A XML namespace object.

Properties #

  ------------------------------------------------ ----------------------
  prefix readonly                                  The named prefix.

  uri readonly                                     The URI.
  ------------------------------------------------ ----------------------

Constructors #

  -------------------------------------------- --------------------------
  Namespace readonly                           Creates a Namespace
                                               object.

  -------------------------------------------- --------------------------
# Core Number #
Number #

Description #

Wraps a numeric value.

Static Properties #

  ----------------------------------- -----------------------------------
  MAX_VALUE readonly                  A constant representing the largest
                                      representable number.

  MIN_VALUE readonly                  A constant representing the
                                      smallest representable number.

  NEGATIVE_INFINITY readonly          A constant representing negative
                                      infinity.

  NaN readonly                        A constant representing the special
                                      “Not a Number” value.

  POSITIVE_INFINITY readonly          A constant representing positive
                                      infinity.
  ----------------------------------- -----------------------------------

Constructors #

  ---------------------- ------------------------------------------------
  Number readonly        Returns a new Number object set to the value of
                         the argument converted to a number.

  ---------------------- ------------------------------------------------

Methods #

  -------------------- --------------------------------------------------
  toExponential        Converts the Number object to a string in
  readonly             scientific notation.

  toFixed readonly     Converts the Number object to a string with fixed
                       decimals.

  toLocaleString       Returns the value of a Number object converted to
  readonly             a string, using localized conventions.

  toPrecision readonly Converts the Number object to a string in either
                       scientific or fixed notation, epending on its
                       value.

  toSource readonly    Creates a string representation of this object
                       that can be fed back to?eval()?to re-create an
                       object. Works only with built-in classes.

  toString readonly    Returns the value of a Number object converted to
                       a string.

  valueOf readonly     Returns the value of a Number object as a
                       primitive number.
  -------------------- --------------------------------------------------
# Core Object #
Object #

Description #

The base class of all JavaScript objects.

Properties #

  ------------------------- ---------------------------------------------
  constructor readonly      Points to the constructor function that
                            created this object.

  prototype readonly        Points to the prototype object for this
                            object.

  reflect readonly          Retrieves and returns the Reflection object
                            associated with this method or a property.
  ------------------------- ---------------------------------------------

Constructors #

  ------------------------------ ----------------------------------------
  Object readonly                Creates and returns a new object of a
                                 given type.

  ------------------------------ ----------------------------------------

Methods #

  --------------------------- -------------------------------------------
  hasOwnProperty readonly     Reports whether a given property is defined
                              with an instance or within the prototype
                              chain.

  isPrototypeOf readonly      Checks whether the given object is a
                              prototype of this object.

  propertyIsEnumerable        Reports whether a given property is
  readonly                    enumerable.

  toLocaleString readonly     Creates and returns a string representing
                              this object, localized for the current
                              locale. See?toString().

  toSource readonly           Creates and returns a string representation
                              of this object.

  toString readonly           Creates and returns a string representing
                              this object.

  unwatch readonly            Removes the watch function of a property.

  valueOf readonly            Retrieves and returns the primitive value
                              of this object.

  watch readonly              Adds a watch function to a property, which
                              is called when the value changes.
  --------------------------- -------------------------------------------

Static Methods #

  ---------------------------------- ------------------------------------
  isValid readonly                   Reports whether an object is still
                                     valid.

  ---------------------------------- ------------------------------------
# Core QName #
QName #

Description #

A qualified XML name, containing the URI and the local name.

Properties #

  ----------------------------------- -----------------------------------
  localName readonly                  The local name part of the
                                      qualified name.

  uri readonly                        The URI part of the qualified name.
  ----------------------------------- -----------------------------------

Constructors #

  ----------------------------------------- -----------------------------
  QName readonly                            Creates a QName object.

  ----------------------------------------- -----------------------------
# Core Reflection #
Reflection #

Description #

Provides information about a class.

Properties #

  ----------------------------------------- -----------------------------
  description readonly                      The long description text.

  help readonly                             The short description text.

  methods readonly                          An array of method
                                            descriptions.

  name readonly                             The class name.

  properties readonly                       An array of property
                                            descriptions.

  sampleCode readonly                       Sample code, if present.

  sampleFile readonly                       A file containing sample
                                            code. May be null.

  staticMethods readonly                    An array of class method
                                            descriptions.

  staticProperties readonly                 An array of class property
                                            descriptions.
  ----------------------------------------- -----------------------------

Methods #

  ------------------------------ ----------------------------------------
  find readonly                  Finds an element description by name.

  toXML readonly                 Returns this class information as XML in
                                 OMV format.
  ------------------------------ ----------------------------------------
# Core ReflectionInfo #
ReflectionInfo #

Description #

Provides information about a method, a property or a method parameters.

Properties #

  ----------------------------------- -----------------------------------
  arguments readonly                  The description of method or
                                      function arguments.

  dataType readonly                   The data type.

  defaultValue readonly               The default value.

  description readonly                The long description text.

  help readonly                       The short description text.

  isCollection readonly               Contains true if the class
                                      describes a collection class.

  max readonly                        The maximum value.

  min readonly                        The minimum value.

  name readonly                       The element name.

  parent readonly                     The class object that this element
                                      belongs to.

  sampleCode readonly                 Sample code, if present.

  sampleFile readonly                 A file containing sample code. May
                                      be null.

  type readonly                       The element type.
  ----------------------------------- -----------------------------------
# Core RegExp #
RegExp #

Description #

Wraps a regular expression.

Static Properties #

  ---------------------------------- ------------------------------------
  $1 readonly                        The matched subexpression #1.

  $2 readonly                        The matched subexpression #2.

  $3 readonly                        The matched subexpression #3.

  $4 readonly                        The matched subexpression #4.

  $5 readonly                        The matched subexpression #5.

  $6 readonly                        The matched subexpression #6.

  $7 readonly                        The matched subexpression #7.

  $8 readonly                        The matched subexpression #8.

  $9 readonly                        The matched subexpression #9.

  global readonly                    Indicates whether the match is a
                                     global match.

  ignoreCase readonly                Indicates whether the match is not
                                     case sensitive.

  input readonly                     The original input string.

  lastMatch readonly                 The last match.

  lastParen readonly                 The value of the last matched
                                     subexpression.

  leftContext readonly               The string before the match.

  multiline readonly                 Indicates whether the match matches
                                     multiple lines.

  rightContext readonly              The string after the match.
  ---------------------------------- ------------------------------------

Constructors #

  ------------------ ----------------------------------------------------
  RegExp readonly    Creates and returns a new RegExp object set to the
                     value of the argument converted to a regular
                     expression.

  ------------------ ----------------------------------------------------

Methods #

  ---------------------- ------------------------------------------------
  compile readonly       Compiles a string to a regular expression.
                         Returns true if the compilation was successful.

  exec readonly          Execute a regular expression.

  test readonly          Execute a regular expression, and return true if
                         there is a match.

  toString readonly      Converts this RegExp object to a string.
  ---------------------- ------------------------------------------------
# Core Socket #
Socket #

Description #

Creates a TCP/IP connection, or establishes a TCP/IP server.

Properties #

  ----------------------- -----------------------------------------------
  connected readonly      When true, the connection is active.

  encoding readonly       Sets or retrieves the name of the encoding used
                          to transmit data.

  eof readonly            When true, the receive buffer is empty.

  error readonly          A message describing the most recent error.
                          Setting this value clears any error message.

  host readonly           The name of the remote computer when a
                          connection is established.

  timeout readonly        The timeout in seconds to be applied to read or
                          write operations.
  ----------------------- -----------------------------------------------

Constructors #

  ---------------------------------------- ------------------------------
  Socket readonly                          Creates a new Socket object.

  ---------------------------------------- ------------------------------

Methods #

  ---------------- ------------------------------------------------------
  close readonly   Terminates the open connection.

  listen readonly  Instructs the object to start listening for an
                   incoming connection.

  open readonly    Opens the connection for subsequent read/write
                   operations.

  poll readonly    Checks a listening object for a new incoming
                   connection.

  read readonly    Reads up to the specified number of characters from
                   the connection. CR characters are ignored unless the
                   encoding is set to “BINARY”.

  readln readonly  Reads one line of text up to the next line feed.

  write readonly   Concatenates all arguments into a single string and
                   writes that string to the connection.

  writeln readonly Concatenates all arguments into a single string,
                   appends a LF character, and writes that string to the
                   connection.
  ---------------- ------------------------------------------------------
# Core String #
String #

Description #

A character string. Each character is adressable by index.

Properties #

  ----------------------------------------- -----------------------------
  length readonly                           The length of the string.

  ----------------------------------------- -----------------------------

Constructors #

  ------------------------- ---------------------------------------------
  String readonly           Returns a string representation of the value
                            given as an argument.

  ------------------------- ---------------------------------------------

Methods #

  ---------------------- ------------------------------------------------
  anchor readonly        Returns a string consisting of this string
                         enclosed in a <a> tag.

  big readonly           Returns a string consisting of this string
                         enclosed in a <big> tag.

  blink readonly         Returns a string consisting of this string
                         enclosed in a <blink> tag.

  bold readonly          Returns a string consisting of this string
                         enclosed in a <b> tag.

  charAt readonly        Returns the character at the specified index.

  charCodeAt readonly    Returns the Unicode value of the character at
                         the given index.

  concat readonly        If necessary, converts the one or more given
                         values to strings.

  fixed readonly         Returns a string consisting of this string
                         enclosed in a <tt> tag.

  fontcolor readonly     Returns a string consisting of this string
                         enclosed in a <font> tag.

  fontsize readonly      Returns a string consisting of this string
                         enclosed in a <font> tag.

  indexOf readonly       Returns the index within the string of the first
                         occurrence of the specified string, starting the
                         search at fromIndex if provided.

  italics readonly       Returns a string consisting of this string
                         enclosed in a <i> tag.

  lastIndexOf readonly   Returns the index within the string of the last
                         occurrence of the specified value.

  link readonly          Returns a string consisting of this string
                         enclosed in a <a> tag.

  localeCompare readonly Performs a localized comparison of two strings.

  match readonly         Matches a string against a regular expression.

  replace readonly       

  search readonly        

  slice readonly         Extracts a substring of the given string and
                         returns it as a new string.

  small readonly         Returns a string consisting of this string
                         enclosed in a <small> tag.

  split readonly         Splits a string into a group of substrings,
                         places those strings in an array, and returns
                         the array.

  strike readonly        Returns a string consisting of this string
                         enclosed in a <strike> tag.

  sub readonly           Returns a string consisting of this string
                         enclosed in a <sub> tag.

  substr readonly        Returns a string containing the characters
                         beginning at the specified index, start, through
                         the specified number of characters.

  substring readonly     Returns a substring of the given string by
                         extracting characters from indexA up to but not
                         including indexB.

  sup readonly           Returns a string consisting of this string
                         enclosed in a <sup> tag.

  toLocaleLowerCase      Returns a new string which contains all the
  readonly               characters of the original string converted to
                         lowercase (localized).

  toLocaleUpperCase      Returns a new string which contains all the
  readonly               characters of the original string converted to
                         uppercase (localized).

  toLowerCase readonly   Returns a new string which contains all the
                         characters of the original string converted to
                         lowercase.

  toSource readonly      Creates a string representation of this object
                         that can be fed back to?eval()?to re-create an
                         object. Works only with built-in classes.

  toString readonly      Returns itself.

  toUpperCase readonly   Returns a new string which contains all the
                         characters of the original string converted to
                         uppercase.

  valueOf readonly       Returns itself.
  ---------------------- ------------------------------------------------

Static Methods #

  ------------------------ ----------------------------------------------
  fromCharCode readonly    Returns a string created by concatenation one
                           or more characters specified as ASCII values.

  ------------------------ ----------------------------------------------
# Core UnitPoint #
UnitPoint #

Description #

  ???
# Core UnitRect #
UnitRect #

Description #

  An array
# Core UnitValue #
UnitValue #

Description #

Represents a measurement as a combination of values and unit.

Note that this object is not available in all applications.

Properties #

  ------------------------------------------------- ---------------------
  baseUnit readonly                                 The base unit.

  type readonly                                     The unit name.

  value readonly                                    The numeric value.
  ------------------------------------------------- ---------------------

Static Properties #

  --------------------------------------- -------------------------------
  baseUnit readonly                       The base unit for all
                                          conversions.

  --------------------------------------- -------------------------------

Methods #

  ---------------------------------- ------------------------------------
  as readonly                        Returns this instance as a different
                                     unit.

  convert readonly                   Converts this instance to a
                                     different unit.
  ---------------------------------- ------------------------------------
# Core XML #
XML #

Description #

Wraps XML into an object.

Static Properties #

  -------------------------------- --------------------------------------
  ignoreComments readonly          Controls whether XML comments should
                                   be parsed (false) or ignored (true).

  ignoreProcessingInstructions     Controls whether XML preprocessing
  readonly                         instructions should be parsed (false)
                                   or ignored (true).

  ignoreWhitespace readonly        Controls whether whitespace should be
                                   parsed (false) or ignored (true).

  prettyIndent readonly            The number of spaces used to indent
                                   pretty-printed XML.

  prettyPrinting readonly          When true, XML is pretty-printed when
                                   converting to a string.
  -------------------------------- --------------------------------------

Constructors #

  ---------------------- ------------------------------------------------
  XML readonly           Parses an XML string. Throws an error if the XML
                         is incorrect.

  ---------------------- ------------------------------------------------

Methods #

  ------------------------ --------------------------------------------------
  addNamespace readonly    Adds a namespace declaration to the node. Returns
                           the XML object itself.

  appendChild readonly     Appends the given XML to this XML as a child.
                           Returns the XML object itself.

  attribute readonly       Returns a list containing all attribute elements
                           matching the given name.

  attributes readonly      Returns a list containing all attribute elements.

  child readonly           Returns a list containing all children of this XML
                           matching the given element name.

  childIndex readonly      Returns a number representing the ordinal position
                           of this XML object within the context of its
                           parent.

  children readonly        Returns an XML object containing all the
                           properties of this XML object in order.

  comments readonly        Returns an XML object containing the properties of
                           this XML object that represent XML comments.

  contains readonly        Checks if this XML object contains the given XML
                           object.

  copy readonly            Creates a copy of this XML object.

  descendants readonly     Returns all the XML-valued descendants of this XML
                           object with the given name.

  elements readonly        Returns a list of XML children that are elements
                           with a given name, or all children that are XML
                           elements.

  hasComplexContent        Reports whether this XML object contains complex
  readonly                 content.

  hasSimpleContent         Reports whether this XML object contains simple
  readonly                 content.

  inScopeNamespaces        Returns an array of Namespace objects mirroring
  readonly                 the current list of valid namespaces at this
                           element.

  insertChildAfter         Inserts the given child2 after the given child1 in
  readonly                 this XML object and returns this XML object.

  insertChildBefore        Inserts the given child2 before the given child1
  readonly                 in this XML object and returns this XML object.

  length readonly          Returns the number of elements contained in an XML
                           list. If this XML object is not a list, returns 1.

  localName readonly       Returns the local name of this XML object.

  name readonly            Returns a QName object containing the URI and the
                           local name of the element.

  namespace readonly       Returns a Namespace object containing the
                           namespace URI of the current element.

  namespaceDeclarations    Returns an array containing all namespace
  readonly                 declarations of this XML object.

  nodeKind readonly        Returns the type of this XML object as one of the
                           strings “element”, “attribute”, “comment”,
                           “processing-instruction”, or “text”.

  normalize readonly       Puts all text nodes in this and all descendant XML
                           objects into a normal form by merging adjacent
                           text nodes and eliminating empty text nodes.
                           Returns this XML object.

  parent readonly          Returns the parent object of this XML object.

  prependChild readonly    Inserts a given child into this object before its
                           existing XML properties, and returns this XML
                           object.

  processingInstructions   Returns a list of preprocessing instructions.
  readonly                 

  removeNamespace readonly Removes the given namespace from this XML, and
                           returns this XML.

  replace readonly         Replaces the value of specified XML properties of
                           this XML object returns this XML object.

  setChildren readonly     Replaces all of the XML-valued properties in this
                           object with a new value, and returns this XML
                           object.

  setLocalName readonly    Replaces the local name of this XML object with a
                           string constructed from the given name

  setName readonly         Replaces the name of this XML object with the
                           given QName object.

  setNamespace readonly    Sets the namespace for this XML element.

  text readonly            Returns an XML list containing all XML properties
                           of this XML object that represent XML text nodes.

  toString readonly        Returns the string representation of this object.

  toXMLString readonly     Returns an XML-encoded string representation of
                           this XML object.

  xpath readonly           Evaluates the given XPath expression in accordance
                           with the W3C XPath recommendation, using this XML
                           object as the context node.
  ------------------------ --------------------------------------------------

Static Methods #

  ------------------------- ---------------------------------------------
  defaultSettings readonly  Returns an object containing the default
                            parsing and print settings for XML.

  setSettings readonly      Sets the parsing and print setting for XML
                            using an object returned by the settings()
                            method.

  settings readonly         Returns an object containing the current
                            parsing and print settings for XML.
  ------------------------- ---------------------------------------------
# Core XMLList #
XMLList #

Description #

An XML list object.

In this implementation, an XMLList object is synonymous to the XML
object. The constructor accepts an XML list, but everything else works
like the XML object.
# Photoshop ActionDescriptor #
ActionDescriptor #

Description #

A record of key-value pairs for actions, such as those included on the
Adobe Photoshop Actions menu. The ActionDescriptor class is part of the
Action Manager functionality. For more details on the Action Manager,
see the Photoshop Scripting Guide.

Static Properties #

  ---------------------------------- ------------------------------------
  count readonly                     The number of keys contained in the
                                     descriptor.

  ---------------------------------- ------------------------------------
# Photoshop ActionList #
ActionList #

Description #

The list of commands that comprise an Action (such as an Action created
using the Actions palette in the Adobe Photoshop application). The
action list object is part of the Action Manager functionality. For
details on using the Action Manager, see the Photoshop Scripting Guide.

Static Properties #

  ------------------------------- ---------------------------------------
  count readonly                  The number of commands that comprise
                                  the action.

  ------------------------------- ---------------------------------------
# Photoshop ActionReference #
ActionReference #

Description #

Contains data describing a referenced Action. The action reference
object is part of the Action Manager functionality. For details on using
the Action Manager, see the Photoshop Scripting Guide.
# Photoshop AdjustmentReference #
AdjustmentReference #

Description #

Method to use for interpreting selective color adjustment
specifications.

Static Properties #

  --------------------------------------- -------------------------------
  ABSOLUTE readonly                       A percentage of the whole.

  RELATIVE readonly                       A percentage of the existing
                                          color amount.
  --------------------------------------- -------------------------------
# Photoshop AnchorPosition #
AnchorPosition #

Description #

The point around which to transform the object.

Static Properties #

  -------------------------------------- --------------------------------
  BOTTOMCENTER readonly                  The middle point of the bottom
                                         of the object.

  BOTTOMLEFT readonly                    The bottom left corner of the
                                         object.

  BOTTOMRIGHT readonly                   The bottom right corner of the
                                         object.

  MIDDLECENTER readonly                  The center of the object.

  MIDDLELEFT readonly                    The middle point on the left
                                         side of the object.

  MIDDLERIGHT readonly                   The middle point on the right
                                         side of the object.

  TOPCENTER readonly                     The middle point on the top of
                                         the object.

  TOPLEFT readonly                       The top left corner of the
                                         object.

  TOPRIGHT readonly                      The top right corner of the
                                         object.
  -------------------------------------- --------------------------------
# Photoshop AntiAlias #
AntiAlias #

Description #

The method to use to smooth edges by softening the color transition
between edge pixels and background pixels.

Static Properties #

  --------------------------------------- -------------------------------
  CRISP readonly                          Makes type appear somewhat
                                          sharp.

  NONE readonly                           Does not use anti-aliasing.

  SHARP readonly                          Makes type appear its sharpest.

  SMOOTH readonly                         Makes type appear smoother.

  STRONG readonly                         Makes type appear heavier.
  --------------------------------------- -------------------------------
# Photoshop Application #
Application #

Description #

The Adobe Photoshop application object, which contains all other Adobe
Photoshop objects.

This is the root of the object model, and provides access to all other
objects. To access the properties and methods, you can use the
pre-defined global variable app. For example: var currentDoc =
app.activeDocument;

Properties #

  ------------------------ ------------------------------------------------
  activeDocument readonly  The frontmost document.

  backgroundColor readonly The default background color (used to paint,
                           fill, and stroke selections).

  build readonly           The build number of Adobe Photoshop application.

  colorSettings readonly   The name of the selected color setting’s set.

  currentTool readonly     Name of the current tool.

  displayDialogs readonly  The dialog mode for the document, which
                           indicates whether or not Photoshop displays
                           dialogs when the script runs.

  documents readonly       The collection of open documents.

  fonts readonly           The fonts installed on this system.

  foregroundColor readonly The default foreground color (used to paint,
                           fill, and stroke selections).

  freeMemory readonly      The amount of unused memory available to
                           Photoshop.

  locale readonly          The language locale of the application.

  macintoshFileTypes       A list of the image file types Photoshop can
  readonly                 open.

  measurementLog readonly  The log of measurements taken.

  name readonly            The application name.

  notifiers readonly       The notifiers currently configured (in the
                           Scripts Events Manager menu in the application).

  notifiersEnabled         If true, notifiers are enabled.
  readonly                 

  parent readonly          The object’s container.

  path readonly            The full path of the location of the Adobe
                           Photoshop application.

  playbackDisplayDialogs   The dialog mode for playback mode, which
  readonly                 indicates whether or not Photoshop displays
                           dialogs in playback mode.

  playbackParameters       The playback options, which indicate the speed
  readonly                 at which Photoshop plays actions.

  preferences readonly     The application preference settings (equivalent
                           to selecting Edit > Preferences in the Adobe
                           Photoshop application in Windows or Photoshop >
                           Preferences in Mac OS).

  preferencesFolder        The full path to the preferences folder.
  readonly                 

  recentFiles readonly     Files in the Recent Files list.

  scriptingBuildDate       The build date of the scripting interface.
  readonly                 

  scriptingVersion         The version of the Scripting interface.
  readonly                 

  systemInformation        System information of the host application and
  readonly                 machine.

  typename readonly        The class name of the object.

  version readonly         The version of Adobe Photoshop application that
                           you are running.

  windowsFileTypes         A list of the image file extensions Photoshop
  readonly                 can open.
  ------------------------ ------------------------------------------------

Methods #

  ----------------------- -------------------------------------------------------
  batch readonly          Runs the batch automation routine; analogous to using
                          the Batch command in Photoshop.

  beep readonly           Alerts the user.

  bringToFront readonly   Makes Photoshop the active application.

  changeProgressText      Changes the text that appears in the progress window.
  readonly                

  charIDToTypeID readonly Converts from a four character code to a runtime ID.

  doAction readonly       Plays the specified action from the Actions palette.

  doForcedProgress        Performs a task with a progress bar. Forces progress
  readonly                bar to display, ignoring the normal heuristics that
                          keep it from showing unnecessarily (e.g. during very
                          short tasks). Other progress APIs must be called
                          periodically to update the progress bar and allow
                          cancelling.

  doProgress readonly     Performs a task with a progress bar. Other progress
                          APIs must be called periodically to update the progress
                          bar and allow cancelling.

  doProgressSegmentTask   Sections off a portion of the unused progress bar for
  readonly                execution of a subtask. Returns false on cancel. Use
                          when iterating a list of tasks with unequal run times.

  doProgressSubTask       Sections off a portion of the unused progress bar for
  readonly                execution of a subtask. Returns false on cancel. Use
                          when iterating a simple list of tasks with equal run
                          times.

  doProgressTask readonly Sections off a portion of the unused progress bar for
                          execution of a subtask. Returns false on cancel.

  eraseCustomOptions      Removes the specified user objects from the Photoshop
  readonly                registry.

  executeAction readonly  Plays an ActionManager event.

  executeActionGet        Obtains an action descriptor.
  readonly                

  featureEnabled readonly If true, the specified feature is enabled.

  getCustomOptions        Retrieves user objects from the Photoshop registry for
  readonly                the ID with value key.

  isQuicktimeAvailable    Returns true if Quicktime is installed.
  readonly                

  load readonly           Loads a support document.

  makeContactSheet        Creates a contact sheet from multiple files.
  readonly                

  makePDFPresentation     Creates a PDF presentation file.
  readonly                

  makePhotoGallery        DEPRECATED. Creates a web photo gallery.
  readonly                

  makePhotomerge readonly DEPRECATED. Merges multiple files into one, user
                          interaction required.

  makePicturePackage      Creates a picture package from multiple files.
  readonly                

  open readonly           Opens the specified document file(s).

  openDialog readonly     Uses the Photoshop open dialog to select files.

  purge readonly          Purges one or more caches.

  putCustomOptions        Save user objects in the Photoshop registry.
  readonly                

  refresh readonly        Pauses the script until the application refreshes.

  refreshFonts readonly   Force the font list to get refreshed.

  runMenuItem readonly    Run a menu item.

  showColorPicker         Display color picker dialog. Returns false if dialog is
  readonly                cancelled, true otherwise.

  stringIDToTypeID        Converts from a string ID to a runtime ID.
  readonly                

  system readonly         Perform a system call.

  togglePalettes readonly Toggle palette visibility.

  toolSupportsBrushes     Check if the specified tool supports brushes.
  readonly                

  typeIDToCharID readonly Converts from a runtime ID to a character ID.

  typeIDToStringID        Converts from a runtime ID to a string ID.
  readonly                

  updateProgress readonly Updates the progress bar started by doProgress. Use for
                          manual non-task based progress updating. Returns false
                          on cancel.
  ----------------------- -------------------------------------------------------
# Photoshop ArtLayer #
ArtLayer #

Description #

An object within a document that contains the visual elements of the
image (equivalent to a layer in the Adobe Photoshop application).

Properties #

  ------------------------- --------------------------------------------------------
  fillOpacity readonly      The interior opacity of the layer. Range: 0.0 to 100.0.

  filterMaskDensity         The density of the filter mask (between 0.0 and 100.0)
  readonly                  

  filterMaskFeather         The feather of the filter mask (between 0.0 and 250.0)
  readonly                  

  grouped readonly          If true, the layer is grouped with the layer below.

  isBackgroundLayer         If true, the layer is a background layer.
  readonly                  

  kind readonly             Sets the layer kind (such as ‘text layer’) for an empty
                            layer. Valid only when the layer is empty and when ‘is
                            background layer ‘ is false. You can use the ‘kind ‘
                            property to make a background layer a normal layer;
                            however, to make a layer a background layer, you must
                            set ‘is background layer’ to true.

  layerMaskDensity readonly The density of the layer mask (between 0.0 and 100.0)

  layerMaskFeather readonly The feather of the layer mask (between 0.0 and 250.0)

  parent readonly           The object’s container.

  pixelsLocked readonly     If true, the pixels in the layer’s image cannot be
                            edited.

  positionLocked readonly   If true, the pixels in the layer’s image cannot be moved
                            within the layer.

  textItem readonly         The text that is associated with the layer. Valid only
                            when ‘kind’ is text layer.

  transparentPixelsLocked   If true, editing is confined to the opaque portions of
  readonly                  the layer.

  typename readonly         The class name of the object.

  vectorMaskDensity         The density of the vector mask (between 0.0 and 100.0)
  readonly                  

  vectorMaskFeather         The feather of the vector mask (between 0.0 and 250.0)
  readonly                  
  ------------------------- --------------------------------------------------------

Methods #

  -------------------------- -------------------------------------------------------------
  add readonly               Adds an element.

  adjustBrightnessContrast   Adjusts the brightness and constrast.
  readonly                   

  adjustColorBalance         Adjusts the color balance of the layer’s component channels.
  readonly                   

  adjustCurves readonly      Adjusts the tonal range of the selected channel using up to
                             fourteen points.

  adjustLevels readonly      Adjusts levels of the selected channels.

  applyAddNoise readonly     Applies the add noise filter.

  applyAverage readonly      Applies the average filter.

  applyBlur readonly         Applies the blur filter.

  applyBlurMore readonly     Applies the blur more filter.

  applyClouds readonly       Applies the clouds filter.

  applyCustomFilter readonly Applies the custom filter.

  applyDeInterlace readonly  Applies the de-interlace filter.

  applyDespeckle readonly    Applies the despeckle filter.

  applyDifferenceClouds      Applies the difference clouds filter.
  readonly                   

  applyDiffuseGlow readonly  Applies the diffuse glow filter.

  applyDisplace readonly     Applies the displace filter.

  applyDustAndScratches      Applies the dust and scratches filter.
  readonly                   

  applyGaussianBlur readonly Applies the gaussian blur filter.

  applyGlassEffect readonly  Applies the glass filter.

  applyHighPass readonly     Applies the high pass filter.

  applyLensBlur readonly     Apply the lens blur filter.

  applyLensFlare readonly    Applies the lens flare filter.

  applyMaximum readonly      Applies the maximum filter.

  applyMedianNoise readonly  Applies the median noise filter.

  applyMinimum readonly      Applies the minimum filter.

  applyMotionBlur readonly   Applies the motion blur filter.

  applyNTSC readonly         Applies the NTSC colors filter.

  applyOceanRipple readonly  Applies the ocean ripple filter.

  applyOffset readonly       Applies the offset filter.

  applyPinch readonly        Applies the pinch filter.

  applyPolarCoordinates      Applies the polar coordinates filter.
  readonly                   

  applyRadialBlur readonly   Applies the radial blur filter.

  applyRipple readonly       Applies the ripple filter.

  applySharpen readonly      Applies the sharpen filter.

  applySharpenEdges readonly Applies the sharpen edges filter.

  applySharpenMore readonly  Applies the sharpen more filter.

  applyShear readonly        Applies the shear filter.

  applySmartBlur readonly    Applies the smart blur filter.

  applySpherize readonly     Applies the spherize filter.

  applyStyle readonly        Applies the specified style to the layer.

  applyStyleFile readonly    

  applyTextureFill readonly  Applies the texture fill filter.

  applyTwirl readonly        Applies the twirl filter.

  applyUnSharpMask readonly  Applies the unsharp mask filter.

  applyWave readonly         Applies the wave filter.

  applyZigZag readonly       Applies the zigzag filter.

  autoContrast readonly      Adjusts the contrast of the selected channels automatically.

  autoLevels readonly        Adjust the levels of the selected channels using the auto
                             levels option.

  clear readonly             Cuts the layer without moving it to the clipboard.

  copy readonly              Copies the layer to the clipboard.

  cut readonly               Cuts the layer to the clipboard.

  desaturate readonly        Converts a color image to a grayscale image in the current
                             color mode by assigning equal values of each component color
                             to each pixel.

  equalize readonly          Redistributes the brightness values of pixels in an image to
                             more evenly represent the entire range of brightness levels
                             within the image.

  invert readonly            Inverts the colors in the layer by converting the brightness
                             value of each pixel in the channels to the inverse value on
                             the 256-step color-values scale.

  merge readonly             Merges the layer down, removing the layer from the document.
                             Returns a reference to the art layer that this layer is
                             merged into.

  mixChannels readonly       Modifies a targeted (output) color channel using a mix of the
                             existing color channels in the image. (output channels = An
                             array of channel specifications. For each component channel,
                             specify a list of adjustment values (-200 to 200) followed by
                             a ‘constant’ value (-200 to 200).) When monochrome = true,
                             the maximum number of channel value specifications is 1.
                             Valid only when ‘document mode’ = RGB or CMYK. RGB arrays
                             must include four doubles. CMYK arrays must include five
                             doubles.

  photoFilter readonly       Adjusts the layer’s color balance and temperature as if a
                             color filter had been applied.

  posterize readonly         Specifies the number of tonal levels for each channel and
                             then maps pixels to the closest matching level.

  rasterize readonly         Converts the targeted content in the layer into a flat,
                             raster image.

  saveStyleFile readonly     

  selectiveColor readonly    

  shadowHighlight readonly   Adjusts the range of tones in the shadows and highlights.

  threshold readonly         Converts grayscale or color images to high-contrast, B/W
                             images by converting pixels lighter than the specified
                             threshold to white and pixels darker than the threshold to
                             black.
  -------------------------- -------------------------------------------------------------
# Photoshop ArtLayers #
ArtLayers #

Description #

The collection of art layer objects in the document.

Properties #

  -------------------------------------- --------------------------------
  length readonly                        Number of elements in the
                                         collection.

  parent readonly                        The object’s container.

  typename readonly                      The class name of the object.
  -------------------------------------- --------------------------------

Methods #

  ----------------------------- -----------------------------------------
  [] readonly                   Get an element in the collection with the
                                provided index.

  add readonly                  Adds an element.

  getByName readonly            Get the first element in the collection
                                with the provided name.

  removeAll readonly            Deletes all elements.
  ----------------------------- -----------------------------------------
# Photoshop AutoKernType #
AutoKernType #

Description #

The type of kerning to use for characters.

Static Properties #

  ------------------------ ----------------------------------------------
  MANUAL readonly          Allows manual kerning.

  METRICS readonly         Uses kern pairs, which contain information
                           about the spacing of specific pairs of
                           letters.

  OPTICAL readonly         Adjusts the spacing between adjacent
                           characters based on their shapes.
  ------------------------ ----------------------------------------------
# Photoshop BatchDestinationType #
BatchDestinationType #

Description #

The destination, if any, for batch-processed files.

Static Properties #

  --------------------------------------------- -------------------------
  FOLDER readonly                               Outputs files to a
                                                folder.

  NODESTINATION readonly                        Leaves all files open.

  SAVEANDCLOSE readonly                         Saves changes and closes
                                                all files.
  --------------------------------------------- -------------------------
# Photoshop BatchOptions #
BatchOptions #

Description #

Options to specify when running a Batch command.

Static Properties #

  ------------------------ ----------------------------------------------
  destination readonly     The type of destination for the processed
                           files.

  destinationFolder        The folder location for the processed files.
  readonly                 Valid only when ‘destination’ = folder.

  errorFile readonly       The file in which to log errors encountered.
                           To display errors on the screen and stop batch
                           processing when errors occur, leave blank.

  fileNaming readonly      A list of file naming options. Maximum: 6.

  macintoshCompatible      If true, the final file names are Macintosh
  readonly                 compatible.

  overrideOpen readonly    If true, overrides action open commands.

  overrideSave readonly    If true, overrides save as action steps with
                           the specified destination.

  startingSerial readonly  The starting serial number to use in naming
                           files.

  suppressOpen readonly    If true, suppresses file open options dialogs.

  suppressProfile readonly If true, suppresses color profile warnings.

  unixCompatible readonly  If true, the final file names are Unix
                           compatible.

  windowsCompatible        If true, the final file names are Windows
  readonly                 compatible.
  ------------------------ ----------------------------------------------
# Photoshop BitmapConversionOptions #
BitmapConversionOptions #

Description #

Options for changing the document mode to Bitmap.

Static Properties #

  ------------------------ ----------------------------------------------
  angle readonly           The angle (in degrees) at which to orient
                           individual dots. Valid only when ‘method’ =
                           halftone screen. Range: -180 to 180.

  frequency readonly       The number of printer dots per inch. Valid
                           only when ‘method’ = halftone screen. Range:
                           1.0 to 999.99.

  method readonly          The conversion method.

  patternName readonly     The name of the pattern to use. Valid only
                           when ‘method’ = custom.

  resolution readonly      The output resolution (in pixels per inch)

  shape readonly           The dot shape. Valid only when ‘method’ =
                           halftone screen.
  ------------------------ ----------------------------------------------
# Photoshop BitmapConversionType #
BitmapConversionType #

Description #

The quality of an image converted to bitmap mode.

Static Properties #

  ----------------- -------------------------------------------------------
  CUSTOMPATTERN     Simulates the effect of printing a grayscale image
  readonly          through a custom halftone screen. This method lets you
                    apply a screen texture, such as a wood grain, to an
                    image. To use this option, you must first define a
                    pattern.

  DIFFUSIONDITHER   Applies a random pattern that is usually less
  readonly          noticeable than pattern dither. The dither effects are
                    diffused across adjacent pixels. If you select this
                    algorithm, specify a dither percentage to control the
                    amount of dithering applied to the image.

  HALFTHRESHOLD     50% Threshold.
  readonly          

  HALFTONESCREEN    Lets you convert a grayscale image to simulated
  readonly          halftone dots.

  PATTERNDITHER     Applies a halftone-like square pattern to determine the
  readonly          value of pixels.
  ----------------- -------------------------------------------------------
# Photoshop BitmapHalfToneType #
BitmapHalfToneType #

Description #

The shape of the dots (ink deposits) in the halftone screen.

Static Properties #

  ----------------------------------------------------------- -----------
  CROSS readonly                                              Cross.

  DIAMOND readonly                                            Diamond.

  ELLIPSE readonly                                            Ellipse.

  LINE readonly                                               Line.

  ROUND readonly                                              Round.

  SQUARE readonly                                             Square.
  ----------------------------------------------------------- -----------
# Photoshop BitsPerChannelType #
BitsPerChannelType #

Description #

The number of bits per color channel.

Static Properties #

  --------------------------------------------------- -------------------
  EIGHT readonly                                      8 bits per channel.

  ONE readonly                                        1 bit per channel.

  SIXTEEN readonly                                    16 bits per
                                                      channel.

  THIRTYTWO readonly                                  32 bits per
                                                      channel.
  --------------------------------------------------- -------------------
# Photoshop BlendMode #
BlendMode #

Description #

Controls how pixels in the image are blended.

Static Properties #

  -------------- ---------------------------------------------------------------
  COLORBLEND     Creates a result color with the luminance of the base color and
  readonly       the hue and saturation of the blend color. This preserves the
                 gray levels in the image and is useful for coloring monochrome
                 images and for tinting color images.

  COLORBURN      Looks at the color information in each channel and darkens the
  readonly       base color to reflect the blend color by increasing the
                 contrast. Blending with white produces no change.

  COLORDODGE     Looks at the color information in each channel and brightens
  readonly       the base color to reflect the blend color by decreasing the
                 contrast. Blending with black produces no change.

  DARKEN         Looks at the color information in each channel and selects the
  readonly       base or blend color?whichever is darker?as the result color.
                 Pixels lighter than the blend color are replaced, and pixels
                 darker than the blend color do not change.

  DARKERCOLOR    Lighter colors lighten the result, and darker colors darken the
  readonly       result. 50% gray as a blend color has no effect on the result
                 color. Lowering the fill opacity creates less
                 posterization/thresholding.

  DIFFERENCE     Looks at the color information in each channel and subtracts
  readonly       either the blend color from the base color or the base color
                 from the blend color, depending on which has the greater
                 brightness value. Blending with white inverts the base color
                 values; blending with black produces no change.

  DISSOLVE       Edits or paints each pixel to make it the result color.
  readonly       However, the result color is a random replacement of the pixels
                 with the base color or the blend color, depending on the
                 opacity at any pixel location.

  DIVIDE         
  readonly       

  EXCLUSION      Creates an effect similar to but lower in contrast than the
  readonly       Difference mode. Blending with white inverts the base color
                 values. Blending with black produces no change.

  HARDLIGHT      Multiplies or screens the colors, depending on the blend color.
  readonly       The effect is similar to shining a harsh spotlight on the
                 image. If the blend color (light source) is lighter than 50%
                 gray, the image is lightened, as if it were screened. This is
                 useful for adding highlights to an image. If the blend color is
                 darker than 50% gray, the image is darkened, as if it were
                 multiplied. This is useful for adding shadows to an image.
                 Painting with pure black or white results in pure black or
                 white.

  HARDMIX        Lighter colors lighten the result, and darker colors darken the
  readonly       result. 50% gray as a blend color has no effect on the result
                 color. Lowering the fill opacity creates less
                 posterization/thresholding.

  HUE readonly   Creates a result color with the luminance and saturation of the
                 base color and the hue of the blend color.

  LIGHTEN        Looks at the color information in each channel and selects the
  readonly       base or blend color?whichever is lighter?as the result color.
                 Pixels darker than the blend color are replaced, and pixels
                 lighter than the blend color do not change.

  LIGHTERCOLOR   Lighter colors lighten the result, and darker colors darken the
  readonly       result. 50% gray as a blend color has no effect on the result
                 color. Lowering the fill opacity creates less
                 posterization/thresholding.

  LINEARBURN     Looks at the color information in each channel and darkens the
  readonly       base color to reflect the blend color by decreasing the
                 brightness. Blending with white produces no change.

  LINEARDODGE    Looks at the color information in each channel and brightens
  readonly       the base color to reflect the blend color by increasing the
                 brightness. Blending with black produces no change.

  LINEARLIGHT    Burns or dodges the colors by decreasing or increasing the
  readonly       brightness, depending on the blend color. If the blend color
                 (light source) is lighter than 50% gray, the image is lightened
                 by increasing the brightness. If the blend color is darker than
                 50% gray, the image is darkened by decreasing the brightness.

  LUMINOSITY     Creates a result color with the hue and saturation of the base
  readonly       color and the luminance of the blend color. This mode creates
                 an inverse effect from that of the Color mode.

  MULTIPLY       Looks at the color information in each channel and multiplies
  readonly       the base color by the blend color. The result color is always a
                 darker color. Multiplying any color with black produces black.
                 Multiplying any color with white leaves the color unchanged.
                 When you?re painting with a color other than black or white,
                 successive strokes with a painting tool produce progressively
                 darker colors. The effect is similar to drawing on the image
                 with multiple marking pens.

  NORMAL         Edits or paints each pixel to make it the result color. (Called
  readonly       “Threshold” when you?re working with a bitmapped or
                 indexed-color image.)

  OVERLAY        Multiplies or screens the colors, depending on the base color.
  readonly       Patterns or colors overlay the existing pixels while preserving
                 the highlights and shadows of the base color. The base color is
                 not replaced but is mixed with the blend color to reflect the
                 lightness or darkness of the original color.

  PASSTHROUGH    Allows any blend modes, advanced blending options, and opacity
  readonly       and fill values applied to layers within a set to affect layers
                 below the set in the Layers palette.

  PINLIGHT       Replaces the colors, depending on the blend color. If the blend
  readonly       color (light source) is lighter than 50% gray, pixels darker
                 than the blend color are replaced, and pixels lighter than the
                 blend color do not change. If the blend color is darker than
                 50% gray, pixels lighter than the blend color are replaced, and
                 pixels darker than the blend color do not change. This is
                 useful for adding special effects to an image.

  SATURATION     Creates a result color with the luminance and hue of the base
  readonly       color and the saturation of the blend color. Painting with this
                 mode in an area with no (0) saturation (gray) causes no change.

  SCREEN         Looks at each channel?s color information and multiplies the
  readonly       inverse of the blend and base colors. The result color is
                 always a lighter color. Screening with black leaves the color
                 unchanged. Screening with white produces white. The effect is
                 similar to projecting multiple photographic slides on top of
                 each other.

  SOFTLIGHT      Darkens or lightens the colors, depending on the blend color.
  readonly       The effect is similar to shining a diffused spotlight on the
                 image. If the blend color (light source) is lighter than 50%
                 gray, the image is lightened as if it were dodged. If the blend
                 color is darker than 50% gray, the image is darkened as if it
                 were burned in. Painting with pure black or white produces a
                 distinctly darker or lighter area but does not result in pure
                 black or white.

  SUBTRACT       
  readonly       

  VIVIDLIGHT     Burns or dodges the colors by increasing or decreasing the
  readonly       contrast, depending on the blend color. If the blend color
                 (light source) is lighter than 50% gray, the image is lightened
                 by decreasing the contrast. If the blend color is darker than
                 50% gray, the image is darkened by increasing the contrast.
  -------------- ---------------------------------------------------------------
# Photoshop BMPDepthType #
BMPDepthType #

Description #

The number of bits per channel (also called pixel depth or color depth).
The number selected indicates the exponent of 2. For example, a pixel
with a bit-depth of EIGHT has 2-to-the-8th, or 256, possible color
values.

Static Properties #

  ------------------------------ ----------------------------------------
  BMP_A1R5G5B5 readonly          A1 R5 G5 B5 advanced bit depth
                                 specification.

  BMP_A4R4G4B4 readonly          A4 R4 G4 B4 advanced bit depth
                                 specification.

  BMP_A8R8G8B8 readonly          A8 R8 G8 B8 advanced bit depth
                                 specification (same as normal 32 bit
                                 mode)

  BMP_R5G6B5 readonly            R5 G6 B5 advanced bit depth
                                 specification.

  BMP_R8G8B8 readonly            R8 G8 B8 advanced bit depth
                                 specification (same as normal 24 bit
                                 mode)

  BMP_X1R5G5B5 readonly          X1 R5 G5 B5 advanced bit depth
                                 specification (same as normal 16 bit
                                 mode)

  BMP_X4R4G4B4 readonly          X4 R4 G4 B4 advanced bit depth
                                 specification.

  BMP_X8R8G8B8 readonly          X8 R8 G8 B8 advanced bit depth
                                 specification.

  EIGHT readonly                 8 bits depth.

  FOUR readonly                  4 bits depth.

  ONE readonly                   1 bit depth.

  SIXTEEN readonly               16 bits depth.

  THIRTYTWO readonly             32 bits depth.

  TWENTYFOUR readonly            24 bits depth.
  ------------------------------ ----------------------------------------
# Photoshop BMPSaveOptions #
BMPSaveOptions #

Description #

Options for saving a document in BMP format.

Static Properties #

  --------------------------------------- -------------------------------
  alphaChannels readonly                  If true, the alpha channels are
                                          saved.

  depth readonly                          The number of bits per sample.

  flipRowOrder readonly                   If true, the image is written
                                          from bottom to top.

  osType readonly                         The target operating system.

  rleCompression readonly                 If true, RLE compression is
                                          used.
  --------------------------------------- -------------------------------
# Photoshop ByteOrderType #
ByteOrderType #

Description #

The platform-specific order in which bytes will be read.

Static Properties #

  ---------------------------------------------------------- ------------
  IBM readonly                                               IBM PC.

  MACOS readonly                                             Mac OS.
  ---------------------------------------------------------- ------------
# Photoshop CameraRAWOpenOptions #
CameraRAWOpenOptions #

Description #

Options for opening a camera RAW document.

Static Properties #

  ---------------------------------------- ------------------------------
  bitsPerChannel readonly                  The number of bits per
                                           channel.

  blueHue readonly                         The blue hue of the shot.
                                           Range: -100 to 100.

  blueSaturation readonly                  The blue saturation of the
                                           shot. Range: -100 to 100.

  brightness readonly                      The brightness of the shot.
                                           Range: 0 to 150.

  chromaticAberrationBY readonly           The chromatic aberration B/Y
                                           of the shot. Range: -100 to
                                           100.

  chromaticAberrationRC readonly           The chromatic aberration R/C
                                           of the shot. Range: -100 to
                                           100.

  colorNoiseReduction readonly             The color noise reduction of
                                           the shot. Range: 0 to 100.

  colorSpace readonly                      The image color space.

  contrast readonly                        The constrast of the shot.
                                           Range: -50 to 100.

  exposure readonly                        The exposure of the shot.
                                           Range: -4.0 to 4.0.

  greenHue readonly                        The green hue of the shot.
                                           Range: -100 to 100.

  greenSaturation readonly                 The green saturation of the
                                           shot. Range: -100 to 100.

  luminanceSmoothing readonly              The luminance smoothing of the
                                           shot. Range: 0 to 100.

  redHue readonly                          The red hue of the shot.
                                           Range: -100 to 100.

  redSaturation readonly                   The red saturation of the
                                           shot. Range: -100 to 100.

  resolution readonly                      The resolution of the document
                                           (in pixels per inch)

  saturation readonly                      The saturation of the shot.
                                           Range: -100 to 100.

  settings readonly                        The global settings for all
                                           Camera RAW options.

  shadowTint readonly                      The shadow tint of the shot.
                                           Range: -100 to 100.

  shadows readonly                         The shadows of the shot.
                                           Range: 0 to 100.

  sharpness readonly                       The sharpness of the shot.
                                           Range: 0 to 100.

  size readonly                            The size of the new document.

  temperature readonly                     The temperature of the shot.
                                           Range: 2000 to 50000.

  tint readonly                            The tint of the shot. Range:
                                           -150 to 150.

  vignettingAmount readonly                The vignetting amount of the
                                           shot. Range: -100 to 100.

  vignettingMidpoint readonly              The vignetting mid point of
                                           the shot. Range: -100 to 100.

  whiteBalance readonly                    The white balance options for
                                           the image.
  ---------------------------------------- ------------------------------
# Photoshop CameraRAWSettingsType #
CameraRAWSettingsType #

Description #

The default Camera RAW settings.

Static Properties #

  -------------------------------------------- --------------------------
  CAMERA readonly                              Use the settings of the
                                               camera.

  CUSTOM readonly                              Use the custom settings.

  SELECTEDIMAGE readonly                       Use the settings of the
                                               selected image.
  -------------------------------------------- --------------------------
# Photoshop CameraRAWSize #
CameraRAWSize #

Description #

The camera RAW image size.

Static Properties #

  --------------------------------------------------- -------------------
  EXTRALARGE readonly                                 5120 x 3413 image.

  LARGE readonly                                      4096 x 2731 image.

  MAXIMUM readonly                                    6144 x 4096 image.

  MEDIUM readonly                                     3072 x 2048 image.

  MINIMUM readonly                                    1536 x 1024 image.

  SMALL readonly                                      2048 x 1365 image.
  --------------------------------------------------- -------------------
# Photoshop Case #
Case #

Description #

The capitalization to use.

Static Properties #

  ------------------------------------ ----------------------------------
  ALLCAPS readonly                     Uses all uppercase letters.

  NORMAL readonly                      Uses uppercase and lowercase
                                       letters.

  SMALLCAPS readonly                   Uses small caps for lowercase
                                       letters.
  ------------------------------------ ----------------------------------
# Photoshop ChangeMode #
ChangeMode #

Description #

The destination color mode. Note: Color images must be changed to
Grayscale mode before you can change them to Bitmap mode.

Static Properties #

  ---------------- ------------------------------------------------------
  BITMAP readonly  Bitmap. Note: Color images must be changed to
                   Grayscale mode before you can change them to Bitmap
                   mode.

  CMYK readonly    CMYK.

  GRAYSCALE        Grayscale.
  readonly         

  INDEXEDCOLOR     Indexed color, in which the number of colors in the
  readonly         image is reduced to at most 256, the standard number
                   of colors supported by the GIF and PNG-8 formats and
                   many multimedia applications.

  LAB readonly     Lab.

  MULTICHANNEL     Image with multiple color channels.
  readonly         

  RGB readonly     RGB.
  ---------------- ------------------------------------------------------
# Photoshop Channel #
Channel #

Description #

Object that stores information about a color element in the image,
analogous to a plate in the printing process that applies a single
color. The document’s color mode determines the number of default
channels. For example, an RGB document has four default channels: A
composite channel: RGB; and three component channels: red, green, and
blue. A channel can also be an alpha channel, which stores selections as
masks; or a spot channel, which stores spot colors.

Properties #

  ----------------- -----------------------------------------------------
  color readonly    The color of the channel. Not valid for component
                    channels.

  histogram         A histogram of the color of the channel.
  readonly          

  kind readonly     The type of channel.

  name readonly     The channel name.

  opacity readonly  The opacity of alpha channels (called solidity for
                    spot channels). Range: 0 to 100. Valid only when
                    ‘type’ = masked area or selected area.

  parent readonly   The object’s container.

  typename readonly The class name of the object.

  visible readonly  If true, the channel is visible.
  ----------------- -----------------------------------------------------

Methods #

  --------------------------------- -------------------------------------
  add readonly                      Adds an element.

  duplicate readonly                Duplicate this object.

  duplicate readonly                Duplicates the channel.

  merge readonly                    Merges a spot channel into the
                                    component channels.

  remove readonly                   Deletes this object.

  removeAll readonly                Deletes all elements.
  --------------------------------- -------------------------------------
# Photoshop Channels #
Channels #

Description #

The collection of channel objects in the document.

Properties #

  -------------------------------------- --------------------------------
  length readonly                        Number of elements in the
                                         collection.

  parent readonly                        The object’s container.

  typename readonly                      The class name of the object.
  -------------------------------------- --------------------------------

Methods #

  ----------------------------- -----------------------------------------
  [] readonly                   Get an element in the collection with the
                                provided index.

  add readonly                  Adds an element.

  getByName readonly            Get the first element in the collection
                                with the provided name.

  removeAll readonly            Deletes all elements.
  ----------------------------- -----------------------------------------
# Photoshop ChannelType #
ChannelType #

Description #

The type of channel.

Static Properties #

  ----------------------------------- -----------------------------------
  COMPONENT readonly                  The channel related to the document
                                      color model.

  MASKEDAREA readonly                 The apha channel where color
                                      indicates a masked area.

  SELECTEDAREA readonly               The lpha channel where color
                                      indicates a selected area.

  SPOTCOLOR readonly                  The alpha channel to store a spot
                                      color.
  ----------------------------------- -----------------------------------
# Photoshop CMYKColor #
CMYKColor #

Description #

A CMYK color specification.

Properties #

  ---------------------------------- ------------------------------------
  black readonly                     The black color value. Range: 0.0 to
                                     100.0.

  cyan readonly                      The cyan color value. Range: 0.0 to
                                     100.0.

  magenta readonly                   The magenta color value. Range: 0.0
                                     to 100.0.

  yellow readonly                    The yellow color value. Range: 0.0
                                     to 100.0.
  ---------------------------------- ------------------------------------

Static Properties #

  ---------------------------------- ------------------------------------
  black readonly                     The black color value. Range: 0.0 to
                                     100.0.

  cyan readonly                      The cyan color value. Range: 0.0 to
                                     100.0.

  magenta readonly                   The magenta color value. Range: 0.0
                                     to 100.0.

  yellow readonly                    The yellow color value. Range: 0.0
                                     to 100.0.
  ---------------------------------- ------------------------------------
# Photoshop ColorBlendMode #
ColorBlendMode #

Description #

The color blend mode type.

Static Properties #

  -------------- ---------------------------------------------------------------
  BEHIND         Edits or paints only on the transparent part of a layer. Works
  readonly       only in layers in which transparent pixels locked = false and
                 is analogous to painting on the back of transparent areas on a
                 sheet of acetate.

  CLEAR readonly Edits or paints each pixel and makes it transparent. Works only
                 in layers in which transparent pixels locked = false.

  COLOR readonly Creates a result color with the luminance of the base color and
                 the hue and saturation of the blend color. This preserves the
                 gray levels in the image and is useful for coloring monochrome
                 images and for tinting color images.

  COLORBURN      Looks at the color information in each channel and darkens the
  readonly       base color to reflect the blend color by increasing the
                 contrast. Blending with white produces no change.

  COLORDODGE     Looks at the color information in each channel and brightens
  readonly       the base color to reflect the blend color by decreasing the
                 contrast. Blending with black produces no change.

  DARKEN         Looks at the color information in each channel and selects the
  readonly       base or blend color?whichever is darker?as the result color.
                 Pixels lighter than the blend color are replaced, and pixels
                 darker than the blend color do not change.

  DIFFERENCE     Looks at the color information in each channel and subtracts
  readonly       either the blend color from the base color or the base color
                 from the blend color, depending on which has the greater
                 brightness value. Blending with white inverts the base color
                 values; blending with black produces no change.

  DISSOLVE       Edits or paints each pixel to make it the result color, which
  readonly       is a random replacement of the pixels with the base color or
                 the blend color, depending on the opacity at any pixel
                 location.

  DIVIDE         
  readonly       

  EXCLUSION      Creates an effect similar to but lower in contrast than the
  readonly       Difference mode. Blending with white inverts the base color
                 values. Blending with black produces no change.

  HARDLIGHT      Multiplies or screens the colors, depending on the blend color.
  readonly       The effect is similar to shining a harsh spotlight on the
                 image. If the blend color (light source) is lighter than 50%
                 gray, the image is lightened, as if it were screened. This is
                 useful for adding highlights to an image. If the blend color is
                 darker than 50% gray, the image is darkened, as if it were
                 multiplied. This is useful for adding shadows to an image.
                 Painting with pure black or white results in pure black or
                 white.

  HARDMIXBLEND   Lighter colors lighten the result, and darker colors darken the
  readonly       result. 50% gray as a blend color has no effect on the result
                 color. Lowering the fill opacity creates less
                 posterization/thresholding.

  HUE readonly   Creates a result color with the luminance and saturation of the
                 base color and the hue of the blend color.

  LIGHTEN        Looks at the color information in each channel and selects the
  readonly       base or blend color?whichever is lighter?as the result color.
                 Pixels darker than the blend color are replaced, and pixels
                 lighter than the blend color do not change.

  LINEARBURN     Looks at the color information in each channel and darkens the
  readonly       base color to reflect the blend color by decreasing the
                 brightness. Blending with white produces no change.

  LINEARDODGE    Looks at the color information in each channel and brightens
  readonly       the base color to reflect the blend color by increasing the
                 brightness. Blending with black produces no change.

  LINEARLIGHT    Burns or dodges the colors by decreasing or increasing the
  readonly       brightness, depending on the blend color. If the blend color
                 (light source) is lighter than 50% gray, the image is lightened
                 by increasing the brightness. If the blend color is darker than
                 50% gray, the image is darkened by decreasing the brightness.

  LUMINOSITY     Creates a result color with the hue and saturation of the base
  readonly       color and the luminance of the blend color. This mode creates
                 an inverse effect from that of the Color mode.

  MULTIPLY       Looks at the color information in each channel and multiplies
  readonly       the base color by the blend color. The result color is always a
                 darker color. Multiplying any color with black produces black.
                 Multiplying any color with white leaves the color unchanged.
                 When you?re painting with a color other than black or white,
                 successive strokes with a painting tool produce progressively
                 darker colors. The effect is similar to drawing on the image
                 with multiple marking pens.

  NORMAL         Edits or paints each pixel to make it the result color. (Called
  readonly       “Threshold” when you?re working with a bitmapped or
                 indexed-color image.)

  OVERLAY        Multiplies or screens the colors, depending on the base color.
  readonly       Patterns or colors overlay the existing pixels while preserving
                 the highlights and shadows of the base color. The base color is
                 not replaced but is mixed with the blend color to reflect the
                 lightness or darkness of the original color.

  PINLIGHT       Replaces the colors, depending on the blend color. If the blend
  readonly       color (light source) is lighter than 50% gray, pixels darker
                 than the blend color are replaced, and pixels lighter than the
                 blend color do not change. If the blend color is darker than
                 50% gray, pixels lighter than the blend color are replaced, and
                 pixels darker than the blend color do not change. This is
                 useful for adding special effects to an image.

  SATURATION     Creates a result color with the luminance and hue of the base
  readonly       color and the saturation of the blend color. Painting with this
                 mode in an area with no (0) saturation (gray) causes no change.

  SCREEN         Looks at each channel?s color information and multiplies the
  readonly       inverse of the blend and base colors. The result color is
                 always a lighter color. Screening with black leaves the color
                 unchanged. Screening with white produces white. The effect is
                 similar to projecting multiple photographic slides on top of
                 each other.

  SOFTLIGHT      Darkens or lightens the colors, depending on the blend color.
  readonly       The effect is similar to shining a diffused spotlight on the
                 image. If the blend color (light source) is lighter than 50%
                 gray, the image is lightened as if it were dodged. If the blend
                 color is darker than 50% gray, the image is darkened as if it
                 were burned in. Painting with pure black or white produces a
                 distinctly darker or lighter area but does not result in pure
                 black or white.

  SUBTRACT       
  readonly       

  VIVIDLIGHT     Burns or dodges the colors by increasing or decreasing the
  readonly       contrast, depending on the blend color. If the blend color
                 (light source) is lighter than 50% gray, the image is lightened
                 by decreasing the contrast. If the blend color is darker than
                 50% gray, the image is darkened by increasing the contrast.
  -------------- ---------------------------------------------------------------
# Photoshop Color #
Color #

Description #

A color value.
# Photoshop ColorModel #
ColorModel #

Description #

Color models.

Static Properties #

  ------------------------------------- ---------------------------------
  CMYK readonly                         CMYK.

  GRAYSCALE readonly                    Grayscale.

  HSB readonly                          HSB.

  LAB readonly                          Lab.

  NONE readonly                         The color model has not yet been
                                        assigned.

  RGB readonly                          RGB.
  ------------------------------------- ---------------------------------
# Photoshop ColorPicker #
ColorPicker #

Description #

The color picker to use.

Static Properties #

  --------------------------------------- -------------------------------
  ADOBE readonly                          The Adobe Color Picker.

  APPLE readonly                          The built-in Apple color
                                          picker.

  PLUGIN readonly                         An installed plug-in color
                                          picker.

  WINDOWS readonly                        The built-in Windows color
                                          picker.
  --------------------------------------- -------------------------------
# Photoshop ColorProfileType #
ColorProfileType #

Description #

The type of color model that defines the document’s working space.

Static Properties #

  ------------------------------- ---------------------------------------
  CUSTOM readonly                 Color manages this document using a
                                  custom color profile.

  NONE readonly                   The document is not color managed.

  WORKING readonly                Color manages this document using the
                                  working color profile.
  ------------------------------- ---------------------------------------
# Photoshop ColorReductionType #
ColorReductionType #

Description #

The color reduction algorithm.

Static Properties #

  ----------------- -----------------------------------------------------
  ADAPTIVE readonly Samples color from the spectrum appearing most
                    commonly in the image.

  BLACKWHITE        Uses a set palette of colors.
  readonly          

  CUSTOM readonly   Uses a color palette that is created or modified by
                    the user. If you open an existing GIF or PNG-8 file,
                    it will have a custom color palette.

  GRAYSCALE         Uses a set palette of colors.
  readonly          

  MACINTOSH         Uses a set palette of colors.
  readonly          

  PERCEPTUAL        Gives priority to colors for which the human eye has
  readonly          greater sensitivity.

  RESTRICTIVE       Uses the standard 216-color color table common to
  readonly          Windows and Mac OS 8-bit (256-color or web-safe
                    palette); ensures that no browser dither is applied
                    when the image is displayed using 8-bit color.

  SELECTIVE         Gives priority to broad areas of color and the
  readonly          preservation of web colors; usually produces images
                    with the greatest color integrity.

  WINDOWS readonly  Uses a set palette of colors.
  ----------------- -----------------------------------------------------
# Photoshop ColorSampler #
ColorSampler #

Description #

A color sampler in a document.

Properties #

  ---------------------------------- ------------------------------------
  color readonly                     The color of the color sampler.

  parent readonly                    The object’s container.

  position readonly                  The position of the color sampler in
                                     the document.

  typename readonly                  The class name of the object.
  ---------------------------------- ------------------------------------

Methods #

  -------------------------------------- --------------------------------
  add readonly                           Adds an element.

  move readonly                          Moves the color sampler to a new
                                         location.

  remove readonly                        Deletes this object.

  removeAll readonly                     Deletes all elements.
  -------------------------------------- --------------------------------
# Photoshop ColorSamplers #
ColorSamplers #

Description #

The collection of color samplers in the document.

Properties #

  --------------------------------------- -------------------------------
  length readonly                         Number of elements in the
                                          collection.

  parent readonly                         The object’s container.

  typename readonly                       The class name of the object.
  --------------------------------------- -------------------------------

Methods #

  ------------------------------- ---------------------------------------
  [] readonly                     Get an element in the collection with
                                  the provided index.

  getByName readonly              Get the first element in the collection
                                  with the provided name.
  ------------------------------- ---------------------------------------

Static Methods #

  ------------------------------------------- ---------------------------
  add readonly                                Creates a color sampler.

  ------------------------------------------- ---------------------------
# Photoshop ColorSpaceType #
ColorSpaceType #

Description #

The type of color space.

Static Properties #

  -------------------------------------------- --------------------------
  ADOBERGB readonly                            Use the Adobe RGB color
                                               space.

  COLORMATCHRGB readonly                       Use the ColorMatch RGB
                                               color space.

  PROPHOTORGB readonly                         Use the ProPhoto RGB color
                                               space.

  SRGB readonly                                Use the sRGB color space.
  -------------------------------------------- --------------------------
# Photoshop ContactSheetOptions #
ContactSheetOptions #

Description #

Options that can be specified for a contact sheet.

Static Properties #

  ---------------------------------- ------------------------------------
  acrossFirst readonly               If true, places the images
                                     horizontally first.

  bestFit readonly                   If true, rotates images for best
                                     fit.

  caption readonly                   If true, uses the filename as a
                                     caption for the image.

  columnCount readonly               The number of contact sheet columns.

  flatten readonly                   If true, flattens all layers in the
                                     final document.

  font readonly                      The font used for the caption.

  fontSize readonly                  The caption font size.

  height readonly                    The height (in pixels) of the
                                     resulting document. Range: 100 to
                                     2900.

  horizontal readonly                The horizontal spacing (in pixels)
                                     between images. Range: 0 to 29000.

  mode readonly                      The document color mode.

  resolution readonly                The resolution of the document (in
                                     pixels per inch). Range: 35 to 1200.

  rowCount readonly                  The number of contact sheet rows.

  useAutoSpacing readonly            If true, auto spaces the images in
                                     the contact sheet.

  vertical readonly                  The vertical spacing (in pixels)
                                     between images. Range: 0 to 29000.

  width readonly                     The width (in pixels) of the
                                     resulting document. Range: 100 to
                                     2900.
  ---------------------------------- ------------------------------------
# Photoshop CopyrightedType #
CopyrightedType #

Description #

The copyright status of the document.

Static Properties #

  -------------------------------------------- --------------------------
  COPYRIGHTEDWORK readonly                     The document is
                                               copyrighted.

  PUBLICDOMAIN readonly                        The document is in the
                                               public domain.

  UNMARKED readonly                            The copyright status is
                                               not indicated.
  -------------------------------------------- --------------------------
# Photoshop CountItem #
CountItem #

Description #

A counted item in the document. The count item feature is available in
the Extended Version only.

Properties #

  ------------------------------------ ----------------------------------
  parent readonly                      The object’s container.

  position readonly                    The position of count item in the
                                       document.

  typename readonly                    The class name of the object.
  ------------------------------------ ----------------------------------

Methods #

  ------------------------------------------------ ----------------------
  add readonly                                     Adds an element.

  remove readonly                                  Deletes this object.

  removeAll readonly                               Deletes all elements.
  ------------------------------------------------ ----------------------
# Photoshop CountItems #
CountItems #

Description #

The collection of count items in the document.

Properties #

  --------------------------------------- -------------------------------
  length readonly                         Number of elements in the
                                          collection.

  parent readonly                         The object’s container.

  typename readonly                       The class name of the object.
  --------------------------------------- -------------------------------

Methods #

  ------------------------------ ----------------------------------------
  [] readonly                    Get an element in the collection with
                                 the provided index.

  getByName readonly             Get the first element in the collection
                                 with the provided name.
  ------------------------------ ----------------------------------------

Static Methods #

  -------------------------------------------- --------------------------
  add readonly                                 Creates a count item.

  -------------------------------------------- --------------------------
# Photoshop CreateFields #
CreateFields #

Description #

The method for replacing eliminated fields.

Static Properties #

  ----------------------- -----------------------------------------------
  DUPLICATION readonly    Duplicates existing pixels.

  INTERPOLATION readonly  Assigns color values to any new pixels that
                          Photoshop creates based on the color values of
                          existing pixels in the image.
  ----------------------- -----------------------------------------------
# Photoshop CropToType #
CropToType #

Description #

The style to use when cropping a page.

Static Properties #

  ---------------------------------------------- ------------------------
  ARTBOX readonly                                Crop to the art box.

  BLEEDBOX readonly                              Crop to the bleed box.

  BOUNDINGBOX readonly                           Crop to the bounding
                                                 box.

  CROPBOX readonly                               Crop to the crop box.

  MEDIABOX readonly                              Crop to the media box.

  TRIMBOX readonly                               Crop to the trim box.
  ---------------------------------------------- ------------------------
# Photoshop DCS1_SaveOptions #
DCS1_SaveOptions #

Description #

Options for saving a document in Photoshop DCS 1.0 format.

Static Properties #

  --------------------------- -------------------------------------------
  DCS readonly                The DCS type.

  embedColorProfile readonly  If true, the color profile is embedded in
                              the document.

  encoding readonly           The type of encoding to use for the
                              document.

  halftoneScreen readonly     If true, includes halftone screen.

  interpolation readonly      If true, image interpolation is used.

  preview readonly            The type of preview.

  transferFunction readonly   If true, includes transfer functions in the
                              document to compensate for dot gain between
                              the image and film.

  vectorData readonly         If true, includes vector data. Valid only
                              if the document contains vector data
                              (un-rasterized text).
  --------------------------- -------------------------------------------
# Photoshop DCS2_SaveOptions #
DCS2_SaveOptions #

Description #

Options for saving a document in Photoshop DCS 2.0 format.

Static Properties #

  --------------------------- -------------------------------------------
  DCS readonly                The DCS type.

  embedColorProfile readonly  If true, the color profile is embedded in
                              the document.

  encoding readonly           The type of encoding to use for document.

  halftoneScreen readonly     If true, includes halftone screen.

  interpolation readonly      If true, image interpolation is used.

  multiFileDCS readonly       If true, saves color channels as multiple
                              files.

  preview readonly            The type of preview.

  spotColors readonly         If true, the spot colors are saved.

  transferFunction readonly   If true, includes transfer functions in the
                              document to compensate for dot gain between
                              the image and film.

  vectorData readonly         If true, includes vector data. Valid only
                              if the document contains vector data
                              (un-rasterized text).
  --------------------------- -------------------------------------------
# Photoshop DCSType #
DCSType #

Description #

The DCS format.

Static Properties #

  ------------------------------------ ----------------------------------
  COLORCOMPOSITE readonly              Creates a color composite file in
                                       addition to DCS files.

  GRAYSCALECOMPOSITE readonly          Creates a grayscale composite file
                                       in addition to DCS files.

  NOCOMPOSITE readonly                 Does not create a composite file.
  ------------------------------------ ----------------------------------
# Photoshop DepthMapSource #
DepthMapSource #

Description #

Depth map source options.

Static Properties #

  ----------------------------------------- -----------------------------
  IMAGEHIGHLIGHT readonly                   Uses the image highlight for
                                            the depth map.

  LAYERMASK readonly                        Uses the layer mask for the
                                            depth map.

  NONE readonly                             No depth map in use.

  TRANSPARENCYCHANNEL readonly              Uses the transparency channel
                                            for the depth map.
  ----------------------------------------- -----------------------------
# Photoshop DescValueType #
DescValueType #

Description #

The value type of an object.

Static Properties #

  ------------------------------------------------- ---------------------
  ALIASTYPE readonly                                Alias.

  BOOLEANTYPE readonly                              Boolean.

  CLASSTYPE readonly                                Class.

  DOUBLETYPE readonly                               Double.

  ENUMERATEDTYPE readonly                           Enumeration.

  INTEGERTYPE readonly                              Integer.

  LARGEINTEGERTYPE readonly                         

  LISTTYPE readonly                                 Action list.

  OBJECTTYPE readonly                               Object.

  RAWTYPE readonly                                  Raw.

  REFERENCETYPE readonly                            Reference.

  STRINGTYPE readonly                               String.

  UNITDOUBLE readonly                               Unit value of type
                                                    double.
  ------------------------------------------------- ---------------------
# Photoshop DialogModes #
DialogModes #

Description #

Controls whether Photoshop displays dialogs during scripts.

Static Properties #

  ------------------------------------- ----------------------------------
  ALL readonly                          Show all dialogs.

  ERROR readonly                        Show only dialogs related to
                                        errors.

  NO readonly                           Show no dialogs.
  ------------------------------------- ----------------------------------
# Photoshop DICOMOpenOptions #
DICOMOpenOptions #

Description #

Options for opening a DICOM document.

Static Properties #

  -------------------------------------- --------------------------------
  anonymize readonly                     If true, patient information is
                                         anonymized.

  columns readonly                       The number of columns in an n-up
                                         configuration.

  reverse readonly                       If true, the image is inverted.

  rows readonly                          The number of rows in an n-up
                                         configuration.

  showOverlays readonly                  If true, overlays are shown (if
                                         present).

  windowLevel readonly                   The contrast of the image in
                                         Houndsfield units.

  windowWidth readonly                   The brightness of the image in
                                         Houndsfield units.
  -------------------------------------- --------------------------------
# Photoshop Direction #
Direction #

Description #

The orientation of the object.

Static Properties #

  -------------------------------------------------------- --------------
  HORIZONTAL readonly                                      Horizontal.

  VERTICAL readonly                                        Vertical.
  -------------------------------------------------------- --------------
# Photoshop DisplacementMapType #
DisplacementMapType #

Description #

Describes how the displacement map fits the image if the image is not
the same size as the map.

Static Properties #

  ------------------------------------ ----------------------------------
  STRETCHTOFIT readonly                The map is resized.

  TILE readonly                        The selection is filled by
                                       repeating the map in a pattern.
  ------------------------------------ ----------------------------------
# Photoshop DitherType #
DitherType #

Description #

The type of dither.

Static Properties #

  -------------------- --------------------------------------------------
  DIFFUSION readonly   Diffuses dither effects in random patterns across
                       adjacent pixels.

  NOISE readonly       Applies a random pattern but without diffusing the
                       pattern across adjacent pixels; prevents the
                       appearance of seams.

  NONE readonly        No dither is used.

  PATTERN readonly     Applies a halftone-like square pattern.
  -------------------- --------------------------------------------------
# Photoshop DocPositionStyle #
DocPositionStyle #

Description #

Position of document when printing.

Static Properties #

  ----------------------------------------- -----------------------------
  PRINTCENTERED readonly                    Print image centered on page.

  SIZETOFIT readonly                        Resize image to fit on page
                                            when printing.

  USERDEFINED readonly                      Print using user defined
                                            spacing.
  ----------------------------------------- -----------------------------
# Photoshop DocumentConversionOptions #
DocumentConversionOptions #

Description #

Options for converting documents.
# Photoshop DocumentFill #
DocumentFill #

Description #

The document window fill type.

Static Properties #

  --------------------------------------- -------------------------------
  BACKGROUNDCOLOR readonly                The background color as
                                          displayed in the toolbox.

  TRANSPARENT readonly                    Transparent.

  WHITE readonly                          White.
  --------------------------------------- -------------------------------
# Photoshop Document #
Document #

Description #

The active containment object for the layers and all other objects in
the script; the basic canvas for the file.

Properties #

  -------------------------- --------------------------------------------
  activeChannels readonly    The selected channels.

  activeHistoryBrushSource   The history state to use with the history
  readonly                   brush.

  activeHistoryState         The current history state for this document.
  readonly                   

  activeLayer readonly       The selected layer.

  artLayers readonly         The art layers collection in the document.

  backgroundLayer readonly   The background layer for the document.

  bitsPerChannel readonly    The number of bits per channel.

  channels readonly          The channels collection in this document.

  colorProfileName readonly  The name of the color profile. Valid only
                             when no value is specified for color profile
                             kind (to indicate a custom color profile).

  colorProfileType readonly  The type of color model that defines the
                             working space of the document.

  colorSamplers readonly     The current color samplers associated with
                             the document.

  componentChannels readonly The color component channels for this
                             document.

  countItems readonly        The current count items in the document.

  fullName readonly          The full path name of the document.

  guides readonly            The guides in this document.

  height readonly            The height of the document.

  histogram readonly         A histogram showing the number of pixels at
                             each color intensity level for the composite
                             channel.

  historyStates readonly     The history states collection in this
                             document.

  id readonly                The unique ID of this document.

  info readonly              Metadata about the document.

  layerComps readonly        The layer comps collection in this document.

  layerSets readonly         The layer sets collection in the document.

  layers readonly            The layers collection in the document.

  managed readonly           If true, the document is a workgroup
                             document.

  measurementScale readonly  The measurement scale of the document.

  mode readonly              The color profile.

  name readonly              The document name.

  parent readonly            The object’s container.

  path readonly              The path to the document.

  pathItems readonly         The path items collection in this document.

  pixelAspectRatio readonly  The (custom) pixel aspect ratio of the
                             document. Range: 0.100 to 10.000.

  printSettings readonly     Document print settings.

  quickMaskMode readonly     If true, the document is in Quick Mask mode.

  resolution readonly        The resolution of the document (in pixels
                             per inch)

  saved readonly             If true, the document been saved since the
                             last change.

  selection readonly         The selected area of the document.

  typename readonly          The class name of the object.

  width readonly             The width of the document.

  xmpMetadata readonly       The XMP properties of the document. The
                             Camera RAW settings are stored here.
  -------------------------- --------------------------------------------

Methods #

  ------------------------- ---------------------------------------------
  autoCount readonly        Counts the objects in the document.

  changeMode readonly       Changes the mode of the document.

  close readonly            Closes the document.

  convertProfile readonly   Converts the document from using one color
                            profile to using another.

  crop readonly             Crops the document.

  duplicate readonly        Duplicate this object.

  duplicate readonly        Creates a duplicate of the document object.

  exportDocument readonly   Exports the document.

  flatten readonly          Flattens all layers.

  flipCanvas readonly       Flips the canvas horizontally or vertically.

  importAnnotations         Imports annotations into the document.
  readonly                  

  mergeVisibleLayers        Flattens all visible layers in the document.
  readonly                  

  paste readonly            Pastes contents of the clipboard into the
                            document.

  print readonly            Prints the document.

  printOneCopy readonly     Print one copy of the document.

  rasterizeAllLayers        Rasterizes all layers.
  readonly                  

  recordMeasurements        Records the measurements of document.
  readonly                  

  resizeCanvas readonly     Changes the size of the canvas.

  resizeImage readonly      Changes the size of the image.

  revealAll readonly        Expands the document to show clipped
                            sections.

  rotateCanvas readonly     Rotates the canvas.

  save readonly             Saves the document.

  saveAs readonly           Saves the document with the specified save
                            options.

  splitChannels readonly    Splits the channels of the document.

  suspendHistory readonly   Provides a single history state for the
                            entire script. Allows a single undo for all
                            actions taken in the script.

  trap readonly             Applies trapping to a CMYK document. Valid
                            only when ‘mode’ = CMYK.

  trim readonly             Trims the transparent area around the image
                            on the specified sides of the canvas.
  ------------------------- ---------------------------------------------
# Photoshop DocumentInfo #
DocumentInfo #

Description #

Metadata about a document object. These values can be set by selecting
File > File Info in the Adobe Photoshop application.

Properties #

  -------------------------- --------------------------------------------
  author readonly            The author.

  authorPosition readonly    The author’s position.

  caption readonly           The caption.

  captionWriter readonly     The caption author.

  category readonly          The document category.

  city readonly              The city.

  copyrightNotice readonly   The copyright notice.

  copyrighted readonly       The copyright status.

  country readonly           The country.

  creationDate readonly      The creation date.

  credit readonly            The author credit.

  exif readonly              For JPEG images, information stored with
                             digital photographs including camera type,
                             date and time of photo, and file size.

  headline readonly          The headline.

  instructions readonly      Instructions for using or processing the
                             image.

  jobName readonly           The job name.

  keywords readonly          A list of keywords.

  ownerUrl readonly          The url of the copyright info.

  parent readonly            The object’s container.

  provinceState readonly     The state or province.

  source readonly            The source.

  supplementalCategories     Other categories.
  readonly                   

  title readonly             The document title.

  transmissionReference      The transmission reference.
  readonly                   

  typename readonly          The class name of the object.

  urgency readonly           The document urgency.
  -------------------------- --------------------------------------------
# Photoshop DocumentMode #
DocumentMode #

Description #

The document’s color mode.

Static Properties #

  ----------------- -----------------------------------------------------
  BITMAP readonly   Bitmap, which uses one of two color values (black or
                    white) to represent the pixels in an image.

  CMYK readonly     CMYK.

  DUOTONE readonly  Duotone mode, which creates monotone, duotone
                    (two-color), tritone (three-color), and quadtone
                    (four-color) grayscale images using one to four
                    custom inks.

  GRAYSCALE         Grayscale.
  readonly          

  INDEXEDCOLOR      Indexed color, in which the number of colors in the
  readonly          image is at most 256, the standard number of colors
                    supported by the GIF and PNG-8 formats and many
                    multimedia applications.

  LAB readonly      Lab.

  MULTICHANNEL      Image with multiple color channels.
  readonly          

  RGB readonly      RGB.
  ----------------- -----------------------------------------------------
# Photoshop DocumentPrintSettings #
DocumentPrintSettings #

Description #

Print settings for a document.

Properties #

  ---------------------------- ------------------------------------------
  activePrinter readonly       Currently selected printer.

  backgroundColor readonly     Background color of page.

  bleedWidth readonly          Bleed width.

  caption readonly             Description field from File Info.

  centerCropMarks readonly     Print center crop marks.

  colorBars readonly           Print color calibration bars.

  colorHandling readonly       Color handling.

  copies readonly              Number of copies.

  cornerCropMarks readonly     Print corner crop marks.

  docPosition readonly         Position of image when printing.

  flip readonly                Flip the image horizontally.

  hardProof readonly           Print a hard proof.

  interpolate readonly         

  labels readonly              Prints the document title.

  mapBlack readonly            Map blacks.

  negative readonly            Invert the image colors.

  parent readonly              The object’s container.

  posX readonly                X position of image on page.

  posY readonly                Y position of image on page.

  printBorder readonly         Width of the print border.

  printSpace readonly          Color space for printer. Can be nothing
                               (meaning same as source) or a string
                               specifying a specific color profile.

  printerName readonly         Name of printer.

  printers readonly            List of available printers.

  registrationMarks readonly   Print registration marks.

  renderIntent readonly        Color conversion intent when print space
                               is different from the source space.

  scale readonly               Scale of image on page.

  typename readonly            The class name of the object.

  vectorData readonly          Include vector data.
  ---------------------------- ------------------------------------------

Methods #

  -------------------------------------------- --------------------------
  setPagePosition readonly                     Set the position of the
                                               image on the page.

  -------------------------------------------- --------------------------
# Photoshop Documents #
Documents #

Description #

A collection of documents.

Properties #

  -------------------------------------- --------------------------------
  length readonly                        Number of elements in the
                                         collection.

  parent readonly                        The object’s container.

  typename readonly                      The class name of the object.
  -------------------------------------- --------------------------------

Methods #

  ----------------------------- -----------------------------------------
  [] readonly                   Get an element in the collection with the
                                provided index.

  getByName readonly            Get the first element in the collection
                                with the provided name.
  ----------------------------- -----------------------------------------

Static Methods #

  --------------------------------------------------- -------------------
  add readonly                                        A document.

  --------------------------------------------------- -------------------
# Photoshop EditLogItemsType #
EditLogItemsType #

Description #

The history log edit options.

Static Properties #

  ----------------------------------------- -----------------------------
  CONCISE readonly                          Save a concise history log.

  DETAILED readonly                         Save a detailed history log.

  SESSIONONLY readonly                      Save a history for only for
                                            the session.
  ----------------------------------------- -----------------------------
# Photoshop ElementPlacement #
ElementPlacement #

Description #

Controls where Photoshop places an element.

Static Properties #

  ---------------------------------------------- ------------------------
  PLACEAFTER readonly                            Place after an element.

  PLACEATEND readonly                            Place an element at the
                                                 end.

  PLACEBEFORE readonly                           Place before an element.
  ---------------------------------------------- ------------------------
# Photoshop EliminateFields #
EliminateFields #

Description #

The type of fields to eliminate.

Static Properties #

  ------------------------------------ ----------------------------------
  EVENFIELDS readonly                  Eliminate even interlaced lines in
                                       a video image.

  ODDFIELDS readonly                   Eliminate odd interlaced lines in
                                       a video image.
  ------------------------------------ ----------------------------------
# Photoshop EPSSaveOptions #
EPSSaveOptions #

Description #

Options for saving a document in EPS format.

Static Properties #

  -------------------------- --------------------------------------------
  embedColorProfile readonly If true, the color profile is embedded in
                             the document.

  encoding readonly          The type of encoding to use for the
                             document.

  halftoneScreen readonly    If true, includes the halftone screen.

  interpolation readonly     If true, uses image interpolation.

  preview readonly           The type of preview.

  psColorManagement readonly If true, uses PostScript color management.

  transferFunction readonly  If true, includes the transfer functions in
                             the document to compensate for dot gain
                             between the image and film.

  transparentWhites readonly If true, displays white areas as
                             transparent. Valid only for documents in
                             BitMap mode.

  vectorData readonly        If true, includes vector data. Valid only
                             when the document contains vector data
                             (un-rasterized text).
  -------------------------- --------------------------------------------
# Photoshop ExportOptions #
ExportOptions #

Description #

Options for exporting an object.
# Photoshop ExportOptionsIllustrator #
ExportOptionsIllustrator #

Description #

Options for exporting Illustrator paths.

Static Properties #

  ----------------------------------- -----------------------------------
  path readonly                       The path to export.

  pathName readonly                   The name of the path to export.
                                      Valid only for named paths.
  ----------------------------------- -----------------------------------
# Photoshop ExportOptionsSaveForWeb #
ExportOptionsSaveForWeb #

Description #

Options for exporting Save For Web files.

Static Properties #

  ------------------------------ ----------------------------------------
  PNG8 readonly                  If true, uses 8 bits. If false, uses 24
                                 bits. Valid only when ‘format’ = PNG.

  blur readonly                  The amount of blur to apply to the image
                                 to reduce artifacts.

  colorReduction readonly        The color reduction algorithm.

  colors readonly                The number of colors in the palette.

  dither readonly                The type of dither.

  ditherAmount readonly          The amount of dither. Valid only when
                                 ‘dither’ = diffusion.

  format readonly                The file format to use. Save For Web
                                 supports only Compuserve GIF, JPEG,
                                 PNG-8, PNG-24, and BMP formats.

  includeProfile readonly        If true, includes the document’s
                                 embedded profile.

  interlaced readonly            If true, the image downloads in multiple
                                 passes, progressive.

  lossy readonly                 The amount of lossiness allowed.

  matteColor readonly            The colors to blend transparent pixels
                                 against.

  optimized readonly             If true, creates smaller but less
                                 compatible files.

  quality readonly               The quality of the produced image (as a
                                 percentage). Range: 0 to 100.

  transparency readonly          If true, transparent areas of the image
                                 are included in the saved image.

  transparencyAmount readonly    The amount of transparency dither. Valid
                                 only when ‘transparency’ = true.

  transparencyDither readonly    The transparency dither algorithm.

  webSnap readonly               The tolerance amount within which to
                                 snap close colors to web palette colors.
  ------------------------------ ----------------------------------------
# Photoshop ExportType #
ExportType #

Description #

The export options to use.

Static Properties #

  -------------------------------------- --------------------------------
  ILLUSTRATORPATHS readonly              Exports Photoshop paths as Adobe
                                         Illustrator files.

  SAVEFORWEB readonly                    Uses the save for web export
                                         options.
  -------------------------------------- --------------------------------
# Photoshop FileNamingType #
FileNamingType #

Description #

File naming options for the batch command.

Static Properties #

  ---------------------------------------- ------------------------------
  DDMM readonly                            Uses the date formatted as
                                           ddmm.

  DDMMYY readonly                          Uses the date formatted as
                                           ddmmyy.

  DOCUMENTNAMELOWER readonly               Use the document name in lower
                                           case.

  DOCUMENTNAMEMIXED readonly               Use the document name in mixed
                                           case.

  DOCUMENTNAMEUPPER readonly               Use the document name in UPPER
                                           case.

  EXTENSIONLOWER readonly                  Use the extension of the file
                                           in lower case.

  EXTENSIONUPPER readonly                  Use the extension of the file
                                           in UPPER case.

  MMDD readonly                            Uses the date formatted as
                                           mmdd.

  MMDDYY readonly                          Uses the date formatted as
                                           mmddyy.

  SERIALLETTERLOWER readonly               Use letter serial number lower
                                           case (a, b, c, …)

  SERIALLETTERUPPER readonly               Use letter serial number UPPER
                                           case (A, B, C, …)

  SERIALNUMBER1 readonly                   Use a 1-digit serial number.

  SERIALNUMBER2 readonly                   Use a 2-digit serial number.

  SERIALNUMBER3 readonly                   Use a 3-digit serial number.

  SERIALNUMBER4 readonly                   Use a 4-digit serial number.

  YYDDMM readonly                          Uses the date formatted as
                                           yyddmm.

  YYMMDD readonly                          Uses the date formatted as
                                           yymmdd.

  YYYYMMDD readonly                        Uses the date formatted as
                                           yyyymmdd.
  ---------------------------------------- ------------------------------
# Photoshop FontPreviewType #
FontPreviewType #

Description #

The type size to use for font previews in the Type tool font menus.

Static Properties #

  --------------------------------------------------- -------------------
  EXTRALARGE readonly                                 Extra large
                                                      preview.

  HUGE readonly                                       Huge preview.

  LARGE readonly                                      Large type.

  MEDIUM readonly                                     Medium type.

  NONE readonly                                       No preview.

  SMALL readonly                                      Small type.
  --------------------------------------------------- -------------------
# Photoshop FontSize #
FontSize #

Description #

Font size in panels and dialogs.

Static Properties #

  ----------------------------------------------------- -----------------
  LARGE readonly                                        Large size.

  MEDIUM readonly                                       Medium size.

  SMALL readonly                                        Small size.
  ----------------------------------------------------- -----------------
# Photoshop ForcedColors #
ForcedColors #

Description #

The colors whose inclusion to force in the color table.

Static Properties #

  ------------------------------- ---------------------------------------
  BLACKWHITE readonly             Forces pure black and white.

  NONE readonly                   No forced colors.

  PRIMARIES readonly              Forces red, green, blue, cyan, magenta,
                                  yellow, black, and white.

  WEB readonly                    Forces the 216 web-safe colors.
  ------------------------------- ---------------------------------------
# Photoshop FormatOptionsType #
FormatOptionsType #

Description #

The options for saving a JPEG file.

Static Properties #

  ---------------------------------- ------------------------------------
  OPTIMIZEDBASELINE readonly         Baseline (Optimized). Optimized
                                     color and a slightly reduced file
                                     size.

  PROGRESSIVE readonly               Displays a series of increasingly
                                     detailed scans as the image
                                     downloads.

  STANDARDBASELINE readonly          Baseline (Standard). Recognized by
                                     most web browsers.
  ---------------------------------- ------------------------------------
# Photoshop GalleryBannerOptions #
GalleryBannerOptions #

Description #

Deprecated, the make photo gallery method has moved to Bridge.

Static Properties #

  ------------------------------------------ ----------------------------
  contactInfo readonly                       Web photo gallery contact
                                             info.

  date readonly                              Web photo gallery date.

  font readonly                              The font setting for the
                                             banner text.

  fontSize readonly                          The size of the font for the
                                             banner text.

  photographer readonly                      Web photo gallery
                                             photographer.

  siteName readonly                          Web photo gallery site name.
  ------------------------------------------ ----------------------------
# Photoshop GalleryConstrainType #
GalleryConstrainType #

Description #

DEPRECATED. Constrain values for images.

Static Properties #

  --------------------------------------- -------------------------------
  CONSTRAINBOTH readonly                  Constrain both the height and
                                          the width of the image.

  CONSTRAINHEIGHT readonly                Constrain the height of the
                                          image.

  CONSTRAINWIDTH readonly                 Constrain width.
  --------------------------------------- -------------------------------
# Photoshop GalleryCustomColorOptions #
GalleryCustomColorOptions #

Description #

Deprecated, the make photo gallery method has moved to Bridge.

Static Properties #

  -------------------------------------------------------- --------------
  activeLinkColor readonly                                 Active link
                                                           color.

  backgroundColor readonly                                 Background
                                                           color.

  bannerColor readonly                                     Banner color.

  linkColor readonly                                       Link color.

  textColor readonly                                       Text color.

  visitedLinkColor readonly                                Visited link
                                                           color.
  -------------------------------------------------------- --------------
# Photoshop GalleryFontType #
GalleryFontType #

Description #

Fonts for web photo gallery text.

Static Properties #

  --------------------------------------------------- -------------------
  ARIAL readonly                                      Arial font.

  COURIERNEW readonly                                 Courier New font.

  HELVETICA readonly                                  Helvetica font.

  TIMESNEWROMAN readonly                              Times New Roman
                                                      font.
  --------------------------------------------------- -------------------
# Photoshop GalleryImagesOptions #
GalleryImagesOptions #

Description #

Deprecated, the make photo gallery method has moved to Bridge.

Static Properties #

  --------------------------------------- -------------------------------
  border readonly                         The amount of border pixels you
                                          want between your images.

  caption readonly                        Generate a caption for the
                                          images.

  dimension readonly                      Resized image dimensions in
                                          pixels.

  font readonly                           Font for the gallery images
                                          text.

  fontSize readonly                       Font size for the gallery
                                          images text.

  imageQuality readonly                   The quality setting for the
                                          JPEG image.

  includeCopyright readonly               Include the copyright in the
                                          text for the gallery images.

  includeCredits readonly                 Include the credits in the text
                                          for the gallery images.

  includeFilename readonly                Include the file name in the
                                          text for the gallery images.

  includeTitle readonly                   Include the title in the text
                                          for the gallery images.

  numericLinks readonly                   Add numeric links.

  resizeConstraint readonly               How should the image be
                                          constrained.

  resizeImages readonly                   Resize images data.
  --------------------------------------- -------------------------------
# Photoshop GalleryOptions #
GalleryOptions #

Description #

Deprecated, the make photo gallery method has moved to Bridge.

Static Properties #

  ------------------------------------- ---------------------------------
  addSizeAttributes readonly            Add width and height attributes
                                        for images.

  bannerOptions readonly                Options related to banner
                                        settings.

  customColorOptions readonly           Options related to custom color
                                        settings.

  emailAddress readonly                 The email address to show on the
                                        web page.

  imagesOptions readonly                Options related to images
                                        settings.

  includeSubFolders readonly            Include all files found in sub
                                        folders of the input folder.

  layoutStyle readonly                  The style to use for laying out
                                        the web page.

  preserveAllMetadata readonly          Save all of the metadata in the
                                        JPEG files.

  securityOptions readonly              Options related to security
                                        settings.

  thumbnailOptions readonly             Options related to thumbnail
                                        settings.

  useShortExtension readonly            Short web page extension .htm or
                                        long web page extension .html.

  useUTF8Encoding readonly              Web page should use UTF-8
                                        encoding.
  ------------------------------------- ---------------------------------
# Photoshop GallerySecurityOptions #
GallerySecurityOptions #

Description #

Deprecated, the make photo gallery method has moved to Bridge.

Static Properties #

  ------------------------------------------- ---------------------------
  content readonly                            Web photo gallery security
                                              content.

  font readonly                               Web photo gallery security
                                              font.

  fontSize readonly                           Web photo gallery security
                                              font size.

  opacity readonly                            Web page security opacity
                                              as a percent.

  text readonly                               Web photo gallery security
                                              custom text.

  textColor readonly                          Web page security text
                                              color.

  textPosition readonly                       Web photo gallery security
                                              text position.

  textRotate readonly                         Web photo gallery security
                                              text rotate.
  ------------------------------------------- ---------------------------
# Photoshop GallerySecurityTextColorType #
GallerySecurityTextColorType #

Description #

The color to use for text displayed over gallery images as an antitheft
deterrent.

Static Properties #

  -------------------------------------------------------- --------------
  BLACK readonly                                           Black text.

  CUSTOM readonly                                          Custom color.

  WHITE readonly                                           White text.
  -------------------------------------------------------- --------------
# Photoshop GallerySecurityTextPositionType #
GallerySecurityTextPositionType #

Description #

The position of the text displayed over gallery images as an antitheft
deterrent.

Static Properties #

  ----------------------------------------- -----------------------------
  CENTERED readonly                         Text is centered on each
                                            image.

  LOWERLEFT readonly                        Ltext is in the lower left
                                            corner of each image.

  LOWERRIGHT readonly                       Text is in the lower right
                                            corner of each image.

  UPPERLEFT readonly                        Text is in the upper left
                                            corner of each image.

  UPPERRIGHT readonly                       Text is in the upper right
                                            corner of each image.
  ----------------------------------------- -----------------------------
# Photoshop GallerySecurityTextRotateType #
GallerySecurityTextRotateType #

Description #

DEPRECATED. web photo gallery security text rotation types.

Static Properties #

  ------------------------------------------------ ----------------------
  CLOCKWISE45 readonly                             Rotate 45 degrees
                                                   clock wise.

  CLOCKWISE90 readonly                             Rotate 90 degrees
                                                   clock wise.

  COUNTERCLOCKWISE45 readonly                      Rotate 45 degrees
                                                   counter clock wise.

  COUNTERCLOCKWISE90 readonly                      Rotate 90 degrees
                                                   counter clock wise.

  ZERO readonly                                    No rotate.
  ------------------------------------------------ ----------------------
# Photoshop GallerySecurityType #
GallerySecurityType #

Description #

DEPRECATED. Web photo gallery security types.

Static Properties #

  --------------------------------------------------- -------------------
  CAPTION readonly                                    Caption security.

  COPYRIGHT readonly                                  Copyright security.

  CREDIT readonly                                     Credit security.

  CUSTOMTEXT readonly                                 Custom text
                                                      security.

  FILENAME readonly                                   Filename security.

  NONE readonly                                       No security.

  TITLE readonly                                      Title security.
  --------------------------------------------------- -------------------
# Photoshop GalleryThumbnailOptions #
GalleryThumbnailOptions #

Description #

Deprecated, the make photo gallery method has moved to Bridge.

Static Properties #

  ------------------------------------- ---------------------------------
  border readonly                       The amount of border pixels you
                                        want around your thumbnail
                                        images.

  caption readonly                      With caption.

  columnCount readonly                  Web photo gallery thumbnail
                                        columns.

  dimension readonly                    Web photo gallery thumbnail
                                        dimension in pixels.

  font readonly                         Web photo gallery font.

  fontSize readonly                     The size of the font for the
                                        thumbnail images text.

  includeCopyright readonly             Include copyright for thumbnail.

  includeCredits readonly               Include credits for thumbnail.

  includeFilename readonly              Include file name for thumbnail.

  includeTitle readonly                 Include title for thumbnail.

  rowCount readonly                     Web photo gallery thumbnail rows.

  size readonly                         The size of the thumbnail images.
  ------------------------------------- ---------------------------------
# Photoshop GalleryThumbSizeType #
GalleryThumbSizeType #

Description #

DEPRECATED. Web photo gallery thumb size types.

Static Properties #

  ---------------------------------------------------- ------------------
  CUSTOM readonly                                      Custom thumbnail.

  LARGE readonly                                       Large thumbnail.

  MEDIUM readonly                                      Medium thumbnail.

  SMALL readonly                                       Small thumbnail.
  ---------------------------------------------------- ------------------
# Photoshop GenericEPSOpenOptions #
GenericEPSOpenOptions #

Description #

Options that can be specified when opening a generic EPS document.

Static Properties #

  ------------------------------------------- ---------------------------
  antiAlias readonly                          If true, anti-aliasing is
                                              used.

  constrainProportions readonly               If true, the image
                                              proportions are
                                              constrained.

  height readonly                             The image height.

  mode readonly                               The document mode.

  resolution readonly                         The resolution of the
                                              document (in pixels per
                                              inch)

  width readonly                              The image width.
  ------------------------------------------- ---------------------------
# Photoshop GenericPDFOpenOptions #
GenericPDFOpenOptions #

Description #

Options that can be specified when opening a generic PDF document.

Static Properties #

  ---------------------------- ------------------------------------------
  antiAlias readonly           If true, anti-aliasing is used.

  bitsPerChannel readonly      The number of bits per channel.

  constrainProportions         DEPRECATED.
  readonly                     

  cropPage readonly            The cropping method to use.

  height readonly              DEPRECATED.

  mode readonly                The document mode.

  name readonly                The name of the document.

  object readonly              The number of the 3d object to open.

  page readonly                The number of the page or image to open.

  resolution readonly          The resolution of the document (in pixels
                               per inch)

  suppressWarnings readonly    If true, suppresses any warnings that may
                               occur during opening.

  use3DObjectNumber readonly   If true, the value specified in the page
                               property refers to a page number. If
                               false, the value specifies an image
                               number.

  usePageNumber readonly       If true, the value specified in the page
                               property refers to a page number. If
                               false, the value specifies an image
                               number.

  width readonly               DEPRECATED.
  ---------------------------- ------------------------------------------
# Photoshop Geometry #
Geometry #

Description #

Geometric options for shapes, such as the iris shape in the Lens Blur
Filter.

Static Properties #

  -------------------------------------------------------- --------------
  HEPTAGON readonly                                        Heptagon.

  HEXAGON readonly                                         Hexagon.

  OCTAGON readonly                                         Octagon.

  PENTAGON readonly                                        Pentagon.

  SQUARE readonly                                          Square.

  TRIANGLE readonly                                        Triangle.
  -------------------------------------------------------- --------------
# Photoshop GIFSaveOptions #
GIFSaveOptions #

Description #

Options for saving a document in GIF format.

Static Properties #

  ------------------------ ----------------------------------------------
  colors readonly          The number of colors in palette. Not valid for
                           all palette types.

  dither readonly          The type of dither.

  ditherAmount readonly    The amount of dither. Valid only when ‘dither
                           type’ is diffusion. Range: 1 to 100.

  forced readonly          The type of colors to force into the color
                           palette.

  interlaced readonly      If true, rows are interlaced.

  matte readonly           The color to use to fill anti-aliased edges
                           adjacent to transparent areas of the image.
                           Default: white.

  palette readonly         The type of palette to use.

  preserveExactColors      If true, protects colors in the image that
  readonly                 contain entries in the color table from being
                           dithered. Valid only when ‘dither’ =
                           diffusion.

  transparency readonly    If true, preserves transparent ares of the
                           image during GIF conversion.
  ------------------------ ----------------------------------------------
# Photoshop GrayColor #
GrayColor #

Description #

Options for defining a gray color.

Properties #

  ----------------------------------- -----------------------------------
  gray readonly                       The gray value. Range: 0.0 to
                                      100.0.

  ----------------------------------- -----------------------------------

Static Properties #

  ----------------------------------- -----------------------------------
  gray readonly                       The gray value. Range: 0.0 to
                                      100.0.

  ----------------------------------- -----------------------------------
# Photoshop GridLineStyle #
GridLineStyle #

Description #

The line style for nonprinting grids displayed over images.

Static Properties #

  ----------------------------------------------------------- -----------
  DASHED readonly                                             Dashed.

  DOTTED readonly                                             Dotted.

  SOLID readonly                                              Solid.
  ----------------------------------------------------------- -----------
# Photoshop GridSize #
GridSize #

Description #

The size of grid squares.

Static Properties #

  --------------------------------------------- -------------------------
  LARGE readonly                                Large grid squares.

  MEDIUM readonly                               Medium grid squares.

  NONE readonly                                 No grid is displayed.

  SMALL readonly                                Small grid squares.
  --------------------------------------------- -------------------------
# Photoshop Guide #
Guide #

Description #

A guide in the document.

Properties #

  ------------------------------- ---------------------------------------
  coordinate readonly             Location of the guide from origin of
                                  image.

  direction readonly              Indicates whether the guide is vertical
                                  or horizontal.

  parent readonly                 The object’s container.

  typename readonly               The class name of the object.
  ------------------------------- ---------------------------------------

Methods #

  ---------------------------------------------- ------------------------
  remove readonly                                Deletes this object.

  removeAll readonly                             Deletes all elements.
  ---------------------------------------------- ------------------------
# Photoshop GuideLineStyle #
GuideLineStyle #

Description #

The line style for nonprinting guides displayed over images.

Static Properties #

  ----------------------------------------------------------- -----------
  DASHED readonly                                             Dashed.

  SOLID readonly                                              Solid.
  ----------------------------------------------------------- -----------
# Photoshop Guides #
Guides #

Description #

Guides associated with the document.

Properties #

  ------------------------------------ ----------------------------------
  length readonly                      Number of elements in the
                                       collection.

  parent readonly                      The object’s container.

  typename readonly                    The class name of the object.
  ------------------------------------ ----------------------------------

Methods #

  ----------------------------- -----------------------------------------
  getByName readonly            Get the first element in the collection
                                with the provided name.

  ----------------------------- -----------------------------------------

Static Methods #

  ------------------------------------------------------ ----------------
  add readonly                                           A guide.

  ------------------------------------------------------ ----------------
# Photoshop HistoryState #
HistoryState #

Description #

A version of the document stored automatically (and added to the history
states collection, which preserves the document state each time the
document is changed).

Properties #

  ------------------------------------- ---------------------------------
  name readonly                         The history state name.

  parent readonly                       The object’s container.

  snapshot readonly                     If true, the history state is a
                                        snapshot.

  typename readonly                     The class name of the object.
  ------------------------------------- ---------------------------------
# Photoshop HistoryStates #
HistoryStates #

Description #

The history state objects associated with the document.

Properties #

  --------------------------------------- -------------------------------
  length readonly                         Number of elements in the
                                          collection.

  parent readonly                         The object’s container.

  typename readonly                       The class name of the object.
  --------------------------------------- -------------------------------

Methods #

  ------------------------------- ---------------------------------------
  [] readonly                     Get an element in the collection with
                                  the provided index.

  getByName readonly              Get the first element in the collection
                                  with the provided name.
  ------------------------------- ---------------------------------------
# Photoshop HSBColor #
HSBColor #

Description #

An HSB color specification.

Properties #

  ------------------------------------- ---------------------------------
  brightness readonly                   The brightness value. Range: 0.0
                                        to 100.0.

  hue readonly                          The hue value. Range: 0.0 to
                                        360.0.

  saturation readonly                   The saturation value. Range: 0.0
                                        to 100.0.
  ------------------------------------- ---------------------------------

Static Properties #

  ------------------------------------- ---------------------------------
  brightness readonly                   The brightness value. Range: 0.0
                                        to 100.0.

  hue readonly                          The hue value. Range: 0.0 to
                                        360.0.

  saturation readonly                   The saturation value. Range: 0.0
                                        to 100.0.
  ------------------------------------- ---------------------------------
# Photoshop IllustratorPathType #
IllustratorPathType #

Description #

The paths to export.

Static Properties #

  ------------------------- ---------------------------------------------
  ALLPATHS readonly         Exports all paths.

  DOCUMENTBOUNDS readonly   Exports the document bounds.

  NAMEDPATH readonly        Exports the specified path. To specify the
                            path, see the path name property of the
                            illustrator export options object.
  ------------------------- ---------------------------------------------
# Photoshop IndexedConversionOptions #
IndexedConversionOptions #

Description #

Options for converting an RGB image to an indexed color model.

Static Properties #

  ----------------------- -----------------------------------------------
  colors readonly         The number of colors in the palette. Not valid
                          for all palette types.

  dither readonly         The type of dither.

  ditherAmount readonly   The amount of dither. Valid only when ‘dither’
                          = diffusion.

  forced readonly         The type of colors to force into the color
                          palette.

  matte readonly          The color to use to fill anti-aliased edges
                          adjacent to transparent areas of the image.
                          When transparency = false, the matte color is
                          applied to transparent areas.

  palette readonly        The type of palette.

  preserveExactColors     If true, protects colors in the image that
  readonly                contain entries in the color table from being
                          dithered. Valid only when ‘dither’ = diffusion.

  transparency readonly   If true, preserves transparent areas of the
                          image during conversion to GIF format.
  ----------------------- -----------------------------------------------
# Photoshop Photoshop #
Photoshop #

Classes #

-   ActionDescriptor
-   ActionList
-   ActionReference
-   Application
-   ArtLayer
-   ArtLayers
-   BMPSaveOptions
-   BatchOptions
-   BitmapConversionOptions
-   CMYKColor
-   CameraRAWOpenOptions
-   Channel
-   Channels
-   Color
-   ColorSampler
-   ColorSamplers
-   ContactSheetOptions
-   CountItem
-   CountItems
-   DCS1_SaveOptions
-   DCS2_SaveOptions
-   DICOMOpenOptions
-   Document
-   DocumentConversionOptions
-   DocumentInfo
-   DocumentPrintSettings
-   Documents
-   EPSSaveOptions
-   ExportOptions
-   ExportOptionsIllustrator
-   ExportOptionsSaveForWeb
-   GIFSaveOptions
-   GalleryBannerOptions
-   GalleryCustomColorOptions
-   GalleryImagesOptions
-   GalleryOptions
-   GallerySecurityOptions
-   GalleryThumbnailOptions
-   GenericEPSOpenOptions
-   GenericPDFOpenOptions
-   GrayColor
-   Guide
-   Guides
-   HSBColor
-   HistoryState
-   HistoryStates
-   IndexedConversionOptions
-   JPEGSaveOptions
-   LabColor
-   Layer
-   LayerComp
-   LayerComps
-   LayerSet
-   LayerSets
-   Layers
-   MeasurementLog
-   MeasurementScale
-   NoColor
-   Notifier
-   Notifiers
-   OpenOptions
-   PDFSaveOptions
-   PICTFileSaveOptions
-   PICTResourceSaveOptions
-   PNGSaveOptions
-   PathItem
-   PathItems
-   PathPoint
-   PathPointInfo
-   PathPoints
-   PhotoCDOpenOptions
-   PhotoshopSaveOptions
-   PicturePackageOptions
-   PixarSaveOptions
-   Preferences
-   PresentationOptions
-   RGBColor
-   RawFormatOpenOptions
-   RawSaveOptions
-   Rectangle
-   SGIRGBSaveOptions
-   SaveOptions
-   Selection
-   SolidColor
-   SubPathInfo
-   SubPathItem
-   SubPathItems
-   TargaSaveOptions
-   TextFont
-   TextFonts
-   TextItem
-   TiffSaveOptions
-   XMPMetadata

Enumerations #

-   AdjustmentReference
-   AnchorPosition
-   AntiAlias
-   AutoKernType
-   BMPDepthType
-   BatchDestinationType
-   BitmapConversionType
-   BitmapHalfToneType
-   BitsPerChannelType
-   BlendMode
-   ByteOrderType
-   CameraRAWSettingsType
-   CameraRAWSize
-   Case
-   ChangeMode
-   ChannelType
-   ColorBlendMode
-   ColorModel
-   ColorPicker
-   ColorProfileType
-   ColorReductionType
-   ColorSpaceType
-   CopyrightedType
-   CreateFields
-   CropToType
-   DCSType
-   DepthMapSource
-   DescValueType
-   DialogModes
-   Direction
-   DisplacementMapType
-   DitherType
-   DocPositionStyle
-   DocumentFill
-   DocumentMode
-   EditLogItemsType
-   ElementPlacement
-   EliminateFields
-   ExportType
-   FileNamingType
-   FontPreviewType
-   FontSize
-   ForcedColors
-   FormatOptionsType
-   GalleryConstrainType
-   GalleryFontType
-   GallerySecurityTextColorType
-   GallerySecurityTextPositionType
-   GallerySecurityTextRotateType
-   GallerySecurityType
-   GalleryThumbSizeType
-   Geometry
-   GridLineStyle
-   GridSize
-   GuideLineStyle
-   IllustratorPathType
-   Intent
-   JavaScriptExecutionMode
-   Justification
-   Language
-   LayerCompressionType
-   LayerKind
-   LensType
-   MacExtensionType
-   MacPreviewType
-   MagnificationType
-   MatteType
-   MeasurementRange
-   MeasurementSource
-   NewDocumentMode
-   NoiseDistribution
-   OffsetUndefinedAreas
-   OpenDocumentMode
-   OpenDocumentType
-   OperatingSystem
-   Orientation
-   OtherPaintingCursors
-   PDFCompatibilityType
-   PDFEncodingType
-   PDFResampleType
-   PDFStandardType
-   PICTBitsPerPixels
-   PICTCompression
-   PaintingCursors
-   PaletteType
-   PathKind
-   PhotoCDColorSpace
-   PhotoCDSize
-   PicturePackageTextType
-   PointKind
-   PointType
-   PolarConversionType
-   PrintColorHandling
-   PurgeTarget
-   QueryStateType
-   RadialBlurMethod
-   RadialBlurQuality
-   RasterizeType
-   ReferenceFormType
-   ResampleMethod
-   ResetTarget
-   RippleSize
-   SaveBehavior
-   SaveDocumentType
-   SaveEncoding
-   SaveLogItemsType
-   SaveOptions
-   SaveOptionsType
-   SelectionType
-   ShapeOperation
-   SmartBlurMode
-   SmartBlurQuality
-   SourceSpaceType
-   SpherizeMode
-   StrikeThruType
-   StrokeLocation
-   TargaBitsPerPixels
-   TextComposer
-   TextType
-   TextureType
-   TiffEncodingType
-   ToolType
-   TransitionType
-   TrimType
-   TypeUnits
-   UndefinedAreas
-   UnderlineType
-   Units
-   Urgency
-   WarpStyle
-   WaveType
-   WhiteBalanceType
-   ZigZagType

Module Index #

-    Module Index
# Photoshop Intent #
Intent #

Description #

The color conversion intent.

Static Properties #

  ---------------------- --------------------------------------------------------
  ABSOLUTECOLORIMETRIC   Aims to maintain color accuracy at the expense of
  readonly               preserving relationships between colors and is suitable
                         for proofing to simulate the output of a particular
                         device. This intent is particularly useful for
                         previewing how paper color affects printed colors.

  PERCEPTUAL readonly    Gives priority to colors for which the human eye has
                         greater sensitivity.

  RELATIVECOLORIMETRIC   Compares the extreme highlight of the source color space
  readonly               to that of the destination color space and shifts all
                         colors accordingly. Out of gamut colors are shifted to
                         the closest reproducible color in the destination color
                         space.

  SATURATION readonly    Tries to produce vivid colors in an image at the expense
                         of color accuracy.
  ---------------------- --------------------------------------------------------
# Photoshop JavaScriptExecutionMode #
JavaScriptExecutionMode #

Description #

When should a JavaScript debugger be shown.

Static Properties #

  ------------------------------ ----------------------------------------
  BEFORERUNNING readonly         Show the JavaScript debugger when the
                                 first line of the JavaScript executes.

  NEVER readonly                 Never show the JavaScript debugger.
                                 Treat runtime errors by throwing a
                                 JavaScript exceptions.

  ONRUNTIMEERROR readonly        Show the JavaScript debugger if a
                                 runtime error occurs.
  ------------------------------ ----------------------------------------
# Photoshop JPEGSaveOptions #
JPEGSaveOptions #

Description #

Options for saving a document in JPEG format.

Static Properties #

  ---------------------------- ------------------------------------------
  embedColorProfile readonly   If true, the color profile is embedded in
                               the document.

  formatOptions readonly       The download format to use.

  matte readonly               The color to use to fill anti-aliased
                               edges adjacent to transparent areas of the
                               image. Default: white.

  quality readonly             The quality of the produced image.

  scans readonly               The number of scans. Valid only for
                               progressive type JPEG files.
  ---------------------------- ------------------------------------------
# Photoshop Justification #
Justification #

Description #

The placement of paragraph text within the bounding box.

Static Properties #

  ---------------------------------- ------------------------------------
  CENTER readonly                    Text is centered on each line.

  CENTERJUSTIFIED readonly           Justifies all lines except the last,
                                     which is center-aligned.

  FULLYJUSTIFIED readonly            Justifies all lines including the
                                     last, which is force-justified.

  LEFT readonly                      Aligns the left edges, leaving the
                                     right edge ragged.

  LEFTJUSTIFIED readonly             Justifies all lines except the last,
                                     which is left-aligned.

  RIGHT readonly                     Aligns the right edges, leaving the
                                     left edge ragged.

  RIGHTJUSTIFIED readonly            Justifies all lines except the last,
                                     which is right-aligned.
  ---------------------------------- ------------------------------------
# Photoshop LabColor #
LabColor #

Description #

A Lab color specification.

Properties #

  ------------------------------- ---------------------------------------
  A readonly                      The a-value. Range: -128.0 and 127.0.

  B readonly                      The b-value. Range: -128.0 and 127.0.

  L readonly                      The L-value. Range: 0.0 to 100.0.
  ------------------------------- ---------------------------------------

Static Properties #

  ------------------------------- ---------------------------------------
  A readonly                      The a-value. Range: -128.0 and 127.0.

  B readonly                      The b-value. Range: -128.0 and 127.0.

  L readonly                      The L-value. Range: 0.0 to 100.0.
  ------------------------------- ---------------------------------------
# Photoshop Language #
Language #

Description #

The language to use.

Static Properties #

  ---------------------------------------------------- ------------------
  BRAZILLIANPORTUGUESE readonly                        Brazillian
                                                       Portuguese.

  CANADIANFRENCH readonly                              Canadian French.

  DANISH readonly                                      Danish.

  DUTCH readonly                                       Dutch.

  ENGLISHUK readonly                                   British English.

  ENGLISHUSA readonly                                  American English.

  FINNISH readonly                                     Finnish.

  FRENCH readonly                                      French.

  GERMAN readonly                                      German.

  ITALIAN readonly                                     Italian.

  NORWEGIAN readonly                                   Norwegian.

  NYNORSKNORWEGIAN readonly                            Nynorsk Norwegian.

  OLDGERMAN readonly                                   Old German.

  PORTUGUESE readonly                                  Portuguese.

  SPANISH readonly                                     Spanish.

  SWEDISH readonly                                     Swedish.

  SWISSGERMAN readonly                                 Swiss German.
  ---------------------------------------------------- ------------------
# Photoshop LayerComp #
LayerComp #

Description #

A snapshot of a state of the layers in a document (can be used to view
different page layouts or compostions).

Properties #

  --------------------------------- -------------------------------------
  appearance readonly               If true, uses layer appearance (layer
                                    styles) settings.

  comment readonly                  The description of the layer comp.

  name readonly                     The name of the layer comp.

  parent readonly                   The object’s container.

  position readonly                 If true, uses layer position.

  selected readonly                 If true, the layer comp is currently
                                    selected.

  typename readonly                 The class name of the object.

  visibility readonly               If true, the layer comp is visible.
  --------------------------------- -------------------------------------

Methods #

  ---------------------------------- ------------------------------------
  add readonly                       Adds an element.

  apply readonly                     Applies the layer comp to the
                                     document.

  recapture readonly                 Recaptures the current layer
                                     state(s) for this layer comp.

  remove readonly                    Deletes this object.

  removeAll readonly                 Deletes all elements.

  resetFromComp readonly             Resets the layer comp state to the
                                     document state.
  ---------------------------------- ------------------------------------
# Photoshop LayerCompressionType #
LayerCompressionType #

Description #

The layer compression type.

Static Properties #

  --------------------- -------------------------------------------------
  RLE readonly          Run Length Encoding, which is lossless.

  ZIP readonly          Zip compression, which is lossless and most
                        effective for images that contain large areas of
                        single color.
  --------------------- -------------------------------------------------
# Photoshop LayerComps #
LayerComps #

Description #

The layer comp objects associated with the document.

Properties #

  --------------------------------------- -------------------------------
  length readonly                         Number of elements in the
                                          collection.

  parent readonly                         The object’s container.

  typename readonly                       The class name of the object.
  --------------------------------------- -------------------------------

Methods #

  ------------------------------ ----------------------------------------
  [] readonly                    Get an element in the collection with
                                 the provided index.

  getByName readonly             Get the first element in the collection
                                 with the provided name.
  ------------------------------ ----------------------------------------

Static Methods #

  ---------------------------------------------- ------------------------
  add readonly                                   Adds a layer comp.

  ---------------------------------------------- ------------------------
# Photoshop Layer #
Layer #

Description #

A layer object.

Layers may contain nested layers, which are called sublayers in the user
interface. The layer object contains all of the page items in the
specific layer as elements. Your script can access page items as
elements of either the layer object or the document object.

Properties #

  ------------------------ ----------------------------------------------
  allLocked readonly       If true, the layer’s contents and settings are
                           locked.

  blendMode readonly       The mode to use when compositing an object.

  bounds readonly          If the Layer is a layer set, this property
                           returns a reference to the corresponding layer
                           set object.

  boundsNoEffects readonly Bounding rectangle of the Layer not including
                           effects.

  id readonly              The unique ID of this layer.

  itemIndex readonly       The layer index sans layer groups, how
                           Photoshop would index them.

  linkedLayers readonly    The layers linked to this layer.

  name readonly            The name of the layer.

  opacity readonly         The layer’s master opacity (as a percentage).
                           Range: 0.0 to 100.0.

  parent readonly          The object’s container.

  typename readonly        The class name of the object.

  visible readonly         If true, the layer is visible.

  xmpMetadata readonly     XMP metadata associated with the Layer.
  ------------------------ ----------------------------------------------

Methods #

  -------------------------------- --------------------------------------
  duplicate readonly               Duplicate this object.

  link readonly                    Links the layer with the specified
                                   layer.

  move readonly                    Move the object.

  moveToEnd readonly               …

  remove readonly                  Deletes this object.

  removeAll readonly               Deletes all elements.

  resize readonly                  Scales the object.

  rotate readonly                  Rotates the object.

  translate readonly               Moves the object relative to its
                                   current position.

  unlink readonly                  Unlinks the layer.
  -------------------------------- --------------------------------------
# Photoshop LayerKind #
LayerKind #

Description #

The types of art layers.

Static Properties #

  -------------------------------------------- --------------------------
  BLACKANDWHITE readonly                       Black and white layer.

  BRIGHTNESSCONTRAST readonly                  Brightness contrast
                                               adjustment layer.

  CHANNELMIXER readonly                        Channel mixer adjustment
                                               layer.

  COLORBALANCE readonly                        Color balance adjustment
                                               layer.

  COLORLOOKUP readonly                         Color lookup layer.

  CURVES readonly                              Curves adjustment layer.

  EXPOSURE readonly                            Exposure layer.

  GRADIENTFILL readonly                        Gradient fill.

  GRADIENTMAP readonly                         Gradient map adjustment
                                               laye.

  HUESATURATION readonly                       Hue saturation adjustment
                                               laye.

  INVERSION readonly                           Invert adjustment layer.

  LAYER3D readonly                             3D layer.

  LEVELS readonly                              Levels adjustment layer.

  NORMAL readonly                              Normal.

  PATTERNFILL readonly                         Pattern fill.

  PHOTOFILTER readonly                         Photo filter layer.

  POSTERIZE readonly                           Posterize adjustment
                                               layer.

  SELECTIVECOLOR readonly                      Selective color adjustment
                                               layer.

  SMARTOBJECT readonly                         Smart object layer.

  SOLIDFILL readonly                           Solid color.

  TEXT readonly                                Text.

  THRESHOLD readonly                           Threshold adjustment
                                               layer.

  VIBRANCE readonly                            Vibrance layer.

  VIDEO readonly                               Video layer.
  -------------------------------------------- --------------------------
# Photoshop LayerSet #
LayerSet #

Description #

A group of layer objects, which can include art layer objects and other
(nested) layer set objects. A single command or set of commands
manipulates all layers in a layer set object.

Properties #

  ---------------------------- ------------------------------------------
  artLayers readonly           The art layers contained in this layer
                               set.

  enabledChannels readonly     The channels that are enabled for the
                               layer set. Must be a list of component
                               channels.

  layerSets readonly           The layer sets contained within the layer
                               set.

  layers readonly              The layers in this layer set.

  parent readonly              The object’s container.

  typename readonly            The class name of the object.
  ---------------------------- ------------------------------------------

Methods #

  -------------------------------------------- --------------------------
  add readonly                                 Adds an element.

  merge readonly                               Merges the layer set.
  -------------------------------------------- --------------------------
# Photoshop LayerSets #
LayerSets #

Description #

The collection of layer set objects in the document.

Properties #

  -------------------------------------- --------------------------------
  length readonly                        Number of elements in the
                                         collection.

  parent readonly                        The object’s container.

  typename readonly                      The class name of the object.
  -------------------------------------- --------------------------------

Methods #

  ----------------------------- -----------------------------------------
  [] readonly                   Get an element in the collection with the
                                provided index.

  add readonly                  Adds an element.

  getByName readonly            Get the first element in the collection
                                with the provided name.

  removeAll readonly            Deletes all elements.
  ----------------------------- -----------------------------------------
# Photoshop Layers #
Layers #

Description #

The collection of layer objects, including art layer and layer set
objects, in the document.

Properties #

  ------------------------------------ ----------------------------------
  length readonly                      Number of elements in the
                                       collection.

  parent readonly                      The object’s container.

  typename readonly                    The class name of the object.
  ------------------------------------ ----------------------------------

Methods #

  ----------------------------- -----------------------------------------
  [] readonly                   Get an element in the collection with the
                                provided index.

  getByName readonly            Get the first element in the collection
                                with the provided name.

  removeAll readonly            Deletes all elements.
  ----------------------------- -----------------------------------------
# Photoshop LensType #
LensType #

Description #

The type of lens.

Static Properties #

  ----------------------------------------------------- -----------------
  MOVIEPRIME readonly                                   Movie Prime.

  PRIME105 readonly                                     105mm Prime.

  PRIME35 readonly                                      35mm Prime.

  ZOOMLENS readonly                                     50-300mm Zoom.
  ----------------------------------------------------- -----------------
# Photoshop MacExtensionType #
MacExtensionType #

Description #

The formatting for the filename extension.

Static Properties #

  ----------------------------------------- -----------------------------
  LOWERCASE readonly                        The extension is in lowercase
                                            letters.

  NONE readonly                             Does not use an extension.

  UPPERCASE readonly                        The extension is in uppercase
                                            letters.
  ----------------------------------------- -----------------------------
# Photoshop MacPreviewType #
MacPreviewType #

Description #

The type of image to use as a low-resolution preview in the destination
application.

Static Properties #

  --------------------------------------------------- -------------------
  EIGHTBITTIFF readonly                               8-bit TIFF.

  MACOSEIGHTBIT readonly                              8-bit.

  MACOSJPEG readonly                                  JPEG.

  MACOSMONOCHROME readonly                            Monochrome.

  MONOCHROMETIFF readonly                             Monochrome TIFF.

  NONE readonly                                       Does not use a
                                                      preview.
  --------------------------------------------------- -------------------
# Photoshop MagnificationType #
MagnificationType #

Description #

The PDF magnification type.

Static Properties #

  -------------------------------------------- --------------------------
  ACTUALSIZE readonly                          Displays the image at
                                               actual size.

  FITPAGE readonly                             Fits the image to the
                                               page.
  -------------------------------------------- --------------------------
# Photoshop MatteType #
MatteType #

Description #

The color to use for matting.

Static Properties #

  -------------------------------------------- --------------------------
  BACKGROUND readonly                          The current background
                                               color.

  BLACK readonly                               Black.

  FOREGROUND readonly                          The current foreground
                                               color.

  NETSCAPE readonly                            Gray.

  NONE readonly                                None.

  SEMIGRAY readonly                            50% gray.

  WHITE readonly                               White.
  -------------------------------------------- --------------------------
# Photoshop MeasurementLog #
MeasurementLog #

Description #

The log of measurements taken.

Properties #

  -------------------------------------------- --------------------------
  parent readonly                              The object’s container.

  typename readonly                            The class name of the
                                               object.
  -------------------------------------------- --------------------------

Methods #

  ---------------------------------------------- ------------------------
  deleteMeasurements readonly                    Deletes the specified
                                                 measurements.

  exportMeasurements readonly                    Exports the specified
                                                 measurements.
  ---------------------------------------------- ------------------------
# Photoshop MeasurementRange #
MeasurementRange #

Description #

The measurement upon which to take action.

Static Properties #

  --------------------------------------------------- -------------------
  ACTIVEMEASUREMENTS readonly                         Only active
                                                      measurements.

  ALLMEASUREMENTS readonly                            All measurements.
  --------------------------------------------------- -------------------
# Photoshop MeasurementScale #
MeasurementScale #

Description #

The measurement scale for the document.

Properties #

  -------------------------------------- --------------------------------
  logicalLength readonly                 The logical length this scale
                                         equates to.

  logicalUnits readonly                  The logical units for this
                                         scale.

  name readonly                          The name of the scale.

  parent readonly                        The object’s container.

  pixelLength readonly                   The length (in pixels) to which
                                         this scale equates.

  typename readonly                      The class name of the object.
  -------------------------------------- --------------------------------
# Photoshop MeasurementSource #
MeasurementSource #

Description #

The source for recording measurements.

Static Properties #

  ---------------------------------------------------- ------------------
  MEASURECOUNTTOOL readonly                            The measure count
                                                       tool.

  MEASURERULERTOOL readonly                            The measure ruler
                                                       tool.

  MEASURESELECTION readonly                            The measure
                                                       selection.
  ---------------------------------------------------- ------------------
# Photoshop NewDocumentMode #
NewDocumentMode #

Description #

The color profile to use.

Static Properties #

  ---------------------------------------------------------- ------------
  BITMAP readonly                                            Bitmap.

  CMYK readonly                                              CMYK.

  GRAYSCALE readonly                                         Grayscale.

  LAB readonly                                               Lab.

  RGB readonly                                               RGB.
  ---------------------------------------------------------- ------------
# Photoshop NoColor #
NoColor #

Description #

Represents a missing color.
# Photoshop NoiseDistribution #
NoiseDistribution #

Description #

The distribution method to use when applying an Add Noise filter.

Static Properties #

  -------------------- --------------------------------------------------
  GAUSSIAN readonly    Distributes color values of noise along a
                       bell-shaped curve, creating a speckled effect.

  UNIFORM readonly     Distributes color values of noise using random
                       numbers between 0 and plus or minus the specified
                       value, creating a subtle effect.
  -------------------- --------------------------------------------------
# Photoshop Notifier #
Notifier #

Description #

An event-handler object that tells the script to execute specified code
when a specified event occurs. For notifiers to work, they must be
enabled. See the ‘notifiers enabled’ property of the Application object.
Events that occur within scripts do not generally trigger notifiers,
because they occur inside of a “play script” event.

Properties #

  ----------------------- -----------------------------------------------
  event readonly          The event ID in four characters or a unique
                          string that the notifier is associated with.

  eventClass readonly     The class ID associated with the event for the
                          Notifier object, four characters or a unique
                          string.

  eventFile readonly      The path to the file to execute when the event
                          occurs/activates the notifier.

  parent readonly         The object’s container.

  typename readonly       The class name of the object.
  ----------------------- -----------------------------------------------

Methods #

  ----------------------------------------------- -----------------------
  remove readonly                                 Deletes this object.

  removeAll readonly                              Deletes all elements.
  ----------------------------------------------- -----------------------
# Photoshop Notifiers #
Notifiers #

Description #

A collection of notifier objects in the document.

Properties #

  -------------------------------------- --------------------------------
  length readonly                        Number of elements in the
                                         collection.

  parent readonly                        The object’s container.

  typename readonly                      The class name of the object.
  -------------------------------------- --------------------------------

Methods #

  ----------------------------- -----------------------------------------
  [] readonly                   Get an element in the collection with the
                                provided index.

  getByName readonly            Get the first element in the collection
                                with the provided name.
  ----------------------------- -----------------------------------------

Static Methods #

  ------------------------------------------------ ----------------------
  add readonly                                     Creates a notifier.

  removeAll readonly                               Deletes all elements.
  ------------------------------------------------ ----------------------
# Photoshop OffsetUndefinedAreas #
OffsetUndefinedAreas #

Description #

The method to use to fill the empty space left by offsetting a an image
or selection.

Static Properties #

  ----------------------- -----------------------------------------------
  REPEATEDGEPIXELS        Extends the colors of pixels along the edge of
  readonly                the image in the direction specified. Banding
                          may result if the edge pixels are different
                          colors.

  SETTOBACKGROUND         For background layers, sets pixels to the
  readonly                background layer color. For nonbackground
                          layers, sets the pixels to transparent.

  WRAPAROUND readonly     Fills the undefined space with content from the
                          opposite edge of the image.
  ----------------------- -----------------------------------------------
# Photoshop OpenDocumentMode #
OpenDocumentMode #

Description #

The color profile to use.

Static Properties #

  ---------------------------------------------------------- ------------
  CMYK readonly                                              CMYK.

  GRAYSCALE readonly                                         Grayscale.

  LAB readonly                                               Lab.

  RGB readonly                                               RGB.
  ---------------------------------------------------------- ------------
# Photoshop OpenDocumentType #
OpenDocumentType #

Description #

Document formats that Photoshop can open.

Static Properties #

  ---------------------------------------------- ------------------------
  ALIASPIX readonly                              Alias PIX format.

  BMP readonly                                   BMP format.

  CAMERARAW readonly                             Camera RAW format.

  COMPUSERVEGIF readonly                         CompuServe GIF format.

  DICOM readonly                                 DICOM format.

  ELECTRICIMAGE readonly                         Electric format.

  EPS readonly                                   Generic EPS format.

  EPSPICTPREVIEW readonly                        EPS format with embedded
                                                 PICT Preview.

  EPSTIFFPREVIEW readonly                        EPS format with embedded
                                                 TIFF Preview.

  FILMSTRIP readonly                             Filmstrip format.

  JPEG readonly                                  JPEG format.

  PCX readonly                                   PCX format.

  PDF readonly                                   Generic PDF format.

  PHOTOCD readonly                               Photo CD format.

  PHOTOSHOP readonly                             Photoshop format.

  PHOTOSHOPDCS_1 readonly                        Photoshop DCS 1.0
                                                 format.

  PHOTOSHOPDCS_2 readonly                        Photoshop DCS 2.0
                                                 format.

  PHOTOSHOPEPS readonly                          EPS document produced by
                                                 Photoshop.

  PHOTOSHOPPDF readonly                          PDF document produced by
                                                 Photoshop.

  PICTFILEFORMAT readonly                        PICT file format.

  PICTRESOURCEFORMAT readonly                    PICT resource format.

  PIXAR readonly                                 Pixar format.

  PNG readonly                                   PNG format.

  PORTABLEBITMAP readonly                        Portable Bitmap format.

  RAW readonly                                   Raw format.

  SCITEXCT readonly                              Scitex CT format.

  SGIRGB readonly                                SGI RGB format.

  SOFTIMAGE readonly                             SoftImage format.

  TARGA readonly                                 Targa format.

  TIFF readonly                                  TIFF format.

  WAVEFRONTRLA readonly                          Wavefront RLA format.

  WIRELESSBITMAP readonly                        Wireless Bitmap format
                                                 (WBMP)
  ---------------------------------------------- ------------------------
# Photoshop OpenOptions #
OpenOptions #

Description #

Options that can be specified when opening a document.
# Photoshop OperatingSystem #
OperatingSystem #

Description #

The operating system.

Static Properties #

  --------------------------------------------- -------------------------
  OS2 readonly                                  Mac OS/2 operating
                                                system.

  WINDOWS readonly                              Windows operating system.
  --------------------------------------------- -------------------------
# Photoshop Orientation #
Orientation #

Description #

The image orientation on the media.

Static Properties #

  --------------------------------------------------------- -------------
  LANDSCAPE readonly                                        Landscape.

  PORTRAIT readonly                                         Portrait.
  --------------------------------------------------------- -------------
# Photoshop OtherPaintingCursors #
OtherPaintingCursors #

Description #

The pointer for the following tools: Eraser, Pencil, Paintbrush, Healing
Brush, Rubber Stamp, Pattern Stamp, Smudge, Blur, Sharpen, Dodge, Burn,
Sponge.

Static Properties #

  ---------------------------------------------- ------------------------
  PRECISEOTHER readonly                          Displays pointers as
                                                 cross hairs.

  STANDARDOTHER readonly                         Displays pointers as
                                                 tool icons.
  ---------------------------------------------- ------------------------
# Photoshop PaintingCursors #
PaintingCursors #

Description #

The pointer for the following tools: Marquee, Lasso, Polygonal Lasso,
Magic Wand, Crop, Slice, Patch Eyedropper, Pen, Gradient, Line, Paint
Bucket, Magnetic Lasso, Magnetic Pen, Freeform Pen, Measure, and Color
Sampler.

Static Properties #

  ----------------------- -----------------------------------------------
  BRUSHSIZE readonly      Displays cursors as brush shapes representing
                          the size of the current brush. Valid only for
                          painting cursors.

  PRECISE readonly        Displays pointers as cross hairs.

  STANDARD readonly       Displays pointers as tool icons.
  ----------------------- -----------------------------------------------
# Photoshop PaletteType #
PaletteType #

Description #

The palette type for converting an image to indexed color.

Static Properties #

  -------------------- --------------------------------------------------
  EXACT readonly       The palette uses the exact colors appearing in the
                       RGB image; available only if the image uses 256 or
                       fewer colors.

  LOCALADAPTIVE        Creates a palette by sampling the colors from the
  readonly             spectrum appearing most commonly in the image.

  LOCALPERCEPTUAL      Creates a custom palette by giving priority to
  readonly             colors for in the image which the human eye has
                       greater sensitivity.

  LOCALSELECTIVE       Creates a color table similar to the Perceptual
  readonly             color table, but favoring broad areas of color in
                       the image and the preservation of web colors.

  MACOSPALETTE         The Mac OS default 8-bit palette, whch is based on
  readonly             a uniform sampling of RGB colors.

  MASTERADAPTIVE       Creates a palette by sampling the colors from the
  readonly             spectrum appearing most commonly in a group of
                       open images that share the same color palette.

  MASTERPERCEPTUAL     Creates a custom palette by giving priority to
  readonly             colors in a group of open images with the same
                       color palette for which the human eye has greater
                       sensitivity.

  MASTERSELECTIVE      Creates a color table similar to the Master
  readonly             Perceptual color table, but favoring broad areas
                       of color and the preservation of web colors.

  PREVIOUSPALETTE      Uses the custom palette from the previous
  readonly             conversion, making it easy to convert several
                       images with the same custom palette.

  UNIFORM readonly     Creates a palette by uniformly sampling colors
                       from the RGB color cube.

  WEBPALETTE readonly  The 216-color palette that web browsers,
                       regardless of platform, use to display images on a
                       monitor limited to 256 colors.

  WINDOWSPALETTE       The Windows system’s default 8-bit palette, whch
  readonly             is based on a uniform sampling of RGB colors.
  -------------------- --------------------------------------------------
# Photoshop PathItem #
PathItem #

Description #

A path or drawing object, such as the outline of a shape or a straight
or curved line, which contains sub paths that comprise its geometry.

Properties #

  --------------------------------------- -------------------------------
  kind readonly                           The type of path.

  name readonly                           The name of the path item.

  parent readonly                         The object’s container.

  subPathItems readonly                   The sub path objects for this
                                          path item.

  typename readonly                       The class name of the object.
  --------------------------------------- -------------------------------

Methods #

  ------------------------------ ----------------------------------------
  add readonly                   Adds an element.

  deselect readonly              Unselects the selection, no path items
                                 are selected.

  duplicate readonly             Duplicate this object.

  duplicate readonly             Duplicates this path item.

  fillPath readonly              Fills the area enclosed by the path.

  makeClippingPath readonly      Makes this path item the clipping path
                                 for this document.

  makeSelection readonly         Makes a selection object, whose border
                                 is the path, from this path item object.

  remove readonly                Deletes this object.

  removeAll readonly             Deletes all elements.

  select readonly                Makes this path item the active or
                                 selected path item.

  strokePath readonly            Strokes the path.
  ------------------------------ ----------------------------------------
# Photoshop PathItems #
PathItems #

Description #

The collection of path item objects in the document.

Properties #

  -------------------------------------- --------------------------------
  length readonly                        Number of elements in the
                                         collection.

  parent readonly                        The object’s container.

  typename readonly                      The class name of the object.
  -------------------------------------- --------------------------------

Methods #

  ----------------------------- -----------------------------------------
  [] readonly                   Get an element in the collection with the
                                provided index.

  getByName readonly            Get the first element in the collection
                                with the provided name.
  ----------------------------- -----------------------------------------

Static Methods #

  ----------------------------------------- -----------------------------
  add readonly                              Creates a new path item.

  ----------------------------------------- -----------------------------
# Photoshop PathKind #
PathKind #

Description #

The type of path.

Static Properties #

  ---------------------------------------------------- ------------------
  CLIPPINGPATH readonly                                Clipping path.

  NORMALPATH readonly                                  Normal path.

  TEXTMASK readonly                                    Text mask path.

  VECTORMASK readonly                                  Vector mask path.

  WORKPATH readonly                                    Workpath.
  ---------------------------------------------------- ------------------
# Photoshop PathPoint #
PathPoint #

Description #

Information about an array of path point info objects. You do not use
the path point object to create points that make up a path. Rather, you
use the path point object to retrieve information about the points that
describe path segments. To create path points, use the path point info
object.

Properties #

  --------------------------------- -------------------------------------
  anchor readonly                   The position (coordinates) of the
                                    anchor point.

  kind readonly                     The type of point.

  leftDirection readonly            The location of the left direction
                                    point (the “in” position).

  parent readonly                   The object’s container.

  rightDirection readonly           The location of the right direction
                                    point (the “out” position).

  typename readonly                 The class name of the object.
  --------------------------------- -------------------------------------
# Photoshop PathPointInfo #
PathPointInfo #

Description #

A point on a path, expressed as an array of three coordinate arrays: the
anchor point, left direction point, and right direction point. For paths
that are straight segments (not curved), the coordinates of all three
points are the same. For curved segements, the coordinates are
different. The difference between the anchor point and the left or right
direction points determines the arc of the curve. You use the left
direction point to bend the curve “outward” or make it convex; you use
the right direction point to bend the curve “inward” or make it concave.

Properties #

  ----------------------------------- -----------------------------------
  anchor readonly                     The x and y coordinates of one end
                                      point of the path segment.

  kind readonly                       The point type.

  leftDirection readonly              The location of the left direction
                                      point (“in” position).

  rightDirection readonly             The location of the right direction
                                      point (“out” position).
  ----------------------------------- -----------------------------------

Static Properties #

  ----------------------------------- -----------------------------------
  anchor readonly                     The x and y coordinates of one end
                                      point of the path segment.

  kind readonly                       The point type.

  leftDirection readonly              The location of the left direction
                                      point (“in” position).

  rightDirection readonly             The location of the right direction
                                      point (“out” position).
  ----------------------------------- -----------------------------------
# Photoshop PathPoints #
PathPoints #

Description #

A collection of path point objects that comprises the path points
property of the sub path item object.

Properties #

  --------------------------------------- -------------------------------
  length readonly                         Number of elements in the
                                          collection.

  parent readonly                         The object’s container.

  typename readonly                       The class name of the object.
  --------------------------------------- -------------------------------

Methods #

  ------------------------------ ----------------------------------------
  [] readonly                    Get an element in the collection with
                                 the provided index.

  getByName readonly             Get the first element in the collection
                                 with the provided name.
  ------------------------------ ----------------------------------------
# Photoshop PDFCompatibilityType #
PDFCompatibilityType #

Description #

The PDF version with which to make the document compatible.

Static Properties #

  ------------------------------------------- ---------------------------
  PDF13 readonly                              PDF 1.3 (Acrobat 4 or
                                              higher).

  PDF14 readonly                              PDF 1.4 (Acrobat 5 or
                                              higher).

  PDF15 readonly                              PDF 1.5 (Acrobat 6 or
                                              higher).

  PDF16 readonly                              PDF 1.6 (Acrobat 7 or
                                              higher)

  PDF17 readonly                              PDF 1.7 (Acrobat 9 or
                                              higher)
  ------------------------------------------- ---------------------------
# Photoshop PDFEncodingType #
PDFEncodingType #

Description #

The type of compression to use when saving a document in PDF format.

Static Properties #

  --------------------------------------- -------------------------------
  JPEG readonly                           JPEG compression.

  JPEG2000HIGH readonly                   JPEG2000 compression with high
                                          image quality.

  JPEG2000LOSSLESS readonly               JPEG2000 lossless compression.

  JPEG2000LOW readonly                    JPEG2000 compression with low
                                          image quality.

  JPEG2000MED readonly                    JPEG2000 compression with
                                          medium image quality.

  JPEG2000MEDHIGH readonly                JPEG2000 compression with
                                          medium high image quality.

  JPEG2000MEDLOW readonly                 JPEG2000 compression with
                                          medium low image quality.

  JPEGHIGH readonly                       JPEG compression with high
                                          image quality.

  JPEGLOW readonly                        JPEG compression with low image
                                          quality.

  JPEGMED readonly                        JPEG compression with medium
                                          image quality.

  JPEGMEDHIGH readonly                    JPEG compression with medium
                                          high image quality.

  JPEGMEDLOW readonly                     JPEG compression with medium
                                          low image quality.

  NONE readonly                           No encoding.

  PDFZIP readonly                         Zip compression.

  PDFZIP4BIT readonly                     Zip compression with 4-bit
                                          image quality.
  --------------------------------------- -------------------------------
# Photoshop PDFResampleType #
PDFResampleType #

Description #

Downsampling options when saving as PDF.

Static Properties #

  --------------- -------------------------------------------------------
  NONE readonly   Does not downsample.

  PDFAVERAGE      Averages the pixels in a sample area and replaces the
  readonly        entire area with the average pixel color at the
                  specified resolution.

  PDFBICUBIC      Uses a weighted average to determine pixel color, which
  readonly        usually yields better results than the simple averaging
                  method of downsampling. The slowest but most precise
                  method, resulting in the smoothest gradations.

  PDFSUBSAMPLE    Chooses a pixel in the center of the sample area and
  readonly        replaces the entire area with that pixel color;
                  significantly reduces conversion time but results in
                  images that are less smooth and continuous.
  --------------- -------------------------------------------------------
# Photoshop PDFSaveOptions #
PDFSaveOptions #

Description #

Options for saving a document in PDF format.

Static Properties #

  ---------------------------- ------------------------------------------
  PDFCompatibility readonly    The PDF version to make the document
                               compatible with.

  PDFStandard readonly         The PDF standard to make the document
                               compatible with.

  alphaChannels readonly       If true, the alpha channels are saved.

  annotations readonly         If true, the annotations are saved.

  colorConversion readonly     If true, converts the color profile to the
                               destination profile.

  convertToEightBit readonly   If true, converts a 16-bit image to 8-bit
                               for better compatibility with other
                               applications.

  description readonly         Description of the save options in use.

  destinationProfile readonly  Describes the final RGB or CMYK output
                               device, such as a monitor or press
                               standard.

  downSample readonly          The downsample method to use.

  downSampleSize readonly      The size (in pixels per inch) to
                               downsample images to if they exceed the
                               value specified for ‘down sample size
                               limit’.

  downSampleSizeLimit readonly Limits downsampling or subsampling to
                               images that exceed this value (in pixels
                               per inch).

  downgradeColorProfile        DEPRECATED, ( should the embedded color
  readonly                     profile be downgraded to version 2 )

  embedColorProfile readonly   If true, the color profile is embedded in
                               the document.

  embedFonts readonly          DEPRECATED. ( embed fonts? Only valid if a
                               text layer is included )

  embedThumbnail readonly      If true, includes a small preview image in
                               Acrobat.

  encoding readonly            The encoding method to use.

  interpolation readonly       DEPRECATED. ( use image interpolation? )

  jpegQuality readonly         The quality of the produced image. Valid
                               only for JPEG-encoded PDF documents.
                               Range: 0 to 12.

  layers readonly              If true, the layers are saved.

  optimizeForWeb readonly      If true, improves performance of PDFs on
                               Web servers.

  outputCondition readonly     An optional comment field for inserting
                               descriptions of the output condition. The
                               text is stored in the PDF/X file.

  outputConditionID readonly   The identifier for the output condition.

  preserveEditing readonly     If true, allows users to reopen the PDF in
                               Photoshop with native Photoshop data
                               intact.

  presetFile readonly          The preset file to use for settings;
                               overrides other settings.

  profileInclusionPolicy       If true, shows which profiles to include.
  readonly                     

  registryName readonly        The URL where the output condition is
                               registered.

  spotColors readonly          If true, the spot colors are saved.

  tileSize readonly            The compression option. Valid only when
                               encoding is JPEG2000.

  transparency readonly        DEPRECATED.

  useOutlines readonly         DEPRECATED. ( use outlines for text? Only
                               valid if vector data is included )

  vectorData readonly          DEPRECATED. ( include vector data )

  view readonly                If true, opens the saved PDF in Acrobat.
  ---------------------------- ------------------------------------------
# Photoshop PDFStandardType #
PDFStandardType #

Description #

The PDF/X standard with which the document complies.

Static Properties #

  ------------ -------------------------------------------------------------
  NONE         The document does not use the PDF/X standard.
  readonly     

  PDFX1A2001   PDF/X-1a standard, which requires all fonts to be embedded,
  readonly     the appropriate PDF bounding boxes to be specified, and color
               to appear as CMYK, spot colors, or both; can be opened in
               Acrobat 4.0 and Acrobat Reader 4.0 and later.

  PDFX1A2003   PDF/X-1a standard, which requires all fonts to be embedded,
  readonly     the appropriate PDF bounding boxes to be specified, and color
               to appear as CMYK, spot colors, or both; can be opened in
               Acrobat 4.0 and Acrobat Reader 4.0 and later.

  PDFX32002    PDF/X-3 standard, which requires all fonts to be embedded and
  readonly     the appropriate PDF bounding boxes to be specified, and for
               color allows either the use of color management and
               device-independent color (CIE L*a*b, ICC-based color spaces,
               CalRGB, and CalGray) or CMYK, spot colors, or both; can be
               opened in Acrobat 4.0 and Acrobat Reader 4.0 and later.

  PDFX32003    PDF/X-3 standard, which requires all fonts to be embedded and
  readonly     the appropriate PDF bounding boxes to be specified, and for
               color allows either the use of color management and
               device-independent color (CIE L*a*b, ICC-based color spaces,
               CalRGB, and CalGray) or CMYK, spot colors, or both; can be
               opened in Acrobat 4.0 and Acrobat Reader 4.0 and later.

  PDFX42008    PDF/X-4 standard, which requires all fonts to be embedded and
  readonly     the appropriate PDF bounding boxes to be specified, and for
               color allows either the use of color management and
               device-independent color (CIE L*a*b, ICC-based color spaces,
               CalRGB, and CalGray) or CMYK, spot colors, or both; can be
               opened in Acrobat 8.0 and Acrobat Reader 8.0 and later.
  ------------ -------------------------------------------------------------
# Photoshop PhotoCDColorSpace #
PhotoCDColorSpace #

Description #

Deprecated.

Static Properties #

  ------------------------------------------- ---------------------------
  LAB16 readonly                              Lab with 16 bits per
                                              channel.

  LAB8 readonly                               Lab with 8 bits per
                                              channel.

  RGB16 readonly                              RGB with 16 bits per
                                              channel.

  RGB8 readonly                               RGB with 8 bits per
                                              channel.
  ------------------------------------------- ---------------------------
# Photoshop PhotoCDOpenOptions #
PhotoCDOpenOptions #

Description #

DEPRECATED.

Static Properties #

  ----------------------------------------- -----------------------------
  colorProfileName readonly                 The profile to use when
                                            reading the image.

  colorSpace readonly                       The color space for the
                                            image.

  orientation readonly                      The image orientation.

  pixelSize readonly                        The dimensions of the image.

  resolution readonly                       The resolution of the image
                                            (in pixels per inch)
  ----------------------------------------- -----------------------------
# Photoshop PhotoCDSize #
PhotoCDSize #

Description #

The pixel dimensions of the image.

Static Properties #

  ---------------------------------------------------- ------------------
  EXTRALARGE readonly                                  1024x1536 image.

  LARGE readonly                                       512x768 image.

  MAXIMUM readonly                                     2048x3072 image.

  MEDIUM readonly                                      256x384 image.

  MINIMUM readonly                                     64x96 image.

  SMALL readonly                                       128x192 image.
  ---------------------------------------------------- ------------------
# Photoshop PhotoshopSaveOptions #
PhotoshopSaveOptions #

Description #

Options for saving a Photoshop document.

Static Properties #

  ---------------------------------------- ------------------------------
  alphaChannels readonly                   If true, the alpha channels
                                           are saved.

  annotations readonly                     If true, the annotations are
                                           saved.

  embedColorProfile readonly               If true, the color profile is
                                           embedded in the document.

  layers readonly                          If true, the layers are saved.

  spotColors readonly                      If true, spot colors are
                                           saved.
  ---------------------------------------- ------------------------------
# Photoshop PICTBitsPerPixels #
PICTBitsPerPixels #

Description #

The number of bits per pixel to use when compressing a PICT file.

Static Properties #

  ---------------------------------------------------- ------------------
  EIGHT readonly                                       8 bits per pixel.

  FOUR readonly                                        4 bits per pixel.

  SIXTEEN readonly                                     16 bits per pixel.

  THIRTYTWO readonly                                   32 bits per pixel.

  TWO readonly                                         2 bits per pixel.
  ---------------------------------------------------- ------------------
# Photoshop PICTCompression #
PICTCompression #

Description #

The compression type to use whan saving as PICT.

Static Properties #

  ------------------------------------ ----------------------------------
  JPEGHIGHPICT readonly                High quality JPEG encoding.

  JPEGLOWPICT readonly                 Low quality JPEG encoding (high
                                       amount of compression).

  JPEGMAXIMUMPICT readonly             Maximum quality JPEG encoding
                                       (very little compression).

  JPEGMEDIUMPICT readonly              Medium quality JPEG encoding
                                       (medium amount of compression).

  NONE readonly                        No compression.
  ------------------------------------ ----------------------------------
# Photoshop PICTFileSaveOptions #
PICTFileSaveOptions #

Description #

Options for saving a document in PICT format.

Static Properties #

  --------------------------------------- -------------------------------
  alphaChannels readonly                  If true, the alpha channels are
                                          saved.

  compression readonly                    The compression method.

  embedColorProfile readonly              If true, the color profile is
                                          embedded in the document.

  resolution readonly                     The number of bits per pixel.
  --------------------------------------- -------------------------------
# Photoshop PICTResourceSaveOptions #
PICTResourceSaveOptions #

Description #

Options for saving a document as a PICT resource file.

Static Properties #

  ----------------------------------------- -----------------------------
  alphaChannels readonly                    If true, the alpha channels
                                            are saved.

  compression readonly                      The compression type.

  embedColorProfile readonly                If true, the color profile is
                                            embedded in the document.

  name readonly                             The name of PICT resource.

  resolution readonly                       The number of bits per pixel.

  resourceID readonly                       The ID of the PICT resource.
  ----------------------------------------- -----------------------------
# Photoshop PicturePackageOptions #
PicturePackageOptions #

Description #

Options that can be specified for a Picture Package.

Static Properties #

  ---------------------------------- ------------------------------------
  content readonly                   The content information.

  flatten readonly                   If true, flattens all layers in the
                                     final document.

  font readonly                      The font used for security text.

  fontSize readonly                  The font size.

  layout readonly                    The layout to use to generate the
                                     picture package.

  mode readonly                      The document color mode.

  opacity readonly                   The web page security text opacity
                                     (as a percentage) Range: 0 to 100.

  resolution readonly                The resolution of the document (in
                                     pixels per inch)

  text readonly                      The picture package custom text.

  textColor readonly                 The color of the security text.

  textPosition readonly              The position of the security text.

  textRotate readonly                The orientation of the security
                                     text.
  ---------------------------------- ------------------------------------
# Photoshop PicturePackageTextType #
PicturePackageTextType #

Description #

The function or meaning of text in a Picture Package.

Static Properties #

  ------------------------------------------------ ----------------------
  CAPTION readonly                                 The text is a caption.

  COPYRIGHT readonly                               The text is the
                                                   copyright.

  CREDIT readonly                                  The text is the
                                                   credit.

  FILENAME readonly                                The text is the
                                                   filename.

  NONE readonly                                    No text.

  ORIGIN readonly                                  The text is the
                                                   origin.

  USER readonly                                    The text is user
                                                   defined.
  ------------------------------------------------ ----------------------
# Photoshop PixarSaveOptions #
PixarSaveOptions #

Description #

Options for saving a document in Pixar format.

Static Properties #

  ------------------------------------------- ---------------------------
  alphaChannels readonly                      If true, the alpha channels
                                              are saved.

  ------------------------------------------- ---------------------------
# Photoshop PNGSaveOptions #
PNGSaveOptions #

Description #

Options for saving a document in PNG format.

Static Properties #

  --------------------------------------------- -------------------------
  compression readonly                          Compression used on the
                                                image.

  interlaced readonly                           If true, rows are
                                                interlaced.
  --------------------------------------------- -------------------------
# Photoshop PointKind #
PointKind #

Description #

The path point kind.

Static Properties #

  --------------------------------------------- -------------------------
  CORNERPOINT readonly                          The point must be a
                                                corner.

  SMOOTHPOINT readonly                          The point can be a curve.
  --------------------------------------------- -------------------------
# Photoshop PointType #
PointType #

Description #

The point type.

Static Properties #

  ------------------------------------------------ ----------------------
  POSTSCRIPT readonly                              72 points per inch.

  TRADITIONAL readonly                             72.27 points per inch.
  ------------------------------------------------ ----------------------
# Photoshop PolarConversionType #
PolarConversionType #

Description #

The method of polar distortion to use.

Static Properties #

  ------------------------------------ ----------------------------------
  POLARTORECTANGULAR readonly          The selection is converted from
                                       its polar to rectangular
                                       coordinates.

  RECTANGULARTOPOLAR readonly          The selection is converted from
                                       its rectangular to polar
                                       coordinates.
  ------------------------------------ ----------------------------------
# Photoshop Preferences #
Preferences #

Description #

Options to define for the preferences property of the application
object, basically equivalent to selecting Edit > Preferences (Windows)
or Photoshop > Preferences in the Adobe Photoshop application.

Properties #

  ---------------------------- ------------------------------------------
  additionalPluginFolder       The path to the additional plug-in folder.
  readonly                     Valid only when ‘use additional plugin
                               folder’ = true.

  appendExtension readonly     Save files with extensions on Windows.

  askBeforeSavingLayeredTIFF   If true, asks the user to verify layer
  readonly                     preservation options when saving a file in
                               TIFF format.

  autoUpdateOpenDocuments      If true, automatically updates open
  readonly                     documents.

  beepWhenDone readonly        If true, alerts the user when a process
                               finishes.

  colorChannelsInColor         If true, displays component channels in
  readonly                     the Channels palette in color.

  colorPicker readonly         The color picker to use.

  columnGutter readonly        The gutter of columns (in points)

  columnWidth readonly         The width of columns (in points)

  createFirstSnapshot readonly If true, automatically makes the first
                               snapshot when a new document is created.

  dynamicColorSliders readonly If true, dynamic color sliders appear in
                               the Color palette.

  editLogItems readonly        Options for edit log items.

  exportClipboard readonly     If true, retains Adobe Photoshop contents
                               on the clipboard after you exit the
                               application.

  fontPreviewSize readonly     Show font previews in the type tool font
                               menus.

  fullSizePreview readonly     If true, shows the image preview as a full
                               size image.

  gamutWarningOpacity readonly The opacity (as a percentage) of the
                               warning color for out-of-gamut colors.
                               Range: 0 to 100.

  gridSize readonly            The size of grid squares.

  gridStyle readonly           The formatting style for non-printing grid
                               lines.

  gridSubDivisions readonly    The value by which to subdivide the grid.

  guideStyle readonly          The formatting style for non-printing
                               guide lines.

  iconPreview readonly         If true, shows the image preview as a
                               thumbnail.

  imageCacheForHistograms      If true, shows the current image cache
  readonly                     used to create the histogram.

  imageCacheLevels readonly    The number of images to hold in the cache.
                               Range: 1 to 8.

  imagePreviews readonly       The behavior mode to use when saving
                               files.

  interpolation readonly       The method to use to assign color values
                               to any new pixels created when an image is
                               resampled or resized.

  keyboardZoomResizesWindows   If true, automatically resizes the window
  readonly                     when zooming in or out using keyboard
                               shortcuts.

  macOSThumbnail readonly      If true, creates a thumbnail when saving
                               the image in Mac OS.

  maxRAMuse readonly           Maximum percentage of available RAM used
                               by Photoshop.

  maximizeCompatibility        The behavior to use to check whether to
  readonly                     maximize compatibility when opening Adobe
                               Photoshop (PSD) files.

  nonLinearHistory readonly    If true, allows non-linear history.

  numberOfHistoryStates        The number of history states to preserve.
  readonly                     Range: 1 to 100.

  otherCursors readonly        The type of pointer to use.

  paintingCursors readonly     The type of pointer to use.

  parent readonly              The object’s container.

  pixelDoubling readonly       If true, halves the resolution or (doubles
                               the size of pixels) to make previews
                               display more quickly.

  pointSize readonly           The point/pica size.

  recentFileListLength         The number of items in the recent file
  readonly                     list. Range: 0 to 30.

  rulerUnits readonly          The unit that the scripting system uses
                               when receiving and returning values.

  saveLogItems readonly        Options for saving the history items.

  saveLogItemsFile readonly    File to save the history log.

  savePaletteLocations         If true, makes new palette locations the
  readonly                     default location.

  showAsianTextOptions         If true, Asian text options are displayed
  readonly                     in the Paragraph palette.

  showEnglishFontNames         If true, Asian font names are listed in
  readonly                     English.

  showSliceNumber readonly     If true, displays slice numbers in the
                               document window when using the Slice tool.

  showToolTips readonly        If true, pop-up definitions are displayed
                               on mouseover.

  smartQuotes readonly         If true, curly quote marks are used.

  textFontSize readonly        Size of the small font used in panels and
                               dialogs.

  typeUnits readonly           The unit type-size that the numeric inputs
                               are assumed to represent.

  typename readonly            The class name of the object.

  useAdditionalPluginFolder    If true, uses an additional folder for
  readonly                     compatible plug-ins stored with a
                               different application.

  useDiffusionDither readonly  If true, uses diffusion dither.

  useHistoryLog readonly       Turn on and off the history logging.

  useLowerCaseExtension        If true, the file extension is lowercase.
  readonly                     

  useShiftKeyForToolSwitch     If true, enables cycling through a set of
  readonly                     hidden tools.

  useVideoAlpha readonly       If true, enables Adobe Photoshop to send
                               transparency information to your
                               computer?s video board. (Requires hardware
                               support.)

  windowsThumbnail readonly    If true, creates a thumbnail when saving
                               the image in Windows. (Requires hardware
                               support.)
  ---------------------------- ------------------------------------------
# Photoshop PresentationOptions #
PresentationOptions #

Description #

Options for the PDF presentation command.

Static Properties #

  -------------------------- --------------------------------------------
  PDFFileOptions readonly    Options for creating the PDF file.

  autoAdvance readonly       If true, the presentation auto advances.

  includeFilename readonly   If true, includes the file name for the
                             image.

  interval readonly          The amount of time (in seconds) before auto
                             advancing the view. Valid only when ‘auto
                             advance’ is true. Range: 1 to 60.

  loop readonly              If true, the presentation loops after the
                             last page.

  magnification readonly     The magnification type when viewing the
                             image.

  presentation readonly      If true, the file type is presentation. If
                             false, the file type is Multi-Page document.

  transition readonly        The image transition type.
  -------------------------- --------------------------------------------
# Photoshop PrintColorHandling #
PrintColorHandling #

Description #

Color conversion type when printing.

Static Properties #

  --------------------------------------- -------------------------------
  PHOTOSHOPMANAGED readonly               Photoshop manages color
                                          conversions.

  PRINTERMANAGED readonly                 Printer manages color
                                          conversions.

  SEPARATIONS readonly                    Print each channel separately
                                          without color conversions.
  --------------------------------------- -------------------------------
# Photoshop PurgeTarget #
PurgeTarget #

Description #

The cache to be targeted in a purge operation.

Static Properties #

  ------------------------------------- ---------------------------------
  ALLCACHES readonly                    Clears all caches.

  CLIPBOARDCACHE readonly               Clears the clipboard.

  HISTORYCACHES readonly                Deletes all history states from
                                        the History palette.

  UNDOCACHES readonly                   Clears the undo cache.
  ------------------------------------- ---------------------------------
# Photoshop QueryStateType #
QueryStateType #

Description #

The permission state for queries.

Static Properties #

  ------------------------------------- ---------------------------------
  ALWAYS readonly                       Always maximize compatibility.

  ASK readonly                          Always ask about maximize
                                        compatibility.

  NEVER readonly                        Never ask about maximize
                                        compatibility.
  ------------------------------------- ---------------------------------
# Photoshop RadialBlurMethod #
RadialBlurMethod #

Description #

The blur method to use.

Static Properties #

  -------------------------- --------------------------------------------
  SPIN readonly              Blurs along concentric circular lines at the
                             specified degree of rotation.

  ZOOM readonly              Blurs along radial lines, as if zooming into
                             or out of the image.
  -------------------------- --------------------------------------------
# Photoshop RadialBlurQuality #
RadialBlurQuality #

Description #

The radial blur quality.

Static Properties #

  ----------------------------------------- -----------------------------
  BEST readonly                             Produces best results.

  DRAFT readonly                            Produces fast but grainy
                                            results.

  GOOD readonly                             Produces good results.
  ----------------------------------------- -----------------------------
# Photoshop RasterizeType #
RasterizeType #

Description #

The type of the layer content to rasterize.

Static Properties #

  ------------------------------ -----------------------------------------
  ENTIRELAYER readonly           Rasterizes all vector data on the layer.

  FILLCONTENT readonly           Rasterizes the fill of a shape layer,
                                 leaving the vector mask.

  LAYERCLIPPINGPATH readonly     Rasterizes the vector mask of a shape
                                 layer, turning it into a layer mask.

  LINKEDLAYERS readonly          Rasterizes the selected layers.

  SHAPE readonly                 Rasterizes a shape layer.

  TEXTCONTENTS readonly          Rasterizes the type on a type layer.
                                 Doesn’t rasterize any other vector data
                                 on the layer.
  ------------------------------ -----------------------------------------
# Photoshop RawFormatOpenOptions #
RawFormatOpenOptions #

Description #

Options that can be specified when opening a document in RAW format.

Static Properties #

  -------------------- ---------------------------------------------------
  bitsPerChannel       The number of bits for each channel. Valid values:
  readonly             8 or 16.

  byteOrder readonly   The order in which bytes will be read. Valid only
                       when ‘bits per channel’ = 16.

  channelNumber        The number of channels in the image. Valid only
  readonly             when ‘bits per channel’ = 16. Range: 1 to 56.

  headerSize readonly  The number of bytes of information that will appear
                       in the file before actual image information begins;
                       that is, the number of zeroes inserted at the
                       beginning of the file as placeholders. Range: 0 to
                       1919999.

  height readonly      The image height (in pixels)

  interleaveChannels   If true, color values are stored sequentially.
  readonly             

  retainHeader         If true, the header is retained when saving.
  readonly             

  width readonly       The image width (in pixels)
  -------------------- ---------------------------------------------------
# Photoshop RawSaveOptions #
RawSaveOptions #

Description #

Options for saving a document in RAW format.

Static Properties #

  ------------------------------------------ ----------------------------
  alphaChannels readonly                     If true, the alpha channels
                                             are saved.

  spotColors readonly                        If true, spot colors are
                                             saved.
  ------------------------------------------ ----------------------------
# Photoshop Rectangle #
Rectangle #

Description #

Describes a rectangle. This class is also a four-element collection.

Properties #

  --------------------------------------------- -------------------------
  bottom readonly                               The bottom coordinate.

  height readonly                               The height.

  left readonly                                 The left coordinate.

  length readonly                               The array length.

  right readonly                                The right coordinate.

  top readonly                                  The top coordinate.

  width readonly                                The width.

  x readonly                                    The left coordinate.

  y readonly                                    The top coordinate.
  --------------------------------------------- -------------------------
# Photoshop ReferenceFormType #
ReferenceFormType #

Description #

The type of action reference object.

Static Properties #

  ---------------------------------------------------------- -------------
  CLASSTYPE readonly                                         Class.

  ENUMERATED readonly                                        Enumerated.

  IDENTIFIER readonly                                        Identifier.

  INDEX readonly                                             Index.

  NAME readonly                                              Name.

  OFFSET readonly                                            Offset.

  PROPERTY readonly                                          Property.
  ---------------------------------------------------------- -------------
# Photoshop ResampleMethod #
ResampleMethod #

Description #

The method to use to resample the image.

Static Properties #

  --------------------- -------------------------------------------------
  AUTOMATIC readonly    

  BICUBIC readonly      Uses a weighted average to determine pixel color,
                        which usually yields better results than the
                        simple averageing method of downsampling.

  BICUBICAUTOMATIC      
  readonly              

  BICUBICSHARPER        A good method for reducing the size of an image
  readonly              based on Bicubic interpolation with enhanced
                        sharpening. Maintains the detail in a resampled
                        image.

  BICUBICSMOOTHER       A good method for enlarging images based on
  readonly              Bicubic interpolation but designed to produce
                        smoother results.

  BILINEAR readonly     Averages the pixels in a sample area and replaces
                        the entire area with the average pixel color at
                        the specified resolution. Same as average
                        downsampling.

  NEARESTNEIGHBOR       Chooses a pixel in the center of the sample area
  readonly              and replaces the entire area with that pixel
                        color. Same as subsampling.

  NONE readonly         Does not resample.

  PRESERVEDETAILS       
  readonly              
  --------------------- -------------------------------------------------
# Photoshop ResetTarget #
ResetTarget #

Description #

The type of object(s) to reset to default settings.

Static Properties #

  ----------------------------------------------------- -----------------
  ALLTOOLS readonly                                     Tools.

  ALLWARNINGS readonly                                  Warning dialogs.

  EVERYTHING readonly                                   All targets.
  ----------------------------------------------------- -----------------
# Photoshop RGBColor #
RGBColor #

Description #

The definition of an RGB color mode.

Properties #

  ----------------------------------- -----------------------------------
  blue readonly                       The blue color value. Range: 0.0 to
                                      255.0.

  green readonly                      The green color value. Range: 0.0
                                      to 255.0.

  hexValue readonly                   The hex representation of this
                                      color.

  red readonly                        The red color value. Range: 0.0 to
                                      255.0.
  ----------------------------------- -----------------------------------

Static Properties #

  ----------------------------------- -----------------------------------
  blue readonly                       The blue color value. Range: 0.0 to
                                      255.0.

  green readonly                      The green color value. Range: 0.0
                                      to 255.0.

  hexValue readonly                   The hex representation of this
                                      color.

  red readonly                        The red color value. Range: 0.0 to
                                      255.0.
  ----------------------------------- -----------------------------------
# Photoshop RippleSize #
RippleSize #

Description #

The size of undulations.

Static Properties #

  ---------------------------------------------------------- ------------
  LARGE readonly                                             Large.

  MEDIUM readonly                                            Medium.

  SMALL readonly                                             Small.
  ---------------------------------------------------------- ------------
# Photoshop SaveBehavior #
SaveBehavior #

Description #

The application’s behavior regarding image previews and file extensions
when a save method is called.

Static Properties #

  ------------------------------------ ----------------------------------
  ALWAYSSAVE readonly                  Always save the item with the
                                       file.

  ASKWHENSAVING readonly               Prompt the user whether to save
                                       the item with the file.

  NEVERSAVE readonly                   Never save the item with the file.
  ------------------------------------ ----------------------------------
# Photoshop SaveDocumentType #
SaveDocumentType #

Description #

Document formats that Photoshop can save to.

Static Properties #

  ---------------------------------------------- ------------------------
  ALIASPIX readonly                              Alias PIX format.

  BMP readonly                                   BMP format.

  COMPUSERVEGIF readonly                         CompuServe GIF format.

  ELECTRICIMAGE readonly                         Electric format.

  JPEG readonly                                  JPEG format.

  PCX readonly                                   PCX format.

  PHOTOSHOP readonly                             Photoshop format.

  PHOTOSHOPDCS_1 readonly                        Photoshop DCS 1.0
                                                 format.

  PHOTOSHOPDCS_2 readonly                        Photoshop DCS 2.0
                                                 format.

  PHOTOSHOPEPS readonly                          EPS document produced by
                                                 Photoshop.

  PHOTOSHOPPDF readonly                          PDF document produced by
                                                 Photoshop.

  PICTFileFORMAT readonly                        PICT file format.

  PICTRESOURCEFORMAT readonly                    PICT resource format.

  PIXAR readonly                                 Pixar format.

  PNG readonly                                   PNG format.

  PORTABLEBITMAP readonly                        Portable Bitmap format.

  RAW readonly                                   Raw format.

  SCITEXCT readonly                              Scitex CT format.

  SGIRGB readonly                                SGI RGB format.

  SOFTIMAGE readonly                             SoftImage format.

  TARGA readonly                                 Targa format.

  TIFF readonly                                  TIFF format.

  WAVEFRONTRLA readonly                          Wavefront RLA format.

  WIRELESSBITMAP readonly                        Wireless Bitmap format
                                                 (WBMP)
  ---------------------------------------------- ------------------------
# Photoshop SaveEncoding #
SaveEncoding #

Description #

The encoding to use when saving documents.

Static Properties #

  ---------------------------------- ------------------------------------
  ASCII readonly                     ASCII.

  BINARY readonly                    Binary.

  JPEGHIGH readonly                  High quality JPEG encoding.

  JPEGLOW readonly                   Low quality JPEG encoding (high
                                     amount of compression).

  JPEGMAXIMUM readonly               Maximum quality JPEG encoding (very
                                     little compression).

  JPEGMEDIUM readonly                Medium quality JPEG encoding (medium
                                     compression).
  ---------------------------------- ------------------------------------
# Photoshop SaveLogItemsType #
SaveLogItemsType #

Description #

The location of history log data.

Static Properties #

  ----------------------------------------- -----------------------------
  LOGFILE readonly                          Save history log in a text
                                            file.

  LOGFILEANDMETADATA readonly               Save history log in file
                                            metadata and a text file.

  METADATA readonly                         Save history log in file
                                            metadata.
  ----------------------------------------- -----------------------------
# Photoshop SaveOptions #
SaveOptions #

Description #

Options for saving a file.

Static Properties #

  ------------------------------------------------ ----------------------
  DONOTSAVECHANGES readonly                        Do not save changes.

  PROMPTTOSAVECHANGES readonly                     Ask the user whether
                                                   to save.

  SAVECHANGES readonly                             Save changes.
  ------------------------------------------------ ----------------------
# Photoshop SaveOptionsType #
SaveOptionsType #

Description #

The save options for closing a file.

Static Properties #

  ------------------------------------------------- ---------------------
  DONOTSAVECHANGES readonly                         Do not save changes.

  PROMPTTOSAVECHANGES readonly                      Ask the user whether
                                                    to save.

  SAVECHANGES readonly                              Save changes.
  ------------------------------------------------- ---------------------
# Photoshop Selection #
Selection #

Description #

The selected area of the document or layer.

Properties #

  --------------------------------- -------------------------------------
  bounds readonly                   The bounding rectangle of the entire
                                    selection.

  parent readonly                   The object’s container.

  solid readonly                    If true, the bounding rectangle a
                                    solid rectangle.

  typename readonly                 The class name of the object.
  --------------------------------- -------------------------------------

Methods #

  ----------------------- -----------------------------------------------
  clear readonly          Clears the selection and does not copy it to
                          the clipboard.

  contract readonly       Contracts the selection.

  copy readonly           Copies the selection to the clipboard.

  cut readonly            Cuts the current selection to the clipboard.

  deselect readonly       Deselects the current selection.

  expand readonly         Expands the selection.

  feather readonly        Feathers the edges of the selection.

  fill readonly           Fills the selection.

  grow readonly           Grows the selection to include all adjacent
                          pixels falling within the specified tolerance
                          range.

  invert readonly         Inverts the selection.

  load readonly           Loads the selection from the specified channel.

  makeWorkPath readonly   Makes this selection item the workpath for this
                          document.

  resize readonly         Resizes the selected area to the specified
                          dimensions and anchor position.

  resizeBoundary readonly Scales the boundary of the selection.

  rotate readonly         Rotates the object.

  rotateBoundary readonly Rotates the boundary of the selection.

  select readonly         Selects the specified region.

  selectAll readonly      Selects the entire layer.

  selectBorder readonly   Selects the selection border only (in the
                          specified width); subsequent actions do not
                          affect the selected area within the borders.

  similar readonly        Grows the selection to include pixels
                          throughout the image falling within the
                          tolerance range.

  smooth readonly         Cleans up stray pixels left inside or outside a
                          color-based selection (within the radius
                          specified in pixels).

  store readonly          Saves the selection as a channel.

  stroke readonly         Strokes the selection.

  translate readonly      Moves the object relative to its current
                          position.

  translateBoundary       Moves the boundary of selection relative to its
  readonly                current position.
  ----------------------- -----------------------------------------------
# Photoshop SelectionType #
SelectionType #

Description #

The selection behavior when a selection already exists.

Static Properties #

  ------------------------ ----------------------------------------------
  DIMINISH readonly        Remove the selection from the already selected
                           area.

  EXTEND readonly          Add the selection to an already selected area.

  INTERSECT readonly       Make the selection only the area where the new
                           selection intersects the already selected
                           area.

  REPLACE readonly         Replace the selected area.
  ------------------------ ----------------------------------------------
# Photoshop SGIRGBSaveOptions #
SGIRGBSaveOptions #

Description #

Options for saving a document in SGI RGB format.

Static Properties #

  -------------------------------------------- --------------------------
  alphaChannels readonly                       If true, the alpha
                                               channels are saved.

  spotColors readonly                          If true, the spot colors
                                               are saved.
  -------------------------------------------- --------------------------
# Photoshop ShapeOperation #
ShapeOperation #

Description #

Specifies how to combine the shapes if the destination image already has
a selection.

Static Properties #

  -------------------------------- --------------------------------------
  SHAPEADD readonly                Adds the shapes.

  SHAPEINTERSECT readonly          The resulting shape is the area of
                                   intersection between the two shapes.

  SHAPESUBTRACT readonly           Subtracts the loaded shape from the
                                   selection is the destination image.

  SHAPEXOR readonly                Replaces the shape in the destination
                                   image with the loaded selection.
  -------------------------------- --------------------------------------
# Photoshop SmartBlurMode #
SmartBlurMode #

Description #

The method to use for smart blurring.

Static Properties #

  ------------------------------------ ----------------------------------
  EDGEONLY readonly                    Blur is applied only to edges of
                                       color transitions.

  NORMAL readonly                      Blur is applied to entire image.

  OVERLAYEDGE readonly                 Blur is applied only to edges of
                                       color transitions.
  ------------------------------------ ----------------------------------
# Photoshop SmartBlurQuality #
SmartBlurQuality #

Description #

The smart blur quality.

Static Properties #

  ---------------------------------------------------- ------------------
  HIGH readonly                                        High quality.

  LOW readonly                                         Low quality.

  MEDIUM readonly                                      Medium quality.
  ---------------------------------------------------- ------------------
# Photoshop SolidColor #
SolidColor #

Description #

A color definition used in the document.

Properties #

  ----------------------------------------- -----------------------------
  cmyk readonly                             The CMYK color model.

  gray readonly                             The grayscale color model.

  hsb readonly                              The HSB color model.

  lab readonly                              The lab color model.

  model readonly                            The color model.

  nearestWebColor readonly                  The nearest web color to the
                                            current color.

  rgb readonly                              The RGB color model.
  ----------------------------------------- -----------------------------

Static Properties #

  ----------------------------------------- -----------------------------
  cmyk readonly                             The CMYK color model.

  gray readonly                             The grayscale color model.

  hsb readonly                              The HSB color model.

  lab readonly                              The lab color model.

  model readonly                            The color model.

  nearestWebColor readonly                  The nearest web color to the
                                            current color.

  rgb readonly                              The RGB color model.
  ----------------------------------------- -----------------------------

Methods #

  ----------------------------------------------- -----------------------
  isEqual readonly                                Compares two colors.

  ----------------------------------------------- -----------------------
# Photoshop SourceSpaceType #
SourceSpaceType #

Description #

The color space for the source when printing.

Static Properties #

  ---------------------------------------------- ------------------------
  DOCUMENT readonly                              The document color
                                                 space.

  PROOF readonly                                 The proof color space.
  ---------------------------------------------- ------------------------
# Photoshop SpherizeMode #
SpherizeMode #

Description #

The curve (or stretch shape) to use for the distortion.

Static Properties #

  ------------------------------ ----------------------------------------
  HORIZONTAL readonly            Distorts the image as if it is wrapped
                                 around a horizontal cylinder.

  NORMAL readonly                Distorts the image as if it is wrapped
                                 around a sphere.

  VERTICAL readonly              Distorts the image as if it is wrapped
                                 around a vertical cylinder.
  ------------------------------ ----------------------------------------
# Photoshop StrikeThruType #
StrikeThruType #

Description #

The strikethrough style.

Static Properties #

  ------------------------------- ---------------------------------------
  STRIKEBOX readonly              (For vertical type) The strikethrough
                                  is through the em box.

  STRIKEHEIGHT readonly           (For vertical type) The strikethrough
                                  is through the height of the text.

  STRIKEOFF readonly              No strikethrough.
  ------------------------------- ---------------------------------------
# Photoshop StrokeLocation #
StrokeLocation #

Description #

The placement of path or selection boundary strokes.

Static Properties #

  --------------------------- -------------------------------------------
  CENTER readonly             The border is placed in the center of the
                              the selection or layer boundaries.

  INSIDE readonly             The border is placed inside the selection
                              or layer boundaries.

  OUTSIDE readonly            The border is placed outside the selection
                              or layer boundaries.
  --------------------------- -------------------------------------------
# Photoshop SubPathInfo #
SubPathInfo #

Description #

An array of path point info objects that describes a straight or curved
segment of a path.

Static Properties #

  ---------------------------------------- ------------------------------
  closed readonly                          If true, the path is closed.

  entireSubPath readonly                   All of the sub path item’s
                                           path points.

  operation readonly                       The sub path operation on
                                           other sub paths.
  ---------------------------------------- ------------------------------
# Photoshop SubPathItem #
SubPathItem #

Description #

Information about a path. You do not use the sub path item object to
create a path. Rather, you create path segments using the sub path info
object. Use the sub path item object to retrieve information about a
path. All properties are read-only.

Properties #

  -------------------------------------- --------------------------------
  closed readonly                        If true, the path is closed.

  operation readonly                     The sub path operation on other
                                         sub paths.

  parent readonly                        The object’s container.

  pathPoints readonly                    The path points collection in
                                         the sub path.

  typename readonly                      The class name of the object.
  -------------------------------------- --------------------------------
# Photoshop SubPathItems #
SubPathItems #

Description #

An array of path point info objects that describes a straight or curved
segment of a path. You do not use the sub path item object to create a
sub path. Rather, you use the sub path item object to retrieve
information about a sub path. To create sub paths, see sub path info.

Properties #

  --------------------------------------- -------------------------------
  length readonly                         Number of elements in the
                                          collection.

  parent readonly                         The object’s container.

  typename readonly                       The class name of the object.
  --------------------------------------- -------------------------------

Methods #

  ------------------------------- ---------------------------------------
  [] readonly                     Get an element in the collection with
                                  the provided index.

  getByName readonly              Get the first element in the collection
                                  with the provided name.
  ------------------------------- ---------------------------------------
# Photoshop TargaBitsPerPixels #
TargaBitsPerPixels #

Description #

The resolution to use when saving an image in Targa format.

Static Properties #

  ----------------------------------------------------- -----------------
  SIXTEEN readonly                                      16 bits per
                                                        pixel.

  THIRTYTWO readonly                                    32 bits per
                                                        pixel.

  TWENTYFOUR readonly                                   24 bits per
                                                        pixel.
  ----------------------------------------------------- -----------------
# Photoshop TargaSaveOptions #
TargaSaveOptions #

Description #

Options for saving a document in TGA (Targa) format.

Static Properties #

  -------------------------------------------- --------------------------
  alphaChannels readonly                       If true, the alpha
                                               channels are saved.

  resolution readonly                          The number of bits per
                                               pixel.

  rleCompression readonly                      If true, RLE compression
                                               is used.
  -------------------------------------------- --------------------------
# Photoshop TextComposer #
TextComposer #

Description #

The text composer.

Static Properties #

  ----------------- ------------------------------------------------------
  ADOBEEVERYLINE    Considers a network of break points for a range of
  readonly          lines and thus optimizes earlier lines in the
                    paragraph to eliminate especially unattractive breaks
                    later on. Results in more even spacing and fewer
                    hyphens.

  ADOBESINGLELINE   Offers a traditional approach to composing type one
  readonly          line at a time. Useful if you prefer to have manual
                    control over how lines break.
  ----------------- ------------------------------------------------------
# Photoshop TextFont #
TextFont #

Description #

An installed font.

Properties #

  -------------------------------------------- --------------------------
  family readonly                              The font family.

  name readonly                                The font name.

  parent readonly                              The object’s container.

  postScriptName readonly                      The PostScript name of the
                                               font.

  style readonly                               The font style.

  typename readonly                            The class name of the
                                               object.
  -------------------------------------------- --------------------------
# Photoshop TextFonts #
TextFonts #

Description #

A collection of fonts available on your computer.

Properties #

  -------------------------------------- --------------------------------
  length readonly                        Number of elements in the
                                         collection.

  parent readonly                        The object’s container.

  typename readonly                      The class name of the object.
  -------------------------------------- --------------------------------

Methods #

  ----------------------------- -----------------------------------------
  [] readonly                   Get an element in the collection with the
                                provided index.

  getByName readonly            Get the first element in the collection
                                with the provided name.
  ----------------------------- -----------------------------------------
# Photoshop TextItem #
TextItem #

Description #

The text object contained in an art layer.

Properties #

  -------------------------- ----------------------------------------------------
  alternateLigatures         If true, alternate ligatures are used.
  readonly                   

  antiAliasMethod readonly   The method of anti-aliasing to use.

  autoKerning readonly       Options for auto kerning.

  autoLeadingAmount readonly The percentage to use for auto leading. Range: 0.01
                             to 5000.00.

  baselineShift readonly     The amount of baseline offset of text.

  capitalization readonly    The case of the text.

  color readonly             The text color.

  contents readonly          The actual text in the layer.

  desiredGlyphScaling        The desired amount (as a percentage) to scale the
  readonly                   horizontal size of the text letters. Range: 50 -
                             200; at 100, the width of characters is not scaled.
                             Valid only for justified text.

  desiredLetterScaling       The amount of space (as a percentage) between
  readonly                   letters. Range: 100 - 500; at 0, no space is added
                             between letters. Valid only for justified text.

  desiredWordScaling         The amount (as a percentage) of space between words.
  readonly                   Range: 0 -1000; at 100, no additional space is added
                             between words. Valid only for justified text.

  direction readonly         The text orientation.

  fauxBold readonly          If true, faux bold is used.

  fauxItalic readonly        If true, faux italic is used.

  firstLineIndent readonly   The amount to indent the first line of paragraphs.
                             Range: -1296 to 1296.

  font readonly              The text face of the character.

  hangingPuntuation readonly If true, uses Roman hanging punctuation.

  height readonly            The height of the bounding box for paragraph text.

  horizontalScale readonly   Character scaling (horizontal) in proportion to
                             horizontal scale. Range: 0 - 1000 as a percentage.

  hyphenLimit readonly       The maximum number of consecutive lines that can end
                             with a hyphenated word.

  hyphenateAfterFirst        The number of letters after which hyphenation in
  readonly                   word wrap is allowed. Range: 1 to 15.

  hyphenateBeforeLast        The number of letters before which hyphenation in
  readonly                   word wrap is allowed. Range: 1 to 15.

  hyphenateCapitalWords      If true, capitalized words can be hyphenated.
  readonly                   

  hyphenateWordsLongerThan   The minimum number of letters a word must have in
  readonly                   order for hyphenation in word wrap to be allowed.
                             Range: 2 to 25.

  hyphenation readonly       If true, hyphenation is used.

  hyphenationZone readonly   The distance at the end of a line that will cause a
                             word to break in unjustified type. Range: 0 - 720
                             picas.

  justification readonly     The paragraph justification.

  kind readonly              The type of text.

  language readonly          The language.

  leading readonly           The leading amount.

  leftIndent readonly        The amount to indent text from the left. Range:
                             -1296 to 1296.

  ligatures readonly         If true, ligatures are used.

  maximumGlyphScaling        The maximum amount (as a percentage) to scale the
  readonly                   horizontal size of the text letters. Range: 50 -
                             200; at 100, the width of characters is not scaled.
                             Valid only for justified text.

  maximumLetterScaling       The maximum amount (as a percentage) of space
  readonly                   between letters. Range: 100 - 500; at 0, no space is
                             added between letters. Valid only for justified
                             text.

  maximumWordScaling         The maximum amount (as a percentage) of space
  readonly                   between words (0 -1000; at 100, no additional space
                             is added between words). Valid only for justified
                             text.

  minimumGlyphScaling        The minimum amount (as a percentage) to scale the
  readonly                   horizontal size of the text letters. Range: 50 -
                             200; at 100, the width of characters is not scaled.
                             Valid only for justified text.

  minimumLetterScaling       The minimum amount of space (as a percentage)
  readonly                   between letters. Range: 100 to 500; at 0, no space
                             is added between letters. Valid only for justified
                             text.

  minimumWordScaling         The minimum amount (as a percentage) of space
  readonly                   between words. Range: 0 -1000; at 100, no additional
                             space is added between words. Valid only for
                             justified text.

  noBreak readonly           If true, words are not allowed to break at the end
                             of a line. When enacted on large amounts of
                             consecutive characters, can prevent word wrap and
                             thus may prevent some text from appearing on the
                             screen.

  oldStyle readonly          If true, old style is used.

  parent readonly            The object’s container.

  position readonly          The position of the origin for the text. The array
                             must contain two values. Setting this property is
                             basically equivalent to clicking the text tool at a
                             point in the document to create the point of origin
                             for text.

  rightIndent readonly       The amount to indent text from the right. Range:
                             -1296 to 1296.

  size readonly              The font size in points.

  spaceAfter readonly        The amount of space after each paragraph. Range:
                             -1296 to 1296.

  spaceBefore readonly       The amount of space before each paragraph. Range:
                             -1296 to 1296.

  strikeThru readonly        The strike through option to use.

  textComposer readonly      The text composing engine to use.

  tracking readonly          The amount of uniform spacing between multiple
                             characters. Range: -1000 to 10000.

  typename readonly          The class name of the object.

  underline readonly         Options for underlining the text.

  useAutoLeading readonly    If true, uses the font’s built-in leading
                             information.

  verticalScale readonly     Character scaling (vertical) in proportion to
                             horizontal scale. Range: 0 - 1000 as a percentage.

  warpBend readonly          The warp bend percentage. Range: -100 to 100.

  warpDirection readonly     The warp direction.

  warpHorizontalDistortion   The warp horizontal distortion percentage. Range:
  readonly                   -100 to 100.

  warpStyle readonly         The style of warp.

  warpVerticalDistortion     The warp vertical distortion percentage. Range: -100
  readonly                   to 100.

  width readonly             The width of the bounding box for paragraph text.
  -------------------------- ----------------------------------------------------

Methods #

  ------------------------ ----------------------------------------------
  convertToShape readonly  Converts the text object and its containing
                           layer to a fill layer with the text changed to
                           a clipping path.

  createPath readonly      Creates a clipping path from the outlines of
                           the actual text items (such as letters or
                           words).
  ------------------------ ----------------------------------------------
# Photoshop TextType #
TextType #

Description #

The type of text.

Static Properties #

  ----------------------------------------- -----------------------------
  PARAGRAPHTEXT readonly                    Text that wraps within a
                                            bounding box.

  POINTTEXT readonly                        Text that does not wrap.
  ----------------------------------------- -----------------------------
# Photoshop TextureType #
TextureType #

Description #

The type of texture or glass surface image to load for a texturizer or
glass filter.

Static Properties #

  ----------------------------- -----------------------------------------
  BLOCKS readonly               The image appears as if viewed through
                                glass blocks.

  CANVAS readonly               The image appears as if painted on
                                canvas.

  FILE readonly                 Texture from an existing document.

  FROSTED readonly              The image appears as if frosted.

  TINYLENS readonly             The image appears as if viewed through an
                                array of tiny lenses.
  ----------------------------- -----------------------------------------
# Photoshop TiffEncodingType #
TiffEncodingType #

Description #

The encoding to use when saving to TIFF format.

Static Properties #

  ---------------------- ------------------------------------------------
  JPEG readonly          JPEG compression, which is lossy and recommended
                         for continuous-tone images, such as photographs.

  NONE readonly          No compression.

  TIFFLZW readonly       LZW compression, which is lossless and most
                         useful for images with large areas of single
                         color.

  TIFFZIP readonly       Zip compression, which is lossless and most
                         effective for images that contain large areas of
                         single color.
  ---------------------- ------------------------------------------------
# Photoshop TiffSaveOptions #
TiffSaveOptions #

Description #

Options for saving a document in TIFF format.

Static Properties #

  --------------------- -------------------------------------------------
  alphaChannels         If true, the alpha channels are saved.
  readonly              

  annotations readonly  If true, the annotations are saved.

  byteOrder readonly    The order in which the bytes will be read.
                        Default: Mac OS when running in Mac OS, and IBM
                        PC when running in Windows.

  embedColorProfile     If true, the color profile is embedded in the
  readonly              document.

  imageCompression      The compression type.
  readonly              

  interleaveChannels    If true, the channels in the image are
  readonly              interleaved.

  jpegQuality readonly  The quality of the produced image, which is
                        inversely proportionate to the amount of JPEG
                        compression. Valid only for JPEG compressed TIFF
                        documents. Range: 0 to 12.

  layerCompression      The method of compression to use when saving
  readonly              layers (as opposed to saving composite data).
                        Valid only when ‘layers’ = true.

  layers readonly       If true, the layers are saved.

  saveImagePyramid      If true, preserves multi-resolution information.
  readonly              

  spotColors readonly   If true, spot colors are saved.

  transparency readonly If true, saves the transparency as an additional
                        alpha channel when the file is opened in another
                        application.
  --------------------- -------------------------------------------------
# Photoshop ToolType #
ToolType #

Description #

Tools for the stroke path command.

Static Properties #

  --------------------------------------------------- -------------------
  ARTHISTORYBRUSH readonly                            Art history brush.

  BACKGROUNDERASER readonly                           Background eraser.

  BLUR readonly                                       Blur.

  BRUSH readonly                                      Brush.

  BURN readonly                                       Burn.

  CLONESTAMP readonly                                 Clone stamp.

  COLORREPLACEMENTTOOL readonly                       Color replacement
                                                      tool.

  DODGE readonly                                      Dodge.

  ERASER readonly                                     Eraser.

  HEALINGBRUSH readonly                               Healing brush.

  HISTORYBRUSH readonly                               History brush.

  PATTERNSTAMP readonly                               Pattern stamp.

  PENCIL readonly                                     Pencil.

  SHARPEN readonly                                    Sharpen.

  SMUDGE readonly                                     Smudge.

  SPONGE readonly                                     Sponge.
  --------------------------------------------------- -------------------
# Photoshop TransitionType #
TransitionType #

Description #

PDF presentation transition types.

Static Properties #

  ----------------------------- -----------------------------------------
  BLINDSHORIZONTAL readonly     Images transition in horizontal stripes
                                like Venetian blinds.

  BLINDSVERTICAL readonly       Images transition in vertical stripes.

  BOXIN readonly                Images transition using a shrinking box
                                shape.

  BOXOUT readonly               Images transition using an expanding box
                                shape.

  DISSOLVE readonly             One image dissolves into the next.

  GLITTERDOWN readonly          Images dissolve top to bottom.

  GLITTERRIGHT readonly         Images dissolve left to right.

  GLITTERRIGHTDOWN readonly     Images dissolve top-left to bottom-right.

  NONE readonly                 Images change with no visible transition.

  RANDOM readonly               Images transition using random effects.

  SPLITHORIZONTALIN readonly    The new images roll in from the top and
                                bottom of the screen.

  SPLITHORIZONTALOUT readonly   The new image spreads from the middle of
                                the screen to the top and bottom of the
                                screen.

  SPLITVERTICALIN readonly      The new image rolls in from the left and
                                right edges of the screen.

  SPLITVERTICALOUT readonly     The new image rolls out from the middle
                                of the screen to the left and right edges
                                of the screen.

  WIPEDOWN readonly             The new image rolls in from the top of
                                the screen.

  WIPELEFT readonly             The new image rolls in from the right
                                side of the screen.

  WIPERIGHT readonly            The new image rolls in from the left side
                                of the screen.

  WIPEUP readonly               The new image rolls in from the bottom of
                                the screen.
  ----------------------------- -----------------------------------------
# Photoshop TrimType #
TrimType #

Description #

The type of pixels to trim around an image.

Static Properties #

  ---------------------- ------------------------------------------------
  BOTTOMRIGHT readonly   Removes from the image an area the color of the
                         lower right pixel.

  TOPLEFT readonly       Removes from the image an area the color of the
                         upper left pixel.

  TRANSPARENT readonly   Trims away transparency at the edges of the
                         image, leaving the smallest image containing
                         nontransparent pixels.
  ---------------------- ------------------------------------------------
# Photoshop TypeUnits #
TypeUnits #

Description #

The measurement unit for type.

Static Properties #

  ----------------------------------------------------- -----------------
  MM readonly                                           Millimeters.

  PIXELS readonly                                       Pixels.

  POINTS readonly                                       Points.
  ----------------------------------------------------- -----------------
# Photoshop UndefinedAreas #
UndefinedAreas #

Description #

The method to use to treat undistorted areas or areas left blank in an
image to which a filter in the Distort category has been applied.

Static Properties #

  ---------------------- ------------------------------------------------
  REPEATEDGEPIXELS       Extends the colors of pixels along the edge of
  readonly               the image in the direction specified. Banding
                         may result if the edge pixels are different
                         colors.

  WRAPAROUND readonly    Fills the undefined space with content from the
                         opposite edge of the image.
  ---------------------- ------------------------------------------------
# Photoshop UnderlineType #
UnderlineType #

Description #

The type of underline.

Static Properties #

  ---------------------------------- ------------------------------------
  UNDERLINELEFT readonly             (For vertical type) The underline is
                                     to the left of the text.

  UNDERLINEOFF readonly              No underline.

  UNDERLINERIGHT readonly            (For vertical type) The underline is
                                     to the right of the text.
  ---------------------------------- ------------------------------------
# Photoshop Units #
Units #

Description #

The measurement unit for ruler increments.

Static Properties #

  ---------------------------------------------------- ------------------
  CM readonly                                          Centimeters.

  INCHES readonly                                      Inches.

  MM readonly                                          Millimeters.

  PERCENT readonly                                     Percent.

  PICAS readonly                                       Picas.

  PIXELS readonly                                      Pixels.

  POINTS readonly                                      Points.
  ---------------------------------------------------- ------------------
# Photoshop Urgency #
Urgency #

Description #

The editorial urgency status of the artwork.

Static Properties #

  ------------------------------------------ ----------------------------
  FOUR readonly                              Level 4 (fourth highest)

  HIGH readonly                              Highest level of urgency.

  LOW readonly                               Low.

  NONE readonly                              No urgency.

  NORMAL readonly                            Medium urgency.

  SEVEN readonly                             Level 7 (second lowest)

  SIX readonly                               Level 6 (third lowest)

  THREE readonly                             Level 3 (third highest)

  TWO readonly                               Level 2 (second highest)
  ------------------------------------------ ----------------------------
# Photoshop WarpStyle #
WarpStyle #

Description #

The warp style for text.

Static Properties #

  ------------------------ ----------------------------------------------
  ARC readonly             The type is warped in the shape of an arc.

  ARCH readonly            Text is warped in the form of an arch.

  ARCLOWER readonly        Warp is heavier on the lower or left edge of
                           the text than on the upper or right edge.

  ARCUPPER readonly        Warp is heavier on the upper or right edge of
                           the text than on the lower or left edge.

  BULGE readonly           Text is warped outward on both the upper and
                           lower or right and left edges.

  FISH readonly            Text is warped in the shape of a fish.

  FISHEYE readonly         Text bulges in the middle and is squeezed on
                           the edges as if viewed through a fisheye lens.

  FLAG readonly            Text is warped in the shape of a waving flag.

  INFLATE readonly         Text is inflated.

  NONE readonly            No warp.

  RISE readonly            Text is warped in an undulating, rising
                           pattern.

  SHELLLOWER readonly      Text is warped downward or to the right in the
                           shape of a fan-like seashell.

  SHELLUPPER readonly      Text is warped upward or to the left in the
                           shape of a fan-like seashell.

  SQUEEZE readonly         Text is squeezed.

  TWIST readonly           Text is twisted.

  WAVE readonly            Text is warped in the shape of a wave.
  ------------------------ ----------------------------------------------
# Photoshop WaveType #
WaveType #

Description #

The type of wave.

Static Properties #

  -------------------------------------------------------- --------------
  SINE readonly                                            Rolling.

  SQUARE readonly                                          Square.

  TRIANGULAR readonly                                      Triangular.
  -------------------------------------------------------- --------------
# Photoshop WhiteBalanceType #
WhiteBalanceType #

Description #

The lighting conditions (affects color balance).

Static Properties #

  ------------------------------------- ---------------------------------
  ASSHOT readonly                       Use the settings of the camera as
                                        shot.

  AUTO readonly                         Automatically use the white
                                        balance settings.

  CLOUDY readonly                       Use the settings as shot on a
                                        cloudy day.

  CUSTOM readonly                       Use the custom settings for the
                                        shot parameters.

  DAYLIGHT readonly                     Use the settings as shot in
                                        daylight.

  FLASH readonly                        Use the settings as shot with a
                                        flash.

  FLUORESCENT readonly                  Use the settings as shot with
                                        fluorescent lighting.

  SHADE readonly                        Use the settings as shot in the
                                        shade.

  TUNGSTEN readonly                     Use the settings as shot with
                                        tungsten lighting.
  ------------------------------------- ---------------------------------
# Photoshop XMPMetadata #
XMPMetadata #

Description #

Camera raw image file settings stored in an XMP file in the same folder
as the raw file with the same base name and an XMP extension.

Properties #

  --------------------------------------- -------------------------------
  parent readonly                         The object’s container.

  rawData readonly                        The raw XML form of file
                                          information.

  typename readonly                       The class name of the object.
  --------------------------------------- -------------------------------
# Photoshop ZigZagType #
ZigZagType #

Description #

The method of zigzagging.

Static Properties #

  ------------------------------- ---------------------------------------
  AROUNDCENTER readonly           Pixels are rotated around the center of
                                  the selection.

  OUTFROMCENTER readonly          Pixels are displaced toward or away
                                  from the center of the selection.

  PONDRIPPLES readonly            Pixels are displaced to the upper left
                                  or lower right.
  ------------------------------- ---------------------------------------
# ScriptUI Bounds #
Bounds #

Description #

Defines the boundaries of a window within the screen?s coordinate space,
or of a UI element within the container?s coordinate space.

A Bounds object is created when you set an element?s bounds property.
You can set the property using a JavaScript object with properties named
left, top, right, bottom or x, y, width, height, or an array with 4
values in the order [x, y, wd, ht].

Properties #

  -------------------- --------------------------------------------------
  bottom readonly      The vertical coordinate, a pixel offset from the
                       origin of the element’s coordinate space.

  height readonly      The height in pixels.

  left readonly        The horizontal coordinate, a pixel offset from the
                       origin of the element’s coordinate space.

  length readonly      The array length.

  right readonly       The width in pixels.

  top readonly         The height in pixels.

  width readonly       The width in pixels.

  x readonly           The horizontal coordinate, a pixel offset from the
                       origin of the element’s coordinate space.

  y readonly           The vertical coordinate, a pixel offset from the
                       origin of the element’s coordinate space.
  -------------------- --------------------------------------------------
# ScriptUI Button #
Button #

Description #

A pushbutton element containing a mouse-sensitive text string.

Calls the?onClick()?callback if the control is clicked or if
its?notify()?method is called.

Properties #

  --------------------- -------------------------------------------------
  active readonly       True if this element is active.

  alignment readonly    The alignment style for this element. If defined,
                        this value overrides the alignChildren setting
                        for the parent container.

  bounds readonly       The boundaries of the element, in parent-relative
                        coordinates.

  characters readonly   A number of characters for which to reserve space
                        when calculating the preferred size of the
                        element.

  children readonly     An array of child elements.

  enabled readonly      True if this element is enabled.

  graphics readonly     The graphics object that can be used to customize
                        the element’s appearance, in response to
                        the?onDraw()?event.

  helpTip readonly      The help string that is displayed when the mouse
                        hovers over the element.

  indent readonly       The number of pixels to indent the element during
                        automatic layout.

  justify readonly      The text justification style.

  location readonly     The upper left corner of this element relative to
                        its parent.

  maximumSize readonly  The maximum height and width to which the element
                        can be resized.

  minimumSize readonly  The minimum height and width to which the element
                        can be resized.

  parent readonly       The parent element.

  preferredSize         The preferred size, used by layout managers to
  readonly              determine the best size for each element.

  properties readonly   An object that contains one or more creation
                        properties of the container (properties used only
                        when the element is created).

  shortcutKey readonly  The key sequence that invokes
                        the?onShortcutKey()?callback for this element (in
                        Windows only).

  size readonly         The current dimensions of this element.

  text readonly         The text to display, a localizable string.

  type readonly         The element type; “button”.

  visible readonly      True if this element is shown, false if it is
                        hidden.

  window readonly       The window that this element belongs to.

  windowBounds readonly The bounds of this element relative to the
                        top-level parent window.
  --------------------- -------------------------------------------------

Methods #

  ------------------------------ ----------------------------------------
  addEventListener readonly      Registers an event handler for a
                                 particular type of event occuring in
                                 this element.

  dispatchEvent readonly         Simulates the occurrence of an event in
                                 this target.

  hide readonly                  Hides this element.

  notify readonly                Sends a notification message, simulating
                                 the specified user interaction event.

  removeEventListener readonly   Unregisters an event handler for a
                                 particular type of event occuring in
                                 this element.

  show readonly                  Shows this element.
  ------------------------------ ----------------------------------------

Events #

  ---------------------- ------------------------------------------------
  onActivate readonly    An event-handler callback function, called when
                         the element acquires the keyboard focus.

  onClick readonly       An event-handler callback function, called when
                         the element has been clicked

  onDeactivate readonly  An event-handler callback function, called when
                         the element loses the keyboard focus.

  onDraw readonly        An event-handler callback function, called when
                         the window is about to be drawn.

  onShortcutKey readonly An event-handler callback function, called when
                         the element’s shortcutKey sequence is typed in
                         the active window.
  ---------------------- ------------------------------------------------
# ScriptUI Checkbox #
Checkbox #

Description #

A dual-state control showing a box that has a checkmark when
the?value?is true, and is empty when the?value?is false.

Calls the?onClick()?callback if the control is clicked or if
its?notify()?method is called.

Properties #

  ---------------------- ------------------------------------------------
  active readonly        True if this element is active.

  alignment readonly     The alignment style for this element. If
                         defined, this value overrides the alignChildren
                         setting for the parent container.

  bounds readonly        The boundaries of the element, in
                         parent-relative coordinates.

  characters readonly    A number of characters for which to reserve
                         space when calculating the preferred size of the
                         element.

  children readonly      An array of child elements.

  enabled readonly       True if this element is enabled.

  graphics readonly      The graphics object that can be used to
                         customize the element’s appearance, in response
                         to the?onDraw()?event.

  helpTip readonly       The help text that is displayed when the mouse
                         hovers over the element.

  indent readonly        The number of pixels to indent the element
                         during automatic layout.

  justify readonly       The default text justification style for child
                         text elements.

  location readonly      The upper left corner of this element relative
                         to its parent.

  maximumSize readonly   The maximum height and width to which the
                         element can be resized.

  minimumSize readonly   The minimum height and width to which the
                         element can be resized.

  parent readonly        The parent element.

  preferredSize readonly The preferred size, used by layout managers to
                         determine the best size for each element.

  properties readonly    An object that contains one or more creation
                         properties of the item (properties used only
                         when the element is created).

  shortcutKey readonly   The key sequence that invokes
                         the?onShortcutKey()?callback for this element
                         (in Windows only).

  size readonly          The current dimensions of this element.

  text readonly          The text to display, a localizable string.

  type readonly          The element type; “checkbox”.

  value readonly         The selection state of the control.

  visible readonly       True if this element is shown, false if it is
                         hidden.

  window readonly        The window that this element belongs to.

  windowBounds readonly  The bounds of this element relative to the
                         top-level parent window.
  ---------------------- ------------------------------------------------

Methods #

  ------------------------------- ---------------------------------------
  addEventListener readonly       Registers an event handler for a
                                  particular type of event occuring in
                                  this element.

  dispatchEvent readonly          Simulates the occurrence of an event in
                                  this target.

  hide readonly                   Hides this element.

  notify readonly                 Sends a notification message,
                                  simulating the specified user
                                  interaction event.

  removeEventListener readonly    Unregisters an event handler for a
                                  particular type of event occuring in
                                  this element.

  show readonly                   Shows this element.
  ------------------------------- ---------------------------------------

Events #

  ---------------------- ------------------------------------------------
  onActivate readonly    An event-handler callback function, called when
                         the element acquires the keyboard focus.

  onClick readonly       An event-handler callback function, called when
                         the element has been clicked.

  onDeactivate readonly  An event-handler callback function, called when
                         the element loses the keyboard focus.

  onDraw readonly        An event-handler callback function, called when
                         the window is about to be drawn.

  onShortcutKey readonly An event-handler callback function, called when
                         the element’s?shortcutKey?sequence is typed in
                         the active window.
  ---------------------- ------------------------------------------------
# ScriptUI Dimension #
Dimension #

Description #

Defines the size of a window or UI element. Contains a 2-element array.

Specifies the height and width of an element in pixels. A Dimension
object is created when you set an element?s size property. You can set
the property using a JavaScript object with named properties {width: wd,
height: ht}, or an array with 2 values in the order [wd, ht].

Properties #

  ---------------------------------------------- ------------------------
  height readonly                                The height in pixels.

  length readonly                                The array length.

  width readonly                                 The width in pixels.
  ---------------------------------------------- ------------------------
# ScriptUI DrawState #
DrawState #

Description #

Describes an input state at the time of the triggering
?ScriptUIGraphics.onDraw()?event.

Contains properties that report whether the current control has the
input focus, and the particular mouse button and keypress state. Passed
in as argument to?ScriptUIGraphics.onDraw().

Properties #

  ------------------------------------- ---------------------------------
  altKeyPressed readonly                True if the Alt key is being
                                        pressed (in Windows only).

  capsLockKeyPressed readonly           True if the Caps Lock key is
                                        being pressed.

  cmdKeyPressed readonly                True if the Command key is being
                                        pressed (in Mac OS only).

  ctrlKeyPressed readonly               True if the Ctrl key is being
                                        pressed.

  hasFocus readonly                     True if the element has the input
                                        focus.

  leftButtonPressed readonly            True if the left mouse button is
                                        being pressed.

  middleButtonPressed readonly          True if the middle mouse button
                                        is being pressed.

  mouseOver readonly                    True if the cursor is hovering
                                        over this element.

  numLockKeyPressed readonly            True if the Num Lock key is being
                                        pressed.

  optKeyPressed readonly                True if the Option key is being
                                        pressed (in Mac OS only).

  rightButtonPressed readonly           True if the right mouse button is
                                        being pressed.

  shiftKeyPressed readonly              True if the Shift key is being
                                        pressed.
  ------------------------------------- ---------------------------------
# ScriptUI DropDownList #
DropDownList #

Description #

Displays a single visible item. When you click the control, a list drops
down or pops up, and allows you to select one of the other items in the
list.

Drop-down lists can have nonselectable separator items for visually
separating groups of related items, as in a menu. You can specify the
items on creation of the list object, or afterward using the list
object?s?add()?method. You can remove items programmatically with the
list object?s remove() and removeAll() methods. Calls
the?onChange()?callback if the item selection is changed or if
its?notify()?method is called.

Properties #

  ---------------------- ------------------------------------------------
  active readonly        True if this element is active.

  alignment readonly     The alignment style for this element. If
                         defined, this value overrides the alignChildren
                         setting for the parent container.

  bounds readonly        The boundaries of the element, in
                         parent-relative coordinates.

  children readonly      An array of child elements.

  enabled readonly       True if this element is enabled.

  graphics readonly      The graphics object that can be used to
                         customize the element’s appearance, in response
                         to the?onDraw()?event.

  helpTip readonly       The help text that is displayed when the mouse
                         hovers over the element.

  indent readonly        The number of pixels to indent the element
                         during automatic layout.

  itemSize readonly      The width and height in pixels of each item in
                         the list.

  items readonly         The array of choice items displayed in the
                         drop-down or pop-up list.

  location readonly      The upper left corner of this element relative
                         to its parent.

  maximumSize readonly   The maximum height and width to which the
                         element can be resized.

  minimumSize readonly   The minimum height and width to which the
                         element can be resized.

  parent readonly        The parent element.

  preferredSize readonly The preferred size, used by layout managers to
                         determine the best size for each element.

  properties readonly    An object that contains one or more creation
                         properties of the container (properties used
                         only when the element is created).

  selection readonly     The currently selected list item.

  shortcutKey readonly   The key sequence that invokes
                         the?onShortcutKey()?callback for this element
                         (in Windows only).

  size readonly          The current dimensions of this element.

  type readonly          The element type; “dropdownlist”.

  visible readonly       True if this element is shown, false if it is
                         hidden.

  window readonly        The window that this element belongs to.

  windowBounds readonly  The bounds of this element relative to the
                         top-level parent window.
  ---------------------- ------------------------------------------------

Methods #

  ------------------------------- ---------------------------------------
  add readonly                    Adds an item or separator to the
                                  choices in this list.

  addEventListener readonly       Registers an event handler for a
                                  particular type of event occuring in
                                  this element.

  dispatchEvent readonly          Simulates the occurrence of an event in
                                  this target.

  find readonly                   Retrieves an item object from the list
                                  that has a given text label.

  hide readonly                   Hides this element.

  notify readonly                 Sends a notification message,
                                  simulating the specified user
                                  interaction event.

  remove readonly                 Removes a child item from the list.

  removeAll readonly              Removes all child items from the list.

  removeEventListener readonly    Unregisters an event handler for a
                                  particular type of event occuring in
                                  this element.

  show readonly                   Shows this element.
  ------------------------------- ---------------------------------------

Events #

  ------------------------ ----------------------------------------------
  onActivate readonly      An event-handler callback function, called
                           when the element acquires the keyboard focus.

  onChange readonly        An event-handler callback function, called
                           when the content of the element has been
                           changed

  onDeactivate readonly    An event-handler callback function, called
                           when the element loses the keyboard focus.

  onDraw readonly          An event-handler callback function, called
                           when the window is about to be drawn.

  onShortcutKey readonly   An event-handler callback function, called
                           when the element’s?shortcutKey?sequence is
                           typed in the active window.
  ------------------------ ----------------------------------------------
# ScriptUI EditText #
EditText #

Description #

An editable text field that the user can select and change.

Calls the?onChange()?callback if the text is changed and the user types
Enter or the control loses focus, or if its?notify()?method is called.
Calls the?onChanging()?callback when any change is made to the text.
The?textselection?property contains currently selected text.

Properties #

  --------------------- -------------------------------------------------
  active readonly       True if this element is active.

  alignment readonly    The alignment style for this element. If defined,
                        this value overrides the alignChildren setting
                        for the parent container.

  bounds readonly       The boundaries of the element, in parent-relative
                        coordinates.

  characters readonly   A number of characters for which to reserve space
                        when calculating the preferred size of the
                        element.

  children readonly     An array of child elements.

  enabled readonly      True if this element is enabled.

  graphics readonly     The graphics object that can be used to customize
                        the element’s appearance, in response to
                        the?onDraw()?event.

  helpTip readonly      The help text that is displayed when the mouse
                        hovers over the element.

  indent readonly       The number of pixels to indent the element during
                        automatic layout.

  justify readonly      The text justification style.

  location readonly     The upper left corner of this element relative to
                        its parent.

  maximumSize readonly  The maximum height and width to which the element
                        can be resized.

  minimumSize readonly  The minimum height and width to which the element
                        can be resized.

  parent readonly       The parent element.

  preferredSize         The preferred size, used by layout managers to
  readonly              determine the best size for each element.

  properties readonly   An object that contains one or more creation
                        properties of the container (properties used only
                        when the element is created).

  shortcutKey readonly  The key sequence that invokes
                        the?onShortcutKey()?callback for this element (in
                        Windows only).

  size readonly         The current dimensions of this element.

  text readonly         The current text displayed in the field, a
                        localizable string.

  textselection         The currently selected text, or the empty string
  readonly              if there is no text selected.

  type readonly         The element type; “edittext”.

  visible readonly      True if this element is shown, false if it is
                        hidden.

  window readonly       The window that this element belongs to.

  windowBounds readonly The bounds of this element relative to the
                        top-level parent window.
  --------------------- -------------------------------------------------

Methods #

  ------------------------------- ---------------------------------------
  addEventListener readonly       Registers an event handler for a
                                  particular type of event occuring in
                                  this element.

  dispatchEvent readonly          Simulates the occurrence of an event in
                                  this target.

  hide readonly                   Hides this element.

  notify readonly                 Sends a notification message,
                                  simulating the specified user
                                  interaction event.

  removeEventListener readonly    Unregisters an event handler for a
                                  particular type of event occuring in
                                  this element.

  show readonly                   Shows this element.
  ------------------------------- ---------------------------------------

Events #

  ---------------------- ------------------------------------------------
  onActivate readonly    An event-handler callback function, called when
                         the element acquires the keyboard focus.

  onChange readonly      An event-handler callback function, called when
                         the content of the element has been changed

  onChanging readonly    An event-handler callback function, called when
                         the content of the element is in the process of
                         changing

  onDeactivate readonly  An event-handler callback function, called when
                         the element loses the keyboard focus.

  onDraw readonly        An event-handler callback function, called when
                         the window is about to be drawn.

  onShortcutKey readonly An event-handler callback function, called when
                         the element’s?shortcutKey?sequence is typed in
                         the active window.
  ---------------------- ------------------------------------------------
# ScriptUI Environment #
Environment #

Description #

Defines attributes of the ScriptUI environment.

Access through the?ScriptUI.environment?property.

Properties #

  ------------------------------- ---------------------------------------
  keyboardState readonly          An object that reports the active state
                                  of the keyboard at any time.

  ------------------------------- ---------------------------------------
# ScriptUI Event #
Event #

Description #

Base class for UIEvent.

Encapsulates input event information for an event that propagates
through a container and control hierarchy. Implements W3C standard event
handling.

Properties #

  ------------------- ---------------------------------------------------
  bubbles readonly    True if the event is of a type that bubbles.

  cancelable readonly True if the default action associated with the
                      event can be canceled with preventDefault().

  captures readonly   True if this event can be captured.

  currentTarget       The event target object which is currently handling
  readonly            the event. During capturing and bubbling, this is
                      different from the property target.

  eventPhase readonly The current phase of event propagation; one of
                      none, target, capture, bubble.

  target readonly     The event target object for this event.

  timeStamp readonly  The date and time at which the event occurred.

  type readonly       The name of the event that this object represents.
  ------------------- ---------------------------------------------------

Static Properties #

  -------------------------------------------------------------------- --
  AT_TARGET readonly                                                   

  BUBBLING_PHASE readonly                                              

  CAPTURING_PHASE readonly                                             

  NOT_DISPATCHING readonly                                             
  -------------------------------------------------------------------- --

Methods #

  ------------------------------ ----------------------------------------
  preventDefault readonly        Prevents the default action associated
                                 with this event from being called.

  stopPropagation readonly       Stops the propagation of this event.
  ------------------------------ ----------------------------------------
# ScriptUI Events #
Events #

Description #

Provides access to objects used in the ScriptUI event system.

Access through the?ScriptUI.events?property.

Methods #

  ---------------------------------- ------------------------------------
  createEvent readonly               Creates an instance of the
                                     specified?Event?subclass.

  ---------------------------------- ------------------------------------
# ScriptUI FlashPlayer #
FlashPlayer #

Description #

A control that contains a Flash Player, which can load and play Flash
movies stored in SWF files.

The ScriptUI FlashPlayer element runs the Flash application within an
Adobe application. The Flash application runs ActionScript, a different
implementation of JavaScript from the ExtendScript version of JavaScript
that Adobe applications run. A control object of this type contains
functions that allow your script to load SWF files, control movie
playback, and communicate with the ActionScript environment.

Properties #

  ---------------------- ------------------------------------------------
  active readonly        True if this element is active.

  alignment readonly     The alignment style for this element. If
                         defined, this value overrides the alignChildren
                         setting for the parent container.

  bounds readonly        The boundaries of the element, in
                         parent-relative coordinates.

  enabled readonly       True if this element is enabled.

  helpTip readonly       The help text that is displayed when the mouse
                         hovers over the element.

  indent readonly        The number of pixels to indent the element
                         during automatic layout.

  location readonly      The upper left corner of this element relative
                         to its parent.

  maximumSize readonly   The maximum height and width to which the
                         element can be resized.

  minimumSize readonly   The minimum height and width to which the
                         element can be resized.

  parent readonly        The parent element.

  preferredSize readonly The preferred size, used by layout managers to
                         determine the best size for each element.

  properties readonly    An object that contains one or more creation
                         properties of the container (properties used
                         only when the element is created).

  size readonly          The current dimensions of this element.

  type readonly          The element type, “flashplayer”.

  visible readonly       True if this element is shown, false if it is
                         hidden.

  window readonly        The window that this element belongs to.

  windowBounds readonly  The bounds of this element relative to the
                         top-level parent window.
  ---------------------- ------------------------------------------------

Methods #

  ------------------------------- ---------------------------------------
  addEventListener readonly       Registers an event handler for a
                                  particular type of event occuring in
                                  this element.

  dispatchEvent readonly          Simulates the occurrence of an event in
                                  this target.

  hide readonly                   Hides this element.

  invokePlayerFunction readonly   Invokes an ActionScript function
                                  defined in the Flash application.

  loadMovie readonly              Loads a movie into the Flash Player,
                                  and begins playing it.

  notify readonly                 Sends a notification message,
                                  simulating the specified user
                                  interaction event.

  playMovie readonly              Restarts a movie that has been stopped.

  removeEventListener readonly    Unregisters an event handler for a
                                  particular type of event occuring in
                                  this element.

  show readonly                   Shows this element.

  stopMovie readonly              Halts playback of the current movie.
  ------------------------------- ---------------------------------------

Events #

  -------------------------- --------------------------------------------
  callback readonly          A function definition for a callback from
                             the Flash ActionScript environment.

  -------------------------- --------------------------------------------
# ScriptUI Group #
Group #

Description #

A container for other controls within a window.

A group can specify layout options for its child elements. Hiding a
group hides all its children. Making it visible makes visible those
children that are not individually hidden.

Properties #

  --------------------- -------------------------------------------------
  alignChildren         Tells the layout manager how unlike-sized
  readonly              children of this container should be aligned
                        within a column or row.

  alignment readonly    The alignment style for this element. If defined,
                        this value overrides the alignChildren setting
                        for the parent container.

  bounds readonly       The boundaries of the element, in parent-relative
                        coordinates.

  children readonly     An array of child elements.

  enabled readonly      True if this element is enabled.

  graphics readonly     The graphics object that can be used to customize
                        the element’s appearance, in response to
                        the?onDraw()?event.

  helpTip readonly      The help text that is displayed when the mouse
                        hovers over the element.

  indent readonly       The number of pixels to indent the element during
                        automatic layout.

  layout readonly       The layout manager for this container.

  location readonly     The upper left corner of this element relative to
                        its parent.

  margins readonly      The number of pixels between the edges of a
                        container and the outermost child elements.

  maximumSize readonly  The maximum height and width to which the element
                        can be resized.

  minimumSize readonly  The minimum height and width to which the element
                        can be resized.

  orientation readonly  The layout orientation of children in a
                        container.

  parent readonly       The parent element.

  preferredSize         The preferred size, used by layout managers to
  readonly              determine the best size for each element.

  properties readonly   An object that contains one or more creation
                        properties of the control (properties used only
                        when the element is created).

  size readonly         The current dimensions of this element.

  spacing readonly      The number of pixels separating one child element
                        from its adjacent sibling element.

  type readonly         The element type; “group”.

  visible readonly      True if this element is shown, false if it is
                        hidden.

  window readonly       The window that this element belongs to.

  windowBounds readonly The bounds of this element relative to the
                        top-level parent window.
  --------------------- -------------------------------------------------

Methods #

  ----------------------------- -----------------------------------------
  add readonly                  Adds a child element to this container.

  addEventListener readonly     Registers an event handler for a
                                particular type of event occuring in this
                                element.

  dispatchEvent readonly        Simulates the occurrence of an event in
                                this target.

  hide readonly                 Hides this element.

  remove readonly               Removes the specified child control from
                                this group’s?children?array.

  removeEventListener readonly  Unregisters an event handler for a
                                particular type of event occuring in this
                                element.

  show readonly                 Shows this element.
  ----------------------------- -----------------------------------------

Events #

  ---------------------- ------------------------------------------------
  onDraw readonly        An event-handler callback function, called when
                         the group is about to be drawn.

  ---------------------- ------------------------------------------------
# ScriptUI IconButton #
IconButton #

Description #

A mouse-sensitive pushbutton that displays an image instead of text.

Calls the?onClick()?callback if the control is clicked or if
its?notify()?method is called.

Properties #

  ---------------------- ------------------------------------------------
  active readonly        True if this element is active.

  alignment readonly     The alignment style for this element. If
                         defined, this value overrides the alignChildren
                         setting for the parent container.

  bounds readonly        The boundaries of the element, in
                         parent-relative coordinates.

  children readonly      An array of child elements.

  enabled readonly       True if this element is enabled.

  graphics readonly      The graphics object that can be used to
                         customize the element’s appearance, in response
                         to the?onDraw()?event.

  helpTip readonly       The help text that is displayed when the mouse
                         hovers over the element.

  image readonly         The image object that defines the image to be
                         drawn.

  indent readonly        The number of pixels to indent the element
                         during automatic layout.

  location readonly      The upper left corner of this element relative
                         to its parent.

  maximumSize readonly   The maximum height and width to which the
                         element can be resized.

  minimumSize readonly   The minimum height and width to which the
                         element can be resized.

  parent readonly        The parent element.

  preferredSize readonly The preferred size, used by layout managers to
                         determine the best size for each element.

  properties readonly    An object that contains one or more creation
                         properties of the container (properties used
                         only when the element is created).

  shortcutKey readonly   The key sequence that invokes
                         the?onShortcutKey()?callback for this element
                         (in Windows only).

  size readonly          The current dimensions of this element.

  type readonly          The element type; “iconbutton”.

  visible readonly       True if this element is shown, false if it is
                         hidden.

  window readonly        The window that this element belongs to.

  windowBounds readonly  The bounds of this element relative to the
                         top-level parent window.
  ---------------------- ------------------------------------------------

Methods #

  ------------------------------- ---------------------------------------
  addEventListener readonly       Registers an event handler for a
                                  particular type of event occuring in
                                  this element.

  dispatchEvent readonly          Simulates the occurrence of an event in
                                  this target.

  hide readonly                   Hides this element.

  notify readonly                 Sends a notification message,
                                  simulating the specified user
                                  interaction event.

  removeEventListener readonly    Unregisters an event handler for a
                                  particular type of event occuring in
                                  this element.

  show readonly                   Shows this element.
  ------------------------------- ---------------------------------------

Events #

  ----------------------- -----------------------------------------------
  onActivate readonly     An event-handler callback function, called when
                          the element acquires the keyboard focus.

  onClick readonly        An event-handler callback function, called when
                          the element has been clicked.

  onDeactivate readonly   An event-handler callback function, called when
                          the element loses the keyboard focus.

  onDraw readonly         An event-handler callback function, called when
                          the window is about to be drawn.

  onShortcutKey readonly  An event-handler callback function, called when
                          the element’s shortcutKey sequence is typed in
                          the active window.
  ----------------------- -----------------------------------------------
# ScriptUI Scriptui #
Scriptui #

Classes #

-   Bounds
-   Button
-   Checkbox
-   Dimension
-   DrawState
-   DropDownList
-   EditText
-   Environment
-   Event
-   Events
-   FlashPlayer
-   Group
-   IconButton
-   KeyboardState
-   LayoutManager
-   ListBox
-   ListItem
-   Panel
-   Point
-   Progressbar
-   RadioButton
-   ScriptUI
-   ScriptUIBrush
-   ScriptUIFont
-   ScriptUIGraphics
-   ScriptUIImage
-   ScriptUIPath
-   ScriptUIPen
-   Scrollbar
-   Slider
-   StaticText
-   TreeView
-   UIEvent
-   Window

Module Index #

-    Module Index
# ScriptUI KeyboardState #
KeyboardState #

Description #

Reports the active state of the keyboard.

Access through the?ScriptUI.environment.keyboardState?property. Query
the properties of this object at any time to determine the current key
that is down and any modifiers that are pressed.

Properties #

  ------------------------ ----------------------------------------------
  altKey readonly          True if the Alt or Option key is pressed.

  ctrlKey readonly         True if the Ctrl key is pressed.

  keyName readonly         A string containing the name of the currently
                           pressed key, such as “a”, or an empty string.

  metaKey readonly         True if the Cmd key (in Mac OS) or Windows key
                           (in Windows) is pressed.

  shiftKey readonly        True if the Shift key is pressed.
  ------------------------ ----------------------------------------------
# ScriptUI LayoutManager #
LayoutManager #

Description #

Controls the automatic layout behavior for a window or container.

The subclass AutoLayoutManager implements the default automatic layout
behavior.

Methods #

  ---------------------------- ------------------------------------------
  layout readonly              Invokes the automatic layout behavior for
                               the managed container.

  resize readonly              Performs a layout after a Window is
                               resized, based on the new size.
  ---------------------------- ------------------------------------------
# ScriptUI ListBox #
ListBox #

Description #

Displays a list of choices, represented by?ListItem?objects.

When you create the object, you specify whether it allows the user to
select only one or multiple items. If a list contains more items than
can be displayed in the available area, a scrollbar may appear that
allows the user to scroll through all the list items.You can specify the
items on creation of the list object, or afterward using the list
object?s?add()?method. You can remove items programmatically with the
list object?s?remove()?and?removeAll()?methods. You can create a list
box with multiple columns; in this case, each row is a selectable
choice, and each?ListItem?represents one row.

Properties #

  --------------------- -------------------------------------------------
  active readonly       True if this element is active.

  alignment readonly    The alignment style for this element. If defined,
                        this value overrides the alignChildren setting
                        for the parent container.

  bounds readonly       The boundaries of the element, in parent-relative
                        coordinates.

  children readonly     An array of child?ListItem?elements.

  columns readonly      For a multi-column list box, the column
                        properties.

  enabled readonly      True if this element is enabled.

  graphics readonly     The graphics object that can be used to customize
                        the element’s appearance, in response to
                        the?onDraw()?event.

  helpTip readonly      The help text that is displayed when the mouse
                        hovers over the element.

  indent readonly       The number of pixels to indent the element during
                        automatic layout.

  itemSize readonly     The width and height in pixels of each item in
                        the list.

  items readonly        The array of choice items displayed in the list.

  location readonly     The upper left corner of this element relative to
                        its parent.

  maximumSize readonly  The maximum height and width to which the element
                        can be resized.

  minimumSize readonly  The minimum height and width to which the element
                        can be resized.

  parent readonly       The parent element.

  preferredSize         The preferred size, used by layout managers to
  readonly              determine the best size for each element.

  properties readonly   An object that contains one or more creation
                        properties of the control (properties used only
                        when the element is created).

  selection readonly    The currently selected item for a
                        single-selection list, or an array of items for
                        current selection in a multi-selection list.

  shortcutKey readonly  The key sequence that invokes
                        the?onShortcutKey()?callback for this element (in
                        Windows only).

  size readonly         The current dimensions of this element.

  type readonly         The element type; “listbox”.

  visible readonly      True if this element is shown, false if it is
                        hidden.

  window readonly       The window that this element belongs to.

  windowBounds readonly The bounds of this element relative to the
                        top-level parent window.
  --------------------- -------------------------------------------------

Methods #

  ------------------------------ ----------------------------------------
  add readonly                   Adds an item to the choices in this
                                 list.

  addEventListener readonly      Registers an event handler for a
                                 particular type of event occuring in
                                 this element.

  dispatchEvent readonly         Simulates the occurrence of an event in
                                 this target.

  find readonly                  Retrieves an item object from the list
                                 that has a given text label.

  hide readonly                  Hides this element.

  notify readonly                Sends a notification message, simulating
                                 the specified user interaction event.

  remove readonly                Removes a child item from the list.

  removeAll readonly             Removes all child items from the list.

  removeEventListener readonly   Unregisters an event handler for a
                                 particular type of event occuring in
                                 this element.

  show readonly                  Shows this element.
  ------------------------------ ----------------------------------------

Events #

  ---------------------- ------------------------------------------------
  onActivate readonly    An event-handler callback function, called when
                         the element acquires the keyboard focus.

  onChange readonly      An event-handler callback function, called when
                         the content of the element has been changed

  onDeactivate readonly  An event-handler callback function, called when
                         the element loses the keyboard focus.

  onDoubleClick readonly An event-handler callback function, called when
                         an item in the listbox is double-clicked

  onDraw readonly        An event-handler callback function, called when
                         the window is about to be drawn.

  onShortcutKey readonly An event-handler callback function, called when
                         the element’s?shortcutKey?sequence is typed in
                         the active window.
  ---------------------- ------------------------------------------------
# ScriptUI ListItem #
ListItem #

Description #

An item in a list box, drop-down list, or tree view.

You can specify initial items in the creation parameters when creating
the parent list. Create new items using the add() method (ListBox.add(),
DropDownList.add(), TreeView.add()) in the parent list with control
type=”item”, or, for?DropDownList?controls, type=”separator”.For a
multi-column list box, the object represents one selectable row.
Its?text?and?image?values specify the label in the first column, and
the?subitems?property specifies the labels in the additional columns.

Properties #

  -------------------- --------------------------------------------------
  checked readonly     The checked state of an item in a list.

  expanded readonly    The expansion state of an item of type node that
                       is a child of a?TreeView?list control.

  image readonly       An image object for an icon to display in the
                       item.

  index readonly       The 0-based index of this item in the items
                       collection of its parent list control.

  parent readonly      The parent element, a list control.

  properties readonly  An object that contains one or more creation
                       properties of the item (properties used only when
                       the element is created).

  selected readonly    The selection state of this item.

  subItems readonly    When the parent is a multi-column?ListBox, this
                       describes the labels for this selectable row in
                       additional columns.

  text readonly        The label text to display for the item, a
                       localizable string.

  type readonly        The element type.
  -------------------- --------------------------------------------------
# ScriptUI Panel #
Panel #

Description #

A container for other types of controls, with an optional frame.

A panel can specify layout options for its child elements. Hiding a
panel hides all its children. Making it visible makes visible those
children that are not individually hidden.

Properties #

  --------------------- -------------------------------------------------
  alignChildren         Specifies how to align the child elements.
  readonly              

  alignment readonly    The alignment style for this element. If defined,
                        this value overrides the alignChildren setting
                        for the parent container.

  bounds readonly       The boundaries of the element, in parent-relative
                        coordinates.

  characters readonly   Reserve space for the specified number of
                        characters; affects calculation
                        of?preferredSize?.

  children readonly     An array of child elements.

  enabled readonly      True if this element is enabled.

  graphics readonly     The graphics object that can be used to customize
                        the element’s appearance, in response to
                        the?onDraw()?event.

  helpTip readonly      The help text that is displayed when the mouse
                        hovers over the element.

  indent readonly       The number of pixels to indent the element during
                        automatic layout.

  justify readonly      The default text justification style for child
                        text elements.

  layout readonly       The layout manager for this container.

  location readonly     The upper left corner of this element’s frame
                        relative to its parent.

  margins readonly      The number of pixels between the edges of a
                        container and the outermost child elements.

  maximumSize readonly  The maximum height and width to which the element
                        can be resized.

  minimumSize readonly  The minimum height and width to which the element
                        can be resized.

  orientation readonly  The layout orientation of children in a
                        container.

  parent readonly       The parent element.

  preferredSize         The preferred size, used by layout managers to
  readonly              determine the best size for each element.

  properties readonly   An object that contains one or more creation
                        properties of the control (properties used only
                        when the element is created).

  size readonly         The current dimensions of this element.

  spacing readonly      The number of pixels separating one child element
                        from its adjacent sibling element.

  text readonly         The title or label text, a localizable string.

  type readonly         The element type; “panel”.

  visible readonly      True if this element is shown, false if it is
                        hidden.

  window readonly       The window that this element belongs to.

  windowBounds readonly The bounds of this element relative to the
                        top-level parent window.
  --------------------- -------------------------------------------------

Methods #

  ----------------------------- -----------------------------------------
  add readonly                  Adds a child element to this container.

  addEventListener readonly     Registers an event handler for a
                                particular type of event occuring in this
                                element.

  dispatchEvent readonly        Simulates the occurrence of an event in
                                this target.

  hide readonly                 Hides this element.

  remove readonly               Removes the specified child control from
                                this group’s?children?array.

  removeEventListener readonly  Unregisters an event handler for a
                                particular type of event occuring in this
                                element.

  show readonly                 Shows this element.
  ----------------------------- -----------------------------------------

Events #

  ---------------------- ------------------------------------------------
  onDraw readonly        An event-handler callback function, called when
                         the panel is about to be drawn.

  ---------------------- ------------------------------------------------
# ScriptUI Point #
Point #

Description #

Defines the location of a window or UI element. Contains a 2-element
array.

Specifies the origin point of an element as horizontal and vertical
pixel offsets from the origin of the element’s coordinate space. A Point
object is created when you set an element?s location property. You can
set the property using a JavaScript object with properties named x and
y, or an array with 2 values in the order [x, y].

Properties #

  -------------------- --------------------------------------------------
  left readonly        The left coordinate.

  length readonly      The array length.

  top readonly         The top coordinate.

  x readonly           The horizontal coordinate, a pixel offset from the
                       origin of the element’s coordinate space.

  y readonly           The vertical coordinate, a pixel offset from the
                       origin of the element’s coordinate space.
  -------------------- --------------------------------------------------
# ScriptUI Progressbar #
Progressbar #

Description #

A horizontal bar with an indicator that shows the progress of an
operation.

All progressbar controls have a horizontal orientation.
The?value?property contains the current position of the progress
indicator; the default is 0. There is a?minvalue?property, but it is
always 0; attempts to set it to a different value are silently ignored.

Properties #

  ---------------------- ------------------------------------------------
  alignment readonly     The alignment style for this element. If
                         defined, this value overrides the alignChildren
                         setting for the parent container.

  bounds readonly        The boundaries of the element, in
                         parent-relative coordinates.

  children readonly      An array of child elements.

  enabled readonly       True if this element is enabled.

  graphics readonly      The graphics object that can be used to
                         customize the element’s appearance, in response
                         to the?onDraw()?event.

  helpTip readonly       The help text that is displayed when the mouse
                         hovers over the element.

  indent readonly        The number of pixels to indent the element
                         during automatic layout.

  location readonly      The upper left corner of this element relative
                         to its parent.

  maximumSize readonly   The maximum height and width to which the
                         element can be resized.

  maxvalue readonly      The maximum value in the range. Default is 100.

  minimumSize readonly   The minimum height and width to which the
                         element can be resized.

  minvalue readonly      The minimum value in the range; always 0. If set
                         to a different value, it is ignored.

  parent readonly        The parent element.

  preferredSize readonly The preferred size, used by layout managers to
                         determine the best size for each element.

  properties readonly    An object that contains one or more creation
                         properties of the container (properties used
                         only when the element is created).

  size readonly          The current dimensions of this element.

  type readonly          The element type, “progessbar”.

  value readonly         The current position of the indicator.

  visible readonly       True if this element is shown, false if it is
                         hidden.

  window readonly        The window that this element belongs to.

  windowBounds readonly  The bounds of this element relative to the
                         top-level parent window.
  ---------------------- ------------------------------------------------

Methods #

  ------------------------------- ---------------------------------------
  addEventListener readonly       Registers an event handler for a
                                  particular type of event occuring in
                                  this element.

  dispatchEvent readonly          Simulates the occurrence of an event in
                                  this target.

  hide readonly                   Hides this element.

  removeEventListener readonly    Unregisters an event handler for a
                                  particular type of event occuring in
                                  this element.

  show readonly                   Shows this element.
  ------------------------------- ---------------------------------------

Events #

  ------------------------ ----------------------------------------------
  onDraw readonly          An event-handler callback function, called
                           when the window is about to be drawn.

  ------------------------ ----------------------------------------------
# ScriptUI RadioButton #
RadioButton #

Description #

A dual-state control, grouped with other radiobuttons, of which only one
can be in the selected state.

Shows the selected state when?value=true, empty when?value=false. Calls
the?onClick()?callback if the control is clicked or if
its?notify()?method is called.

Properties #

  ---------------------- ------------------------------------------------
  active readonly        True if this element is active.

  alignment readonly     The alignment style for this element. If
                         defined, this value overrides the alignChildren
                         setting for the parent container.

  bounds readonly        The boundaries of the element, in
                         parent-relative coordinates.

  characters readonly    A number of characters for which to reserve
                         space when calculating the preferred size of the
                         element.

  children readonly      An array of child elements.

  enabled readonly       True if this element is enabled.

  graphics readonly      The graphics object that can be used to
                         customize the element’s appearance, in response
                         to the?onDraw?event.

  helpTip readonly       The help text that is displayed when the mouse
                         hovers over the element.

  indent readonly        The number of pixels to indent the element
                         during automatic layout.

  justify readonly       The default text justification style for child
                         text elements.

  location readonly      The upper left corner of this element relative
                         to its parent.

  maximumSize readonly   The maximum height and width to which the
                         element can be resized.

  minimumSize readonly   The minimum height and width to which the
                         element can be resized.

  parent readonly        The parent element.

  preferredSize readonly The preferred size, used by layout managers to
                         determine the best size for each element.

  properties readonly    An object that contains one or more creation
                         properties of the container (properties used
                         only when the element is created).

  shortcutKey readonly   The key sequence that invokes
                         the?onShortcutKey()?callback for this element
                         (in Windows only).

  size readonly          The current dimensions of this element.

  text readonly          The label text for this button, a localizable
                         string.

  type readonly          The element type; “radiobutton”.

  value readonly         The selection state of this button, selected
                         when true.

  visible readonly       True if this element is shown, false if it is
                         hidden.

  window readonly        The window that this element belongs to.

  windowBounds readonly  The bounds of this element relative to the
                         top-level parent window.
  ---------------------- ------------------------------------------------

Methods #

  ------------------------------- ---------------------------------------
  addEventListener readonly       Registers an event handler for a
                                  particular type of event occuring in
                                  this element.

  dispatchEvent readonly          Simulates the occurrence of an event in
                                  this target.

  hide readonly                   Hides this element.

  notify readonly                 Sends a notification message,
                                  simulating the specified user
                                  interaction event.

  removeEventListener readonly    Unregisters an event handler for a
                                  particular type of event occuring in
                                  this element.

  show readonly                   Shows this element.
  ------------------------------- ---------------------------------------

Events #

  ------------------------ ----------------------------------------------
  onActivate readonly      An event-handler callback function, called
                           when the element acquires the keyboard focus.

  onClick readonly         An event-handler callback function, called
                           when the element has been clicked.

  onDeactivate readonly    An event-handler callback function, called
                           when the element loses the keyboard focus.

  onDraw readonly          An event-handler callback function, called
                           when the window is about to be drawn.

  onShortcutKey readonly   An event-handler callback function, called
                           when the element’s?shortcutKey?sequence is
                           typed in the active window.
  ------------------------ ----------------------------------------------
# ScriptUI ScriptUIBrush #
ScriptUIBrush #

Description #

A painting brush that encapsulates a color or pattern used to fill
paths.

Create with?ScriptUIGraphics.newBrush(). Use as a value of
?backgroundColor?properties, and pass as an argument to
the?fillPath()?method.

Properties #

  ---------------------------------------- ------------------------------
  color readonly                           The brush color.

  theme readonly                           The theme name.

  type readonly                            The brush type, solid or
                                           theme.
  ---------------------------------------- ------------------------------
# ScriptUI ScriptUIFont #
ScriptUIFont #

Description #

Encapsulates the qualities of a font used to draw text into a control.

Create with the?newFont()?method.Used as a value of?font. Passed as an
argument to?drawString()?and?measureString().

Properties #

  ------------------- ---------------------------------------------------
  family readonly     The font family name.

  name readonly       The complete font name, consisting of the family
                      and style, if specified.

  size readonly       The font point size.

  style readonly      The font style. One of the constants
                      in?ScriptUIGraphics.FontStyle.

  substitute readonly The name of a substitution font, a fallback font to
                      substitute for this font if the requested font
                      family or style is not available.
  ------------------- ---------------------------------------------------
# ScriptUI ScriptUIGraphics #
ScriptUIGraphics #

Description #

An object used to draw custom graphics, found in the graphics property
of window, container, and control objects.

Allows a script to customize aspects of the element?s appearance, such
as the color and font. Use an onDraw callback function to set these
properties or call the functions.All measurements are in pixels.

Properties #

  ----------------------------- -----------------------------------------
  backgroundColor readonly      The background color for containers; for
                                non-containers, the parent background
                                color.

  currentPath readonly          The current drawing path, encapsulated in
                                a path object.

  currentPoint readonly         The current position in the current
                                drawing path.

  disabledBackgroundColor       The background color for containers when
  readonly                      disabled or inactive; for non-containers,
                                the parent background color.

  disabledForegroundColor       The text color when the element is
  readonly                      disabled or inactive.

  font readonly                 The default font to use for displaying
                                text.

  foregroundColor readonly      The text color.
  ----------------------------- -----------------------------------------

Static Properties #

  ------------------------------ ----------------------------------------
  BrushType readonly             Contains the enumerated constants for
                                 the type argument of?newBrush().

  PenType readonly               Contains the enumerated constants for
                                 the type argument of?newPen().
  ------------------------------ ----------------------------------------

Methods #

  -------------------- --------------------------------------------------
  closePath readonly   Closes the current path.

  drawFocusRing        Draws a focus ring within a region of this
  readonly             element.

  drawImage readonly   Draws an image within a given region of the
                       element.

  drawOSControl        Draw the platform-specific control associated with
  readonly             this element.

  drawString readonly  Draw a string of text starting at a given point in
                       this element, using a given drawing pen and font.

  ellipsePath readonly Defines an elliptical path within a given
                       rectangular area in the?currentPath?object, which
                       can be filled using?fillPath()?or stroked
                       using?strokePath().

  fillPath readonly    Fills a path using a given painting brush.

  lineTo readonly      Adds a path segment to the?currentPath.

  measureString        Calculates the size needed to display a string
  readonly             using the given font.

  moveTo readonly      Adds a given point to the?currentPath, and makes
                       it the current drawing position.

  newBrush readonly    Creates a new painting brush object.

  newPath readonly     Creates a new, empty path object.

  newPen readonly      Creates a new drawing pen object.

  rectPath readonly    Defines a rectangular path in
                       the?currentPath?object.

  strokePath readonly  Strokes the path segments of a path with a given
                       drawing pen.
  -------------------- --------------------------------------------------
# ScriptUI ScriptUI #
ScriptUI #

Description #

A global class containing central information about ScriptUI. Not
instantiable.

Static Properties #

  ----------------------- -----------------------------------------------
  Alignment readonly      Collects the enumerated values that can be used
                          in the alignment and alignChildren properties
                          of controls and containers.

  FontStyle readonly      Collects the enumerated values that can be used
                          as the style argument to
                          the?ScriptUI.newFont()?method.

  applicationFonts        The font constants defined by the host
  readonly                application.

  compatibility readonly  An object whose properties are the names of
                          compatability modes supported by the host
                          application.

  coreVersion readonly    A string containing the internal version number
                          of the ScriptUI module.

  environment readonly    An object whose properties define attributes of
                          the environment in which ScriptUI operates.

  events readonly         An object whose properties and methods provide
                          access to objects used in the ScriptUI event
                          system.

  frameworkName readonly  A string containing the name of the UI
                          component framework with which this version of
                          ScriptUI is compatible.

  version readonly        A string containing the version number of the
                          ScriptUI component framework
  ----------------------- -----------------------------------------------

Static Methods #

  -------------------------- --------------------------------------------
  getResourceText readonly   Finds and returns the resource for a given
                             text string from the host application’s
                             resource data.

  newFont readonly           Creates a new font object for use in text
                             controls and titles.

  newImage readonly          Loads a new image from resources or disk
                             files into an image object.
  -------------------------- --------------------------------------------
# ScriptUI ScriptUIImage #
ScriptUIImage #

Description #

Encapsulates a set of images that can be drawn into a control.

Different images can reflect the current state, such as a dimmed version
for a disabled control. Create with the?newImage()?method. Passed as an
argument to?drawImage().

Properties #

  -------------------------- --------------------------------------------
  format readonly            The image format. One of: resource, JPEG,
                             GIF, TIFF, PNG, or PICT (Macintosh).

  name readonly              The image name. Either the file name, or the
                             resource name.

  pathname readonly          The full path to the file that contains the
                             image.

  size readonly              The image size in pixels.
  -------------------------- --------------------------------------------
# ScriptUI ScriptUIPath #
ScriptUIPath #

Description #

A helper object that encapsulates a drawing path for a figure to be
drawn into a window or control.

Create with the?newPath(),?moveto(),?lineto(),?rectPath(),
and?ellipsePath()?methods. Used as value of?currentPath, where it is
acted upon by methods such as?closePath(). Pass as optional argument
to?fillPath()?and?strokePath(), which otherwise act upon the current
path.
# ScriptUI ScriptUIPen #
ScriptUIPen #

Description #

A drawing pen that defines a color and line width used to stroke paths.

Create with?ScriptUIGraphics.newPen(). Use as a value of
?foregroundColor?properties, and pass as an argument
to?drawString()?and?strokePath()?methods.

Properties #

  ---------------------------------------- ------------------------------
  color readonly                           The pen color.

  lineWidth readonly                       The pixel width of the drawing
                                           line.

  theme readonly                           The theme name.

  type readonly                            The pen type, solid or theme.
  ---------------------------------------- ------------------------------
# ScriptUI Scrollbar #
Scrollbar #

Description #

A scrollbar with a draggable scroll indicator and stepper buttons to
move the indicator.

The scrollbar control has a horizontal orientation if the width is
greater than the height at creation time, or vertical if its height is
greater than its width. Calls the?onChange()?callback after the position
of the indicator is changed or if its?notify()?method is called. Calls
the?onChanging()?callback repeatedly while the user is moving the
indicator. Scrollbars are often created with an
associated?EditText?field to display the current value of the scrollbar,
and to allow setting the scrollbar’s position to a specific value.

Properties #

  --------------------- -------------------------------------------------
  active readonly       True if this element is active.

  alignment readonly    The alignment style for this element. If defined,
                        this value overrides the alignChildren setting
                        for the parent container.

  bounds readonly       The boundaries of the element, in parent-relative
                        coordinates.

  children readonly     An array of child elements.

  enabled readonly      True if this element is enabled.

  graphics readonly     The graphics object that can be used to customize
                        the element’s appearance, in response to
                        the?onDraw()?event.

  helpTip readonly      The help text that is displayed when the mouse
                        hovers over the element.

  indent readonly       The number of pixels to indent the element during
                        automatic layout.

  jumpdelta readonly    The amount to increment or decrement a scrollbar
                        indicator’s position when the user clicks ahead
                        or behind the moveable element.

  location readonly     The upper left corner of this element relative to
                        its parent.

  maximumSize readonly  The maximum height and width to which the element
                        can be resized.

  maxvalue readonly     The maximum value allowed in the value property.

  minimumSize readonly  The minimum height and width to which the element
                        can be resized.

  minvalue readonly     The minimum value allowed in the value property.

  parent readonly       The parent element.

  preferredSize         The preferred size, used by layout managers to
  readonly              determine the best size for each element.

  properties readonly   An object that contains one or more creation
                        properties of the container (properties used only
                        when the element is created).

  shortcutKey readonly  The key sequence that invokes the
                        ?onShortcutKey()?callback for this element (in
                        Windows only).

  size readonly         The current dimensions of this element.

  stepdelta readonly    The amount by which to increment or decrement a
                        scrollbar element’s position when the user clicks
                        a stepper button.

  type readonly         The element type, “scrollbar”.

  value readonly        The current position of the indicator.

  visible readonly      True if this element is shown, false if it is
                        hidden.

  window readonly       The window that this element belongs to.

  windowBounds readonly The bounds of this element relative to the
                        top-level parent window.
  --------------------- -------------------------------------------------

Methods #

  ------------------------------- ---------------------------------------
  addEventListener readonly       Registers an event handler for a
                                  particular type of event occuring in
                                  this element.

  dispatchEvent readonly          Simulates the occurrence of an event in
                                  this target.

  hide readonly                   Hides this element.

  notify readonly                 Sends a notification message,
                                  simulating the specified user
                                  interaction event.

  removeEventListener readonly    Unregisters an event handler for a
                                  particular type of event occuring in
                                  this element.

  show readonly                   Shows this element.
  ------------------------------- ---------------------------------------

Events #

  --------------------- -------------------------------------------------
  onActivate readonly   An event-handler callback function, called when
                        the element acquires the keyboard focus.

  onChange readonly     An event-handler callback function, called when
                        the user has finished dragging the position
                        indicator, or has clicked the control.

  onChanging readonly   An event-handler callback function, called when
                        the content of the element is in the process of
                        changing

  onDeactivate readonly An event-handler callback function, called when
                        the element loses the keyboard focus.

  onDraw readonly       An event-handler callback function, called when
                        the window is about to be drawn.

  onShortcutKey         An event-handler callback function, called when
  readonly              the element’s?shortcutKey?sequence is typed in
                        the active window.
  --------------------- -------------------------------------------------
# ScriptUI Slider #
Slider #

Description #

A slider bar that indicates a numeric value with a moveable position
indicator.

All slider controls have a horizontal orientation. Calls
the?onChange()?callback after the position of the indicator is changed
or if its?notify()?method is called. Calls the?onChanging()?callback
repeatedly while the user is moving the indicator. The?value?property
contains the current position of the indicator within the range
of?minvalue?to?maxvalue.

Properties #

  --------------------- -------------------------------------------------
  active readonly       True if this element is active.

  alignment readonly    The alignment style for this element. If defined,
                        this value overrides the alignChildren setting
                        for the parent container.

  bounds readonly       The boundaries of the element, in parent-relative
                        coordinates.

  children readonly     An array of child elements.

  enabled readonly      True if this element is enabled.

  graphics readonly     The graphics object that can be used to customize
                        the element’s appearance, in response to
                        the?onDraw()?event.

  helpTip readonly      The help text that is displayed when the mouse
                        hovers over the element.

  indent readonly       The number of pixels to indent the element during
                        automatic layout.

  location readonly     The upper left corner of this element relative to
                        its parent.

  maximumSize readonly  The maximum height and width to which the element
                        can be resized.

  maxvalue readonly     The maximum value allowed in the?value?property.

  minimumSize readonly  The minimum height and width to which the element
                        can be resized.

  minvalue readonly     The minimum value allowed in the?value?property.

  parent readonly       The parent element.

  preferredSize         The preferred size, used by layout managers to
  readonly              determine the best size for each element.

  properties readonly   An object that contains one or more creation
                        properties of the container (properties used only
                        when the element is created).

  shortcutKey readonly  The key sequence that invokes
                        the?onShortcutKey()?callback for this element (in
                        Windows only).

  size readonly         The current dimensions of this element.

  type readonly         The element type, “slider”.

  value readonly        The current position of the indicator.

  visible readonly      True if this element is shown, false if it is
                        hidden.

  window readonly       The window that this element belongs to.

  windowBounds readonly The bounds of this element relative to the
                        top-level parent window.
  --------------------- -------------------------------------------------

Methods #

  ------------------------------ ----------------------------------------
  addEventListener readonly      Registers an event handler for a
                                 particular type of event occuring in
                                 this element.

  dispatchEvent readonly         Simulates the occurrence of an event in
                                 this target.

  hide readonly                  Hides this element.

  notify readonly                Sends a notification message, simulating
                                 the specified user interaction event.

  removeEventListener readonly   Unregisters an event handler for a
                                 particular type of event occuring in
                                 this element.

  show readonly                  Shows this element.
  ------------------------------ ----------------------------------------

Events #

  -------------------- --------------------------------------------------
  onActivate readonly  An event-handler callback function, called when
                       the element acquires the keyboard focus.

  onChange readonly    An event-handler callback function, called when
                       the user has finished dragging the position
                       indicator, or has clicked the control.

  onChanging readonly  An event-handler callback function, called when
                       the content of the element is in the process of
                       changing

  onDeactivate         An event-handler callback function, called when
  readonly             the element loses the keyboard focus.

  onDraw readonly      An event-handler callback function, called when
                       the window is about to be drawn.

  onShortcutKey        An event-handler callback function, called when
  readonly             the element’s?shortcutKey?sequence is typed in the
                       active window.
  -------------------- --------------------------------------------------
# ScriptUI StaticText #
StaticText #

Description #

A text label that the user cannot change.

Properties #

  ---------------------- ------------------------------------------------
  active readonly        Always false. This element cannot have input
                         focus.

  alignment readonly     The alignment style for this element. If
                         defined, this value overrides the alignChildren
                         setting for the parent container.

  bounds readonly        The boundaries of the element, in
                         parent-relative coordinates.

  characters readonly    A number of characters for which to reserve
                         space when calculating the preferred size of the
                         element.

  children readonly      An array of child elements.

  enabled readonly       True if this element is enabled.

  graphics readonly      The graphics object that can be used to
                         customize the element’s appearance, in response
                         to the?onDraw()?event.

  helpTip readonly       The help text that is displayed when the mouse
                         hovers over the element.

  indent readonly        The number of pixels to indent the element
                         during automatic layout.

  justify readonly       The text justification style.

  location readonly      The upper left corner of this element relative
                         to its parent.

  maximumSize readonly   The maximum height and width to which the
                         element can be resized.

  minimumSize readonly   The minimum height and width to which the
                         element can be resized.

  parent readonly        The parent element.

  preferredSize readonly The preferred size, used by layout managers to
                         determine the best size for each element.

  properties readonly    An object that contains one or more creation
                         properties of the container (properties used
                         only when the element is created).

  shortcutKey readonly   The key sequence that invokes
                         the?onShortcutKey()?callback for this element
                         (in Windows only).

  size readonly          The current dimensions of this element.

  text readonly          The text to display, a localizable string.

  type readonly          The element type, “statictext”.

  visible readonly       True if this element is shown, false if it is
                         hidden.

  window readonly        The window that this element belongs to.

  windowBounds readonly  The bounds of this element relative to the
                         top-level parent window.
  ---------------------- ------------------------------------------------

Methods #

  ------------------------------- ---------------------------------------
  addEventListener readonly       Registers an event handler for a
                                  particular type of event occuring in
                                  this element.

  dispatchEvent readonly          Simulates the occurrence of an event in
                                  this target.

  hide readonly                   Hides this element.

  notify readonly                 Sends a notification message,
                                  simulating the specified user
                                  interaction event.

  removeEventListener readonly    Unregisters an event handler for a
                                  particular type of event occuring in
                                  this element.

  show readonly                   Shows this element.
  ------------------------------- ---------------------------------------

Events #

  ----------------------- -----------------------------------------------
  onDraw readonly         An event-handler callback function, called when
                          the window is about to be drawn.

  onShortcutKey readonly  An event-handler callback function, called when
                          the element’s shortcutKey sequence is typed in
                          the active window.
  ----------------------- -----------------------------------------------
# ScriptUI TreeView #
TreeView #

Description #

A hierarchical list whose items can contain child items.

The?ListItem?children of this control (in the?items?array) can be of
type node, which means that they can contain child items. An item with
child items can expanded, so that the child items are displayed, or
collapsed, so that the child items are hidden Individual items can be
selected at any level of the tree.

Properties #

  ---------------------- ------------------------------------------------
  active readonly        True if this element is active.

  alignment readonly     The alignment style for this element. If
                         defined, this value overrides the alignChildren
                         setting for the parent container.

  bounds readonly        The boundaries of the element, in
                         parent-relative coordinates.

  children readonly      An array of child elements.

  enabled readonly       True if this element is enabled.

  graphics readonly      The graphics object that can be used to
                         customize the element’s appearance, in response
                         to the?onDraw()?event.

  helpTip readonly       The help text that is displayed when the mouse
                         hovers over the element.

  indent readonly        The number of pixels to indent the element
                         during automatic layout.

  itemSize readonly      The width and height in pixels of each item in
                         the list.

  items readonly         The array of top-level items displayed in the
                         list.

  location readonly      The upper left corner of this element relative
                         to its parent.

  maximumSize readonly   The maximum height and width to which the
                         element can be resized.

  minimumSize readonly   The minimum height and width to which the
                         element can be resized.

  parent readonly        The parent element.

  preferredSize readonly The preferred size, used by layout managers to
                         determine the best size for each element.

  properties readonly    An object that contains one or more creation
                         properties of the control (properties used only
                         when the element is created).

  selection readonly     The currently selected list item.

  shortcutKey readonly   The key sequence that invokes
                         the?onShortcutKey()?callback for this element
                         (in Windows only).

  size readonly          The current dimensions of this element.

  type readonly          The element type, “treeview”.

  visible readonly       True if this element is shown, false if it is
                         hidden.

  window readonly        The window that this element belongs to.

  windowBounds readonly  The bounds of this element relative to the
                         top-level parent window.
  ---------------------- ------------------------------------------------

Methods #

  ------------------------------- ---------------------------------------
  add readonly                    Adds an item to the top-level choices
                                  in this list.

  addEventListener readonly       Registers an event handler for a
                                  particular type of event occuring in
                                  this element.

  dispatchEvent readonly          Simulates the occurrence of an event in
                                  this target.

  find readonly                   Retrieves an item object from the list
                                  that has a given text label.

  hide readonly                   Hides this element.

  notify readonly                 Sends a notification message,
                                  simulating the specified user
                                  interaction event.

  remove readonly                 Removes a child item from the list.

  removeAll readonly              Removes all child items from the list.

  removeEventListener readonly    Unregisters an event handler for a
                                  particular type of event occuring in
                                  this element.

  show readonly                   Shows this element.
  ------------------------------- ---------------------------------------

Events #

  ---------------------- ------------------------------------------------
  onActivate readonly    An event-handler callback function, called when
                         the element acquires the keyboard focus.

  onChange readonly      An event-handler callback function, called when
                         the content of the element has been changed

  onCollapse readonly    An event-handler callback function, called when
                         the user collapses (closes) an expanded node in
                         the treeview.

  onDeactivate readonly  An event-handler callback function, called when
                         the element loses the keyboard focus.

  onDraw readonly        An event-handler callback function, called when
                         the window is about to be drawn.

  onExpand readonly      An event-handler callback function, called when
                         the user expands (opens) a collapsed node in the
                         treeview.

  onShortcutKey readonly An event-handler callback function, called when
                         the element’s?shortcutKey?sequence is typed in
                         the active window.
  ---------------------- ------------------------------------------------
# ScriptUI UIEvent #
UIEvent #

Description #

Encapsulates input event information for an event that propagates
through a container and control hierarchy.

Implements W3C standard event handling. This object is passed to a
function that you register to respond to events of a certain type that
occur in a window or control. Use windowObj.addEventListener()?or
controlObj.addEventListener() to register a handler function.

Properties #

  ------------------- ---------------------------------------------------
  bubbles readonly    True if the event is of a type that bubbles.

  cancelable readonly True if the default action associated with the
                      event can be canceled with preventDefault().

  captures readonly   True if this event can be captured.

  currentTarget       The event target object which is currently handling
  readonly            the event. During capturing and bubbling, this is
                      different from the property target.

  detail readonly     The click count for a mouse-click event.

  eventPhase readonly The current phase of event propagation; one of
                      none, target, capture, bubble.

  target readonly     The event target object for this event.

  timeStamp readonly  The date and time at which the event occurred.

  type readonly       The name of the event that this object represents.

  view readonly       The ScriptUI element that this event relates to.
  ------------------- ---------------------------------------------------

Constructors #

  ------------------------------------------------ ----------------------
  UIEvent readonly                                 Creates an event.

  ------------------------------------------------ ----------------------

Methods #

  ------------------------------- ---------------------------------------
  initEvent readonly              Initializes a UI event as a core W3C
                                  event.

  initUIEvent readonly            Initializes an event.

  preventDefault readonly         Prevents the default action associated
                                  with this event from being called.

  stopPropagation readonly        Stops the propagation of this event.
  ------------------------------- ---------------------------------------
# ScriptUI Window #
Window #

Description #

The instance represents a top-level window or dialog box, which contains
user-interface elements.

The globally available?Window?object provides access to predefined and
script-defined windows.

Properties #

  ------------------- ---------------------------------------------------
  active readonly     Set to true to make this window active.

  alignChildren       Tells the layout manager how unlike-sized children
  readonly            of this container should be aligned within a column
                      or row.

  alignment readonly  The alignment style for child elements of a
                      container. If defined, this value overrides the
                      alignChildren setting for the parent container.

  bounds readonly     The bounds of the window’s drawable area, excluding
                      the frame, in screen coordinates.

  cancelElement       For windows of type dialog, the UI element to
  readonly            notify when the user presses a cancellation key
                      combination.

  characters readonly A number of characters for which to reserve space
                      when calculating the preferred size of the window.

  children readonly   The collection of UI elements that have been added
                      to this container.

  defaultElement      For windows of type dialog, the UI element to
  readonly            notify when the user presses a Enter key.

  enabled readonly    True if this element is enabled.

  frameBounds         The bounds of the window frame in screen
  readonly            coordinates.

  frameLocation       The top left corner of the window frame in screen
  readonly            coordinates.

  frameSize readonly  The size and location of the window’s frame in
                      screen coordinates.

  graphics readonly   The graphics object that can be used to customize
                      the window?s appearance, in response to the onDraw
                      event.

  helpTip readonly    The help text that is displayed when the mouse
                      hovers over the element.

  indent readonly     The number of pixels to indent the element.

  justify readonly    The default text justification style for child text
                      elements.

  layout readonly     The layout manager for this container.

  location readonly   The upper left corner of the window’s drawable
                      area.

  margins readonly    The number of pixels between the edges of a
                      container and the outermost child elements.

  maximized readonly  True if the window is expanded.

  maximumSize         The largest rectangle to which the window can be
  readonly            resized.

  minimized readonly  True if the window is minimized or iconified.

  minimumSize         The smallest rectangle to which the window can be
  readonly            resized.

  opacity readonly    The opacity of the window, in the range [0..1].

  orientation         The layout orientation of children in a container.
  readonly            

  parent readonly     The immediate parent element.

  preferredSize       The preferred size of the window.
  readonly            

  properties readonly An object that contains one or more creation
                      properties of the container (properties used only
                      when the element is created).

  shortcutKey         The keypress combination that invokes this
  readonly            element’s?onShortcutKey()?callback.

  size readonly       The current size and location of the content area
                      of the window in screen coordinates.

  spacing readonly    The number of pixels separating one child element
                      from its adjacent sibling element.

  text readonly       The title, label, or displayed text, a localizeable
                      string.

  type readonly       The element type; “dialog”, “palette”, or “window”.

  visible readonly    When true, the element is shown, when false it is
                      hidden.

  window readonly     The window that this element belongs to.

  windowBounds        The bounds of this window relative to the top-level
  readonly            parent window.
  ------------------- ---------------------------------------------------

Static Properties #

  ------------------------------------ -------------------------------------
  frameworkName readonly               Deprecated.
                                       Use?ScriptUI.frameworkName?instead.

  version readonly                     Deprecated.
                                       Use?ScriptUI.version?instead.
  ------------------------------------ -------------------------------------

Constructors #

  -------------------------------------------- --------------------------
  Window readonly                              Creates a new window.

  -------------------------------------------- --------------------------

Methods #

  ---------------------------- ------------------------------------------
  add readonly                 Creates and returns a new control or
                               container object and adds it to the
                               children of this window.

  addEventListener readonly    Registers an event handler for a
                               particular type of event occuring in this
                               window.

  center readonly              Centers this window on screen or with
                               repect to another window.

  close readonly               Closes this window.

  dispatchEvent readonly       Simulates the occurrence of an event in
                               this target.

  hide readonly                Hides this windows.

  notify readonly              Sends a notification message to all
                               listeners, simulating the specified user
                               interaction event.

  remove readonly              Removes the specified child control from
                               this window?s children array.

  removeEventListener readonly Unregisters an event handler for a
                               particular type of event occuring in this
                               window.

  show readonly                Makes this window visible.
  ---------------------------- ------------------------------------------

Static Methods #

  -------------------- --------------------------------------------------
  alert readonly       Displays a platform-standard dialog containing a
                       short message and an OK button.

  confirm readonly     Displays a platform-standard dialog containing a
                       short message and two buttons labeled Yes and No.

  find readonly        Use this method to find an existing window.

  prompt readonly      Displays a modal dialog that returns the user?s
                       text input.
  -------------------- --------------------------------------------------

Events #

  ------------------- ---------------------------------------------------
  onActivate readonly An event-handler callback function, called when the
                      window acquires the keyboard focus.

  onClose readonly    An event-handler callback function, called when the
                      window is about to be closed.

  onDeactivate        An event-handler callback function, called when the
  readonly            window loses the keyboard focus.

  onMove readonly     An event-handler callback function, called when the
                      window has been moved

  onMoving readonly   An event-handler callback function, called when the
                      window is being moved

  onResize readonly   An event-handler callback function, called after
                      the window has been resized

  onResizing readonly An event-handler callback function, called while a
                      window is being resized

  onShortcutKey       In Windows only, an event-handler callback
  readonly            function, called a shortcut-key sequence is typed
                      that matches the?shortcutKey?value for this window.

  onShow readonly     An event-handler callback function, called just
                      before the window is displayed
  ------------------- ---------------------------------------------------
# $ $.about #
$.about #

  String about ()

Description #

Shows an About box for the ExtendScript component, and returns the text
for the box.
# $ $.bp #
$.bp #

  void bp (any condition )

Parameters #

  ----------- -----------------------------------------------------------------
  condition   A string containing a JavaScript statement to be used as a
              condition. If the statement evaluates to true or nonzero when
              this point is reached, execution stops.

  ----------- -----------------------------------------------------------------

Description #

Breaks execution at the current position.
# $ $.buildDate #
$.buildDate #

  Date buildDate

Description #

The ExtendScript build date.
# $ $.build #
$.build #

  String build

Description #

The ExtendScript build information.
# $ $.colorPicker #
$.colorPicker #

  Number colorPicker ( Number color )

Parameters #

  ------- ---------------------------------------------------------------
  color   The color to be preselected in the dialog, as 0xRRGGBB, or -1
          for the platform default.

  ------- ---------------------------------------------------------------

Description #

Invokes the platform-specific color selection dialog, and returns the
selected color.
# $ $.decimalPoint #
$.decimalPoint #

  String decimalPoint

Description #

The character used as the decimal point character in formatted numeric
output.
# $ $.engineName #
$.engineName #

  String engineName

Description #

The name of the current ExtendScript engine, if set.
# $ $.error #
$.error #

  Error error

Description #

The most recent run-time error information.

Assigning error text to this property generates a run-time error;
however, the preferred way to generate a run-time error is to throw
an?Error?object.
# $ $.evalFile #
$.evalFile #

  any evalFile ( File file , Number timeout )

Parameters #

  ----------------- -----------------------------------------------------
  file              The file to load.

  timeout           An optional timeout in milliseconds.
  ----------------- -----------------------------------------------------

Description #

Loads and evaluates a file.
# $ $.fileName #
$.fileName #

  String fileName

Description #

The file name of the current script.
# $ $.flags #
$.flags #

  Number flags

Description #

Gets or sets low-level debug output flags.

A logical AND of bit flag values: 0x0002 (2): Displays each line with
its line number as it is executed. 0x0040 (64): Enables excessive
garbage collection. Usually, garbage collection starts when the number
of objects has increased by a certain amount since the last garbage
collection. This flag causes ExtendScript to garbage collect after
almost every statement. This impairs performance severely, but is useful
when you suspect that an object gets released too soon. 0x0080 (128):
Displays all calls with their arguments and the return value. 0x0100
(256): Enables extended error handling (see?strict). 0x0200 (512):
Enables the localization feature of the toString method. Equivalent to
the localize property.
# $ $.gc #
$.gc #

  void gc ()

Description #

Initiates garbage collection in the ExtendScript engine.
# $ $.getenv #
$.getenv #

  String getenv ( String name )

Parameters #

  ------------------- ---------------------------------------------------
  name                The name of the variable.

  ------------------- ---------------------------------------------------

Description #

Retrieves the value of an environment variable.
# $ $.global #
$.global #

  Object global

Description #

A reference to the global object, which contains the JavaScript global
namespace.
# $ $.hiresTimer #
$.hiresTimer #

  Number hiresTimer

Description #

A high-resolution timer, measuring the time in microseconds. The timer
starts when ExtendScript is initialized during the application startup
sequence. Every read access resets the timer to Zero.
# $ $.includePath #
$.includePath #

  String includePath

Description #

The path for include files for the current script.
# $ $.level #
$.level #

  Number level

Description #

The current debugging level, which enables or disables the JavaScript
debugger.

One of 0 (no debugging), 1 (break on runtime errors), or 2 (full debug
mode).
# $ $.line #
$.line #

  Number line

Description #

The current line number of the currently executing script.
# $ $.locale #
$.locale #

  String locale

Description #

Gets or sets the current locale.

The string contains five characters in the form LL_RR, where LL is an
ISO 639 language specifier, and RR is an ISO 3166 region
specifier.Initially, this is the value that the application or the
platform returns for the current user. You can set it to temporarily
change the locale for testing. To return to the application or platform
setting, set to undefined, null, or the empty string.
# $ $.localize #
$.localize #

  bool localize

Description #

Set to true to enable the extended localization features of the built-in
toString() method.
# $ $.memCache #
$.memCache #

  Number memCache

Description #

The ExtendScript memory cache size, in bytes.
# $ $.os #
$.os #

  String os

Description #

The current operating system version information.
# $ $.screens #
$.screens #

  Object screens

Description #

An array of objects containing information about the display screens
attached to your computer.

Each object has the properties?left, top, right, bottom, which contain
the four corners of each screen in global coordinates.A
property?primary?is true if that object describes the primary display.
# $ $.setenv #
$.setenv #

  void setenv ( String name , String value )

Parameters #

  ------------------- ---------------------------------------------------
  name                The name of the variable.

  value               The value of the variable.
  ------------------- ---------------------------------------------------

Description #

Sets the value of an environment variable.
# $ $.sleep #
$.sleep #

  void sleep ( Number msecs )

Parameters #

  ----------------- -----------------------------------------------------
  msecs             Number of milliseconds to sleep.

  ----------------- -----------------------------------------------------

Description #

Suspends the calling thread for a number of milliseconds.

During a sleep period, checks at 100 millisecond intervals to see
whether the sleep should be terminated. This can happen if there is a
break request, or if the script timeout has expired.
# $ $.stack #
$.stack #

  String stack

Description #

The current stack trace.
# $ $.strict #
$.strict #

  any strict

Description #

Sets or clears strict mode for object modification.

When true, any attempt to write to a read-only property causes a runtime
error. Some objects do not permit the creation of new properties when
true.
# $ $.toString #
$.toString #

  String toString ()

Description #

Converts this object to a string.
# $ $.version #
$.version #

  String version

Description #

The version number of the ExtendScript engine.

Formatted as a three-part number and description; for example: “3.92.95
(debug)”.
# $ $.write #
$.write #

  void write (any text )

Parameters #

  ----------- -----------------------------------------------------------
  text        The text to print. All arguments are concatenated.

  ----------- -----------------------------------------------------------

Description #

Prints text to the Console.
# $ $.writeln #
$.writeln #

  void writeln (any text )

Parameters #

  ----------- -----------------------------------------------------------
  text        The text to print. All arguments are concatenated.

  ----------- -----------------------------------------------------------

Description #

Prints text to the Console, and adds a newline character.
# Array Array.Array #
Array.Array #

  Array Array ( Number length , any element )

Parameters #

  --------- -------------------------------------------------------------
  length    If no other parameters are passed, the initial length of the
            empty array.

  element   If there is more than one parameter, the array is initialized
            with the given parameters.
  --------- -------------------------------------------------------------

Description #

Creates and returns a new array.

Takes any number of parameters, which become the elements of the array,
or a single value which becomes the length of an empty array. Note that
you cannot create a one-element array, as the single parameter value is
interpreted as the length. Returns the new array.
# Array Array.concat #
Array.concat #

  Array concat (any value )

Parameters #

  ----------- -----------------------------------------------------------
  value       Any number of values to be added to the end of the array.

  ----------- -----------------------------------------------------------

Description #

Returns a new array created by concatenating the given values to the end
of the original array.

The original array is unchanged. If an array is provided as a parameter
to concat(), each of its elements are appended as separate array
elements at the end of the new array. Returns a new array, the result of
concatenation the given values to the end of the original array.
# Array Array.join #
Array.join #

  String join ( String delimiter )

Parameters #

  --------------- -------------------------------------------------------
  delimiter       A string used to separate each element of the array.

  --------------- -------------------------------------------------------

Description #

Joins all elements of the array into a string; optionally, each element
is separated by delimiter.

Returns the string containing the joined elements and delimiters.
# Array Array.length #
Array.length #

  Number length

Description #

The length of the array
# Array Array.pop #
Array.pop #

  any pop ()

Description #

Removes the last element from the array, decreases the length by 1, and
returns the value of the element.

Returns the value of the deleted array element.
# Array Array.push #
Array.push #

  Number push ( Number value )

Parameters #

  ---------- ------------------------------------------------------------
  value      Any number of values to be pushed onto the end of the array.

  ---------- ------------------------------------------------------------

Description #

Places one or more values onto the end of the array and increases length
by n.

Returns the new length of the array.
# Array Array.reverse #
Array.reverse #

  Array reverse ()

Description #

Reverses the order of the elements in the array.

Returns the reversed array.
# Array Array.shift #
Array.shift #

  any shift ()

Description #

Removes the first element from the array, decreases the length by 1, and
returns the value of the element.

Returns the value of the deleted array element.
# Array Array.slice #
Array.slice #

  Array slice ()

Description #

Creates a new array, which contains a subset of the original array’s
elements.

The slice begins with the index start, and continues up to, but not
including the index, end. If start or end is a negative number, the
indexed is resolved counting backwards from the end of the array
resulting in the element array[array. length + negativeIndex]. Returns a
new array containing elements array[start] through array[end-1].
# Array Array.sort #
Array.sort #

  void sort ( Function userFunction )

Parameters #

  -------------- ----------------------------------------------------------------
  userFunction   A user-supplied function of the form userFunction(a, b) which
                 returns less than 0 if a is greater than b, 0 if a and b are
                 equal, and greater than 0 if b is greater than a.

  -------------- ----------------------------------------------------------------

Description #

Sorts the elements of the array in place, using the given function to
compare to elements.

If no function is provided, the elements are sorted alphabetically.
Returns no return value.
# Array Array.splice #
Array.splice #

  Array splice ( Number start , Number num , any value )

Parameters #

  ------- ------------------------------------------------------------------
  start   The index of the first element to remove. Negative values are
          relative to the end of the array.

  num     The number of array elements to remove, including start. If
          omitted, all elements from array index start to the end of the
          array are removed.

  value   A list of one or more values to be added to the array starting at
          index start.
  ------- ------------------------------------------------------------------

Description #

Removes num elements from the array beginning with index, start.

Optionally insert new elements beginning at index start. To ensure
contiguity, elements are moved up to fill in any gaps. Returns a new
array containing any elements deleted from the original array.
# Array Array.toLocaleString #
Array.toLocaleString #

  String toLocaleString ()

Description #

Converts an array to a string and returns the string (localized).
# Array Array.toSource #
Array.toSource #

  String toSource ()

Description #

Creates a string representation of this object that can be fed back
to?eval()?to re-create an object. Works only with built-in classes.
# Array Array.toString #
Array.toString #

  String toString ()

Description #

Converts an array to a string and returns the string.

Yields the same result as array. join() when called without a parameter.
Returns a comma-separated list of all the elements of the array.
# Array Array.unshift #
Array.unshift #

  Number unshift (any value )

Parameters #

  -------- --------------------------------------------------------------
  value    The values of one or more elements to be added to the
           beginning of the array.

  -------- --------------------------------------------------------------

Description #

Adds one or more elements to the beginning of the array.

Returns the new array length.
# Boolean Boolean.Boolean #
Boolean.Boolean #

  bool Boolean (any value )

Parameters #

  -------------- --------------------------------------------------------
  value          The value to be converted to a Boolean.

  -------------- --------------------------------------------------------

Description #

Creates and returns a new Boolean object set to the value of the
argument converted to a boolean.
# Boolean Boolean.toSource #
Boolean.toSource #

  String toSource ()

Description #

Creates a string representation of this object that can be fed back
to?eval()?to re-create an object. Works only with built-in classes.
# Boolean Boolean.toString #
Boolean.toString #

  String toString ()

Description #

Returns the string representation of the value of bool.

The method returns the string true if the primitive value of bool is
true; otherwise it returns the string false.
# Boolean Boolean.valueOf #
Boolean.valueOf #

  bool valueOf ()

Description #

Returns the primitive value of bool.

The method returns true if the primitive value of bool is true;
otherwise it returns false.
# Date Date.Date #
Date.Date #

  Date Date ( Number year , Number month , Number day , Number hours ,
  Number min , Number sec , Number ms )

Parameters #

  ------- ----------------------------------------------------------------
  year    The year expressed in four digits.

  month   An integer value from 0 (Jan) to 11 (Dec).

  day     An integer value from 1 to 31, If this argument is not supplied,
          its value is set to 0.

  hours   An integer value from 0 (midnight) to 23 (11 PM). If this
          argument is not supplied, its value is set to 0.

  min     An integer value from 0 to 59. If this argument is not supplied,
          its value is set to 0.

  sec     An Integer value from 0 to 59. If this argument is not supplied,
          its value is set to 0.

  ms      An integer value from 0 to 999. If this argument is not
          supplied, its value is set to 0.
  ------- ----------------------------------------------------------------

Description #

Returns a new Date object holding the current date and time.

If parameters are supplied, returns a new Date object holding the
supplied date and time.
# Date Date.getDate #
Date.getDate #

  Number getDate ()

Description #

Returns the day of the month of the specified Date object in local time.
# Date Date.getDay #
Date.getDay #

  Number getDay ()

Description #

Returns the day of the week for the specified Date object in local time.

This is an integer from 0 (Sunday) to 6 (Saturday). Returns the day of
the week for date.
# Date Date.getFullYear #
Date.getFullYear #

  Number getFullYear ()

Description #

Returns the four digit year of the specified Date object in local time.
# Date Date.getHours #
Date.getHours #

  Number getHours ()

Description #

Returns the hour of the specified Date object in local time.
# Date Date.getMilliseconds #
Date.getMilliseconds #

  Number getMilliseconds ()

Description #

Returns the milliseconds of the specified Date object in local time.
# Date Date.getMinutes #
Date.getMinutes #

  Number getMinutes ()

Description #

Returns the minutes of the specified Date object in local time.
# Date Date.getMonth #
Date.getMonth #

  Number getMonth ()

Description #

Returns the month of the specified Date object in local time.
# Date Date.getSeconds #
Date.getSeconds #

  Number getSeconds ()

Description #

Returns the seconds of the specified Date object in local time.
# Date Date.getTime #
Date.getTime #

  Number getTime ()

Description #

Returns the number of milliseconds since midnight January 1,1970 UTC for
the specified Date object.
# Date Date.getTimezoneOffset #
Date.getTimezoneOffset #

  Number getTimezoneOffset ()

Description #

Returns the difference in minutes between the computer’s local time and
UTC.
# Date Date.getUTCDate #
Date.getUTCDate #

  Number getUTCDate ()

Description #

Returns the day of the month of the specified Date object according to
UTC.
# Date Date.getUTCDay #
Date.getUTCDay #

  Number getUTCDay ()

Description #

Returns the day of the week for the specified Date object according to
UTC.
# Date Date.getUTCFullYear #
Date.getUTCFullYear #

  Number getUTCFullYear ()

Description #

Returns the four digit year of the specified Date object according to
UTC.
# Date Date.getUTCHours #
Date.getUTCHours #

  Number getUTCHours ()

Description #

Returns the hour of the specified Date object according to UTC.
# Date Date.getUTCMilliseconds #
Date.getUTCMilliseconds #

  Number getUTCMilliseconds ()

Description #

Returns the milliseconds of the specified Date object according to UTC.
# Date Date.getUTCMinutes #
Date.getUTCMinutes #

  Number getUTCMinutes ()

Description #

Returns the minutes of the specified Date object according to UTC.
# Date Date.getUTCMonth #
Date.getUTCMonth #

  Number getUTCMonth ()

Description #

Returns the month of the specified Date object according to UTC.
# Date Date.getUTCSeconds #
Date.getUTCSeconds #

  Number getUTCSeconds ()

Description #

Returns the seconds of the specified Date object according to UTC.
# Date Date.getYear #
Date.getYear #

  Number getYear ()

Description #

Returns the year of the specified Date object, as a difference from
1900, in local time.
# Date Date.parse #
Date.parse #

  Date parse ( String text )

Parameters #

  ---------------------- ------------------------------------------------
  text                   The string to parse.

  ---------------------- ------------------------------------------------

Description #

Parses a string, returning a new Date object. The string should be
similar to the string returned bt toString().
# Date Date.setDate #
Date.setDate #

  Number setDate ( Number date )

Parameters #

  ---------- ------------------------------------------------------------
  date       An integer from 1 to 31 indicating the day of the month.

  ---------- ------------------------------------------------------------

Description #

Sets the day of the month of a specified Date object according to local
time.

Returns the number of milliseconds between the new date and midnight,
January 1, 1970.
# Date Date.setFullYear #
Date.setFullYear #

  Number setFullYear ( Number year )

Parameters #

  ---------- ------------------------------------------------------------
  year       A four-digit integer value indicating the year to set.

  ---------- ------------------------------------------------------------

Description #

Sets the year of a specified Date object according to local time.

This method can also set month and date if those arguments are
specified. Returns the number of milliseconds between the new date and
midnight, January 1, 1970.
# Date Date.setHours #
Date.setHours #

  Number setHours ( Number hour )

Parameters #

  ----------- -----------------------------------------------------------
  hour        An integer value from 0 (midnight) to 23 (11 PM).

  ----------- -----------------------------------------------------------

Description #

Sets the hours of a specified Date object according to local time.

Returns the number of milliseconds between the new date and midnight,
January 1, 1970.
# Date Date.setMilliseconds #
Date.setMilliseconds #

  Number setMilliseconds ( Number ms )

Parameters #

  -------------- --------------------------------------------------------
  ms             An integer value from 0 to 999.

  -------------- --------------------------------------------------------

Description #

Sets the milliseconds of a specified Date object according to local
time.

Returns the number of milliseconds between the new date and midnight,
January 1, 1970.
# Date Date.setMinutes #
Date.setMinutes #

  Number setMinutes ( Number minutes )

Parameters #

  -------------------- --------------------------------------------------
  minutes              An integer value from 0 to 59.

  -------------------- --------------------------------------------------

Description #

Sets the minutes of a specified Date object according to local time.

Returns the number of milliseconds between the new date and midnight,
January 1, 1970.
# Date Date.setMonth #
Date.setMonth #

  Number setMonth ( Number month )

Parameters #

  -------------- --------------------------------------------------------
  month          An integer value from 0 (Jan) to 11 (Dec).

  -------------- --------------------------------------------------------

Description #

Sets the month of a specified Date object according to local time.

Returns the number of milliseconds between the new date and midnight,
January 1, 1970.
# Date Date.setSeconds #
Date.setSeconds #

  Number setSeconds ( Number seconds )

Parameters #

  -------------------- --------------------------------------------------
  seconds              An integer value from 0 to 59.

  -------------------- --------------------------------------------------

Description #

Sets the seconds of a specified Date object according to local time.

Returns the number of milliseconds between the new date and midnight,
January 1, 1970.
# Date Date.setTime #
Date.setTime #

  Number setTime ( Number ms )

Parameters #

  ---- ------------------------------------------------------------------
  ms   An integer indicating the number of milliseconds between the date
       set and midnight, January 1, 1970.

  ---- ------------------------------------------------------------------

Description #

Sets the date of a specified Date object in milliseconds since midnight,
January 1, 1970.

Returns the value of ms.
# Date Date.setUTCDate #
Date.setUTCDate #

  Number setUTCDate ( Number date )

Parameters #

  ---------- ------------------------------------------------------------
  date       An integer from 1 to 31 indicating the day of the month.

  ---------- ------------------------------------------------------------

Description #

Sets the date of a specified Date object according to universal time.

Returns the number of milliseconds between the new date and midnight,
January 1, 1970 in UTC time.
# Date Date.setUTCFullYear #
Date.setUTCFullYear #

  Number setUTCFullYear ( Number year )

Parameters #

  --------------- -------------------------------------------------------
  year            The year expressed in four digits.

  --------------- -------------------------------------------------------

Description #

Sets the year of a specified Date object according to UTC, can also set
the month and date.

Returns the number of milliseconds between the date set and midnight,
January 1, 1970, in UTC.
# Date Date.setUTCHours #
Date.setUTCHours #

  Number setUTCHours ( Number hours )

Parameters #

  -------- --------------------------------------------------------------
  hours    An integer value from 0 (midnight) to 23 (11 PM) indicating
           the hour to be set.

  -------- --------------------------------------------------------------

Description #

Sets the hours of a specified Date object according to UTC.

Returns the number of milliseconds between the date set and midnight,
January 1, 1970, in UTC.
# Date Date.setUTCMilliseconds #
Date.setUTCMilliseconds #

  Number setUTCMilliseconds ( Number ms )

Parameters #

  ----- -----------------------------------------------------------------
  ms    An integer value in the range of 0 to 999 indicating the number
        of milliseconds to set.

  ----- -----------------------------------------------------------------

Description #

Sets the milliseconds of a specified Date object according to UTC.

Returns the number of milliseconds between the date set and midnight,
January 1, 1970, in UTC.
# Date Date.setUTCMinutes #
Date.setUTCMinutes #

  Number setUTCMinutes ( Number min )

Parameters #

  ------- ---------------------------------------------------------------
  min     An integer value in the range 0 to 59 indicating the number of
          minutes to be set.

  ------- ---------------------------------------------------------------

Description #

Sets the minutes of a specified Date object according to UTC.

Returns the number of milliseconds between the date set and midnight,
January 1, 1970, in UTC.
# Date Date.setUTCMonth #
Date.setUTCMonth #

  Number setUTCMonth ( Number month )

Parameters #

  -------- --------------------------------------------------------------
  month    An integer value in the range 0 (Jan.) to 11 (Dec.) indicating
           the month to set.

  -------- --------------------------------------------------------------

Description #

Sets the month of a specified Date object according to UTC.

Returns the number of milliseconds between the date set and midnight,
January 1, 1970, in UTC.
# Date Date.setUTCSeconds #
Date.setUTCSeconds #

  Number setUTCSeconds ( Number sec )

Parameters #

  ------- ---------------------------------------------------------------
  sec     An integer value in the range 0 to 59 indicating the number of
          seconds to set.

  ------- ---------------------------------------------------------------

Description #

Sets the seconds of a specified Date object according to UTC.

Returns the number of milliseconds between the date set and midnight,
January 1, 1970, in UTC.
# Date Date.setYear #
Date.setYear #

  Number setYear ( Number year )

Parameters #

  ------------ ----------------------------------------------------------
  year         An integer value indicating the year to set.

  ------------ ----------------------------------------------------------

Description #

Sets the year of a specified Date object according to local time, as a
difference between the current year and 1900.

Returns the number of milliseconds between the date set and midnight,
January 1, 1970.
# Date Date.toDateString #
Date.toDateString #

  String toDateString ()

Description #

Returns the date as a string.
# Date Date.toGMTString #
Date.toGMTString #

  String toGMTString ()

Description #

Returns the date and time adjusted to GMT (UTC) as a string.
# Date Date.toLocaleDateString #
Date.toLocaleDateString #

  String toLocaleDateString ()

Description #

Returns the date as a localized string.
# Date Date.toLocaleString #
Date.toLocaleString #

  String toLocaleString ()

Description #

Returns a string value representing the date and time stored in the Date
object in human readable format (localized).
# Date Date.toLocaleTimeString #
Date.toLocaleTimeString #

  String toLocaleTimeString ()

Description #

Returns the time as a localized string.
# Date Date.toSource #
Date.toSource #

  String toSource ()

Description #

Creates a string representation of this object that can be fed back
to?eval()?to re-create an object. Works only with built-in classes.
# Date Date.toString #
Date.toString #

  String toString ()

Description #

Returns a string value representing the date and time stored in the Date
object in human readable format.

Returns the following string is an example of the format returned by
this method: Mon Aug 13, 10:54:21 GMT-0700 2001.
# Date Date.toTimeString #
Date.toTimeString #

  String toTimeString ()

Description #

Returns the time as a string.
# Date Date.toUTCString #
Date.toUTCString #

  String toUTCString ()

Description #

Returns the date and time adjusted to UTC as a string.
# Date Date.UTC #
Date.UTC #

  Date UTC ( Number year , Number month , Number day , Number hours ,
  Number min , Number sec , Number ms )

Parameters #

  ------- ----------------------------------------------------------------
  year    The year expressed in four digits, for example, 2001.

  month   An integer value from 0 (Jan) to 11 (Dec).

  day     An integer value from 1 to 31, If this argument is not supplied,
          its value is set to 0.

  hours   An integer value from 0 (midnight) to 23 (11 PM). If this
          argument is not supplied, its value is set to 0.

  min     An integer value from 0 to 59. If this argument is not supplied,
          its value is set to 0.

  sec     An Integer value from 0 to 59. If this argument is not supplied,
          its value is set to 0.

  ms      An integer value from 0 to 999. If this argument is not
          supplied, its value is set to 0.
  ------- ----------------------------------------------------------------

Description #

Returns the number of milliseconds between midnight January 1, 1970,
UTC, and the specified time.
# Date Date.valueOf #
Date.valueOf #

  Number valueOf ()

Description #

The valueOf() method returns the number of milliseconds that have passed
since midnight, Returns an integer.
# Error Error.description #
Error.description #

  String description

Description #

The error message.
# Error Error.Error #
Error.Error #

  Error Error ( String msg , String file , Number line )

Parameters #

  --------------------- -------------------------------------------------
  msg                   The error message.

  file                  The name of the file.

  line                  The line number.
  --------------------- -------------------------------------------------

Description #

Creates a new Error object.
# Error Error.toSource #
Error.toSource #

  String toSource ()

Description #

Creates a string representation of this object that can be fed back
to?eval()?to re-create an object. Works only with built-in classes.
# Error Error.toString #
Error.toString #

  String toString ()

Description #

Convert this object to a string.
# File File.absoluteURI #
File.absoluteURI #

  String absoluteURI

Description #

The full path name for the referenced file in URI notation.
# File File.alias #
File.alias #

  bool alias

Description #

If true, the object refers to a file system alias or shortcut.
# File File.changePath #
File.changePath #

  bool changePath ( String path )

Parameters #

  ------- ---------------------------------------------------------------
  path    A string containing the new path, absolute or relative to the
          current folder.

  ------- ---------------------------------------------------------------

Description #

Changes the path specification of the referenced file.
# File File.close #
File.close #

  bool close ()

Description #

Closes this open file.

Returns true if the file was closed successfully, false if an I/O error
occurred.
# File File.copy #
File.copy #

  bool copy ( String target )

Parameters #

  -------- ---------------------------------------------------------------
  target   A string with the URI path to the target location, or a File
           object that references the target location.

  -------- ---------------------------------------------------------------

Description #

Copies this object?s referenced file to the specified target location.

Resolves any aliases to find the source file. If a file exists at the
target location, it is overwritten. Returns true if the copy was
successful.
# File File.createAlias #
File.createAlias #

  void createAlias ( String path )

Parameters #

  ------------ ----------------------------------------------------------
  path         A string containing the path of the target file.

  ------------ ----------------------------------------------------------

Description #

Makes this file a file-system alias or shortcut to the specified file.

The referenced file for this object must not yet exist on disk. Returns
true if the operation was successful.
# File File.created #
File.created #

  Date created

Description #

The creation date of the referenced file, or null if the object does not
refer to a file on disk.
# File File.creator #
File.creator #

  String creator

Description #

In Mac OS, the file creator as a four-character string. In Windows or
UNIX, value is “????”.
# File File.decode #
File.decode #

  String decode ( String uri )

Parameters #

  -------------- --------------------------------------------------------
  uri            The UTF-8 encoded string to decode.

  -------------- --------------------------------------------------------

Description #

Decodes a UTF-8 encoded string as required by RFC 2396, and returns the
decoded string.

See also?String.decodeURI().
# File File.displayName #
File.displayName #

  String displayName

Description #

The localized name of the referenced file, without the path
specification.
# File File.encode #
File.encode #

  String encode ( String name )

Parameters #

  --------------------- -------------------------------------------------
  name                  The string to encode.

  --------------------- -------------------------------------------------

Description #

Encodes a string as required by RFC 2396, and returns the encoded
string.

All special characters are encoded in UTF-8 and stored as escaped
characters starting with the percent sign followed by two hexadecimal
digits. For example, the string “my file” is encoded as “my%20file”.
Special characters are those with a numeric value greater than 127,
except the following: / - _ . ! ~ * ‘ ( ) See also?encodeURI().
# File File.encoding #
File.encoding #

  String encoding

Description #

Gets or sets the encoding for subsequent read/write operations.

One of the encoding constants listed in the?JavaScript Tools Guide. If
the value is not recognized, uses the system default encoding.A special
encoder, BINARY, is used to read binary files. It stores each byte of
the file as one Unicode character regardless of any encoding. When
writing, the lower byte of each Unicode character is treated as a single
byte to write.
# File File.eof #
File.eof #

  bool eof

Description #

When true, a read attempt caused the current position to be at the end
of the file, or the file is not open.
# File File.error #
File.error #

  String error

Description #

A string containing a message describing the most recent file system
error.

Typically set by the file system, but a script can set it. Setting this
value clears any error message and resets the error bit for opened
files. Contains the empty string if there is no error.
# File File.execute #
File.execute #

  bool execute ()

Description #

Executes or opens this file using the appropriate application, as if it
had been double-clicked in a file browser.

You can use this method to run scripts, launch applications, and so
on.Returns true immediately if the application launch was successful.
# File File.exists #
File.exists #

  bool exists

Description #

If true, this object refers to a file or file-system alias that actually
exists in the file system.
# File File.File #
File.File #

  File File ( String path )

Parameters #

  ------- ---------------------------------------------------------------
  path    The full or partial path name of the file, in platform-specific
          or URI format.

  ------- ---------------------------------------------------------------

Description #

Creates and returns a new File object referring to a given file system
location.
# File File.fs #
File.fs #

  String fs

Description #

The name of the file system.

This is a class property accessed through the File constructor. Valid
values are “Windows”, “Macintosh”, and “Unix”.
# File File.fsName #
File.fsName #

  String fsName

Description #

The platform-specific full path name for the referenced file.
# File File.fullName #
File.fullName #

  String fullName

Description #

The full path name for the referenced file in URI notation.
# File File.getRelativeURI #
File.getRelativeURI #

  String getRelativeURI ( String basePath )

Parameters #

  ---------------------- ------------------------------------------------
  basePath               A base path in URI notation.

  ---------------------- ------------------------------------------------

Description #

Retrieves and returns the path for this file, relative to the specified
base path, in URI notation.

If no base path is supplied, the URI is relative to the path of the
current folder. Returns a string containing the relative URI.
# File File.hidden #
File.hidden #

  bool hidden

Description #

When true, the file is not shown in the platform-specific file browser.

If the object references a file-system alias or shortcut, the flag is
altered on the alias, not on the original file.
# File File.isEncodingAvailable #
File.isEncodingAvailable #

  bool isEncodingAvailable ( String name )

Parameters #

  ----------------------- -----------------------------------------------
  name                    The encoding name.

  ----------------------- -----------------------------------------------

Description #

Reports whether a given encoding is available.
# File File.length #
File.length #

  Number length

Description #

The size of the file in bytes.

Can be set only for a file that is not open, in which case it truncates
or pads the file with 0-bytes to the new length.
# File File.lineFeed #
File.lineFeed #

  String lineFeed

Description #

How line feed characters are written in the file system.

One of the values “Windows”, “Macintosh”, or “Unix”.
# File File.modified #
File.modified #

  Date modified

Description #

The date of the referenced file’s last modification, or null if the
object does not refer to a file on the disk.
# File File.name #
File.name #

  String name

Description #

The file name portion of the absolute URI for the referenced file,
without the path specification.
# File File.openDialog #
File.openDialog #

  File openDialog ( String prompt , any filter , bool multiSelect )

Parameters #

  ------------- ----------------------------------------------------------
  prompt        The prompt text, displayed if the dialog allows a prompt.

  filter        A filter that limits the types of files displayed in the
                dialog.

  multiSelect   When true, the user can select multiple files and the
                return value is an array.
  ------------- ----------------------------------------------------------

Description #

Opens a dialog so the user can select one or more files to open.

Opens the built-in platform-specific file-browsing dialog in which a
user can select an existing file or multiple files, and creates new File
objects to represent the selected files. If the user clicks OK, returns
a File object for the selected file, or an array of objects if multiple
files are selected. If the user cancels, returns null.
# File File.openDlg #
File.openDlg #

  File openDlg ( String prompt , any filter , bool multiSelect )

Parameters #

  ------------- ----------------------------------------------------------
  prompt        A string containing the prompt text, if the dialog allows
                a prompt.

  filter        A filter that limits the types of files displayed in the
                dialog.

  multiSelect   When true, the user can select multiple files and the
                return value is an array.
  ------------- ----------------------------------------------------------

Description #

Opens the built-in platform-specific file-browsing dialog, in which the
user can select an existing file or files, and creates new File objects
to represent the selected files.

Differs from the class method openDialog() in that it presets the
current folder to this File object?s parent folder and the current file
to this object?s associated file. If the user clicks OK, returns a File
or Folder object for the selected file or folder, or an array of
objects. If the user cancels, returns null.
# File File.open #
File.open #

  bool open ( String mode , String type , String creator )

Parameters #

  --------- --------------------------------------------------------------
  mode      The read-write mode, a single-character string.

  type      In Mac OS, the type of a newly created file, a 4-character
            string. Ignored in Windows and UNIX.

  creator   In Mac OS, the creator of a newly created file, a 4-character
            string. Ignored in Windows and UNIX.
  --------- --------------------------------------------------------------

Description #

Opens the referenced file for subsequent read/write operations. The
method resolves any aliases to find the file.

Returns true if the file was opened successfully.The method attempts to
detect the encoding of the open file. It reads a few bytes at the
current location and tries to detect the Byte Order Mark character
0xFFFE. If found, the current position is advanced behind the detected
character and the encoding property is set to one of the strings
UCS-2BE, UCS-2LE, UCS4-BE, UCS-4LE, or UTF-8. If the marker character is
not found, it checks for zero bytes at the current location and makes an
assumption about one of the above formats (except UTF-8). If everything
fails, the encoding property is set to the system encoding. IMPORTANT:
Be careful about opening a file more than once. The operating system
usually permits you to do so, but if you start writing to the file using
two different File objects, you can destroy your data.
# File File.parent #
File.parent #

  Folder parent

Description #

The Folder object for the folder that contains this file.
# File File.path #
File.path #

  String path

Description #

The path portion of the absolute URI for the referenced file, without
the file name.
# File File.readch #
File.readch #

  String readch ()

Description #

Reads a single text character from the file at the current position.

Line feeds are recognized as CR, LF, CRLF or LFCR pairs. If the file is
encoded, multiple bytes might be read to create a single Unicode
character. Returns a string that contains the character.
# File File.read #
File.read #

  String read ( Number chars )

Parameters #

  ----------- -----------------------------------------------------------
  chars       An integer specifying the number of characters to read.

  ----------- -----------------------------------------------------------

Description #

Reads the contents of the file, starting at the current position.

Returns a string that contains up to the specified number of characters.
If a number of characters is not supplied, reads from the current
position to the end of the file. If the file is encoded, multiple bytes
might be read to create single Unicode characters.
# File File.readln #
File.readln #

  String readln ()

Description #

Reads a single line of text from the file at the current position.

Line feeds are recognized as CR, LF, CRLF or LFCR pairs.. If the file is
encoded, multiple bytes might be read to create single Unicode
characters. Returns a string that contains the text.
# File File.readonly #
File.readonly #

  bool readonly

Description #

When true, prevents the file from being altered or deleted.

If the referenced file is a file-system alias or shortcut, the flag is
altered on the alias, not on the original file.
# File File.relativeURI #
File.relativeURI #

  String relativeURI

Description #

The path name for the object in URI notation, relative to the current
folder.
# File File.remove #
File.remove #

  bool remove ()

Description #

Deletes the file associated with this object from disk immediately,
without moving it to the system trash.

Does not resolve aliases; instead, deletes the referenced alias or
shortcut file itself. Returns true if the file was successfully removed.
IMPORTANT: Cannot be undone. It is recommended that you prompt the user
for permission before deleting.
# File File.rename #
File.rename #

  bool rename ( String newName )

Parameters #

  --------------- -------------------------------------------------------
  newName         The new file name, with no path information.

  --------------- -------------------------------------------------------

Description #

Renames the associated file.

Does not resolve aliases, but renames the referenced alias or shortcut
file itself. Returns true if the file was successfully renamed.
# File File.resolve #
File.resolve #

  File resolve ()

Description #

Attempts to resolve the file-system alias or shortcut that this object
refers to.

If successful, creates and returns a new File object that points to the
resolved file system element. Returns null if this object does not refer
to an alias, or if the alias could not be resolved.
# File File.saveDialog #
File.saveDialog #

  File saveDialog ( String prompt , any filter )

Parameters #

  --------- -------------------------------------------------------------
  prompt    The prompt text, displayed if the dialog allows a prompt.

  filter    In Windows only, a filter that limits the types of files
            displayed in the dialog.
  --------- -------------------------------------------------------------

Description #

Opens a dialog so the user can select a file name to save to.

Opens the built-in platform-specific file-browsing dialog in which a
user can select an existing file location to which to save information,
and creates a new File object to represent the selected file location.
If the user clicks OK, returns a File object for the selected file
location. If the user cancels, returns null.
# File File.saveDlg #
File.saveDlg #

  File saveDlg ( String prompt , any filter )

Parameters #

  --------- -------------------------------------------------------------
  prompt    A string containing the prompt text, if the dialog allows a
            prompt.

  filter    In Windows only, a filter that limits the types of files
            displayed in the dialog.
  --------- -------------------------------------------------------------

Description #

Opens the built-in platform-specific file-browsing dialog, in which the
user can select an existing file location to which to save information,
and creates a new File object to represent the selected file.

Differs from the class method saveDialog() in that it presets the
current folder to this File object?s parent folder and the file to this
object?s associated file. If the user clicks OK, returns a File object
for the selected file. If the user cancels, returns null.
# File File.seek #
File.seek #

  bool seek ( Number pos , Number mode )

Parameters #

  ------ ------------------------------------------------------------------
  pos    The new current position in the file as an offset in bytes from
         the start, current position, or end, depending on the?mode.

  mode   The seek mode.
  ------ ------------------------------------------------------------------

Description #

Seeks to a given position in the file.

The new position cannot be less than 0 or greater than the current file
size. Returns true if the position was changed.
# File File.tell #
File.tell #

  Number tell ()

Description #

Retrieves the current position as a byte offset from the start of the
file.

Returns a number, the position index.
# File File.toSource #
File.toSource #

  String toSource ()

Description #

Creates and returns a serialized string representation of this object.

Pass the resulting string to?eval()?to recreate the object.
# File File.toString #
File.toString #

  String toString ()

Description #

Converts this object to a string.
# File File.type #
File.type #

  String type

Description #

The file type as a four-character string.

In Mac OS, the Mac OS file type. In Windows, “appl” for .EXE files,
“shlb” for .DLL files and “TEXT” for any other file.
# File File.write #
File.write #

  bool write ( String text )

Parameters #

  ----------------- -----------------------------------------------------
  text              A text string to be written.

  ----------------- -----------------------------------------------------

Description #

Writes the specified text to the file at the current position.

You can supply multiple?text?values; the strings are concatenated to
form a single string.For encoded files, writing a single Unicode
character may write multiple bytes. Returns true if the write was
successful.IMPORTANT: Be careful not to write to a file that is open in
another application or object, as this can overwrite existing data.
# File File.writeln #
File.writeln #

  bool writeln ( String text )

Parameters #

  ----------------- -----------------------------------------------------
  text              A text string to be written.

  ----------------- -----------------------------------------------------

Description #

Writes a string to the file at the current position and appends a
line-feed sequence.

You can supply multiple?text?values. The strings are concatenated into a
single string, which is written in the file followed by one line-feed
sequence, of the style specified by this object’s?linefeed?property.For
encoded files, writing a single Unicode character may write multiple
bytes. Returns true if the write was successful.IMPORTANT: Be careful
not to write to a file that is open in another application or object, as
this can overwrite existing data.
# Folder Folder.absoluteURI #
Folder.absoluteURI #

  String absoluteURI

Description #

The full path name for the referenced folder in URI notation.
# Folder Folder.alias #
Folder.alias #

  bool alias

Description #

When true, the object refers to a file system alias or shortcut.
# Folder Folder.appData #
Folder.appData #

  Folder appData

Description #

The folder containing the application data for all users.

In Windows, the value of %APPDATA% (by default, C:\Documents and
Settings\All Users\Application Data) In Mac OS, /Library/Application
Support
# Folder Folder.appPackage #
Folder.appPackage #

  Folder appPackage

Description #

In Mac OS, a Folder object for the folder containing the bundle of the
running application.
# Folder Folder.changePath #
Folder.changePath #

  bool changePath ( String path )

Parameters #

  ------- ---------------------------------------------------------------
  path    A string containing the new path, absolute or relative to the
          current folder.

  ------- ---------------------------------------------------------------

Description #

Changes the path specification of the referenced folder.
# Folder Folder.commonFiles #
Folder.commonFiles #

  Folder commonFiles

Description #

A Folder object for the folder containing common files for all programs
installed by the user.

In Windows, the value of %CommonProgramFiles% (by default, C:\Program
Files\Common Files) In Mac OS, /Library/Application Support
# Folder Folder.created #
Folder.created #

  Date created

Description #

The creation date of the referenced folder, or null if the object does
not refer to a folder on disk.
# Folder Folder.create #
Folder.create #

  bool create ()

Description #

Creates a folder at the location given by this object’s?path?property.

Returns true if the folder was created.
# Folder Folder.current #
Folder.current #

  Folder current

Description #

A Folder object for the current folder.

Assign a Folder object or a string containing the new path name to set
the current folder. This is a class property accessed through the Folder
constructor.
# Folder Folder.decode #
Folder.decode #

  String decode ( String uri )

Parameters #

  ----------------- -----------------------------------------------------
  uri               The UTF-8 string to decode.

  ----------------- -----------------------------------------------------

Description #

Decodes a UTF-8 encoded string as required by RFC 2396, and returns the
decoded string.

See also?String.decodeURI().
# Folder Folder.desktop #
Folder.desktop #

  Folder desktop

Description #

A Folder object for the folder that contains the user?s desktop.

In Windows, C:\Documents and Settings\username\Desktop In Mac OS,
~/Desktop
# Folder Folder.displayName #
Folder.displayName #

  String displayName

Description #

The localized name portion of the absolute URI for the referenced
folder, without the path specification.
# Folder Folder.encode #
Folder.encode #

  String encode ( String name )

Parameters #

  --------------------- -------------------------------------------------
  name                  The string to encode.

  --------------------- -------------------------------------------------

Description #

Encodes a string as required by RFC 2396, and returns the encoded
string.

All special characters are encoded in UTF-8 and stored as escaped
characters starting with the percent sign followed by two hexadecimal
digits. For example, the string “my file” is encoded as “my%20file”.
Special characters are those with a numeric value greater than 127,
except the following: / - _ . ! ~ * ‘ ( ) See also?encodeURI().
# Folder Folder.error #
Folder.error #

  String error

Description #

A message describing the most recent file system error.

Typically set by the file system, but a script can set it. Setting this
value clears any error message and resets the error bit for opened
files. Contains the empty string if there is no error.
# Folder Folder.execute #
Folder.execute #

  bool execute ()

Description #

Opens this folder in the platform-specific file browser (as if it had
been double-clicked in the file browser).

Returns true immediately if the folder was opened successfully.
# Folder Folder.exists #
Folder.exists #

  bool exists

Description #

When true, this object refers to a folder that currently exists in the
file system.
# Folder Folder.Folder #
Folder.Folder #

  Folder Folder ( String path )

Parameters #

  ------ ----------------------------------------------------------------
  path   The absolute or relative path to the folder associated with this
         object, specified in URI format.

  ------ ----------------------------------------------------------------

Description #

Creates and returns a new Folder object referring to a given file-system
location.

If the path name refers to an already existing disk file, a File object
is returned instead. Returns the new Folder object.
# Folder Folder.fs #
Folder.fs #

  String fs

Description #

The name of the current file system.

One of “Windows”, “Macintosh”, or “Unix”.
# Folder Folder.fsName #
Folder.fsName #

  String fsName

Description #

The platform-specific name of the referenced folder as a full path name.
# Folder Folder.fullName #
Folder.fullName #

  String fullName

Description #

The full path name for the referenced folder in URI notation. .
# Folder Folder.getFiles #
Folder.getFiles #

  Array getFiles (any mask )

Parameters #

  --------- -------------------------------------------------------------
  mask      A search mask for file names, specified as a string or a
            function.

  --------- -------------------------------------------------------------

Description #

Retrieves the contents of this folder, filtered by the supplied mask.

Returns an array of File and Folder objects, or null if this object’s
referenced folder does not exist.
# Folder Folder.getRelativeURI #
Folder.getRelativeURI #

  String getRelativeURI ( String basePath )

Parameters #

  ---------------------- ------------------------------------------------
  basePath               A base path in URI notation.

  ---------------------- ------------------------------------------------

Description #

Retrieves and returns the path for this file, relative to the specified
base path, in URI notation.

If no base path is supplied, the URI is relative to the path of the
current folder. Returns a string containing the relative URI.
# Folder Folder.isEncodingAvailable #
Folder.isEncodingAvailable #

  bool isEncodingAvailable ( String name )

Parameters #

  ----------------------- -----------------------------------------------
  name                    The encoding name.

  ----------------------- -----------------------------------------------

Description #

Reports whether a given encoding is available.
# Folder Folder.modified #
Folder.modified #

  Date modified

Description #

The date of the referenced folder’s last modification, or null if the
object does not refer to a folder on disk.
# Folder Folder.myDocuments #
Folder.myDocuments #

  Folder myDocuments

Description #

A folder pointing to the user’s My Documents folder.

In Windows, C:\Documents and Settings\username\My Documents In Mac OS,
~/Documents
# Folder Folder.name #
Folder.name #

  String name

Description #

The folder name portion of the absolute URI for the referenced file,
without the path specification.
# Folder Folder.parent #
Folder.parent #

  Folder parent

Description #

TThe Folder object for the folder that contains this folder, or null if
this object refers to the root folder of a volume.
# Folder Folder.path #
Folder.path #

  String path

Description #

The path portion of the object absolute URI for the referenced file,
without the folder name.
# Folder Folder.relativeURI #
Folder.relativeURI #

  String relativeURI

Description #

The path name for the referenced folder in URI notation, relative to the
current folder.
# Folder Folder.remove #
Folder.remove #

  bool remove ()

Description #

Deletes the folder associated with this object from disk immediately,
without moving it to the system trash.

Folders must be empty before they can be deleted. Does not resolve
aliases; instead, deletes the referenced alias or shortcut file itself.
Returns true if the file was successfully removed. IMPORTANT: Cannot be
undone. It is recommended that you prompt the user for permission before
deleting.
# Folder Folder.rename #
Folder.rename #

  bool rename ( String newName )

Parameters #

  -------------- --------------------------------------------------------
  newName        The new folder name, with no path information.

  -------------- --------------------------------------------------------

Description #

Renames the associated folder.

Does not resolve aliases, but renames the referenced alias or shortcut
file itself. Returns true if the folder was successfully renamed.
# Folder Folder.resolve #
Folder.resolve #

  Folder resolve ()

Description #

Attempts to resolve the file-system alias or shortcut that this object
refers to.

If successful, creates and returns a new Folder object that points to
the resolved file system element. Returns null if this object does not
refer to an alias, or if the alias could not be resolved.
# Folder Folder.selectDialog #
Folder.selectDialog #

  Folder selectDialog ( String prompt )

Parameters #

  -------------- --------------------------------------------------------
  prompt         The prompt text, if the dialog allows a prompt.

  -------------- --------------------------------------------------------

Description #

Opens the built-in platform-specific file-browsing dialog, and creates a
new File or Folder object for the selected file or folder.

Differs from the object method selectDlg() in that it does not preselect
a folder. If the user clicks OK, returns a File or Folder object for the
selected file or folder. If the user cancels, returns null.
# Folder Folder.selectDlg #
Folder.selectDlg #

  Folder selectDlg ( String prompt )

Parameters #

  -------------- --------------------------------------------------------
  prompt         The prompt text, if the dialog allows a prompt.

  -------------- --------------------------------------------------------

Description #

Opens the built-in platform-specific file-browsing dialog, and creates a
new File or Folder object for the selected file or folder.

Differs from the class method selectDialog() in that it preselects this
folder. If the user clicks OK, returns a File or Folder object for the
selected file or folder. If the user cancels, returns null.
# Folder Folder.startup #
Folder.startup #

  Folder startup

Description #

A Folder object for the folder containing the executable image of the
running application.
# Folder Folder.system #
Folder.system #

  Folder system

Description #

A Folder object for the folder containing the operating system files.

In Windows, the value of %windir% (by default, C:\Windows) In Mac OS,
/System
# Folder Folder.temp #
Folder.temp #

  Folder temp

Description #

A Folder object for the default folder for temporary files.
# Folder Folder.toSource #
Folder.toSource #

  String toSource ()

Description #

Creates and returns a serialized string representation of this object.

Pass the resulting string to?eval()?to recreate the object.
# Folder Folder.toString #
Folder.toString #

  String toString ()

Description #

Converts this object to a string.
# Folder Folder.trash #
Folder.trash #

  Folder trash

Description #

A Folder object for the folder containing deleted items. On Windows, the
trash folder is a virtual folder containing a database; therefore, the
property value is null on Windows.
# Folder Folder.userData #
Folder.userData #

  Folder userData

Description #

A Folder object for the folder containing the user’s application data.

In Windows, the value of %USERDATA% (by default, C:\Documents and
Settings\username\Application Data) In Mac OS, ~/Library/Application
Support.
# Function Function.apply #
Function.apply #

  any apply ( Object thisObj , Array args )

Parameters #

  ------------------------ ----------------------------------------------
  thisObj                  

  args                     An array of arguments.
  ------------------------ ----------------------------------------------

Description #

Apply a?this?object and an argument list to a function.

This function is different from?call(); here, the arguments are
suppliedas an Array object.
# Function Function.arguments #
Function.arguments #

  Object arguments

Description #

The function arguments, packed into an array.

This property is deprecated; use the arguments property within the
function body.
# Function Function.arity #
Function.arity #

  Number arity

Description #

The number of formal arguments.

This property is deprecated; use the length property instead.
# Function Function.call #
Function.call #

  any call ( Object thisObj , any argument )

Parameters #

  -------------------------------------------------------------- ---------
  thisObj                                                        

  argument                                                       
  -------------------------------------------------------------- ---------

Description #

Apply a?this?object and arguments to a function.

This function is different from?apply(); here, the arguments are
supplied one by one.
# Function Function.Function #
Function.Function #

  Function Function ( String arguments , String body )

Parameters #

  --------------- -------------------------------------------------------
  arguments       The list of formal arguments, separated by commas.

  body            The body of the function to create.
  --------------- -------------------------------------------------------

Description #

The Function constructor parses the argument list and creates a Function
object.
# Function Function.length #
Function.length #

  Number length

Description #

The number of formal arguments.
# Function Function.name #
Function.name #

  String name

Description #

The function name.
# Function Function.toSource #
Function.toSource #

  String toSource ()

Description #

Creates a string representation of this object that can be fed back
to?eval()?to re-create an object. Works only with JavaScript functions.
# Function Function.toString #
Function.toString #

  String toString ()

Description #

Returns the function definition as a string.
# global global.alert #
global.alert #

  void alert ( String message , String title , bool errorIcon )

Parameters #

  ---------------- ------------------------------------------------------
  message          The text to display

  title            The title of the alert; ignored on the Macintosh

  errorIcon        Display an Error icon; ignored on the Macintosh
  ---------------- ------------------------------------------------------

Description #

Displays an alert box
# global global.confirm #
global.confirm #

  bool confirm ( String message , bool noAsDefault , String title )

Parameters #

  ---------------- ------------------------------------------------------
  message          The text to display

  noAsDefault      Set to true to set the No button as the default button

  title            The title of the alert; ignored on the Macintosh
  ---------------- ------------------------------------------------------

Description #

Displays an alert box with Yes and No buttons; returns true for Yes
# global global.decodeURIComponent #
global.decodeURIComponent #

  String decodeURIComponent ( String uri )

Parameters #

  --------------------- -------------------------------------------------
  uri                   The text to decode.

  --------------------- -------------------------------------------------

Description #

Decodes a string created with?encodeURIComponent().
# global global.decodeURI #
global.decodeURI #

  String decodeURI ( String uri )

Parameters #

  --------------------- -------------------------------------------------
  uri                   The text to decode.

  --------------------- -------------------------------------------------

Description #

Decodes a string created with?encodeURI().
# global global.encodeURIComponent #
global.encodeURIComponent #

  String encodeURIComponent ( String text )

Parameters #

  ---------------------- ------------------------------------------------
  text                   The text to encode.

  ---------------------- ------------------------------------------------

Description #

Encodes a string after RFC2396.

Create an UTF-8 ASCII encoded version of this string. The string is
converted into UTF-8. Every non-alphanumeric character is encoded as a
percent escape character of the form %xx, where xx is the hex value of
the character. After the conversion to UTF-8 encoding and escaping, it
is guaranteed that the string does not contain characters codes greater
than 127. The list of characters not to be encoded is -_.!~*’(). The
method returns false on errors.
# global global.encodeURI #
global.encodeURI #

  String encodeURI ( String text )

Parameters #

  ---------------------- ------------------------------------------------
  text                   The text to encode.

  ---------------------- ------------------------------------------------

Description #

Encodes a string after RFC2396.

Create an UTF-8 ASCII encoded version of this string. The string is
converted into UTF-8. Every non-alphanumeric character is encoded as a
percent escape character of the form %xx, where xx is the hex value of
the character. After the conversion to UTF-8 encoding and escaping, it
is guaranteed that the string does not contain characters codes greater
than 127. The list of characters not to be encoded is
-_.!~*’();/?:@&=+$,#. The method returns false on errors.
# global global.escape #
global.escape #

  String escape ( String aString )

Parameters #

  ----------------------- ------------------------------------------------
  aString                 The string to be encoded.

  ----------------------- ------------------------------------------------

Description #

Creates a URL-encoded string from aString.

In the new string, characters of aString that require URL encoding are
replaced with the format %xx, where xx is the hexadecimal value of the
character code in the Unicode character set. This format is used to
transmit information appended to a URL during, for example, execution of
the GET method. Use the unescape() global function to translate the
string back into its original format. Returns a string which is aString
URL-encoded.
# global global.eval #
global.eval #

  any eval ( String stringExpression )

Parameters #

  --------------------------------- -------------------------------------
  stringExpression                  The string to evaluate.

  --------------------------------- -------------------------------------

Description #

Evaluates its argument as a JavaScript script, and returns the result of
evaluation.

You can pass the result of an object’s toSource() method to reconstruct
that object.
# global global.Infinity #
global.Infinity #

  Number Infinity

Description #

The Infinity global property is a predefined variable with the value for
infinity.
# global global.isFinite #
global.isFinite #

  bool isFinite ( Number expression )

Parameters #

  ---------------------- ------------------------------------------------
  expression             Any valid JavaScript expression.

  ---------------------- ------------------------------------------------

Description #

Evaluates an expression and reports whether the result is a finite
number.

Returns true if the expression is a finite number, false otherwise.
False if the value is infinity or negative infinity.
# global global.isNaN #
global.isNaN #

  bool isNaN ( Number expression )

Parameters #

  ---------------------- ------------------------------------------------
  expression             Any valid JavaScript expression.

  ---------------------- ------------------------------------------------

Description #

Evaluates an expression and reports whether the result is “Not-a-Number”
(NaN).

Returns true if the result of evaluation is not a number (NaN), false if
the value is a number.
# global global.isXMLName #
global.isXMLName #

  bool isXMLName ( String name )

Parameters #

  --------------------- -------------------------------------------------
  name                  The XML name to test.

  --------------------- -------------------------------------------------

Description #

Returns true if the supplied string is a valid XML name.
# global global.localize #
global.localize #

  String localize ( String what , any argument )

Parameters #

  ---------- ---------------------------------------------------------------
  what       The string to localize. A ZString-encoded string that can
             contain placeholder for additional arguments in the form %1 to
             %n.

  argument   Optional argument(s) to be merged into the string. There may be
             more than one argument.
  ---------- ---------------------------------------------------------------

Description #

Localizes a ZString-encoded string and merges additional arguments into
the string.
# global global.NaN #
global.NaN #

  Number NaN

Description #

The NaN global property is a predefined variable with the value NaN
(Not-a-Number), as specified by the IEEE-754 standard.
# global global.parseFloat #
global.parseFloat #

  Number parseFloat ( String text )

Parameters #

  --------- -------------------------------------------------------------
  text      The string from which to extract a floating point number.

  --------- -------------------------------------------------------------

Description #

Extracts a floating-point number from a string.

Parses a string to find the first set of characters that can be
converted to a floating point number, and returns that number, or NaN if
it does not encounter characters that it can converted to a number. The
function supports exponential notation.
# global global.parseInt #
global.parseInt #

  Number parseInt ( String text , Number base )

Parameters #

  --------- -------------------------------------------------------------
  text      The string from which to extract an integer.

  base      The base of the string to parse (from base 2 to base 36).
  --------- -------------------------------------------------------------

Description #

Extracts an integer from a string.

Parses a string to find the first set of characters, in a specified
base, that can be converted to an integer, and returns that integer, or
NaN if it does not encounter characters that it can convert to a number.
# global global.prompt #
global.prompt #

  String prompt ( String prompt , String default , String title )

Parameters #

  -------------- --------------------------------------------------------
  prompt         The text to display

  default        The default text to preset the edit field with

  title          The title of the dialog;
  -------------- --------------------------------------------------------

Description #

Displays a dialog allowing the user to enter text

Returns null if the user cancelled the dialog, the text otherwise
# global global.setDefaultXMLNamespace #
global.setDefaultXMLNamespace #

  void setDefaultXMLNamespace ( Namespace namespace )

Parameters #

  --------------------------- -------------------------------------------
  namespace                   The namespace to use.

  --------------------------- -------------------------------------------

Description #

Defines the default XML namespace.

This is a replacement function for the standard JavaScript statement?set
default xml namespace.
# global global.undefined #
global.undefined #

  undefined undefined

Description #

This global property is a predefined variable with the value for an
undefined value.
# global global.unescape #
global.unescape #

  String unescape ( String stringExpression )

Parameters #

  -------------------------- --------------------------------------------
  stringExpression           The URL-encoded string to convert.

  -------------------------- --------------------------------------------

Description #

Translates URL-encoded string into a regular string, and returns that
string.

Use the escape() global function to URL-encode strings.
# global global.uneval #
global.uneval #

  String uneval (any what )

Parameters #

  --------------------- -------------------------------------------------
  what                  The object to uneval.

  --------------------- -------------------------------------------------

Description #

Creates a source code representation of the supplied argument, and
returns it as a string.
# Math Math.abs #
Math.abs #

  Number abs ( Number x )

Parameters #

  --------------------------- -------------------------------------------
  x                           A number.

  --------------------------- -------------------------------------------

Description #

Returns the absolute value of a number.
# Math Math.acos #
Math.acos #

  Number acos ( Number x )

Parameters #

  --------------------------- -------------------------------------------
  x                           A number.

  --------------------------- -------------------------------------------

Description #

Returns the arc cosine(in radians) of a number.
# Math Math.asin #
Math.asin #

  Number asin ( Number x )

Parameters #

  --------------------------- -------------------------------------------
  x                           A number.

  --------------------------- -------------------------------------------

Description #

Returns the arc sin(in radians) of a number.
# Math Math.atan2 #
Math.atan2 #

  Number atan2 ( Number y , Number x )

Parameters #

  --------------------------- -------------------------------------------
  y                           A number.

  x                           A number.
  --------------------------- -------------------------------------------

Description #

Returns the arc tangent of the quotient of its arguments (y/x).
# Math Math.atan #
Math.atan #

  Number atan ( Number x )

Parameters #

  --------------------------- -------------------------------------------
  x                           A number.

  --------------------------- -------------------------------------------

Description #

Returns the arc tangent(in radians) of a number.
# Math Math.ceil #
Math.ceil #

  Number ceil ( Number x )

Parameters #

  --------------------------- -------------------------------------------
  x                           A number.

  --------------------------- -------------------------------------------

Description #

Rounds the number up to the nearest integer.
# Math Math.cos #
Math.cos #

  Number cos ( Number x )

Parameters #

  ---------------- ------------------------------------------------------
  x                An angle, in radians.

  ---------------- ------------------------------------------------------

Description #

Returns the cosine of an angle provided in radians.
# Math Math.E #
Math.E #

  Number E

Description #

Euler’s constant and the base of natural logarithms.
# Math Math.exp #
Math.exp #

  Number exp ( Number x )

Parameters #

  --------------------------- -------------------------------------------
  x                           A number.

  --------------------------- -------------------------------------------

Description #

Returns Math.E raised to the power of a number.
# Math Math.floor #
Math.floor #

  Number floor ( Number x )

Parameters #

  --------------------------- -------------------------------------------
  x                           A number.

  --------------------------- -------------------------------------------

Description #

Rounds a number down to the nearest integer.
# Math Math.LN10 #
Math.LN10 #

  Number LN10

Description #

The natural logarithm of 10.
# Math Math.LN2 #
Math.LN2 #

  Number LN2

Description #

The natural logarithm of 2.
# Math Math.LOG10E #
Math.LOG10E #

  Number LOG10E

Description #

The base 10 logarithm of e.
# Math Math.LOG2E #
Math.LOG2E #

  Number LOG2E

Description #

The base 2 logarithm of e.
# Math Math.log #
Math.log #

  Number log ( Number x )

Parameters #

  --------------------------- -------------------------------------------
  x                           A number.

  --------------------------- -------------------------------------------

Description #

Returns the natural logarithm of a number.
# Math Math.max #
Math.max #

  Number max ( Number value1, value2, … )

Parameters #

  -------------------------------------------------- --------------------
  value1, value2, …                                  Numbers.

  -------------------------------------------------- --------------------

Description #

Returns the largest of zero or more numbers.
# Math Math.min #
Math.min #

  Number min ( Number value1, value2, … )

Parameters #

  -------------------------------------------------- --------------------
  value1, value2, …                                  Numbers.

  -------------------------------------------------- --------------------

Description #

Returns the smallest of zero or more numbers.
# Math Math.PI #
Math.PI #

  Number PI

Description #

The ratio of the circumference of a circle to its diameter.
# Math Math.pow #
Math.pow #

  Number pow ( Number x , Number y )

Parameters #

  ----------------------------- -----------------------------------------
  x                             Numbers.

  y                             
  ----------------------------- -----------------------------------------

Description #

Returns x raised to the power of y.
# Math Math.random #
Math.random #

  Number random ()

Description #

Returns a pseudo-random number from 0.0 up to but not including 1.0.
# Math Math.round #
Math.round #

  Number round ( Number x )

Parameters #

  --------------------------- -------------------------------------------
  x                           A number.

  --------------------------- -------------------------------------------

Description #

Rounds a number to the nearest integer.
# Math Math.sin #
Math.sin #

  Number sin ( Number x )

Parameters #

  ---------------- ------------------------------------------------------
  x                An angle, in radians.

  ---------------- ------------------------------------------------------

Description #

Returns the sine of an angle provided in radians.
# Math Math.SQRT1_2 #
Math.SQRT1_2 #

  Number SQRT1_2

Description #

The reciprocal of the square root of 1/2.
# Math Math.SQRT2 #
Math.SQRT2 #

  Number SQRT2

Description #

The square root of 2.
# Math Math.sqrt #
Math.sqrt #

  Number sqrt ( Number x )

Parameters #

  --------------------------- -------------------------------------------
  x                           A number.

  --------------------------- -------------------------------------------

Description #

Returns the square root of a number.
# Math Math.tan #
Math.tan #

  Number tan ( Number x )

Parameters #

  ---------------- ------------------------------------------------------
  x                An angle, in radians.

  ---------------- ------------------------------------------------------

Description #

Returns the tangent of an angle provided in radians.
# Namespace Namespace.Namespace #
Namespace.Namespace #

  Namespace Namespace (any prefix , String uri )

Parameters #

  -------- --------------------------------------------------------------
  prefix   The URI prefix, specified as an existing Namespace object,
           QName object, or string.

  uri      The URI if the prefix is specified as a string.
  -------- --------------------------------------------------------------

Description #

Creates a Namespace object.
# Namespace Namespace.prefix #
Namespace.prefix #

  String prefix

Description #

The named prefix.
# Namespace Namespace.uri #
Namespace.uri #

  String uri

Description #

The URI.
# Number Number.MAX_VALUE #
Number.MAX_VALUE #

  Number MAX_VALUE

Description #

A constant representing the largest representable number.
# Number Number.MIN_VALUE #
Number.MIN_VALUE #

  Number MIN_VALUE

Description #

A constant representing the smallest representable number.
# Number Number.NaN #
Number.NaN #

  Number NaN

Description #

A constant representing the special “Not a Number” value.
# Number Number.NEGATIVE_INFINITY #
Number.NEGATIVE_INFINITY #

  Number NEGATIVE_INFINITY

Description #

A constant representing negative infinity.
# Number Number.Number #
Number.Number #

  Number Number (any value )

Parameters #

  --------------- -------------------------------------------------------
  value           The value of the object being created.

  --------------- -------------------------------------------------------

Description #

Returns a new Number object set to the value of the argument converted
to a number.
# Number Number.POSITIVE_INFINITY #
Number.POSITIVE_INFINITY #

  Number POSITIVE_INFINITY

Description #

A constant representing positive infinity.
# Number Number.toExponential #
Number.toExponential #

  Number toExponential ( Number decimals )

Parameters #

  ------------------------- ---------------------------------------------
  decimals                  The number of decimals.

  ------------------------- ---------------------------------------------

Description #

Converts the Number object to a string in scientific notation.
# Number Number.toFixed #
Number.toFixed #

  Number toFixed ( Number decimals )

Parameters #

  ------------------------- ---------------------------------------------
  decimals                  The number of decimals.

  ------------------------- ---------------------------------------------

Description #

Converts the Number object to a string with fixed decimals.
# Number Number.toLocaleString #
Number.toLocaleString #

  Number toLocaleString ()

Description #

Returns the value of a Number object converted to a string, using
localized conventions.
# Number Number.toPrecision #
Number.toPrecision #

  Number toPrecision ( Number decimals )

Parameters #

  ------------------------- ---------------------------------------------
  decimals                  The number of decimals.

  ------------------------- ---------------------------------------------

Description #

Converts the Number object to a string in either scientific or fixed
notation, epending on its value.
# Number Number.toSource #
Number.toSource #

  Number toSource ()

Description #

Creates a string representation of this object that can be fed back
to?eval()?to re-create an object. Works only with built-in classes.
# Number Number.toString #
Number.toString #

  Number toString ( Number radix )

Parameters #

  ------------------ ----------------------------------------------------
  radix              The optional conversion radix.

  ------------------ ----------------------------------------------------

Description #

Returns the value of a Number object converted to a string.
# Number Number.valueOf #
Number.valueOf #

  Number valueOf ()

Description #

Returns the value of a Number object as a primitive number.
# Object Object.constructor #
Object.constructor #

  Function constructor

Description #

Points to the constructor function that created this object.

Note that this property is treated as an XML element in the XML class.
# Object Object.hasOwnProperty #
Object.hasOwnProperty #

  bool hasOwnProperty ( String name )

Parameters #

  --------------- -------------------------------------------------------
  name            The name of the property to check.

  --------------- -------------------------------------------------------

Description #

Reports whether a given property is defined with an instance or within
the prototype chain.
# Object Object.isPrototypeOf #
Object.isPrototypeOf #

  bool isPrototypeOf ( Object what )

Parameters #

  ---------------------- ------------------------------------------------
  what                   The object to check.

  ---------------------- ------------------------------------------------

Description #

Checks whether the given object is a prototype of this object.
# Object Object.isValid #
Object.isValid #

  bool isValid ( Object what )

Parameters #

  ---------------------- ------------------------------------------------
  what                   The object to check.

  ---------------------- ------------------------------------------------

Description #

Reports whether an object is still valid.
# Object Object.Object #
Object.Object #

  Object Object (any what )

Parameters #

  ------------------------- ---------------------------------------------
  what                      The object type.

  ------------------------- ---------------------------------------------

Description #

Creates and returns a new object of a given type.
# Object Object.propertyIsEnumerable #
Object.propertyIsEnumerable #

  bool propertyIsEnumerable ( String name )

Parameters #

  --------------- -------------------------------------------------------
  name            The name of the property to check.

  --------------- -------------------------------------------------------

Description #

Reports whether a given property is enumerable.
# Object Object.prototype #
Object.prototype #

  Object prototype

Description #

Points to the prototype object for this object.

Note that this property is treated as an XML element in the XML class.
# Object Object.reflect #
Object.reflect #

  Reflection reflect

Description #

Retrieves and returns the Reflection object associated with this method
or a property.

Note that this property is treated as an XML element in the XML class.
# Object Object.toLocaleString #
Object.toLocaleString #

  String toLocaleString ()

Description #

Creates and returns a string representing this object, localized for the
current locale. See?toString().
# Object Object.toSource #
Object.toSource #

  String toSource ()

Description #

Creates and returns a string representation of this object.

This function serializes the object, so that it can, for example, be
passed between engines. Pass the returned string back to?eval()?to
recreate the object. Works only with built-in classes.
# Object Object.toString #
Object.toString #

  String toString ()

Description #

Creates and returns a string representing this object.

Many objects (such as?Date) override this method in favor of their own
implementation. If an object has no string value and no user-defined
toString() method, the default method returns [object type],
where?type?is the object type or the name of the constructor function
that created the object.
# Object Object.unwatch #
Object.unwatch #

  void unwatch ( String name )

Parameters #

  -------------- --------------------------------------------------------
  name           The name of the property to unwatch.

  -------------- --------------------------------------------------------

Description #

Removes the watch function of a property.
# Object Object.valueOf #
Object.valueOf #

  Object valueOf ()

Description #

Retrieves and returns the primitive value of this object.

If the object has no primitive value, returns the object itself. Note
that you rarely need to call this method yourself. The JavaScript
interpreter automatically invokes it when encountering an object where a
primitive value is expected.
# Object Object.watch #
Object.watch #

  void watch ( String name , Function func )

Parameters #

  --------- -------------------------------------------------------------
  name      The name of the property to watch.

  func      The function to be called when the value of this property
            changes.
  --------- -------------------------------------------------------------

Description #

Adds a watch function to a property, which is called when the value
changes.

This function can accept, modify, or reject a new value that the user,
application, or a script has attempted to place in a property.
# QName QName.localName #
QName.localName #

  String localName

Description #

The local name part of the qualified name.
# QName QName.QName #
QName.QName #

  QName QName (any uri , String name )

Parameters #

  ------- ---------------------------------------------------------------
  uri     The URI, specified as a Namespace object, an existing QName
          object, or string.

  name    The local name. Used only if URI is given as a string.
  ------- ---------------------------------------------------------------

Description #

Creates a QName object.
# QName QName.uri #
QName.uri #

  String uri

Description #

The URI part of the qualified name.
# Reflection Reflection.description #
Reflection.description #

  String description

Description #

The long description text.
# Reflection Reflection.find #
Reflection.find #

  ReflectionInfo find ( String name )

Parameters #

  ---------------- ------------------------------------------------------
  name             The name of the element to find.

  ---------------- ------------------------------------------------------

Description #

Finds an element description by name.
# Reflection Reflection.help #
Reflection.help #

  String help

Description #

The short description text.
# ReflectionInfo ReflectionInfo.arguments #
ReflectionInfo.arguments #

  ReflectionInfo arguments

Description #

The description of method or function arguments.
# ReflectionInfo ReflectionInfo.dataType #
ReflectionInfo.dataType #

  String dataType

Description #

The data type.
# ReflectionInfo ReflectionInfo.defaultValue #
ReflectionInfo.defaultValue #

  any defaultValue

Description #

The default value.
# ReflectionInfo ReflectionInfo.description #
ReflectionInfo.description #

  String description

Description #

The long description text.
# ReflectionInfo ReflectionInfo.help #
ReflectionInfo.help #

  String help

Description #

The short description text.
# ReflectionInfo ReflectionInfo.isCollection #
ReflectionInfo.isCollection #

  bool isCollection

Description #

Contains true if the class describes a collection class.
# ReflectionInfo ReflectionInfo.max #
ReflectionInfo.max #

  Number max

Description #

The maximum value.
# ReflectionInfo ReflectionInfo.min #
ReflectionInfo.min #

  Number min

Description #

The minimum value.
# ReflectionInfo ReflectionInfo.name #
ReflectionInfo.name #

  String name

Description #

The element name.
# ReflectionInfo ReflectionInfo.parent #
ReflectionInfo.parent #

  Reflection parent

Description #

The class object that this element belongs to.
# ReflectionInfo ReflectionInfo.sampleCode #
ReflectionInfo.sampleCode #

  String sampleCode

Description #

Sample code, if present.
# ReflectionInfo ReflectionInfo.sampleFile #
ReflectionInfo.sampleFile #

  File sampleFile

Description #

A file containing sample code. May be null.
# ReflectionInfo ReflectionInfo.type #
ReflectionInfo.type #

  String type

Description #

The element type.

One of unknown, readonly, readwrite, createonly, method or parameter.
# Reflection Reflection.methods #
Reflection.methods #

  ReflectionInfo methods

Description #

An array of method descriptions.
# Reflection Reflection.name #
Reflection.name #

  String name

Description #

The class name.
# Reflection Reflection.properties #
Reflection.properties #

  ReflectionInfo properties

Description #

An array of property descriptions.
# Reflection Reflection.sampleCode #
Reflection.sampleCode #

  String sampleCode

Description #

Sample code, if present.
# Reflection Reflection.sampleFile #
Reflection.sampleFile #

  File sampleFile

Description #

A file containing sample code. May be null.
# Reflection Reflection.staticMethods #
Reflection.staticMethods #

  ReflectionInfo staticMethods

Description #

An array of class method descriptions.
# Reflection Reflection.staticProperties #
Reflection.staticProperties #

  ReflectionInfo staticProperties

Description #

An array of class property descriptions.
# Reflection Reflection.toXML #
Reflection.toXML #

  XML toXML ()

Description #

Returns this class information as XML in OMV format.
# RegExp RegExp.$1 #
RegExp.$1 #

  String $1

Description #

The matched subexpression #1.
# RegExp RegExp.$2 #
RegExp.$2 #

  String $2

Description #

The matched subexpression #2.
# RegExp RegExp.$3 #
RegExp.$3 #

  String $3

Description #

The matched subexpression #3.
# RegExp RegExp.$4 #
RegExp.$4 #

  String $4

Description #

The matched subexpression #4.
# RegExp RegExp.$5 #
RegExp.$5 #

  String $5

Description #

The matched subexpression #5.
# RegExp RegExp.$6 #
RegExp.$6 #

  String $6

Description #

The matched subexpression #6.
# RegExp RegExp.$7 #
RegExp.$7 #

  String $7

Description #

The matched subexpression #7.
# RegExp RegExp.$8 #
RegExp.$8 #

  String $8

Description #

The matched subexpression #8.
# RegExp RegExp.$9 #
RegExp.$9 #

  String $9

Description #

The matched subexpression #9.
# RegExp RegExp.compile #
RegExp.compile #

  bool compile ( String pattern )

Parameters #

  ------------------------ ----------------------------------------------
  pattern                  The pattern to compile.

  ------------------------ ----------------------------------------------

Description #

Compiles a string to a regular expression. Returns true if the
compilation was successful.
# RegExp RegExp.exec #
RegExp.exec #

  Array exec ( String text )

Parameters #

  ---------------------- ------------------------------------------------
  text                   The string to match.

  ---------------------- ------------------------------------------------

Description #

Execute a regular expression.

The return value is an array of matches, with the first element
containing the match, and successive elements containing the results of
any matching subexpression in their order of appearance. If there is no
match, the result is null.
# RegExp RegExp.global #
RegExp.global #

  bool global

Description #

Indicates whether the match is a global match.
# RegExp RegExp.ignoreCase #
RegExp.ignoreCase #

  bool ignoreCase

Description #

Indicates whether the match is not case sensitive.
# RegExp RegExp.input #
RegExp.input #

  String input

Description #

The original input string.
# RegExp RegExp.lastMatch #
RegExp.lastMatch #

  String lastMatch

Description #

The last match.
# RegExp RegExp.lastParen #
RegExp.lastParen #

  String lastParen

Description #

The value of the last matched subexpression.
# RegExp RegExp.leftContext #
RegExp.leftContext #

  String leftContext

Description #

The string before the match.
# RegExp RegExp.multiline #
RegExp.multiline #

  bool multiline

Description #

Indicates whether the match matches multiple lines.
# RegExp RegExp.RegExp #
RegExp.RegExp #

  RegExp RegExp ( String pattern , String flags )

Parameters #

  -------------- --------------------------------------------------------
  pattern        The pattern to convert.

  flags          Flags that control how the conversion is performed.
  -------------- --------------------------------------------------------

Description #

Creates and returns a new RegExp object set to the value of the argument
converted to a regular expression.
# RegExp RegExp.rightContext #
RegExp.rightContext #

  String rightContext

Description #

The string after the match.
# RegExp RegExp.test #
RegExp.test #

  bool test ( String text )

Parameters #

  ---------------------- ------------------------------------------------
  text                   The string to match.

  ---------------------- ------------------------------------------------

Description #

Execute a regular expression, and return true if there is a match.
# RegExp RegExp.toString #
RegExp.toString #

  String toString ()

Description #

Converts this RegExp object to a string.
# Socket Socket.close #
Socket.close #

  bool close ()

Description #

Terminates the open connection.

Returns true if the connection was closed, false on I/O errors. Deleting
the object also closes the connection, but not until JavaScript
garbage-collects the object. The connection might stay open longer than
you wish if you do not close it explicitly.
# Socket Socket.connected #
Socket.connected #

  bool connected

Description #

When true, the connection is active.
# Socket Socket.encoding #
Socket.encoding #

  String encoding

Description #

Sets or retrieves the name of the encoding used to transmit data.

Typical values are “ASCII”, “BINARY”, or “UTF-8”.
# Socket Socket.eof #
Socket.eof #

  bool eof

Description #

When true, the receive buffer is empty.
# Socket Socket.error #
Socket.error #

  String error

Description #

A message describing the most recent error. Setting this value clears
any error message.
# Socket Socket.host #
Socket.host #

  String host

Description #

The name of the remote computer when a connection is established.

If the connection is shut down or does not exist, the property contains
the empty string.
# Socket Socket.listen #
Socket.listen #

  bool listen ( Number port , String encoding )

Parameters #

  ----------------- -----------------------------------------------------
  port              The TCP/IP port number to listen on.

  encoding          The encoding to be used for the connection
  ----------------- -----------------------------------------------------

Description #

Instructs the object to start listening for an incoming connection.

The call to open() and the call to listen()are mutually exclusive. Call
one function or the other, not both.
# Socket Socket.open #
Socket.open #

  bool open ( String host , String encoding )

Parameters #

  ----------------- -----------------------------------------------------
  host              The server to connect to.

  encoding          The encoding to be used for the connection
  ----------------- -----------------------------------------------------

Description #

Opens the connection for subsequent read/write operations.

The call to open() and the call to listen() are mutually exclusive. Call
one function or the other, not both.
# Socket Socket.poll #
Socket.poll #

  Socket poll ()

Description #

Checks a listening object for a new incoming connection.

If a connection request was detected, the method returns a new Socket
object that wraps the new connection. Use this connection object to
communicate with the remote computer. After use, close the connection
and delete the JavaScript object. If no new connection request was
detected, the method returns null.
# Socket Socket.read #
Socket.read #

  String read ( Number count )

Parameters #

  ----------------- -----------------------------------------------------
  count             The number of characters to read.

  ----------------- -----------------------------------------------------

Description #

Reads up to the specified number of characters from the connection. CR
characters are ignored unless the encoding is set to “BINARY”.

Returns a string that contains up to the number of characters that were
supposed to be read, or the number of characters read before the
connection closed or timed out.
# Socket Socket.readln #
Socket.readln #

  String readln ()

Description #

Reads one line of text up to the next line feed.

Line feeds are recognized as LF or CRLF pairs. CR characters are
ignored. Returns a string containing the characters.
# Socket Socket.Socket #
Socket.Socket #

  Socket Socket ()

Description #

Creates a new Socket object.
# Socket Socket.timeout #
Socket.timeout #

  Number timeout

Description #

The timeout in seconds to be applied to read or write operations.
# Socket Socket.write #
Socket.write #

  bool write ( String text )

Parameters #

  ------ ------------------------------------------------------------------
  text   Any number of string values. All arguments are concatenated to
         form the string to be written. CRLF sequences are converted to LFs
         unless the encoding is set to “BINARY”.

  ------ ------------------------------------------------------------------

Description #

Concatenates all arguments into a single string and writes that string
to the connection.
# Socket Socket.writeln #
Socket.writeln #

  bool writeln ( String text )

Parameters #

  ------ ------------------------------------------------------------------
  text   Any number of string values. All arguments are concatenated to
         form the string to be written. CRLF sequences are converted to LFs
         unless the encoding is set to “BINARY”.

  ------ ------------------------------------------------------------------

Description #

Concatenates all arguments into a single string, appends a LF character,
and writes that string to the connection.
# String String.anchor #
String.anchor #

  String anchor ( String name )

Parameters #

  ---------- ------------------------------------------------------------
  name       The text to be stored in the anchors’ name attribute.

  ---------- ------------------------------------------------------------

Description #

Returns a string consisting of this string enclosed in a <a> tag.
# String String.big #
String.big #

  String big ()

Description #

Returns a string consisting of this string enclosed in a <big> tag.
# String String.blink #
String.blink #

  String blink ()

Description #

Returns a string consisting of this string enclosed in a <blink> tag.
# String String.bold #
String.bold #

  String bold ()

Description #

Returns a string consisting of this string enclosed in a <b> tag.
# String String.charAt #
String.charAt #

  String charAt ( Number index )

Parameters #

  -------- --------------------------------------------------------------
  index    An integer between 0 and string.length -1, specifying the
           character to return.

  -------- --------------------------------------------------------------

Description #

Returns the character at the specified index.
# String String.charCodeAt #
String.charCodeAt #

  Number charCodeAt ( Number index )

Parameters #

  --------- -------------------------------------------------------------
  index     An integer between 0 and string.length -1, specifying the
            character.

  --------- -------------------------------------------------------------

Description #

Returns the Unicode value of the character at the given index.
# String String.concat #
String.concat #

  String concat ( String value )

Parameters #

  ------------ ----------------------------------------------------------
  value        The values to be concatenated with the given string.

  ------------ ----------------------------------------------------------

Description #

If necessary, converts the one or more given values to strings.

Those values are concatenated with the original string, the result is
returned. The original string is not effected. Returns the concatenated
string.
# String String.fixed #
String.fixed #

  String fixed ()

Description #

Returns a string consisting of this string enclosed in a <tt> tag.
# String String.fontcolor #
String.fontcolor #

  String fontcolor ( String color )

Parameters #

  ------------ ----------------------------------------------------------
  color        The value to be stored in the tag’s color attribute.

  ------------ ----------------------------------------------------------

Description #

Returns a string consisting of this string enclosed in a <font> tag.
# String String.fontsize #
String.fontsize #

  String fontsize ( Number size )

Parameters #

  ----------- -----------------------------------------------------------
  size        The value to be stored in the tag’s size attribute.

  ----------- -----------------------------------------------------------

Description #

Returns a string consisting of this string enclosed in a <font> tag.
# String String.fromCharCode #
String.fromCharCode #

  String fromCharCode ( Number value1 )

Parameters #

  ---------------------- ------------------------------------------------
  value1                 One or more ASCII values.

  ---------------------- ------------------------------------------------

Description #

Returns a string created by concatenation one or more characters
specified as ASCII values.
# String String.indexOf #
String.indexOf #

  Number indexOf ( String searchValue , Number offset )

Parameters #

  ---------------------- ------------------------------------------------
  searchValue            The string for which to search.

  offset                 The starting offset of the search.
  ---------------------- ------------------------------------------------

Description #

Returns the index within the string of the first occurrence of the
specified string, starting the search at fromIndex if provided.
# String String.italics #
String.italics #

  String italics ()

Description #

Returns a string consisting of this string enclosed in a <i> tag.
# String String.lastIndexOf #
String.lastIndexOf #

  Number lastIndexOf ( String searchValue , Number offset )

Parameters #

  ---------------------- ------------------------------------------------
  searchValue            The string for which to search.

  offset                 The starting offset of the search.
  ---------------------- ------------------------------------------------

Description #

Returns the index within the string of the last occurrence of the
specified value.

The string is searched backward, starting at fromIndex. Returns the
index within the string where the last occurrence of searchValue was
found, or -1 if it was not found.
# String String.length #
String.length #

  Number length

Description #

The length of the string.
# String String.link #
String.link #

  String link ( String href )

Parameters #

  ----------- -----------------------------------------------------------
  href        The value to be stored in the tag’s href attribute.

  ----------- -----------------------------------------------------------

Description #

Returns a string consisting of this string enclosed in a <a> tag.
# String String.localeCompare #
String.localeCompare #

  Number localeCompare ( String what )

Parameters #

  ------------------ ----------------------------------------------------
  what               The string to compare with.

  ------------------ ----------------------------------------------------

Description #

Performs a localized comparison of two strings.
# String String.match #
String.match #

  Array match ( RegExp regexp )

Parameters #

  ------------------- ---------------------------------------------------
  regexp              The regular expression to use.

  ------------------- ---------------------------------------------------

Description #

Matches a string against a regular expression.
# String String.replace #
String.replace #

  String replace (any what , String with )

Parameters #

  ---------------------------------------------------------- ------------
  what                                                       

  with                                                       
  ---------------------------------------------------------- ------------

Description #
# String String.search #
String.search #

  Number search ( RegExp search )

Parameters #

  ------------------------------------------------------------- ---------
  search                                                        

  ------------------------------------------------------------- ---------

Description #
# String String.slice #
String.slice #

  String slice ( Number startSlice , Number endSlice )

Parameters #

  ------------------- ---------------------------------------------------
  startSlice          The index at which to begin extraction.

  endSlice            The index at which to end extraction.
  ------------------- ---------------------------------------------------

Description #

Extracts a substring of the given string and returns it as a new string.

The substring begins at startSlice, and includes all characters up to,
but not including the character at the index endSlice. A negative value
indexes from the end of the string. For example, a negative value for
startSlice is resolved as: string. length + startSlice. The original
string is unchanged. Returns a substring of characters from the given
string, starting at startSlice and ending with endSlice-1.
# String String.small #
String.small #

  String small ()

Description #

Returns a string consisting of this string enclosed in a <small> tag.
# String String.split #
String.split #

  String split ( String delimiter , Number limit )

Parameters #

  ----------------- -----------------------------------------------------
  delimiter         Specifies the string to use for delimiting.

  limit             
  ----------------- -----------------------------------------------------

Description #

Splits a string into a group of substrings, places those strings in an
array, and returns the array.

The substrings are created by breaking the original string at places
that match delimiter, the delimiter characters are removed. Returns an
array whose elements are the substrings.
# String String.strike #
String.strike #

  String strike ()

Description #

Returns a string consisting of this string enclosed in a <strike> tag.
# String String.String #
String.String #

  String String (any value )

Parameters #

  ------------ ----------------------------------------------------------
  value        A number, variable, or object to convert to a string.

  ------------ ----------------------------------------------------------

Description #

Returns a string representation of the value given as an argument.
# String String.sub #
String.sub #

  String sub ()

Description #

Returns a string consisting of this string enclosed in a <sub> tag.
# String String.substr #
String.substr #

  String substr ( Number start , Number length )

Parameters #

  ------------- ---------------------------------------------------------
  start         Location at which to begin extracting characters.

  length        (OptIonal) The number of characters to extract.
  ------------- ---------------------------------------------------------

Description #

Returns a string containing the characters beginning at the specified
index, start, through the specified number of characters.

The original string is unchanged. Returns a string containing the
extracted characters.
# String String.substring #
String.substring #

  String substring ( Number indexA , Number indexB )

Parameters #

  ------------- ---------------------------------------------------------
  indexA        The index to begin extracting.

  indexB        (Optional) The index at which to end extraction.
  ------------- ---------------------------------------------------------

Description #

Returns a substring of the given string by extracting characters from
indexA up to but not including indexB.

The original string is unchanged. Returns a substring of characters from
the given string, starting at indexA and ending with indexB-1.
# String String.sup #
String.sup #

  String sup ()

Description #

Returns a string consisting of this string enclosed in a <sup> tag.
# String String.toLocaleLowerCase #
String.toLocaleLowerCase #

  String toLocaleLowerCase ()

Description #

Returns a new string which contains all the characters of the original
string converted to lowercase (localized).

The original string is unchanged.
# String String.toLocaleUpperCase #
String.toLocaleUpperCase #

  String toLocaleUpperCase ()

Description #

Returns a new string which contains all the characters of the original
string converted to uppercase (localized).

The original string is unchanged.
# String String.toLowerCase #
String.toLowerCase #

  String toLowerCase ()

Description #

Returns a new string which contains all the characters of the original
string converted to lowercase.

The original string is unchanged.
# String String.toSource #
String.toSource #

  String toSource ()

Description #

Creates a string representation of this object that can be fed back
to?eval()?to re-create an object. Works only with built-in classes.
# String String.toString #
String.toString #

  String toString ()

Description #

Returns itself.
# String String.toUpperCase #
String.toUpperCase #

  String toUpperCase ()

Description #

Returns a new string which contains all the characters of the original
string converted to uppercase.

The original string is unchanged.
# String String.valueOf #
String.valueOf #

  String valueOf ()

Description #

Returns itself.
# UnitValue UnitValue.as #
UnitValue.as #

  UnitValue as ( String unitName )

Parameters #

  --------------------------------- -------------------------------------
  unitName                          The unit name.

  --------------------------------- -------------------------------------

Description #

Returns this instance as a different unit.
# UnitValue UnitValue.baseUnit #
UnitValue.baseUnit #

  UnitValue baseUnit

Description #

The base unit for all conversions.
# UnitValue UnitValue.convert #
UnitValue.convert #

  any convert ( String unitName )

Parameters #

  --------------------------------- -------------------------------------
  unitName                          The unit name.

  --------------------------------- -------------------------------------

Description #

Converts this instance to a different unit.
# UnitValue UnitValue.type #
UnitValue.type #

  String type

Description #

The unit name.
# UnitValue UnitValue.value #
UnitValue.value #

  Number value

Description #

The numeric value.
# XML XML.addNamespace #
XML.addNamespace #

  XML addNamespace ( Namespace namespace )

Parameters #

  --------------------------- -------------------------------------------
  namespace                   The namespace to add.

  --------------------------- -------------------------------------------

Description #

Adds a namespace declaration to the node. Returns the XML object itself.
# XML XML.appendChild #
XML.appendChild #

  XML appendChild ( XML child )

Parameters #

  ---------------------- ------------------------------------------------
  child                  The child XML to add.

  ---------------------- ------------------------------------------------

Description #

Appends the given XML to this XML as a child. Returns the XML object
itself.

If the argument is not XML, creates a new XML element containing the
argument as text. The element name of that new XML is the same as the
last element in the original XML.
# XML XML.attribute #
XML.attribute #

  XML attribute ( String name )

Parameters #

  ---------------- ------------------------------------------------------
  name             The attribute name to look for.

  ---------------- ------------------------------------------------------

Description #

Returns a list containing all attribute elements matching the given
name.
# XML XML.attributes #
XML.attributes #

  XML attributes ()

Description #

Returns a list containing all attribute elements.
# XML XML.child #
XML.child #

  XML child ( String name )

Parameters #

  ------------ ----------------------------------------------------------
  name         The name or the index of the child element.

  ------------ ----------------------------------------------------------

Description #

Returns a list containing all children of this XML matching the given
element name.

If the argument is a number, uses the number as index into the array of
children.
# XML XML.childIndex #
XML.childIndex #

  Number childIndex ()

Description #

Returns a number representing the ordinal position of this XML object
within the context of its parent.
# XML XML.children #
XML.children #

  XML children ()

Description #

Returns an XML object containing all the properties of this XML object
in order.
# XML XML.comments #
XML.comments #

  XML comments ()

Description #

Returns an XML object containing the properties of this XML object that
represent XML comments.
# XML XML.contains #
XML.contains #

  bool contains ( XML xml )

Parameters #

  ------------------- ---------------------------------------------------
  xml                 The XML to search for.

  ------------------- ---------------------------------------------------

Description #

Checks if this XML object contains the given XML object.
# XML XML.copy #
XML.copy #

  XML copy ()

Description #

Creates a copy of this XML object.
# XML XML.defaultSettings #
XML.defaultSettings #

  Object defaultSettings ()

Description #

Returns an object containing the default parsing and print settings for
XML.
# XML XML.descendants #
XML.descendants #

  XML descendants ( String name )

Parameters #

  -------------- --------------------------------------------------------
  name           The name of the descendant to find.

  -------------- --------------------------------------------------------

Description #

Returns all the XML-valued descendants of this XML object with the given
name.

If the name parameter is omitted, returns all descendants of this XML
object.
# XML XML.elements #
XML.elements #

  XML elements ( String name )

Parameters #

  ------- ---------------------------------------------------------------
  name    The element name. If not supplied, gets all children that are
          XML elements.

  ------- ---------------------------------------------------------------

Description #

Returns a list of XML children that are elements with a given name, or
all children that are XML elements.
# XML XML.hasComplexContent #
XML.hasComplexContent #

  bool hasComplexContent ()

Description #

Reports whether this XML object contains complex content.

An XML object is considered to contain complex content if it represents
an XML element that has child elements. XML objects representing
attributes, comments, processing instructions and text nodes do not have
complex content. The existence of attributes, comments, processing
instructions and text nodes within an XML object is not significant in
determining if it has complex content.
# XML XML.hasSimpleContent #
XML.hasSimpleContent #

  bool hasSimpleContent ()

Description #

Reports whether this XML object contains simple content.

An XML object is considered to contain simple content if it represents a
text node, represents an attribute node or if it represents an XML
element that has no child elements. XML objects representing comments
and processing instructions do not have simple content. The existence of
attributes, comments, processing instructions and text nodes within an
XML object is not significant in determining if it has simple content.
# XML XML.ignoreComments #
XML.ignoreComments #

  bool ignoreComments

Description #

Controls whether XML comments should be parsed (false) or ignored
(true).
# XML XML.ignoreProcessingInstructions #
XML.ignoreProcessingInstructions #

  bool ignoreProcessingInstructions

Description #

Controls whether XML preprocessing instructions should be parsed (false)
or ignored (true).
# XML XML.ignoreWhitespace #
XML.ignoreWhitespace #

  bool ignoreWhitespace

Description #

Controls whether whitespace should be parsed (false) or ignored (true).
# XML XML.inScopeNamespaces #
XML.inScopeNamespaces #

  Array inScopeNamespaces ()

Description #

Returns an array of Namespace objects mirroring the current list of
valid namespaces at this element.

The last element of the returned array is the default namespace.
# XML XML.insertChildAfter #
XML.insertChildAfter #

  void insertChildAfter ( XML child1 , XML child2 )

Parameters #

  -------------- --------------------------------------------------------
  child1         The child to insert the other child after.

  child2         The XML to insert.
  -------------- --------------------------------------------------------

Description #

Inserts the given child2 after the given child1 in this XML object and
returns this XML object.

If child1 is null, the method inserts child2 before all children of this
XML object (that is, after none of them). If child1 does not exist in
this XML object, the method returns without modifying this XML object.
# XML XML.insertChildBefore #
XML.insertChildBefore #

  void insertChildBefore ( XML child1 , XML child2 )

Parameters #

  ---------------------- ------------------------------------------------
  child1                 The child to search for.

  child2                 The XML to insert.
  ---------------------- ------------------------------------------------

Description #

Inserts the given child2 before the given child1 in this XML object and
returns this XML object.

If child1 is null, the method inserts child2 after all children of this
XML object (that is, before none of them). If child1 does not exist in
this XML object, the method returns without modifying this XML object.
# XML XML.length #
XML.length #

  Number length ()

Description #

Returns the number of elements contained in an XML list. If this XML
object is not a list, returns 1.
# XML XML.localName #
XML.localName #

  String localName ()

Description #

Returns the local name of this XML object.

This value corresponds to the element name unless the name has a
namespace prefix. For example, if the element has the name “ns:tag”, the
return value is “tag”.
# XML XML.name #
XML.name #

  QName name ()

Description #

Returns a QName object containing the URI and the local name of the
element.
# XML XML.namespaceDeclarations #
XML.namespaceDeclarations #

  Array namespaceDeclarations ()

Description #

Returns an array containing all namespace declarations of this XML
object.
# XML XML.namespace #
XML.namespace #

  Namespace namespace ()

Description #

Returns a Namespace object containing the namespace URI of the current
element.
# XML XML.nodeKind #
XML.nodeKind #

  String nodeKind ()

Description #

Returns the type of this XML object as one of the strings “element”,
“attribute”, “comment”, “processing-instruction”, or “text”.
# XML XML.normalize #
XML.normalize #

  XML normalize ()

Description #

Puts all text nodes in this and all descendant XML objects into a normal
form by merging adjacent text nodes and eliminating empty text nodes.
Returns this XML object.
# XML XML.parent #
XML.parent #

  XML parent ()

Description #

Returns the parent object of this XML object.

The root object, as returned by the XML constructor, does not have a
parent and returns null. Note that the E4X standard does not define what
happens if this XML object is a list containing elements with multiple
parents.
# XML XML.prependChild #
XML.prependChild #

  XML prependChild ( XML child )

Parameters #

  ------------------------ ----------------------------------------------
  child                    The XML to insert.

  ------------------------ ----------------------------------------------

Description #

Inserts a given child into this object before its existing XML
properties, and returns this XML object.
# XML XML.prettyIndent #
XML.prettyIndent #

  Number prettyIndent

Description #

The number of spaces used to indent pretty-printed XML.
# XML XML.prettyPrinting #
XML.prettyPrinting #

  bool prettyPrinting

Description #

When true, XML is pretty-printed when converting to a string.
# XML XML.processingInstructions #
XML.processingInstructions #

  XML processingInstructions ( String name )

Parameters #

  ----------- -----------------------------------------------------------
  name        The name of the preprocessing instruction to return.

  ----------- -----------------------------------------------------------

Description #

Returns a list of preprocessing instructions.

Collects processing-instructions with the given name, if supplied.
Otherwise, returns an XML list containing all the children of this XML
object that are processing-instructions regardless of their name.
# XML XML.removeNamespace #
XML.removeNamespace #

  XML removeNamespace ( Namespace namespace )

Parameters #

  -------------------------- --------------------------------------------
  namespace                  The namespace to remove.

  -------------------------- --------------------------------------------

Description #

Removes the given namespace from this XML, and returns this XML.
# XML XML.replace #
XML.replace #

  XML replace ( String name , XML value )

Parameters #

  --------- -------------------------------------------------------------
  name      The property name.

  value     The XML with which to replace the value of the matching
            property.
  --------- -------------------------------------------------------------

Description #

Replaces the value of specified XML properties of this XML object
returns this XML object.

This method acts like the assignment operator.
# XML XML.setChildren #
XML.setChildren #

  XML setChildren ( XML value )

Parameters #

  --------- -------------------------------------------------------------
  value     The new value, which can be a single XML object or an XML
            list.

  --------- -------------------------------------------------------------

Description #

Replaces all of the XML-valued properties in this object with a new
value, and returns this XML object.
# XML XML.setLocalName #
XML.setLocalName #

  void setLocalName ( String name )

Parameters #

  ------------------------- ---------------------------------------------
  name                      The name to set.

  ------------------------- ---------------------------------------------

Description #

Replaces the local name of this XML object with a string constructed
from the given name

The local name is any part behind a colon character. If there is no
colon, it is the entire name.
# XML XML.setName #
XML.setName #

  void setName ( QName name )

Parameters #

  ------------------- ---------------------------------------------------
  name                The fully qualified name.

  ------------------- ---------------------------------------------------

Description #

Replaces the name of this XML object with the given QName object.
# XML XML.setNamespace #
XML.setNamespace #

  void setNamespace ( Namespace namespace )

Parameters #

  --------------------------- -------------------------------------------
  namespace                   The namespace to set.

  --------------------------- -------------------------------------------

Description #

Sets the namespace for this XML element.

If the namespace has not been declared in the tree above this element,
adds a namespace declaration.
# XML XML.setSettings #
XML.setSettings #

  void setSettings ( Object obj )

Parameters #

  ------------ ----------------------------------------------------------
  obj          The object containing the settings to set.

  ------------ ----------------------------------------------------------

Description #

Sets the parsing and print setting for XML using an object returned by
the settings() method.
# XML XML.settings #
XML.settings #

  Object settings ()

Description #

Returns an object containing the current parsing and print settings for
XML.
# XML XML.text #
XML.text #

  XML text ()

Description #

Returns an XML list containing all XML properties of this XML object
that represent XML text nodes.
# XML XML.toString #
XML.toString #

  String toString ()

Description #

Returns the string representation of this object.

For text and attribute nodes, this is the textual value of the node; for
other elements, this is the result of calling the toXMLString() method.
If this XML object is a list, concatenates the result of calling
toString() on each element.
# XML XML.toXMLString #
XML.toXMLString #

  String toXMLString ()

Description #

Returns an XML-encoded string representation of this XML object.

Always includes the start tag, attributes and end tag of the XML object
regardless of its content. It is provided for cases when the default XML
to string conversion rules are not desired. Interprets the global
settings XML.prettyPrint and XML.prettyIndent.
# XML XML.XML #
XML.XML #

  XML XML ( String text )

Parameters #

  ----------------------- -----------------------------------------------
  text                    The text to parse.

  ----------------------- -----------------------------------------------

Description #

Parses an XML string. Throws an error if the XML is incorrect.
# XML XML.xpath #
XML.xpath #

  XML xpath ( String expr )

Parameters #

  ----------------- -----------------------------------------------------
  expr              The XPath expression to use.

  ----------------- -----------------------------------------------------

Description #

Evaluates the given XPath expression in accordance with the W3C XPath
recommendation, using this XML object as the context node.
# ActionDescriptor ActionDescriptor.count #
ActionDescriptor.count #

  int count

Description #

The number of keys contained in the descriptor.
# ActionList ActionList.count #
ActionList.count #

  int count

Description #

The number of commands that comprise the action.
# AdjustmentReference AdjustmentReference.ABSOLUTE #
AdjustmentReference.ABSOLUTE #

  int ABSOLUTE

Description #

A percentage of the whole.
# AdjustmentReference AdjustmentReference.RELATIVE #
AdjustmentReference.RELATIVE #

  int RELATIVE

Description #

A percentage of the existing color amount.
# AnchorPosition AnchorPosition.BOTTOMCENTER #
AnchorPosition.BOTTOMCENTER #

  int BOTTOMCENTER

Description #

The middle point of the bottom of the object.
# AnchorPosition AnchorPosition.BOTTOMLEFT #
AnchorPosition.BOTTOMLEFT #

  int BOTTOMLEFT

Description #

The bottom left corner of the object.
# AnchorPosition AnchorPosition.BOTTOMRIGHT #
AnchorPosition.BOTTOMRIGHT #

  int BOTTOMRIGHT

Description #

The bottom right corner of the object.
# AnchorPosition AnchorPosition.MIDDLECENTER #
AnchorPosition.MIDDLECENTER #

  int MIDDLECENTER

Description #

The center of the object.
# AnchorPosition AnchorPosition.MIDDLELEFT #
AnchorPosition.MIDDLELEFT #

  int MIDDLELEFT

Description #

The middle point on the left side of the object.
# AnchorPosition AnchorPosition.MIDDLERIGHT #
AnchorPosition.MIDDLERIGHT #

  int MIDDLERIGHT

Description #

The middle point on the right side of the object.
# AnchorPosition AnchorPosition.TOPCENTER #
AnchorPosition.TOPCENTER #

  int TOPCENTER

Description #

The middle point on the top of the object.
# AnchorPosition AnchorPosition.TOPLEFT #
AnchorPosition.TOPLEFT #

  int TOPLEFT

Description #

The top left corner of the object.
# AnchorPosition AnchorPosition.TOPRIGHT #
AnchorPosition.TOPRIGHT #

  int TOPRIGHT

Description #

The top right corner of the object.
# AntiAlias AntiAlias.CRISP #
AntiAlias.CRISP #

  int CRISP

Description #

Makes type appear somewhat sharp.
# AntiAlias AntiAlias.NONE #
AntiAlias.NONE #

  int NONE

Description #

Does not use anti-aliasing.
# AntiAlias AntiAlias.SHARP #
AntiAlias.SHARP #

  int SHARP

Description #

Makes type appear its sharpest.
# AntiAlias AntiAlias.SMOOTH #
AntiAlias.SMOOTH #

  int SMOOTH

Description #

Makes type appear smoother.
# AntiAlias AntiAlias.STRONG #
AntiAlias.STRONG #

  int STRONG

Description #

Makes type appear heavier.
# Application Application.activeDocument #
Application.activeDocument #

  Document activeDocument

Description #

The frontmost document.
# Application Application.backgroundColor #
Application.backgroundColor #

  SolidColor backgroundColor

Description #

The default background color (used to paint, fill, and stroke
selections).
# Application Application.batch #
Application.batch #

  String batch ( AliasArray inputFiles , String action , String from ,
  BatchOptions options )

Parameters #

  ------------ ----------------------------------------------------------------
  inputFiles   The files to operate on.

  action       The name of the action to play (note that the Action name is
               case-sensitive and must match the name in the Actions palette).

  from         The name of the action set containing the action being played
               (note that the Action Set name is case-sensitive and must match
               the name in the Actions palette).

  options      Options for batch automation.
  ------------ ----------------------------------------------------------------

Description #

Runs the batch automation routine; analogous to using the Batch command
in Photoshop.
# Application Application.beep #
Application.beep #

  void beep ()

Description #

Alerts the user.
# Application Application.bringToFront #
Application.bringToFront #

  void bringToFront ()

Description #

Makes Photoshop the active application.
# Application Application.build #
Application.build #

  String build

Description #

The build number of Adobe Photoshop application.
# Application Application.changeProgressText #
Application.changeProgressText #

  void changeProgressText ( String progressString )

Parameters #

  ----------------------- -----------------------------------------------
  progressString          String to show in the progress window.

  ----------------------- -----------------------------------------------

Description #

Changes the text that appears in the progress window.
# Application Application.charIDToTypeID #
Application.charIDToTypeID #

  int charIDToTypeID ( String charID )

Parameters #

  -------------------------- --------------------------------------------
  charID                     The ID to convert.

  -------------------------- --------------------------------------------

Description #

Converts from a four character code to a runtime ID.
# Application Application.colorSettings #
Application.colorSettings #

  any colorSettings

Description #

The name of the selected color setting’s set.
# Application Application.currentTool #
Application.currentTool #

  String currentTool

Description #

Name of the current tool.
# Application Application.displayDialogs #
Application.displayDialogs #

  DialogModes displayDialogs

Description #

The dialog mode for the document, which indicates whether or not
Photoshop displays dialogs when the script runs.
# Application Application.doAction #
Application.doAction #

  void doAction ( String action , String from )

Parameters #

  -------- ------------------------------------------------------------------
  action   The name of the action to play. (Note that the action name is
           case-sensitive and must match the name as it appears in the
           Actions palette.)

  from     The name of the action set containing the action being played.
           (Note that the Action Set name is case-sensitive and must match
           the name as it appears in the Actions palette.)
  -------- ------------------------------------------------------------------

Description #

Plays the specified action from the Actions palette.
# Application Application.documents #
Application.documents #

  Documents documents

Description #

The collection of open documents.
# Application Application.doForcedProgress #
Application.doForcedProgress #

  void doForcedProgress ( String progressString , String
  javaScriptString )

Parameters #

  ------------------------ ----------------------------------------------
  progressString           String to show in the progress window.

  javaScriptString         JavaScriptString to execute.
  ------------------------ ----------------------------------------------

Description #

Performs a task with a progress bar. Forces progress bar to display,
ignoring the normal heuristics that keep it from showing unnecessarily
(e.g. during very short tasks). Other progress APIs must be called
periodically to update the progress bar and allow cancelling.
# Application Application.doProgress #
Application.doProgress #

  void doProgress ( String progressString , String javaScriptString )

Parameters #

  ------------------------ ----------------------------------------------
  progressString           String to show in the progress window.

  javaScriptString         JavaScriptString to execute.
  ------------------------ ----------------------------------------------

Description #

Performs a task with a progress bar. Other progress APIs must be called
periodically to update the progress bar and allow cancelling.
# Application Application.doProgressSegmentTask #
Application.doProgressSegmentTask #

  bool doProgressSegmentTask (int segmentLength , int done , int total ,
  String javaScriptString )

Parameters #

  ------------------------ ----------------------------------------------
  segmentLength            The length of the current task.

  done                     The total length of all completed tasks.

  total                    The total length of all tasks.

  javaScriptString         JavaScriptString to execute.
  ------------------------ ----------------------------------------------

Description #

Sections off a portion of the unused progress bar for execution of a
subtask. Returns false on cancel. Use when iterating a list of tasks
with unequal run times.
# Application Application.doProgressSubTask #
Application.doProgressSubTask #

  bool doProgressSubTask (int index , int limit , String
  javaScriptString )

Parameters #

  ------------------------ ----------------------------------------------
  index                    The 0-based index of the current task.

  limit                    The total number of tasks.

  javaScriptString         JavaScriptString to execute.
  ------------------------ ----------------------------------------------

Description #

Sections off a portion of the unused progress bar for execution of a
subtask. Returns false on cancel. Use when iterating a simple list of
tasks with equal run times.
# Application Application.doProgressTask #
Application.doProgressTask #

  bool doProgressTask ( Number taskLength , String javaScriptString )

Parameters #

  ------------------ ------------------------------------------------------
  taskLength         Amount of the unused progress bar to section off,
                     between 0.0 and 1.0.

  javaScriptString   JavaScriptString to execute.
  ------------------ ------------------------------------------------------

Description #

Sections off a portion of the unused progress bar for execution of a
subtask. Returns false on cancel.
# Application Application.eraseCustomOptions #
Application.eraseCustomOptions #

  void eraseCustomOptions ( String key )

Parameters #

  ---------- ------------------------------------------------------------
  key        The unique string ID for user object(s) to remove.

  ---------- ------------------------------------------------------------

Description #

Removes the specified user objects from the Photoshop registry.
# Application Application.executeActionGet #
Application.executeActionGet #

  ActionDescriptor executeActionGet ( ActionReference reference )

Parameters #

  ----------------- -----------------------------------------------------
  reference         The reference specification of the property.

  ----------------- -----------------------------------------------------

Description #

Obtains an action descriptor.
# Application Application.executeAction #
Application.executeAction #

  ActionDescriptor executeAction (int eventID , ActionDescriptor
  descriptor , DialogModes displayDialogs )

Parameters #

  ------------------ ----------------------------------------------------
  eventID            The event to play.

  descriptor         The action descriptor to play.

  displayDialogs     The display permissions for dialogs and alert
                     messages.
  ------------------ ----------------------------------------------------

Description #

Plays an ActionManager event.
# Application Application.featureEnabled #
Application.featureEnabled #

  bool featureEnabled ( String name )

Parameters #

  ------------------- ---------------------------------------------------
  name                The name of the feature.

  ------------------- ---------------------------------------------------

Description #

If true, the specified feature is enabled.
# Application Application.fonts #
Application.fonts #

  TextFonts fonts

Description #

The fonts installed on this system.
# Application Application.foregroundColor #
Application.foregroundColor #

  SolidColor foregroundColor

Description #

The default foreground color (used to paint, fill, and stroke
selections).
# Application Application.freeMemory #
Application.freeMemory #

  Number freeMemory

Description #

The amount of unused memory available to Photoshop.
# Application Application.getCustomOptions #
Application.getCustomOptions #

  ActionDescriptor getCustomOptions ( String key )

Parameters #

  ------------ ----------------------------------------------------------
  key          The unique string ID for the user object.

  ------------ ----------------------------------------------------------

Description #

Retrieves user objects from the Photoshop registry for the ID with value
key.
# Application Application.isQuicktimeAvailable #
Application.isQuicktimeAvailable #

  bool isQuicktimeAvailable ()

Description #

Returns true if Quicktime is installed.
# Application Application.load #
Application.load #

  void load ( File document )

Parameters #

  -------------------------- --------------------------------------------
  document                   The document to load.

  -------------------------- --------------------------------------------

Description #

Loads a support document.
# Application Application.locale #
Application.locale #

  String locale

Description #

The language locale of the application.
# Application Application.macintoshFileTypes #
Application.macintoshFileTypes #

  String macintoshFileTypes

Description #

A list of the image file types Photoshop can open.
# Application Application.makeContactSheet #
Application.makeContactSheet #

  String makeContactSheet ( AliasArray inputFiles , ContactSheetOptions
  options )

Parameters #

  ------------------- ---------------------------------------------------
  inputFiles          The files to include.

  options             Options for creating the contact sheet.
  ------------------- ---------------------------------------------------

Description #

Creates a contact sheet from multiple files.
# Application Application.makePDFPresentation #
Application.makePDFPresentation #

  String makePDFPresentation ( AliasArray inputFiles , File outputFile ,
  PresentationOptions options )

Parameters #

  ----------------- -----------------------------------------------------
  inputFiles        The input files to include in the presentation.

  outputFile        The location of the output file.

  options           Options for the PDF presentation.
  ----------------- -----------------------------------------------------

Description #

Creates a PDF presentation file.
# Application Application.makePhotoGallery #
Application.makePhotoGallery #

  String makePhotoGallery (any inputFolder , File outputFolder ,
  GalleryOptions options )

Parameters #

  ------------------ ----------------------------------------------------
  inputFolder        Folder to process or an array of files to process.

  outputFolder       Location for output files.

  options            Options for the web photo gallery.
  ------------------ ----------------------------------------------------

Description #

DEPRECATED. Creates a web photo gallery.
# Application Application.makePhotomerge #
Application.makePhotomerge #

  String makePhotomerge ( AliasArray inputFiles )

Parameters #

  ----------------------- -----------------------------------------------
  inputFiles              List of input files to include.

  ----------------------- -----------------------------------------------

Description #

DEPRECATED. Merges multiple files into one, user interaction required.
# Application Application.makePicturePackage #
Application.makePicturePackage #

  String makePicturePackage ( AliasArray inputFiles ,
  PicturePackageOptions options )

Parameters #

  ------------------- ---------------------------------------------------
  inputFiles          The files to include.

  options             Options for creating a Picture Package.
  ------------------- ---------------------------------------------------

Description #

Creates a picture package from multiple files.
# Application Application.measurementLog #
Application.measurementLog #

  MeasurementLog measurementLog

Description #

The log of measurements taken.
# Application Application.name #
Application.name #

  String name

Description #

The application name.
# Application Application.notifiersEnabled #
Application.notifiersEnabled #

  bool notifiersEnabled

Description #

If true, notifiers are enabled.
# Application Application.notifiers #
Application.notifiers #

  Notifiers notifiers

Description #

The notifiers currently configured (in the Scripts Events Manager menu
in the application).
# Application Application.openDialog #
Application.openDialog #

  FileArray openDialog ()

Description #

Uses the Photoshop open dialog to select files.
# Application Application.open #
Application.open #

  Document open ( File document , any as , bool asSmartObject )

Parameters #

  --------------- --------------------------------------------------------
  document        The document(s) to opend.

  as              The document type (The default is to let Photoshop
                  deduce the format).

  asSmartObject   Creates a smart object around the document.
  --------------- --------------------------------------------------------

Description #

Opens the specified document file(s).

    var doc_a = app.open(new File('path/to/file_a.psd'));
    var doc_b = app.open(new File('path/to/file_b.psd'));

    if (app.activeDocument === doc_b) {
        app.activeDocument = doc_a;
    }
# Application Application.parent #
Application.parent #

  Object parent

Description #

The object’s container.
# Application Application.path #
Application.path #

  File path

Description #

The full path of the location of the Adobe Photoshop application.
# Application Application.playbackDisplayDialogs #
Application.playbackDisplayDialogs #

  DialogModes playbackDisplayDialogs

Description #

The dialog mode for playback mode, which indicates whether or not
Photoshop displays dialogs in playback mode.
# Application Application.playbackParameters #
Application.playbackParameters #

  ActionDescriptor playbackParameters

Description #

The playback options, which indicate the speed at which Photoshop plays
actions.
# Application Application.preferencesFolder #
Application.preferencesFolder #

  File preferencesFolder

Description #

The full path to the preferences folder.
# Application Application.preferences #
Application.preferences #

  Preferences preferences

Description #

The application preference settings (equivalent to selecting Edit >
Preferences in the Adobe Photoshop application in Windows or Photoshop >
Preferences in Mac OS).
# Application Application.purge #
Application.purge #

  void purge ( PurgeTarget target )

Parameters #

  ------------------------ ----------------------------------------------
  target                   The caches to purge.

  ------------------------ ----------------------------------------------

Description #

Purges one or more caches.
# Application Application.putCustomOptions #
Application.putCustomOptions #

  void putCustomOptions ( String key , ActionDescriptor customObject ,
  bool persistent )

Parameters #

  ---------------- ------------------------------------------------------
  key              The unique string ID for the user object.

  customObject     The user-defined custom object to save in the
                   registry.

  persistent       If true, the object persists after the script has
                   finished.
  ---------------- ------------------------------------------------------

Description #

Save user objects in the Photoshop registry.
# Application Application.recentFiles #
Application.recentFiles #

  FileArray recentFiles

Description #

Files in the Recent Files list.
# Application Application.refreshFonts #
Application.refreshFonts #

  void refreshFonts ()

Description #

Force the font list to get refreshed.
# Application Application.refresh #
Application.refresh #

  void refresh ()

Description #

Pauses the script until the application refreshes.
# Application Application.runMenuItem #
Application.runMenuItem #

  void runMenuItem (int menuID )

Parameters #

  -------------------------- --------------------------------------------
  menuID                     Id of menu to run.

  -------------------------- --------------------------------------------

Description #

Run a menu item.
# Application Application.scriptingBuildDate #
Application.scriptingBuildDate #

  String scriptingBuildDate

Description #

The build date of the scripting interface.
# Application Application.scriptingVersion #
Application.scriptingVersion #

  String scriptingVersion

Description #

The version of the Scripting interface.
# Application Application.showColorPicker #
Application.showColorPicker #

  bool showColorPicker (bool pickForeground )

Parameters #

  ---------------- --------------------------------------------------------
  pickForeground   If true the foreground color is chosen, if false the
                   background color is chosen.

  ---------------- --------------------------------------------------------

Description #

Display color picker dialog. Returns false if dialog is cancelled, true
otherwise.
# Application Application.stringIDToTypeID #
Application.stringIDToTypeID #

  int stringIDToTypeID ( String stringID )

Parameters #

  ----------------------------- -----------------------------------------
  stringID                      The ID to convert.

  ----------------------------- -----------------------------------------

Description #

Converts from a string ID to a runtime ID.
# Application Application.system #
Application.system #

  int system ( String callString )

Parameters #

  ------------------------------ ----------------------------------------
  callString                     System call string.

  ------------------------------ ----------------------------------------

Description #

Perform a system call.
# Application Application.systemInformation #
Application.systemInformation #

  String systemInformation

Description #

System information of the host application and machine.
# Application Application.togglePalettes #
Application.togglePalettes #

  void togglePalettes ()

Description #

Toggle palette visibility.
# Application Application.toolSupportsBrushes #
Application.toolSupportsBrushes #

  bool toolSupportsBrushes ( String tool )

Parameters #

  ----------------- -----------------------------------------------------
  tool              The name of the tool to check.

  ----------------- -----------------------------------------------------

Description #

Check if the specified tool supports brushes.
# Application Application.typeIDToCharID #
Application.typeIDToCharID #

  String typeIDToCharID (int typeID )

Parameters #

  -------------------------- --------------------------------------------
  typeID                     The ID to convert.

  -------------------------- --------------------------------------------

Description #

Converts from a runtime ID to a character ID.
# Application Application.typeIDToStringID #
Application.typeIDToStringID #

  String typeIDToStringID (int typeID )

Parameters #

  -------------------------- --------------------------------------------
  typeID                     The ID to convert.

  -------------------------- --------------------------------------------

Description #

Converts from a runtime ID to a string ID.
# Application Application.typename #
Application.typename #

  String typename

Description #

The class name of the object.
# Application Application.updateProgress #
Application.updateProgress #

  bool updateProgress (int done , int total )

Parameters #

  ------------------ ----------------------------------------------------
  done               The number of tasks completed.

  total              The total number of tasks.
  ------------------ ----------------------------------------------------

Description #

Updates the progress bar started by doProgress. Use for manual non-task
based progress updating. Returns false on cancel.
# Application Application.version #
Application.version #

  String version

Description #

The version of Adobe Photoshop application that you are running.
# Application Application.windowsFileTypes #
Application.windowsFileTypes #

  String windowsFileTypes

Description #

A list of the image file extensions Photoshop can open.
# ArtLayer ArtLayer.add #
ArtLayer.add #

  ArtLayer add ()

Description #

Adds an element.
# ArtLayer ArtLayer.adjustBrightnessContrast #
ArtLayer.adjustBrightnessContrast #

  void adjustBrightnessContrast (int brightness , int contrast )

Parameters #

  ------------------- ---------------------------------------------------
  brightness          The brightness amount. Range: -100 to 100.

  contrast            The contrast amount. Range: -100 to 100.
  ------------------- ---------------------------------------------------

Description #

Adjusts the brightness and constrast.
# ArtLayer ArtLayer.adjustColorBalance #
ArtLayer.adjustColorBalance #

  void adjustColorBalance (int shadows , int midtones , int highlights ,
  bool preserveLuminosity )

Parameters #

  -------------------- ---------------------------------------------------------------
  shadows              The adjustments for the shadows. The array must include three
                       values (in the range -100 to 100), which represent cyan or red,
                       magenta or green, and yellow or blue, when the document mode is
                       CMYK or RGB.

  midtones             The adjustments for the midtones. The array must include three
                       values (in the range -100 to 100), which represent cyan or red,
                       magenta or green, and yellow or blue, when the document mode is
                       CMYK or RGB.

  highlights           The adjustments for the highlights. The array must include
                       three values (in the range -100 to 100), which represent cyan
                       or red, magenta or green, and yellow or blue, when the document
                       mode is CMYK or RGB.

  preserveLuminosity   If true, luminosity is preserved.
  -------------------- ---------------------------------------------------------------

Description #

Adjusts the color balance of the layer’s component channels.
# ArtLayer ArtLayer.adjustCurves #
ArtLayer.adjustCurves #

  void adjustCurves ( Point curveShape )

Parameters #

  -------------- --------------------------------------------------------
  curveShape     The curve points. The number of points must be between 2
                 and 14.

  -------------- --------------------------------------------------------

Description #

Adjusts the tonal range of the selected channel using up to fourteen
points.
# ArtLayer ArtLayer.adjustLevels #
ArtLayer.adjustLevels #

  void adjustLevels (int inputRangeStart , int inputRangeEnd , Number
  inputRangeGamma , int outputRangeStart , int outputRangeEnd )

Parameters #

  ------------------ -----------------------------------------------------
  inputRangeStart    The input levels minimum. Range: 0 to 253.

  inputRangeEnd      The input levels maximum. Range: (input range start +
                     2) to 253.

  inputRangeGamma    The input levels gamma. Range: 0.10 to 9.99.

  outputRangeStart   The output levels minimum. Range: 0 to 253.

  outputRangeEnd     The output levels maximum. Range: (output range
                     start + 2) to 253.
  ------------------ -----------------------------------------------------

Description #

Adjusts levels of the selected channels.
# ArtLayer ArtLayer.applyAddNoise #
ArtLayer.applyAddNoise #

  void applyAddNoise ( Number amount , NoiseDistribution distribution ,
  bool monochromatic )

Parameters #

  --------------- -----------------------------------------------------------
  amount          The amount of noise (as a percentage). Range: 0.1 to 400.0.

  distribution    The noise distribution type.

  monochromatic   If true, applies the filter only to the tonal elements in
                  the image without changing the colors.
  --------------- -----------------------------------------------------------

Description #

Applies the add noise filter.
# ArtLayer ArtLayer.applyAverage #
ArtLayer.applyAverage #

  void applyAverage ()

Description #

Applies the average filter.
# ArtLayer ArtLayer.applyBlur #
ArtLayer.applyBlur #

  void applyBlur ()

Description #

Applies the blur filter.
# ArtLayer ArtLayer.applyBlurMore #
ArtLayer.applyBlurMore #

  void applyBlurMore ()

Description #

Applies the blur more filter.
# ArtLayer ArtLayer.applyClouds #
ArtLayer.applyClouds #

  void applyClouds ()

Description #

Applies the clouds filter.
# ArtLayer ArtLayer.applyCustomFilter #
ArtLayer.applyCustomFilter #

  void applyCustomFilter (int characteristics , int scale , int offset )

Parameters #

  ----------------- ----------------------------------------------------------------
  characteristics   The custom filter characteristics. This is an array of 25 values
                    that corresponds to a left-to-right, top-to- bottom traversal of
                    the array presented in the Custom dialog in the user interface
                    (Filter > Other > Custom).

  scale             The value by which to divide the sum of the brightness values of
                    the pixels included in the calculation.

  offset            The value to be added to the result of the scale calculation.
  ----------------- ----------------------------------------------------------------

Description #

Applies the custom filter.
# ArtLayer ArtLayer.applyDeInterlace #
ArtLayer.applyDeInterlace #

  void applyDeInterlace ( EliminateFields eliminateFields , CreateFields
  createFields )

Parameters #

  --------------------- -------------------------------------------------
  eliminateFields       The fields to eliminate.

  createFields          The method to use to replace eliminated fields.
  --------------------- -------------------------------------------------

Description #

Applies the de-interlace filter.
# ArtLayer ArtLayer.applyDespeckle #
ArtLayer.applyDespeckle #

  void applyDespeckle ()

Description #

Applies the despeckle filter.
# ArtLayer ArtLayer.applyDifferenceClouds #
ArtLayer.applyDifferenceClouds #

  void applyDifferenceClouds ()

Description #

Applies the difference clouds filter.
# ArtLayer ArtLayer.applyDiffuseGlow #
ArtLayer.applyDiffuseGlow #

  void applyDiffuseGlow (int graininess , int glowAmount , int
  clearAmount )

Parameters #

  ------------------- ---------------------------------------------------
  graininess          The amount of graininess. Range: 0 to 10.

  glowAmount          The glow amount. Range: 0 to 20.

  clearAmount         The clear amount. Range: 0 to 20.
  ------------------- ---------------------------------------------------

Description #

Applies the diffuse glow filter.
# ArtLayer ArtLayer.applyDisplace #
ArtLayer.applyDisplace #

  void applyDisplace (int horizontalScale , int verticalScale ,
  DisplacementMapType displacementType , UndefinedAreas undefinedAreas ,
  File displacementMapFile )

Parameters #

  --------------------- -------------------------------------------------
  horizontalScale       The amount of horizontal distortion. Range: -999
                        to 999.

  verticalScale         The amount of vertical distortion. Range: -999 to
                        999.

  displacementType      The displacement type.

  undefinedAreas        The treatment of undistorted areas.

  displacementMapFile   The distortion image map.
  --------------------- -------------------------------------------------

Description #

Applies the displace filter.
# ArtLayer ArtLayer.applyDustAndScratches #
ArtLayer.applyDustAndScratches #

  void applyDustAndScratches (int radius , int threshold )

Parameters #

  ----------- -------------------------------------------------------------
  radius      The size (in pixels) of the area searched for dissimilar
              pixels. Range: 1 to 16.

  threshold   Determines how dissimilar the pixels should be before they
              are eliminated. Range: 0 to 255.
  ----------- -------------------------------------------------------------

Description #

Applies the dust and scratches filter.
# ArtLayer ArtLayer.applyGaussianBlur #
ArtLayer.applyGaussianBlur #

  void applyGaussianBlur ( Number radius )

Parameters #

  -------------- --------------------------------------------------------
  radius         The blur width in pixels. Range: 1.0 to 250.0.

  -------------- --------------------------------------------------------

Description #

Applies the gaussian blur filter.
# ArtLayer ArtLayer.applyGlassEffect #
ArtLayer.applyGlassEffect #

  void applyGlassEffect (int distortion , int smoothness , int scaling ,
  bool invert , TextureType texture , File textureFile )

Parameters #

  ------------------- ---------------------------------------------------
  distortion          The amount of distortion. Range: 0 to 20.

  smoothness          The smoothness. Range: 1 to 15.

  scaling             The amount of scaling. Range: 50 to 200.

  invert              If true, the texture is inverted.

  texture             The type of texture.

  textureFile         The file from which to load the texture type.
  ------------------- ---------------------------------------------------

Description #

Applies the glass filter.
# ArtLayer ArtLayer.applyHighPass #
ArtLayer.applyHighPass #

  void applyHighPass ( Number radius )

Parameters #

  ---------- ------------------------------------------------------------
  radius     The width (in pixels) of the radius where edge details are
             retained.

  ---------- ------------------------------------------------------------

Description #

Applies the high pass filter.
# ArtLayer ArtLayer.applyLensBlur #
ArtLayer.applyLensBlur #

  void applyLensBlur ( DepthMapSource source , int focalDistance , bool
  invertDepthMap , Geometry shape , int radius , int bladeCurvature ,
  int rotation , int brightness , int threshold , int amount ,
  NoiseDistribution distribution , bool monochromatic )

Parameters #

  ---------------- -------------------------------------------------------------
  source           The source for the depth map.

  focalDistance    The blur focal distance (in pixels) for the depth map. RangeL
                   0 to 255. Valid only when ‘source’ is transparency or layer
                   mask.

  invertDepthMap   If true, inverts the depth map.

  shape            The shape of the iris.

  radius           The radius of the iris. Range: 0 to 100.

  bladeCurvature   The blade curvature of the iris. Range: 0 to 100.

  rotation         The rotation of the iris (in degrees). Range: 0 to 360.

  brightness       The brightness for the specular highlights. Range: 0 to 100.

  threshold        The threshold for the specular highlights. Range: 0 to 255.

  amount           The amount of noise. Range: 0 to 100.

  distribution     The distribution value for the noise.

  monochromatic    If true, the noise is monochromatic.
  ---------------- -------------------------------------------------------------

Description #

Apply the lens blur filter.
# ArtLayer ArtLayer.applyLensFlare #
ArtLayer.applyLensFlare #

  void applyLensFlare (int brightness , UnitPoint flareCenter , LensType
  lensType )

Parameters #

  -------------------- --------------------------------------------------
  brightness           The flare brightness. Range: 10 to 300.

  flareCenter          The position of the flare center.

  lensType             The lens type.
  -------------------- --------------------------------------------------

Description #

Applies the lens flare filter.
# ArtLayer ArtLayer.applyMaximum #
ArtLayer.applyMaximum #

  void applyMaximum ( Number radius )

Parameters #

  -------------- --------------------------------------------------------
  radius         The choke area (in pixels). Range: 0 to 100.

  -------------- --------------------------------------------------------

Description #

Applies the maximum filter.
# ArtLayer ArtLayer.applyMedianNoise #
ArtLayer.applyMedianNoise #

  void applyMedianNoise ( Number radius )

Parameters #

  --------- -------------------------------------------------------------
  radius    The size of the area searched for pixels of similar
            brightness. Range: 0 to 100.

  --------- -------------------------------------------------------------

Description #

Applies the median noise filter.
# ArtLayer ArtLayer.applyMinimum #
ArtLayer.applyMinimum #

  void applyMinimum ( Number radius )

Parameters #

  -------------- --------------------------------------------------------
  radius         The spread area (in pixels). Range: 0 to 100.

  -------------- --------------------------------------------------------

Description #

Applies the minimum filter.
# ArtLayer ArtLayer.applyMotionBlur #
ArtLayer.applyMotionBlur #

  void applyMotionBlur (int angle , Number radius )

Parameters #

  -------------- --------------------------------------------------------
  angle          The angle (in degrees). Range: -360 to 360.

  radius         The radius (in pixels). Range: 1 to 999.
  -------------- --------------------------------------------------------

Description #

Applies the motion blur filter.
# ArtLayer ArtLayer.applyNTSC #
ArtLayer.applyNTSC #

  void applyNTSC ()

Description #

Applies the NTSC colors filter.
# ArtLayer ArtLayer.applyOceanRipple #
ArtLayer.applyOceanRipple #

  void applyOceanRipple (int size , int magnitude )

Parameters #

  ------------------- ---------------------------------------------------
  size                The ripple size. Range: 1 to 15.

  magnitude           The ripple magnitude. Range: 0 to 20.
  ------------------- ---------------------------------------------------

Description #

Applies the ocean ripple filter.
# ArtLayer ArtLayer.applyOffset #
ArtLayer.applyOffset #

  void applyOffset ( UnitValue horizontal , UnitValue vertical ,
  OffsetUndefinedAreas undefinedAreas )

Parameters #

  ---------------- ----------------------------------------------------------
  horizontal       The amount (in pixels) to move the selection horizontally
                   (to the right). Range: -6144 to 6144.

  vertical         The amount (in pixels) to move the selection vertically
                   (downward). Range: -6144 to 6144.

  undefinedAreas   The method for filling areas left blank by the offset.
  ---------------- ----------------------------------------------------------

Description #

Applies the offset filter.
# ArtLayer ArtLayer.applyPinch #
ArtLayer.applyPinch #

  void applyPinch (int amount )

Parameters #

  ----------------- -----------------------------------------------------
  amount            The pinch amount. Range: -100 to 100.

  ----------------- -----------------------------------------------------

Description #

Applies the pinch filter.
# ArtLayer ArtLayer.applyPolarCoordinates #
ArtLayer.applyPolarCoordinates #

  void applyPolarCoordinates ( PolarConversionType conversion )

Parameters #

  ----------------------------- -----------------------------------------
  conversion                    The conversion type.

  ----------------------------- -----------------------------------------

Description #

Applies the polar coordinates filter.
# ArtLayer ArtLayer.applyRadialBlur #
ArtLayer.applyRadialBlur #

  void applyRadialBlur (int amount , RadialBlurMethod blurMethod ,
  RadialBlurQuality blurQuality , UnitPoint blurCenter )

Parameters #

  ----------------- -----------------------------------------------------
  amount            The amount of blur. Range: 1 to 100.

  blurMethod        The blur method to use.

  blurQuality       The smoothness or graininess of the blurred image.

  blurCenter        Position (unit value)
  ----------------- -----------------------------------------------------

Description #

Applies the radial blur filter.
# ArtLayer ArtLayer.applyRipple #
ArtLayer.applyRipple #

  void applyRipple (int amount , RippleSize size )

Parameters #

  ---------------- ------------------------------------------------------
  amount           The ripple amount. Range: -999 to 999.

  size             The ripple size.
  ---------------- ------------------------------------------------------

Description #

Applies the ripple filter.
# ArtLayer ArtLayer.applySharpenEdges #
ArtLayer.applySharpenEdges #

  void applySharpenEdges ()

Description #

Applies the sharpen edges filter.
# ArtLayer ArtLayer.applySharpen #
ArtLayer.applySharpen #

  void applySharpen ()

Description #

Applies the sharpen filter.
# ArtLayer ArtLayer.applySharpenMore #
ArtLayer.applySharpenMore #

  void applySharpenMore ()

Description #

Applies the sharpen more filter.
# ArtLayer ArtLayer.applyShear #
ArtLayer.applyShear #

  void applyShear (any curve , UndefinedAreas undefinedAreas )

Parameters #

  ---------------- --------------------------------------------------------------
  curve            Specification of the shear curve in points as x,y coordinate
                   pairs in the format [[x1, y1],[x2, y2]]. Any number of
                   coordinate pairs can be specified.

  undefinedAreas   The treatment of areas left blank by the distortion.
  ---------------- --------------------------------------------------------------

Description #

Applies the shear filter.
# ArtLayer ArtLayer.applySmartBlur #
ArtLayer.applySmartBlur #

  void applySmartBlur ( Number radius , Number threshold ,
  SmartBlurQuality blurQuality , SmartBlurMode mode )

Parameters #

  ----------------- -----------------------------------------------------
  radius            The blur radius. Range: 0 - 1000.

  threshold         The blur threshold. Range: 0 - 1000.

  blurQuality       The smoothness or graininess of the blurred image.

  mode              The smart blur mode.
  ----------------- -----------------------------------------------------

Description #

Applies the smart blur filter.
# ArtLayer ArtLayer.applySpherize #
ArtLayer.applySpherize #

  void applySpherize (int amount , SpherizeMode mode )

Parameters #

  -------------- --------------------------------------------------------
  amount         The amount of distortion. Range: -100 to 100.

  mode           The distortion mode.
  -------------- --------------------------------------------------------

Description #

Applies the spherize filter.
# ArtLayer ArtLayer.applyStyleFile #
ArtLayer.applyStyleFile #

  void applyStyleFile ( File file )

Parameters #

  ---------------------- ------------------------------------------------
  file                   Style file to apply.

  ---------------------- ------------------------------------------------

Description #
# ArtLayer ArtLayer.applyStyle #
ArtLayer.applyStyle #

  void applyStyle ( String styleName )

Parameters #

  ------------------------- ---------------------------------------------
  styleName                 The layer style to apply.

  ------------------------- ---------------------------------------------

Description #

Applies the specified style to the layer.
# ArtLayer ArtLayer.applyTextureFill #
ArtLayer.applyTextureFill #

  void applyTextureFill ( File textureFile )

Parameters #

  ----------------- -----------------------------------------------------
  textureFile       The texture file. Must be a grayscale Photoshop file.

  ----------------- -----------------------------------------------------

Description #

Applies the texture fill filter.
# ArtLayer ArtLayer.applyTwirl #
ArtLayer.applyTwirl #

  void applyTwirl (int angle )

Parameters #

  --------------- -------------------------------------------------------
  angle           The twirl angle. Range: -999 to 999.

  --------------- -------------------------------------------------------

Description #

Applies the twirl filter.
# ArtLayer ArtLayer.applyUnSharpMask #
ArtLayer.applyUnSharpMask #

  void applyUnSharpMask ( Number amount , Number radius , int threshold
  )

Parameters #

  ------------- ---------------------------------------------------------
  amount        The amount of sharpening (as a percentage). Range: 1 to
                500.

  radius        The radius in pixels. Range: 0.1 to 250.0.

  threshold     The contrast threshold. Range: 0 to 255.
  ------------- ---------------------------------------------------------

Description #

Applies the unsharp mask filter.
# ArtLayer ArtLayer.applyWave #
ArtLayer.applyWave #

  void applyWave (int generatorNumber , int minimumWavelength , int
  maximumWavelength , int minimumAmplitude , int maximumAmplitude , int
  horizontalScale , int verticalScale , WaveType waveType ,
  UndefinedAreas undefinedAreas , int randomSeed )

Parameters #

  ------------------- -----------------------------------------------------
  generatorNumber     The number of generators. Range: 1 to 999.

  minimumWavelength   The minimum wave length. Range: 1 to 998.

  maximumWavelength   The maximum wave length. Range: 2 to (minimum
                      wavelength + 1)

  minimumAmplitude    The minimum amplitude. Range: 1 to 998.

  maximumAmplitude    The maximum amplitude. Range: 2 to (minimum
                      amplitude + 1)

  horizontalScale     The amount of horizontal scale (as a percentage).
                      Range: 1 to 100.

  verticalScale       The amount of vertical scale (as a percentage).
                      Range: 1 to 100.

  waveType            The wave type.

  undefinedAreas      The treatment of areas left blank by the distortion.

  randomSeed          The random seed.
  ------------------- -----------------------------------------------------

Description #

Applies the wave filter.
# ArtLayer ArtLayer.applyZigZag #
ArtLayer.applyZigZag #

  void applyZigZag (int amount , int ridges , ZigZagType style )

Parameters #

  --------------- -------------------------------------------------------
  amount          The amount of zigzag. Range: -100 to 100.

  ridges          The ridge length.

  style           The zigzag style.
  --------------- -------------------------------------------------------

Description #

Applies the zigzag filter.
# ArtLayer ArtLayer.autoContrast #
ArtLayer.autoContrast #

  void autoContrast ()

Description #

Adjusts the contrast of the selected channels automatically.
# ArtLayer ArtLayer.autoLevels #
ArtLayer.autoLevels #

  void autoLevels ()

Description #

Adjust the levels of the selected channels using the auto levels option.
# ArtLayer ArtLayer.clear #
ArtLayer.clear #

  void clear ()

Description #

Cuts the layer without moving it to the clipboard.
# ArtLayer ArtLayer.copy #
ArtLayer.copy #

  void copy (bool merge )

Parameters #

  ------- ---------------------------------------------------------------
  merge   If true, the copy includes all visible layers. If false, the
          copy only copies from the current layer.

  ------- ---------------------------------------------------------------

Description #

Copies the layer to the clipboard.
# ArtLayer ArtLayer.cut #
ArtLayer.cut #

  void cut ()

Description #

Cuts the layer to the clipboard.
# ArtLayer ArtLayer.desaturate #
ArtLayer.desaturate #

  void desaturate ()

Description #

Converts a color image to a grayscale image in the current color mode by
assigning equal values of each component color to each pixel.
# ArtLayer ArtLayer.equalize #
ArtLayer.equalize #

  void equalize ()

Description #

Redistributes the brightness values of pixels in an image to more evenly
represent the entire range of brightness levels within the image.
# ArtLayer ArtLayer.fillOpacity #
ArtLayer.fillOpacity #

  Number fillOpacity

Description #

The interior opacity of the layer. Range: 0.0 to 100.0.
# ArtLayer ArtLayer.filterMaskDensity #
ArtLayer.filterMaskDensity #

  Number filterMaskDensity

Description #

The density of the filter mask (between 0.0 and 100.0)
# ArtLayer ArtLayer.filterMaskFeather #
ArtLayer.filterMaskFeather #

  Number filterMaskFeather

Description #

The feather of the filter mask (between 0.0 and 250.0)
# ArtLayer ArtLayer.grouped #
ArtLayer.grouped #

  bool grouped

Description #

If true, the layer is grouped with the layer below.
# ArtLayer ArtLayer.invert #
ArtLayer.invert #

  void invert ()

Description #

Inverts the colors in the layer by converting the brightness value of
each pixel in the channels to the inverse value on the 256-step
color-values scale.
# ArtLayer ArtLayer.isBackgroundLayer #
ArtLayer.isBackgroundLayer #

  bool isBackgroundLayer

Description #

If true, the layer is a background layer.
# ArtLayer ArtLayer.kind #
ArtLayer.kind #

  LayerKind kind

Description #

Sets the layer kind (such as ‘text layer’) for an empty layer. Valid
only when the layer is empty and when ‘is background layer ‘ is false.
You can use the ‘kind ‘ property to make a background layer a normal
layer; however, to make a layer a background layer, you must set ‘is
background layer’ to true.
# ArtLayer ArtLayer.layerMaskDensity #
ArtLayer.layerMaskDensity #

  Number layerMaskDensity

Description #

The density of the layer mask (between 0.0 and 100.0)
# ArtLayer ArtLayer.layerMaskFeather #
ArtLayer.layerMaskFeather #

  Number layerMaskFeather

Description #

The feather of the layer mask (between 0.0 and 250.0)
# ArtLayer ArtLayer.merge #
ArtLayer.merge #

  ArtLayer merge ()

Description #

Merges the layer down, removing the layer from the document. Returns a
reference to the art layer that this layer is merged into.
# ArtLayer ArtLayer.mixChannels #
ArtLayer.mixChannels #

  void mixChannels (any outputChannels , bool monochrome )

Parameters #

  ---------------- ---------------------------------------------------------------
  outputChannels   A list of channel specifications. For each component channel
                   that the document has, you must specify a list of adjustment
                   values followed by a ‘constant’ value.

  monochrome       If true, uses monochrome mixing. Note: If this is true, you can
                   only specify one channel value.
  ---------------- ---------------------------------------------------------------

Description #

Modifies a targeted (output) color channel using a mix of the existing
color channels in the image. (output channels = An array of channel
specifications. For each component channel, specify a list of adjustment
values (-200 to 200) followed by a ‘constant’ value (-200 to 200).) When
monochrome = true, the maximum number of channel value specifications
is 1. Valid only when ‘document mode’ = RGB or CMYK. RGB arrays must
include four doubles. CMYK arrays must include five doubles.
# ArtLayer ArtLayer.parent #
ArtLayer.parent #

  Object parent

Description #

The object’s container.
# ArtLayer ArtLayer.photoFilter #
ArtLayer.photoFilter #

  void photoFilter ( SolidColor fillColor , int density , bool
  preserveLuminosity )

Parameters #

  -------------------- ----------------------------------------------------
  fillColor            The color to use for the fill.

  density              The density (as a percentage) of the filter effect.
                       Range: 1 to 100.

  preserveLuminosity   If true, luminosity is preserved.
  -------------------- ----------------------------------------------------

Description #

Adjusts the layer’s color balance and temperature as if a color filter
had been applied.
# ArtLayer ArtLayer.pixelsLocked #
ArtLayer.pixelsLocked #

  bool pixelsLocked

Description #

If true, the pixels in the layer’s image cannot be edited.
# ArtLayer ArtLayer.positionLocked #
ArtLayer.positionLocked #

  bool positionLocked

Description #

If true, the pixels in the layer’s image cannot be moved within the
layer.
# ArtLayer ArtLayer.posterize #
ArtLayer.posterize #

  void posterize (int levels )

Parameters #

  ----------------- -----------------------------------------------------
  levels            The tonal levels. Range: 2 to 255.

  ----------------- -----------------------------------------------------

Description #

Specifies the number of tonal levels for each channel and then maps
pixels to the closest matching level.
# ArtLayer ArtLayer.rasterize #
ArtLayer.rasterize #

  void rasterize ( RasterizeType target )

Parameters #

  -------------------------- --------------------------------------------
  target                     What to rasterize.

  -------------------------- --------------------------------------------

Description #

Converts the targeted content in the layer into a flat, raster image.
# ArtLayers ArtLayers.add #
ArtLayers.add #

  ArtLayer add ()

Description #

Adds an element.
# ArtLayer ArtLayer.saveStyleFile #
ArtLayer.saveStyleFile #

  void saveStyleFile ( File file , File thumbnail , int thumbnailSize ,
  Number backgroundValue )

Parameters #

  ------------------------- ---------------------------------------------
  file                      File to save the style to.

  thumbnail                 File to save the style thumbnail to.

  thumbnailSize             Size of thumbnail to save.

  backgroundValue           Background grayvalue.
  ------------------------- ---------------------------------------------

Description #
# ArtLayer ArtLayer.selectiveColor #
ArtLayer.selectiveColor #

  void selectiveColor ( AdjustmentReference selectionMethod , Number
  reds , Number yellows , Number greens , Number cyans , Number blues ,
  Number magentas , Number whites , Number neutrals , Number blacks )

Parameters #

  ----------------- -----------------------------------------------------------
  selectionMethod   Modifies the amount of a process color in a specified
                    primary color without affecting the other primary colors.

  reds              Array of 4 values: cyan, magenta, yellow, black.

  yellows           Array of 4 values: cyan, magenta, yellow, black.

  greens            Array of 4 values: cyan, magenta, yellow, black.

  cyans             Array of 4 values: cyan, magenta, yellow, black.

  blues             Array of 4 values: cyan, magenta, yellow, black.

  magentas          Array of 4 values: cyan, magenta, yellow, black.

  whites            Array of 4 values: cyan, magenta, yellow, black.

  neutrals          Array of 4 values: cyan, magenta, yellow, black.

  blacks            Array of 4 values: cyan, magenta, yellow, black.
  ----------------- -----------------------------------------------------------

Description #
# ArtLayers ArtLayers.getByName #
ArtLayers.getByName #

  ArtLayer getByName ( String name )

Parameters #

  ---------------------------------------------------------- ------------
  name                                                       

  ---------------------------------------------------------- ------------

Description #

Get the first element in the collection with the provided name.
# ArtLayer ArtLayer.shadowHighlight #
ArtLayer.shadowHighlight #

  void shadowHighlight (int shadowAmount , int shadowWidth , int
  shadowRaduis , int highlightAmount , int highlightWidth , int
  highlightRaduis , int colorCorrection , int midtoneContrast , Number
  blackClip , Number whiteClip )

Parameters #

  ----------------- ----------------------------------------------------------
  shadowAmount      The shadow amount, as a percentage. Range: 0 to 100.

  shadowWidth       The shadow width, as a percentage. Range: 0 to 100 for
                    tonal width (0 = narrow), (100 = broad).

  shadowRaduis      The shadow radius (in pixels). Range: 0 to 2500.

  highlightAmount   The highlight amount, as a percentage. Range: 0 to 100.

  highlightWidth    The highlight width. Range: 0 to 100 for tonal width (0 =
                    narrow), (100 = broad).

  highlightRaduis   The highlight radius (in pixels). Range: 0 to 2500.

  colorCorrection   The amount to adjust the colors in the changed portion of
                    the image. Range: -100 to 100.

  midtoneContrast   The amount of midtone contrast. Range: -100 to 100.

  blackClip         Fractions of whites to be clipped. Range: 0.000 to 50.000.

  whiteClip         Fractions of blacks to be clipped. Range: 0.000 to 50.000.
  ----------------- ----------------------------------------------------------

Description #

Adjusts the range of tones in the shadows and highlights.
# ArtLayers ArtLayers.[] #
ArtLayers.[] #

  ArtLayer [] (uint index )

Parameters #

  ------------------------------------------------------------ ----------
  index                                                        

  ------------------------------------------------------------ ----------

Description #

Get an element in the collection with the provided index.
# ArtLayers ArtLayers.length #
ArtLayers.length #

  int length

Description #

Number of elements in the collection.
# ArtLayers ArtLayers.parent #
ArtLayers.parent #

  Object parent

Description #

The object’s container.
# ArtLayers ArtLayers.removeAll #
ArtLayers.removeAll #

  void removeAll ()

Description #

Deletes all elements.
# ArtLayers ArtLayers.typename #
ArtLayers.typename #

  String typename

Description #

The class name of the object.
# ArtLayer ArtLayer.textItem #
ArtLayer.textItem #

  TextItem textItem

Description #

The text that is associated with the layer. Valid only when ‘kind’ is
text layer.
# ArtLayer ArtLayer.threshold #
ArtLayer.threshold #

  void threshold (int level )

Parameters #

  ----------------------- -----------------------------------------------
  level                   The threshold level.

  ----------------------- -----------------------------------------------

Description #

Converts grayscale or color images to high-contrast, B/W images by
converting pixels lighter than the specified threshold to white and
pixels darker than the threshold to black.
# ArtLayer ArtLayer.transparentPixelsLocked #
ArtLayer.transparentPixelsLocked #

  bool transparentPixelsLocked

Description #

If true, editing is confined to the opaque portions of the layer.
# ArtLayer ArtLayer.typename #
ArtLayer.typename #

  String typename

Description #

The class name of the object.
# ArtLayer ArtLayer.vectorMaskDensity #
ArtLayer.vectorMaskDensity #

  Number vectorMaskDensity

Description #

The density of the vector mask (between 0.0 and 100.0)
# ArtLayer ArtLayer.vectorMaskFeather #
ArtLayer.vectorMaskFeather #

  Number vectorMaskFeather

Description #

The feather of the vector mask (between 0.0 and 250.0)
# AutoKernType AutoKernType.MANUAL #
AutoKernType.MANUAL #

  int MANUAL

Description #

Allows manual kerning.
# AutoKernType AutoKernType.METRICS #
AutoKernType.METRICS #

  int METRICS

Description #

Uses kern pairs, which contain information about the spacing of specific
pairs of letters.
# AutoKernType AutoKernType.OPTICAL #
AutoKernType.OPTICAL #

  int OPTICAL

Description #

Adjusts the spacing between adjacent characters based on their shapes.
# BatchDestinationType BatchDestinationType.FOLDER #
BatchDestinationType.FOLDER #

  int FOLDER

Description #

Outputs files to a folder.
# BatchDestinationType BatchDestinationType.NODESTINATION #
BatchDestinationType.NODESTINATION #

  int NODESTINATION

Description #

Leaves all files open.
# BatchDestinationType BatchDestinationType.SAVEANDCLOSE #
BatchDestinationType.SAVEANDCLOSE #

  int SAVEANDCLOSE

Description #

Saves changes and closes all files.
# BatchOptions BatchOptions.destinationFolder #
BatchOptions.destinationFolder #

  File destinationFolder

Description #

The folder location for the processed files. Valid only when
‘destination’ = folder.
# BatchOptions BatchOptions.destination #
BatchOptions.destination #

  BatchDestinationType destination

Description #

The type of destination for the processed files.
# BatchOptions BatchOptions.errorFile #
BatchOptions.errorFile #

  File errorFile

Description #

The file in which to log errors encountered. To display errors on the
screen and stop batch processing when errors occur, leave blank.
# BatchOptions BatchOptions.fileNaming #
BatchOptions.fileNaming #

  FileNamingType fileNaming

Description #

A list of file naming options. Maximum: 6.
# BatchOptions BatchOptions.macintoshCompatible #
BatchOptions.macintoshCompatible #

  bool macintoshCompatible

Description #

If true, the final file names are Macintosh compatible.
# BatchOptions BatchOptions.overrideOpen #
BatchOptions.overrideOpen #

  bool overrideOpen

Description #

If true, overrides action open commands.
# BatchOptions BatchOptions.overrideSave #
BatchOptions.overrideSave #

  bool overrideSave

Description #

If true, overrides save as action steps with the specified destination.
# BatchOptions BatchOptions.startingSerial #
BatchOptions.startingSerial #

  int startingSerial

Description #

The starting serial number to use in naming files.
# BatchOptions BatchOptions.suppressOpen #
BatchOptions.suppressOpen #

  bool suppressOpen

Description #

If true, suppresses file open options dialogs.
# BatchOptions BatchOptions.suppressProfile #
BatchOptions.suppressProfile #

  bool suppressProfile

Description #

If true, suppresses color profile warnings.
# BatchOptions BatchOptions.unixCompatible #
BatchOptions.unixCompatible #

  bool unixCompatible

Description #

If true, the final file names are Unix compatible.
# BatchOptions BatchOptions.windowsCompatible #
BatchOptions.windowsCompatible #

  bool windowsCompatible

Description #

If true, the final file names are Windows compatible.
# BitmapConversionOptions BitmapConversionOptions.angle #
BitmapConversionOptions.angle #

  Number angle

Description #

The angle (in degrees) at which to orient individual dots. Valid only
when ‘method’ = halftone screen. Range: -180 to 180.
# BitmapConversionOptions BitmapConversionOptions.frequency #
BitmapConversionOptions.frequency #

  Number frequency

Description #

The number of printer dots per inch. Valid only when ‘method’ = halftone
screen. Range: 1.0 to 999.99.
# BitmapConversionOptions BitmapConversionOptions.method #
BitmapConversionOptions.method #

  BitmapConversionType method

Description #

The conversion method.
# BitmapConversionOptions BitmapConversionOptions.patternName #
BitmapConversionOptions.patternName #

  String patternName

Description #

The name of the pattern to use. Valid only when ‘method’ = custom.
# BitmapConversionOptions BitmapConversionOptions.resolution #
BitmapConversionOptions.resolution #

  Number resolution

Description #

The output resolution (in pixels per inch)
# BitmapConversionOptions BitmapConversionOptions.shape #
BitmapConversionOptions.shape #

  BitmapHalfToneType shape

Description #

The dot shape. Valid only when ‘method’ = halftone screen.
# BitmapConversionType BitmapConversionType.CUSTOMPATTERN #
BitmapConversionType.CUSTOMPATTERN #

  int CUSTOMPATTERN

Description #

Simulates the effect of printing a grayscale image through a custom
halftone screen. This method lets you apply a screen texture, such as a
wood grain, to an image. To use this option, you must first define a
pattern.
# BitmapConversionType BitmapConversionType.DIFFUSIONDITHER #
BitmapConversionType.DIFFUSIONDITHER #

  int DIFFUSIONDITHER

Description #

Applies a random pattern that is usually less noticeable than pattern
dither. The dither effects are diffused across adjacent pixels. If you
select this algorithm, specify a dither percentage to control the amount
of dithering applied to the image.

May cause detectable seams to appear across slice boundaries. Linking
slices diffuses the dither pattern across all linked slices, and
eliminates the seams.
# BitmapConversionType BitmapConversionType.HALFTHRESHOLD #
BitmapConversionType.HALFTHRESHOLD #

  int HALFTHRESHOLD

Description #

50% Threshold.
# BitmapConversionType BitmapConversionType.HALFTONESCREEN #
BitmapConversionType.HALFTONESCREEN #

  int HALFTONESCREEN

Description #

Lets you convert a grayscale image to simulated halftone dots.
# BitmapConversionType BitmapConversionType.PATTERNDITHER #
BitmapConversionType.PATTERNDITHER #

  int PATTERNDITHER

Description #

Applies a halftone-like square pattern to determine the value of pixels.
# BitmapHalfToneType BitmapHalfToneType.CROSS #
BitmapHalfToneType.CROSS #

  int CROSS

Description #

Cross.
# BitmapHalfToneType BitmapHalfToneType.DIAMOND #
BitmapHalfToneType.DIAMOND #

  int DIAMOND

Description #

Diamond.
# BitmapHalfToneType BitmapHalfToneType.ELLIPSE #
BitmapHalfToneType.ELLIPSE #

  int ELLIPSE

Description #

Ellipse.
# BitmapHalfToneType BitmapHalfToneType.LINE #
BitmapHalfToneType.LINE #

  int LINE

Description #

Line.
# BitmapHalfToneType BitmapHalfToneType.ROUND #
BitmapHalfToneType.ROUND #

  int ROUND

Description #

Round.
# BitmapHalfToneType BitmapHalfToneType.SQUARE #
BitmapHalfToneType.SQUARE #

  int SQUARE

Description #

Square.
# BitsPerChannelType BitsPerChannelType.EIGHT #
BitsPerChannelType.EIGHT #

  int EIGHT

Description #

8 bits per channel.
# BitsPerChannelType BitsPerChannelType.ONE #
BitsPerChannelType.ONE #

  int ONE

Description #

1 bit per channel.
# BitsPerChannelType BitsPerChannelType.SIXTEEN #
BitsPerChannelType.SIXTEEN #

  int SIXTEEN

Description #

16 bits per channel.
# BitsPerChannelType BitsPerChannelType.THIRTYTWO #
BitsPerChannelType.THIRTYTWO #

  int THIRTYTWO

Description #

32 bits per channel.
# BlendMode BlendMode.COLORBLEND #
BlendMode.COLORBLEND #

  int COLORBLEND

Description #

Creates a result color with the luminance of the base color and the hue
and saturation of the blend color. This preserves the gray levels in the
image and is useful for coloring monochrome images and for tinting color
images.
# BlendMode BlendMode.COLORBURN #
BlendMode.COLORBURN #

  int COLORBURN

Description #

Looks at the color information in each channel and darkens the base
color to reflect the blend color by increasing the contrast. Blending
with white produces no change.
# BlendMode BlendMode.COLORDODGE #
BlendMode.COLORDODGE #

  int COLORDODGE

Description #

Looks at the color information in each channel and brightens the base
color to reflect the blend color by decreasing the contrast. Blending
with black produces no change.
# BlendMode BlendMode.DARKEN #
BlendMode.DARKEN #

  int DARKEN

Description #

Looks at the color information in each channel and selects the base or
blend color?whichever is darker?as the result color. Pixels lighter than
the blend color are replaced, and pixels darker than the blend color do
not change.
# BlendMode BlendMode.DARKERCOLOR #
BlendMode.DARKERCOLOR #

  int DARKERCOLOR

Description #

Lighter colors lighten the result, and darker colors darken the result.
50% gray as a blend color has no effect on the result color. Lowering
the fill opacity creates less posterization/thresholding.
# BlendMode BlendMode.DIFFERENCE #
BlendMode.DIFFERENCE #

  int DIFFERENCE

Description #

Looks at the color information in each channel and subtracts either the
blend color from the base color or the base color from the blend color,
depending on which has the greater brightness value. Blending with white
inverts the base color values; blending with black produces no change.
# BlendMode BlendMode.DISSOLVE #
BlendMode.DISSOLVE #

  int DISSOLVE

Description #

Edits or paints each pixel to make it the result color. However, the
result color is a random replacement of the pixels with the base color
or the blend color, depending on the opacity at any pixel location.
# BlendMode BlendMode.DIVIDE #
BlendMode.DIVIDE #

  int DIVIDE

Description #
# BlendMode BlendMode.EXCLUSION #
BlendMode.EXCLUSION #

  int EXCLUSION

Description #

Creates an effect similar to but lower in contrast than the Difference
mode. Blending with white inverts the base color values. Blending with
black produces no change.
# BlendMode BlendMode.HARDLIGHT #
BlendMode.HARDLIGHT #

  int HARDLIGHT

Description #

Multiplies or screens the colors, depending on the blend color. The
effect is similar to shining a harsh spotlight on the image. If the
blend color (light source) is lighter than 50% gray, the image is
lightened, as if it were screened. This is useful for adding highlights
to an image. If the blend color is darker than 50% gray, the image is
darkened, as if it were multiplied. This is useful for adding shadows to
an image. Painting with pure black or white results in pure black or
white.
# BlendMode BlendMode.HARDMIX #
BlendMode.HARDMIX #

  int HARDMIX

Description #

Lighter colors lighten the result, and darker colors darken the result.
50% gray as a blend color has no effect on the result color. Lowering
the fill opacity creates less posterization/thresholding.
# BlendMode BlendMode.HUE #
BlendMode.HUE #

  int HUE

Description #

Creates a result color with the luminance and saturation of the base
color and the hue of the blend color.
# BlendMode BlendMode.LIGHTEN #
BlendMode.LIGHTEN #

  int LIGHTEN

Description #

Looks at the color information in each channel and selects the base or
blend color?whichever is lighter?as the result color. Pixels darker than
the blend color are replaced, and pixels lighter than the blend color do
not change.
# BlendMode BlendMode.LIGHTERCOLOR #
BlendMode.LIGHTERCOLOR #

  int LIGHTERCOLOR

Description #

Lighter colors lighten the result, and darker colors darken the result.
50% gray as a blend color has no effect on the result color. Lowering
the fill opacity creates less posterization/thresholding.
# BlendMode BlendMode.LINEARBURN #
BlendMode.LINEARBURN #

  int LINEARBURN

Description #

Looks at the color information in each channel and darkens the base
color to reflect the blend color by decreasing the brightness. Blending
with white produces no change.
# BlendMode BlendMode.LINEARDODGE #
BlendMode.LINEARDODGE #

  int LINEARDODGE

Description #

Looks at the color information in each channel and brightens the base
color to reflect the blend color by increasing the brightness. Blending
with black produces no change.
# BlendMode BlendMode.LINEARLIGHT #
BlendMode.LINEARLIGHT #

  int LINEARLIGHT

Description #

Burns or dodges the colors by decreasing or increasing the brightness,
depending on the blend color. If the blend color (light source) is
lighter than 50% gray, the image is lightened by increasing the
brightness. If the blend color is darker than 50% gray, the image is
darkened by decreasing the brightness.
# BlendMode BlendMode.LUMINOSITY #
BlendMode.LUMINOSITY #

  int LUMINOSITY

Description #

Creates a result color with the hue and saturation of the base color and
the luminance of the blend color. This mode creates an inverse effect
from that of the Color mode.
# BlendMode BlendMode.MULTIPLY #
BlendMode.MULTIPLY #

  int MULTIPLY

Description #

Looks at the color information in each channel and multiplies the base
color by the blend color. The result color is always a darker color.
Multiplying any color with black produces black. Multiplying any color
with white leaves the color unchanged. When you?re painting with a color
other than black or white, successive strokes with a painting tool
produce progressively darker colors. The effect is similar to drawing on
the image with multiple marking pens.
# BlendMode BlendMode.NORMAL #
BlendMode.NORMAL #

  int NORMAL

Description #

Edits or paints each pixel to make it the result color. (Called
“Threshold” when you?re working with a bitmapped or indexed-color
image.)
# BlendMode BlendMode.OVERLAY #
BlendMode.OVERLAY #

  int OVERLAY

Description #

Multiplies or screens the colors, depending on the base color. Patterns
or colors overlay the existing pixels while preserving the highlights
and shadows of the base color. The base color is not replaced but is
mixed with the blend color to reflect the lightness or darkness of the
original color.
# BlendMode BlendMode.PASSTHROUGH #
BlendMode.PASSTHROUGH #

  int PASSTHROUGH

Description #

Allows any blend modes, advanced blending options, and opacity and fill
values applied to layers within a set to affect layers below the set in
the Layers palette.

Valid only for layer sets. To restrict blend modes of the layers within
a set, change the layer set’s blend mode to Normal.
# BlendMode BlendMode.PINLIGHT #
BlendMode.PINLIGHT #

  int PINLIGHT

Description #

Replaces the colors, depending on the blend color. If the blend color
(light source) is lighter than 50% gray, pixels darker than the blend
color are replaced, and pixels lighter than the blend color do not
change. If the blend color is darker than 50% gray, pixels lighter than
the blend color are replaced, and pixels darker than the blend color do
not change. This is useful for adding special effects to an image.
# BlendMode BlendMode.SATURATION #
BlendMode.SATURATION #

  int SATURATION

Description #

Creates a result color with the luminance and hue of the base color and
the saturation of the blend color. Painting with this mode in an area
with no (0) saturation (gray) causes no change.
# BlendMode BlendMode.SCREEN #
BlendMode.SCREEN #

  int SCREEN

Description #

Looks at each channel?s color information and multiplies the inverse of
the blend and base colors. The result color is always a lighter color.
Screening with black leaves the color unchanged. Screening with white
produces white. The effect is similar to projecting multiple
photographic slides on top of each other.
# BlendMode BlendMode.SOFTLIGHT #
BlendMode.SOFTLIGHT #

  int SOFTLIGHT

Description #

Darkens or lightens the colors, depending on the blend color. The effect
is similar to shining a diffused spotlight on the image. If the blend
color (light source) is lighter than 50% gray, the image is lightened as
if it were dodged. If the blend color is darker than 50% gray, the image
is darkened as if it were burned in. Painting with pure black or white
produces a distinctly darker or lighter area but does not result in pure
black or white.
# BlendMode BlendMode.SUBTRACT #
BlendMode.SUBTRACT #

  int SUBTRACT

Description #
# BlendMode BlendMode.VIVIDLIGHT #
BlendMode.VIVIDLIGHT #

  int VIVIDLIGHT

Description #

Burns or dodges the colors by increasing or decreasing the contrast,
depending on the blend color. If the blend color (light source) is
lighter than 50% gray, the image is lightened by decreasing the
contrast. If the blend color is darker than 50% gray, the image is
darkened by increasing the contrast.
# BMPDepthType BMPDepthType.BMP_A1R5G5B5 #
BMPDepthType.BMP_A1R5G5B5 #

  int BMP_A1R5G5B5

Description #

A1 R5 G5 B5 advanced bit depth specification.
# BMPDepthType BMPDepthType.BMP_A4R4G4B4 #
BMPDepthType.BMP_A4R4G4B4 #

  int BMP_A4R4G4B4

Description #

A4 R4 G4 B4 advanced bit depth specification.
# BMPDepthType BMPDepthType.BMP_A8R8G8B8 #
BMPDepthType.BMP_A8R8G8B8 #

  int BMP_A8R8G8B8

Description #

A8 R8 G8 B8 advanced bit depth specification (same as normal 32 bit
mode)
# BMPDepthType BMPDepthType.BMP_R5G6B5 #
BMPDepthType.BMP_R5G6B5 #

  int BMP_R5G6B5

Description #

R5 G6 B5 advanced bit depth specification.
# BMPDepthType BMPDepthType.BMP_R8G8B8 #
BMPDepthType.BMP_R8G8B8 #

  int BMP_R8G8B8

Description #

R8 G8 B8 advanced bit depth specification (same as normal 24 bit mode)
# BMPDepthType BMPDepthType.BMP_X1R5G5B5 #
BMPDepthType.BMP_X1R5G5B5 #

  int BMP_X1R5G5B5

Description #

X1 R5 G5 B5 advanced bit depth specification (same as normal 16 bit
mode)
# BMPDepthType BMPDepthType.BMP_X4R4G4B4 #
BMPDepthType.BMP_X4R4G4B4 #

  int BMP_X4R4G4B4

Description #

X4 R4 G4 B4 advanced bit depth specification.
# BMPDepthType BMPDepthType.BMP_X8R8G8B8 #
BMPDepthType.BMP_X8R8G8B8 #

  int BMP_X8R8G8B8

Description #

X8 R8 G8 B8 advanced bit depth specification.
# BMPDepthType BMPDepthType.EIGHT #
BMPDepthType.EIGHT #

  int EIGHT

Description #

8 bits depth.
# BMPDepthType BMPDepthType.FOUR #
BMPDepthType.FOUR #

  int FOUR

Description #

4 bits depth.
# BMPDepthType BMPDepthType.ONE #
BMPDepthType.ONE #

  int ONE

Description #

1 bit depth.
# BMPDepthType BMPDepthType.SIXTEEN #
BMPDepthType.SIXTEEN #

  int SIXTEEN

Description #

16 bits depth.
# BMPDepthType BMPDepthType.THIRTYTWO #
BMPDepthType.THIRTYTWO #

  int THIRTYTWO

Description #

32 bits depth.
# BMPDepthType BMPDepthType.TWENTYFOUR #
BMPDepthType.TWENTYFOUR #

  int TWENTYFOUR

Description #

24 bits depth.
# BMPSaveOptions BMPSaveOptions.alphaChannels #
BMPSaveOptions.alphaChannels #

  bool alphaChannels

Description #

If true, the alpha channels are saved.
# BMPSaveOptions BMPSaveOptions.depth #
BMPSaveOptions.depth #

  BMPDepthType depth

Description #

The number of bits per sample.
# BMPSaveOptions BMPSaveOptions.flipRowOrder #
BMPSaveOptions.flipRowOrder #

  bool flipRowOrder

Description #

If true, the image is written from bottom to top.
# BMPSaveOptions BMPSaveOptions.osType #
BMPSaveOptions.osType #

  OperatingSystem osType

Description #

The target operating system.
# BMPSaveOptions BMPSaveOptions.rleCompression #
BMPSaveOptions.rleCompression #

  bool rleCompression

Description #

If true, RLE compression is used.
# ByteOrderType ByteOrderType.IBM #
ByteOrderType.IBM #

  int IBM

Description #

IBM PC.
# ByteOrderType ByteOrderType.MACOS #
ByteOrderType.MACOS #

  int MACOS

Description #

Mac OS.
# CameraRAWOpenOptions CameraRAWOpenOptions.bitsPerChannel #
CameraRAWOpenOptions.bitsPerChannel #

  BitsPerChannelType bitsPerChannel

Description #

The number of bits per channel.
# CameraRAWOpenOptions CameraRAWOpenOptions.blueHue #
CameraRAWOpenOptions.blueHue #

  int blueHue

Description #

The blue hue of the shot. Range: -100 to 100.
# CameraRAWOpenOptions CameraRAWOpenOptions.blueSaturation #
CameraRAWOpenOptions.blueSaturation #

  int blueSaturation

Description #

The blue saturation of the shot. Range: -100 to 100.
# CameraRAWOpenOptions CameraRAWOpenOptions.brightness #
CameraRAWOpenOptions.brightness #

  int brightness

Description #

The brightness of the shot. Range: 0 to 150.
# CameraRAWOpenOptions CameraRAWOpenOptions.chromaticAberrationBY #
CameraRAWOpenOptions.chromaticAberrationBY #

  int chromaticAberrationBY

Description #

The chromatic aberration B/Y of the shot. Range: -100 to 100.
# CameraRAWOpenOptions CameraRAWOpenOptions.chromaticAberrationRC #
CameraRAWOpenOptions.chromaticAberrationRC #

  int chromaticAberrationRC

Description #

The chromatic aberration R/C of the shot. Range: -100 to 100.
# CameraRAWOpenOptions CameraRAWOpenOptions.colorNoiseReduction #
CameraRAWOpenOptions.colorNoiseReduction #

  int colorNoiseReduction

Description #

The color noise reduction of the shot. Range: 0 to 100.
# CameraRAWOpenOptions CameraRAWOpenOptions.colorSpace #
CameraRAWOpenOptions.colorSpace #

  ColorSpaceType colorSpace

Description #

The image color space.
# CameraRAWOpenOptions CameraRAWOpenOptions.contrast #
CameraRAWOpenOptions.contrast #

  int contrast

Description #

The constrast of the shot. Range: -50 to 100.
# CameraRAWOpenOptions CameraRAWOpenOptions.exposure #
CameraRAWOpenOptions.exposure #

  Number exposure

Description #

The exposure of the shot. Range: -4.0 to 4.0.
# CameraRAWOpenOptions CameraRAWOpenOptions.greenHue #
CameraRAWOpenOptions.greenHue #

  int greenHue

Description #

The green hue of the shot. Range: -100 to 100.
# CameraRAWOpenOptions CameraRAWOpenOptions.greenSaturation #
CameraRAWOpenOptions.greenSaturation #

  int greenSaturation

Description #

The green saturation of the shot. Range: -100 to 100.
# CameraRAWOpenOptions CameraRAWOpenOptions.luminanceSmoothing #
CameraRAWOpenOptions.luminanceSmoothing #

  int luminanceSmoothing

Description #

The luminance smoothing of the shot. Range: 0 to 100.
# CameraRAWOpenOptions CameraRAWOpenOptions.redHue #
CameraRAWOpenOptions.redHue #

  int redHue

Description #

The red hue of the shot. Range: -100 to 100.
# CameraRAWOpenOptions CameraRAWOpenOptions.redSaturation #
CameraRAWOpenOptions.redSaturation #

  int redSaturation

Description #

The red saturation of the shot. Range: -100 to 100.
# CameraRAWOpenOptions CameraRAWOpenOptions.resolution #
CameraRAWOpenOptions.resolution #

  Number resolution

Description #

The resolution of the document (in pixels per inch)
# CameraRAWOpenOptions CameraRAWOpenOptions.saturation #
CameraRAWOpenOptions.saturation #

  int saturation

Description #

The saturation of the shot. Range: -100 to 100.
# CameraRAWOpenOptions CameraRAWOpenOptions.settings #
CameraRAWOpenOptions.settings #

  CameraRAWSettingsType settings

Description #

The global settings for all Camera RAW options.
# CameraRAWOpenOptions CameraRAWOpenOptions.shadows #
CameraRAWOpenOptions.shadows #

  int shadows

Description #

The shadows of the shot. Range: 0 to 100.
# CameraRAWOpenOptions CameraRAWOpenOptions.shadowTint #
CameraRAWOpenOptions.shadowTint #

  int shadowTint

Description #

The shadow tint of the shot. Range: -100 to 100.
# CameraRAWOpenOptions CameraRAWOpenOptions.sharpness #
CameraRAWOpenOptions.sharpness #

  int sharpness

Description #

The sharpness of the shot. Range: 0 to 100.
# CameraRAWOpenOptions CameraRAWOpenOptions.size #
CameraRAWOpenOptions.size #

  CameraRAWSize size

Description #

The size of the new document.
# CameraRAWOpenOptions CameraRAWOpenOptions.temperature #
CameraRAWOpenOptions.temperature #

  int temperature

Description #

The temperature of the shot. Range: 2000 to 50000.
# CameraRAWOpenOptions CameraRAWOpenOptions.tint #
CameraRAWOpenOptions.tint #

  int tint

Description #

The tint of the shot. Range: -150 to 150.
# CameraRAWOpenOptions CameraRAWOpenOptions.vignettingAmount #
CameraRAWOpenOptions.vignettingAmount #

  int vignettingAmount

Description #

The vignetting amount of the shot. Range: -100 to 100.
# CameraRAWOpenOptions CameraRAWOpenOptions.vignettingMidpoint #
CameraRAWOpenOptions.vignettingMidpoint #

  int vignettingMidpoint

Description #

The vignetting mid point of the shot. Range: -100 to 100.
# CameraRAWOpenOptions CameraRAWOpenOptions.whiteBalance #
CameraRAWOpenOptions.whiteBalance #

  WhiteBalanceType whiteBalance

Description #

The white balance options for the image.
# CameraRAWSettingsType CameraRAWSettingsType.CAMERA #
CameraRAWSettingsType.CAMERA #

  int CAMERA

Description #

Use the settings of the camera.
# CameraRAWSettingsType CameraRAWSettingsType.CUSTOM #
CameraRAWSettingsType.CUSTOM #

  int CUSTOM

Description #

Use the custom settings.
# CameraRAWSettingsType CameraRAWSettingsType.SELECTEDIMAGE #
CameraRAWSettingsType.SELECTEDIMAGE #

  int SELECTEDIMAGE

Description #

Use the settings of the selected image.
# CameraRAWSize CameraRAWSize.EXTRALARGE #
CameraRAWSize.EXTRALARGE #

  int EXTRALARGE

Description #

5120 x 3413 image.
# CameraRAWSize CameraRAWSize.LARGE #
CameraRAWSize.LARGE #

  int LARGE

Description #

4096 x 2731 image.
# CameraRAWSize CameraRAWSize.MAXIMUM #
CameraRAWSize.MAXIMUM #

  int MAXIMUM

Description #

6144 x 4096 image.
# CameraRAWSize CameraRAWSize.MEDIUM #
CameraRAWSize.MEDIUM #

  int MEDIUM

Description #

3072 x 2048 image.
# CameraRAWSize CameraRAWSize.MINIMUM #
CameraRAWSize.MINIMUM #

  int MINIMUM

Description #

1536 x 1024 image.
# CameraRAWSize CameraRAWSize.SMALL #
CameraRAWSize.SMALL #

  int SMALL

Description #

2048 x 1365 image.
# Case Case.ALLCAPS #
Case.ALLCAPS #

  int ALLCAPS

Description #

Uses all uppercase letters.
# Case Case.NORMAL #
Case.NORMAL #

  int NORMAL

Description #

Uses uppercase and lowercase letters.
# Case Case.SMALLCAPS #
Case.SMALLCAPS #

  int SMALLCAPS

Description #

Uses small caps for lowercase letters.
# ChangeMode ChangeMode.BITMAP #
ChangeMode.BITMAP #

  int BITMAP

Description #

Bitmap. Note: Color images must be changed to Grayscale mode before you
can change them to Bitmap mode.
# ChangeMode ChangeMode.CMYK #
ChangeMode.CMYK #

  int CMYK

Description #

CMYK.
# ChangeMode ChangeMode.GRAYSCALE #
ChangeMode.GRAYSCALE #

  int GRAYSCALE

Description #

Grayscale.
# ChangeMode ChangeMode.INDEXEDCOLOR #
ChangeMode.INDEXEDCOLOR #

  int INDEXEDCOLOR

Description #

Indexed color, in which the number of colors in the image is reduced to
at most 256, the standard number of colors supported by the GIF and
PNG-8 formats and many multimedia applications.

This conversion reduces file size by deleting color information from the
image. To convert to indexed color, you must start with an image that is
8 bits per channel and in either Grayscale or RGB mode.
# ChangeMode ChangeMode.LAB #
ChangeMode.LAB #

  int LAB

Description #

Lab.
# ChangeMode ChangeMode.MULTICHANNEL #
ChangeMode.MULTICHANNEL #

  int MULTICHANNEL

Description #

Image with multiple color channels.

Uses 256 levels of gray in each channel. Useful for specialized
printing. Color channels in the original image become spot color
channels in the converted image. A CMYK image converted to Multichannel
mode creates cyan, magenta, yellow, and black spot channels. An RGB
image converted Multichannel mode creates cyan, magenta, and yellow spot
channels. The new grayscale information is based on the color values of
the pixels in each channel. Multichannel mode images can be saved in
Photoshop, Photoshop 2.0, Photoshop Raw, or Photoshop DCS 2.0 format. To
export a multichannel image, save it in Photoshop DCS 2.0 format.
# ChangeMode ChangeMode.RGB #
ChangeMode.RGB #

  int RGB

Description #

RGB.
# Channel Channel.add #
Channel.add #

  Channel add ()

Description #

Adds an element.
# Channel Channel.color #
Channel.color #

  SolidColor color

Description #

The color of the channel. Not valid for component channels.
# Channel Channel.duplicate #
Channel.duplicate #

  Channel duplicate ( Document targetDocument )

Parameters #

  ---------------------- ------------------------------------------------
  targetDocument         The document to duplicate the channel to.

  ---------------------- ------------------------------------------------

Description #

Duplicates the channel.
# Channel Channel.histogram #
Channel.histogram #

  int histogram

Description #

A histogram of the color of the channel.
# Channel Channel.kind #
Channel.kind #

  ChannelType kind

Description #

The type of channel.
# Channel Channel.merge #
Channel.merge #

  void merge ()

Description #

Merges a spot channel into the component channels.
# Channel Channel.name #
Channel.name #

  String name

Description #

The channel name.
# Channel Channel.opacity #
Channel.opacity #

  Number opacity

Description #

The opacity of alpha channels (called solidity for spot channels).
Range: 0 to 100. Valid only when ‘type’ = masked area or selected area.
# Channel Channel.parent #
Channel.parent #

  Object parent

Description #

The object’s container.
# Channel Channel.removeAll #
Channel.removeAll #

  void removeAll ()

Description #

Deletes all elements.
# Channel Channel.remove #
Channel.remove #

  void remove ()

Description #

Deletes this object.
# Channels Channels.add #
Channels.add #

  Channel add ()

Description #

Adds an element.
# Channels Channels.getByName #
Channels.getByName #

  Channel getByName ( String name )

Parameters #

  ---------------------------------------------------------- ------------
  name                                                       

  ---------------------------------------------------------- ------------

Description #

Get the first element in the collection with the provided name.
# Channels Channels.[] #
Channels.[] #

  Channel [] (uint index )

Parameters #

  ------------------------------------------------------------ ----------
  index                                                        

  ------------------------------------------------------------ ----------

Description #

Get an element in the collection with the provided index.
# Channels Channels.length #
Channels.length #

  int length

Description #

Number of elements in the collection.
# Channels Channels.parent #
Channels.parent #

  Object parent

Description #

The object’s container.
# Channels Channels.removeAll #
Channels.removeAll #

  void removeAll ()

Description #

Deletes all elements.
# Channels Channels.typename #
Channels.typename #

  String typename

Description #

The class name of the object.
# ChannelType ChannelType.COMPONENT #
ChannelType.COMPONENT #

  int COMPONENT

Description #

The channel related to the document color model.
# ChannelType ChannelType.MASKEDAREA #
ChannelType.MASKEDAREA #

  int MASKEDAREA

Description #

The apha channel where color indicates a masked area.
# Channel Channel.typename #
Channel.typename #

  String typename

Description #

The class name of the object.
# ChannelType ChannelType.SELECTEDAREA #
ChannelType.SELECTEDAREA #

  int SELECTEDAREA

Description #

The lpha channel where color indicates a selected area.
# ChannelType ChannelType.SPOTCOLOR #
ChannelType.SPOTCOLOR #

  int SPOTCOLOR

Description #

The alpha channel to store a spot color.
# Channel Channel.visible #
Channel.visible #

  bool visible

Description #

If true, the channel is visible.
# CMYKColor CMYKColor.black #
CMYKColor.black #

  Number black

Description #

The black color value. Range: 0.0 to 100.0.
# CMYKColor CMYKColor.cyan #
CMYKColor.cyan #

  Number cyan

Description #

The cyan color value. Range: 0.0 to 100.0.
# CMYKColor CMYKColor.magenta #
CMYKColor.magenta #

  Number magenta

Description #

The magenta color value. Range: 0.0 to 100.0.
# CMYKColor CMYKColor.yellow #
CMYKColor.yellow #

  Number yellow

Description #

The yellow color value. Range: 0.0 to 100.0.
# ColorBlendMode ColorBlendMode.BEHIND #
ColorBlendMode.BEHIND #

  int BEHIND

Description #

Edits or paints only on the transparent part of a layer. Works only in
layers in which transparent pixels locked = false and is analogous to
painting on the back of transparent areas on a sheet of acetate.
# ColorBlendMode ColorBlendMode.CLEAR #
ColorBlendMode.CLEAR #

  int CLEAR

Description #

Edits or paints each pixel and makes it transparent. Works only in
layers in which transparent pixels locked = false.
# ColorBlendMode ColorBlendMode.COLORBURN #
ColorBlendMode.COLORBURN #

  int COLORBURN

Description #

Looks at the color information in each channel and darkens the base
color to reflect the blend color by increasing the contrast. Blending
with white produces no change.
# ColorBlendMode ColorBlendMode.COLORDODGE #
ColorBlendMode.COLORDODGE #

  int COLORDODGE

Description #

Looks at the color information in each channel and brightens the base
color to reflect the blend color by decreasing the contrast. Blending
with black produces no change.
# ColorBlendMode ColorBlendMode.COLOR #
ColorBlendMode.COLOR #

  int COLOR

Description #

Creates a result color with the luminance of the base color and the hue
and saturation of the blend color. This preserves the gray levels in the
image and is useful for coloring monochrome images and for tinting color
images.
# ColorBlendMode ColorBlendMode.DARKEN #
ColorBlendMode.DARKEN #

  int DARKEN

Description #

Looks at the color information in each channel and selects the base or
blend color?whichever is darker?as the result color. Pixels lighter than
the blend color are replaced, and pixels darker than the blend color do
not change.
# ColorBlendMode ColorBlendMode.DIFFERENCE #
ColorBlendMode.DIFFERENCE #

  int DIFFERENCE

Description #

Looks at the color information in each channel and subtracts either the
blend color from the base color or the base color from the blend color,
depending on which has the greater brightness value. Blending with white
inverts the base color values; blending with black produces no change.
# ColorBlendMode ColorBlendMode.DISSOLVE #
ColorBlendMode.DISSOLVE #

  int DISSOLVE

Description #

Edits or paints each pixel to make it the result color, which is a
random replacement of the pixels with the base color or the blend color,
depending on the opacity at any pixel location.
# ColorBlendMode ColorBlendMode.DIVIDE #
ColorBlendMode.DIVIDE #

  int DIVIDE

Description #
# ColorBlendMode ColorBlendMode.EXCLUSION #
ColorBlendMode.EXCLUSION #

  int EXCLUSION

Description #

Creates an effect similar to but lower in contrast than the Difference
mode. Blending with white inverts the base color values. Blending with
black produces no change.
# ColorBlendMode ColorBlendMode.HARDLIGHT #
ColorBlendMode.HARDLIGHT #

  int HARDLIGHT

Description #

Multiplies or screens the colors, depending on the blend color. The
effect is similar to shining a harsh spotlight on the image. If the
blend color (light source) is lighter than 50% gray, the image is
lightened, as if it were screened. This is useful for adding highlights
to an image. If the blend color is darker than 50% gray, the image is
darkened, as if it were multiplied. This is useful for adding shadows to
an image. Painting with pure black or white results in pure black or
white.
# ColorBlendMode ColorBlendMode.HARDMIXBLEND #
ColorBlendMode.HARDMIXBLEND #

  int HARDMIXBLEND

Description #

Lighter colors lighten the result, and darker colors darken the result.
50% gray as a blend color has no effect on the result color. Lowering
the fill opacity creates less posterization/thresholding.
# ColorBlendMode ColorBlendMode.HUE #
ColorBlendMode.HUE #

  int HUE

Description #

Creates a result color with the luminance and saturation of the base
color and the hue of the blend color.
# ColorBlendMode ColorBlendMode.LIGHTEN #
ColorBlendMode.LIGHTEN #

  int LIGHTEN

Description #

Looks at the color information in each channel and selects the base or
blend color?whichever is lighter?as the result color. Pixels darker than
the blend color are replaced, and pixels lighter than the blend color do
not change.
# ColorBlendMode ColorBlendMode.LINEARBURN #
ColorBlendMode.LINEARBURN #

  int LINEARBURN

Description #

Looks at the color information in each channel and darkens the base
color to reflect the blend color by decreasing the brightness. Blending
with white produces no change.
# ColorBlendMode ColorBlendMode.LINEARDODGE #
ColorBlendMode.LINEARDODGE #

  int LINEARDODGE

Description #

Looks at the color information in each channel and brightens the base
color to reflect the blend color by increasing the brightness. Blending
with black produces no change.
# ColorBlendMode ColorBlendMode.LINEARLIGHT #
ColorBlendMode.LINEARLIGHT #

  int LINEARLIGHT

Description #

Burns or dodges the colors by decreasing or increasing the brightness,
depending on the blend color. If the blend color (light source) is
lighter than 50% gray, the image is lightened by increasing the
brightness. If the blend color is darker than 50% gray, the image is
darkened by decreasing the brightness.
# ColorBlendMode ColorBlendMode.LUMINOSITY #
ColorBlendMode.LUMINOSITY #

  int LUMINOSITY

Description #

Creates a result color with the hue and saturation of the base color and
the luminance of the blend color. This mode creates an inverse effect
from that of the Color mode.
# ColorBlendMode ColorBlendMode.MULTIPLY #
ColorBlendMode.MULTIPLY #

  int MULTIPLY

Description #

Looks at the color information in each channel and multiplies the base
color by the blend color. The result color is always a darker color.
Multiplying any color with black produces black. Multiplying any color
with white leaves the color unchanged. When you?re painting with a color
other than black or white, successive strokes with a painting tool
produce progressively darker colors. The effect is similar to drawing on
the image with multiple marking pens.
# ColorBlendMode ColorBlendMode.NORMAL #
ColorBlendMode.NORMAL #

  int NORMAL

Description #

Edits or paints each pixel to make it the result color. (Called
“Threshold” when you?re working with a bitmapped or indexed-color
image.)
# ColorBlendMode ColorBlendMode.OVERLAY #
ColorBlendMode.OVERLAY #

  int OVERLAY

Description #

Multiplies or screens the colors, depending on the base color. Patterns
or colors overlay the existing pixels while preserving the highlights
and shadows of the base color. The base color is not replaced but is
mixed with the blend color to reflect the lightness or darkness of the
original color.
# ColorBlendMode ColorBlendMode.PINLIGHT #
ColorBlendMode.PINLIGHT #

  int PINLIGHT

Description #

Replaces the colors, depending on the blend color. If the blend color
(light source) is lighter than 50% gray, pixels darker than the blend
color are replaced, and pixels lighter than the blend color do not
change. If the blend color is darker than 50% gray, pixels lighter than
the blend color are replaced, and pixels darker than the blend color do
not change. This is useful for adding special effects to an image.
# ColorBlendMode ColorBlendMode.SATURATION #
ColorBlendMode.SATURATION #

  int SATURATION

Description #

Creates a result color with the luminance and hue of the base color and
the saturation of the blend color. Painting with this mode in an area
with no (0) saturation (gray) causes no change.
# ColorBlendMode ColorBlendMode.SCREEN #
ColorBlendMode.SCREEN #

  int SCREEN

Description #

Looks at each channel?s color information and multiplies the inverse of
the blend and base colors. The result color is always a lighter color.
Screening with black leaves the color unchanged. Screening with white
produces white. The effect is similar to projecting multiple
photographic slides on top of each other.
# ColorBlendMode ColorBlendMode.SOFTLIGHT #
ColorBlendMode.SOFTLIGHT #

  int SOFTLIGHT

Description #

Darkens or lightens the colors, depending on the blend color. The effect
is similar to shining a diffused spotlight on the image. If the blend
color (light source) is lighter than 50% gray, the image is lightened as
if it were dodged. If the blend color is darker than 50% gray, the image
is darkened as if it were burned in. Painting with pure black or white
produces a distinctly darker or lighter area but does not result in pure
black or white.
# ColorBlendMode ColorBlendMode.SUBTRACT #
ColorBlendMode.SUBTRACT #

  int SUBTRACT

Description #
# ColorBlendMode ColorBlendMode.VIVIDLIGHT #
ColorBlendMode.VIVIDLIGHT #

  int VIVIDLIGHT

Description #

Burns or dodges the colors by increasing or decreasing the contrast,
depending on the blend color. If the blend color (light source) is
lighter than 50% gray, the image is lightened by decreasing the
contrast. If the blend color is darker than 50% gray, the image is
darkened by increasing the contrast.
# ColorModel ColorModel.CMYK #
ColorModel.CMYK #

  int CMYK

Description #

CMYK.
# ColorModel ColorModel.GRAYSCALE #
ColorModel.GRAYSCALE #

  int GRAYSCALE

Description #

Grayscale.
# ColorModel ColorModel.HSB #
ColorModel.HSB #

  int HSB

Description #

HSB.
# ColorModel ColorModel.LAB #
ColorModel.LAB #

  int LAB

Description #

Lab.
# ColorModel ColorModel.NONE #
ColorModel.NONE #

  int NONE

Description #

The color model has not yet been assigned.
# ColorModel ColorModel.RGB #
ColorModel.RGB #

  int RGB

Description #

RGB.
# ColorPicker ColorPicker.ADOBE #
ColorPicker.ADOBE #

  int ADOBE

Description #

The Adobe Color Picker.
# ColorPicker ColorPicker.APPLE #
ColorPicker.APPLE #

  int APPLE

Description #

The built-in Apple color picker.
# ColorPicker ColorPicker.PLUGIN #
ColorPicker.PLUGIN #

  int PLUGIN

Description #

An installed plug-in color picker.
# ColorPicker ColorPicker.WINDOWS #
ColorPicker.WINDOWS #

  int WINDOWS

Description #

The built-in Windows color picker.
# ColorProfileType ColorProfileType.CUSTOM #
ColorProfileType.CUSTOM #

  int CUSTOM

Description #

Color manages this document using a custom color profile.
# ColorProfileType ColorProfileType.NONE #
ColorProfileType.NONE #

  int NONE

Description #

The document is not color managed.
# ColorProfileType ColorProfileType.WORKING #
ColorProfileType.WORKING #

  int WORKING

Description #

Color manages this document using the working color profile.
# ColorReductionType ColorReductionType.ADAPTIVE #
ColorReductionType.ADAPTIVE #

  int ADAPTIVE

Description #

Samples color from the spectrum appearing most commonly in the image.
# ColorReductionType ColorReductionType.BLACKWHITE #
ColorReductionType.BLACKWHITE #

  int BLACKWHITE

Description #

Uses a set palette of colors.
# ColorReductionType ColorReductionType.CUSTOM #
ColorReductionType.CUSTOM #

  int CUSTOM

Description #

Uses a color palette that is created or modified by the user. If you
open an existing GIF or PNG-8 file, it will have a custom color palette.
# ColorReductionType ColorReductionType.GRAYSCALE #
ColorReductionType.GRAYSCALE #

  int GRAYSCALE

Description #

Uses a set palette of colors.
# ColorReductionType ColorReductionType.MACINTOSH #
ColorReductionType.MACINTOSH #

  int MACINTOSH

Description #

Uses a set palette of colors.
# ColorReductionType ColorReductionType.PERCEPTUAL #
ColorReductionType.PERCEPTUAL #

  int PERCEPTUAL

Description #

Gives priority to colors for which the human eye has greater
sensitivity.
# ColorReductionType ColorReductionType.RESTRICTIVE #
ColorReductionType.RESTRICTIVE #

  int RESTRICTIVE

Description #

Uses the standard 216-color color table common to Windows and Mac OS
8-bit (256-color or web-safe palette); ensures that no browser dither is
applied when the image is displayed using 8-bit color.
# ColorReductionType ColorReductionType.SELECTIVE #
ColorReductionType.SELECTIVE #

  int SELECTIVE

Description #

Gives priority to broad areas of color and the preservation of web
colors; usually produces images with the greatest color integrity.
# ColorReductionType ColorReductionType.WINDOWS #
ColorReductionType.WINDOWS #

  int WINDOWS

Description #

Uses a set palette of colors.
# ColorSampler ColorSampler.add #
ColorSampler.add #

  ColorSampler add ()

Description #

Adds an element.
# ColorSampler ColorSampler.color #
ColorSampler.color #

  SolidColor color

Description #

The color of the color sampler.
# ColorSampler ColorSampler.move #
ColorSampler.move #

  void move ( UnitPoint position )

Parameters #

  ------------------- ---------------------------------------------------
  position            Position of destination (unit value)

  ------------------- ---------------------------------------------------

Description #

Moves the color sampler to a new location.
# ColorSampler ColorSampler.parent #
ColorSampler.parent #

  Object parent

Description #

The object’s container.
# ColorSampler ColorSampler.position #
ColorSampler.position #

  UnitPoint position

Description #

The position of the color sampler in the document.
# ColorSampler ColorSampler.removeAll #
ColorSampler.removeAll #

  void removeAll ()

Description #

Deletes all elements.
# ColorSampler ColorSampler.remove #
ColorSampler.remove #

  void remove ()

Description #

Deletes this object.
# ColorSamplers ColorSamplers.add #
ColorSamplers.add #

  ColorSampler add ( UnitPoint position )

Parameters #

  ---------- ------------------------------------------------------------
  position   The horizontal and vertical (x,y) locations, respectively,
             of the color sampler.

  ---------- ------------------------------------------------------------

Description #

Creates a color sampler.
# ColorSamplers ColorSamplers.getByName #
ColorSamplers.getByName #

  ColorSampler getByName ( String name )

Parameters #

  ---------------------------------------------------------- ------------
  name                                                       

  ---------------------------------------------------------- ------------

Description #

Get the first element in the collection with the provided name.
# ColorSamplers ColorSamplers.[] #
ColorSamplers.[] #

  ColorSampler [] (uint index )

Parameters #

  ------------------------------------------------------------ ----------
  index                                                        

  ------------------------------------------------------------ ----------

Description #

Get an element in the collection with the provided index.
# ColorSamplers ColorSamplers.length #
ColorSamplers.length #

  int length

Description #

Number of elements in the collection.
# ColorSamplers ColorSamplers.parent #
ColorSamplers.parent #

  Object parent

Description #

The object’s container.
# ColorSamplers ColorSamplers.typename #
ColorSamplers.typename #

  String typename

Description #

The class name of the object.
# ColorSampler ColorSampler.typename #
ColorSampler.typename #

  String typename

Description #

The class name of the object.
# ColorSpaceType ColorSpaceType.ADOBERGB #
ColorSpaceType.ADOBERGB #

  int ADOBERGB

Description #

Use the Adobe RGB color space.
# ColorSpaceType ColorSpaceType.COLORMATCHRGB #
ColorSpaceType.COLORMATCHRGB #

  int COLORMATCHRGB

Description #

Use the ColorMatch RGB color space.
# ColorSpaceType ColorSpaceType.PROPHOTORGB #
ColorSpaceType.PROPHOTORGB #

  int PROPHOTORGB

Description #

Use the ProPhoto RGB color space.
# ColorSpaceType ColorSpaceType.SRGB #
ColorSpaceType.SRGB #

  int SRGB

Description #

Use the sRGB color space.
# ContactSheetOptions ContactSheetOptions.acrossFirst #
ContactSheetOptions.acrossFirst #

  bool acrossFirst

Description #

If true, places the images horizontally first.
# ContactSheetOptions ContactSheetOptions.bestFit #
ContactSheetOptions.bestFit #

  bool bestFit

Description #

If true, rotates images for best fit.
# ContactSheetOptions ContactSheetOptions.caption #
ContactSheetOptions.caption #

  bool caption

Description #

If true, uses the filename as a caption for the image.
# ContactSheetOptions ContactSheetOptions.columnCount #
ContactSheetOptions.columnCount #

  int columnCount

Description #

The number of contact sheet columns.
# ContactSheetOptions ContactSheetOptions.flatten #
ContactSheetOptions.flatten #

  bool flatten

Description #

If true, flattens all layers in the final document.
# ContactSheetOptions ContactSheetOptions.font #
ContactSheetOptions.font #

  GalleryFontType font

Description #

The font used for the caption.
# ContactSheetOptions ContactSheetOptions.fontSize #
ContactSheetOptions.fontSize #

  int fontSize

Description #

The caption font size.
# ContactSheetOptions ContactSheetOptions.height #
ContactSheetOptions.height #

  int height

Description #

The height (in pixels) of the resulting document. Range: 100 to 2900.
# ContactSheetOptions ContactSheetOptions.horizontal #
ContactSheetOptions.horizontal #

  int horizontal

Description #

The horizontal spacing (in pixels) between images. Range: 0 to 29000.
# ContactSheetOptions ContactSheetOptions.mode #
ContactSheetOptions.mode #

  NewDocumentMode mode

Description #

The document color mode.
# ContactSheetOptions ContactSheetOptions.resolution #
ContactSheetOptions.resolution #

  Number resolution

Description #

The resolution of the document (in pixels per inch). Range: 35 to 1200.
# ContactSheetOptions ContactSheetOptions.rowCount #
ContactSheetOptions.rowCount #

  int rowCount

Description #

The number of contact sheet rows.
# ContactSheetOptions ContactSheetOptions.useAutoSpacing #
ContactSheetOptions.useAutoSpacing #

  bool useAutoSpacing

Description #

If true, auto spaces the images in the contact sheet.
# ContactSheetOptions ContactSheetOptions.vertical #
ContactSheetOptions.vertical #

  int vertical

Description #

The vertical spacing (in pixels) between images. Range: 0 to 29000.
# ContactSheetOptions ContactSheetOptions.width #
ContactSheetOptions.width #

  int width

Description #

The width (in pixels) of the resulting document. Range: 100 to 2900.
# CopyrightedType CopyrightedType.COPYRIGHTEDWORK #
CopyrightedType.COPYRIGHTEDWORK #

  int COPYRIGHTEDWORK

Description #

The document is copyrighted.
# CopyrightedType CopyrightedType.PUBLICDOMAIN #
CopyrightedType.PUBLICDOMAIN #

  int PUBLICDOMAIN

Description #

The document is in the public domain.
# CopyrightedType CopyrightedType.UNMARKED #
CopyrightedType.UNMARKED #

  int UNMARKED

Description #

The copyright status is not indicated.
# CountItem CountItem.add #
CountItem.add #

  CountItem add ()

Description #

Adds an element.
# CountItem CountItem.parent #
CountItem.parent #

  Object parent

Description #

The object’s container.
# CountItem CountItem.position #
CountItem.position #

  UnitPoint position

Description #

The position of count item in the document.
# CountItem CountItem.removeAll #
CountItem.removeAll #

  void removeAll ()

Description #

Deletes all elements.
# CountItem CountItem.remove #
CountItem.remove #

  void remove ()

Description #

Deletes this object.
# CountItems CountItems.add #
CountItems.add #

  CountItem add ( UnitPoint position )

Parameters #

  ------------------------- ---------------------------------------------
  position                  The position of origin.

  ------------------------- ---------------------------------------------

Description #

Creates a count item.
# CountItems CountItems.getByName #
CountItems.getByName #

  CountItem getByName ( String name )

Parameters #

  ---------------------------------------------------------- ------------
  name                                                       

  ---------------------------------------------------------- ------------

Description #

Get the first element in the collection with the provided name.
# CountItems CountItems.[] #
CountItems.[] #

  CountItem [] (uint index )

Parameters #

  ------------------------------------------------------------ ----------
  index                                                        

  ------------------------------------------------------------ ----------

Description #

Get an element in the collection with the provided index.
# CountItems CountItems.length #
CountItems.length #

  int length

Description #

Number of elements in the collection.
# CountItems CountItems.parent #
CountItems.parent #

  Object parent

Description #

The object’s container.
# CountItems CountItems.typename #
CountItems.typename #

  String typename

Description #

The class name of the object.
# CountItem CountItem.typename #
CountItem.typename #

  String typename

Description #

The class name of the object.
# CreateFields CreateFields.DUPLICATION #
CreateFields.DUPLICATION #

  int DUPLICATION

Description #

Duplicates existing pixels.
# CreateFields CreateFields.INTERPOLATION #
CreateFields.INTERPOLATION #

  int INTERPOLATION

Description #

Assigns color values to any new pixels that Photoshop creates based on
the color values of existing pixels in the image.
# CropToType CropToType.ARTBOX #
CropToType.ARTBOX #

  int ARTBOX

Description #

Crop to the art box.
# CropToType CropToType.BLEEDBOX #
CropToType.BLEEDBOX #

  int BLEEDBOX

Description #

Crop to the bleed box.
# CropToType CropToType.BOUNDINGBOX #
CropToType.BOUNDINGBOX #

  int BOUNDINGBOX

Description #

Crop to the bounding box.
# CropToType CropToType.CROPBOX #
CropToType.CROPBOX #

  int CROPBOX

Description #

Crop to the crop box.
# CropToType CropToType.MEDIABOX #
CropToType.MEDIABOX #

  int MEDIABOX

Description #

Crop to the media box.
# CropToType CropToType.TRIMBOX #
CropToType.TRIMBOX #

  int TRIMBOX

Description #

Crop to the trim box.
# DCS1_SaveOptions DCS1_SaveOptions.DCS #
DCS1_SaveOptions.DCS #

  DCSType DCS

Description #

The DCS type.
# DCS1_SaveOptions DCS1_SaveOptions.embedColorProfile #
DCS1_SaveOptions.embedColorProfile #

  bool embedColorProfile

Description #

If true, the color profile is embedded in the document.
# DCS1_SaveOptions DCS1_SaveOptions.encoding #
DCS1_SaveOptions.encoding #

  SaveEncoding encoding

Description #

The type of encoding to use for the document.
# DCS1_SaveOptions DCS1_SaveOptions.halftoneScreen #
DCS1_SaveOptions.halftoneScreen #

  bool halftoneScreen

Description #

If true, includes halftone screen.
# DCS1_SaveOptions DCS1_SaveOptions.interpolation #
DCS1_SaveOptions.interpolation #

  bool interpolation

Description #

If true, image interpolation is used.
# DCS1_SaveOptions DCS1_SaveOptions.preview #
DCS1_SaveOptions.preview #

  MacPreviewType preview

Description #

The type of preview.
# DCS1_SaveOptions DCS1_SaveOptions.transferFunction #
DCS1_SaveOptions.transferFunction #

  bool transferFunction

Description #

If true, includes transfer functions in the document to compensate for
dot gain between the image and film.
# DCS1_SaveOptions DCS1_SaveOptions.vectorData #
DCS1_SaveOptions.vectorData #

  bool vectorData

Description #

If true, includes vector data. Valid only if the document contains
vector data (un-rasterized text).
# DCS2_SaveOptions DCS2_SaveOptions.DCS #
DCS2_SaveOptions.DCS #

  DCSType DCS

Description #

The DCS type.
# DCS2_SaveOptions DCS2_SaveOptions.embedColorProfile #
DCS2_SaveOptions.embedColorProfile #

  bool embedColorProfile

Description #

If true, the color profile is embedded in the document.
# DCS2_SaveOptions DCS2_SaveOptions.encoding #
DCS2_SaveOptions.encoding #

  SaveEncoding encoding

Description #

The type of encoding to use for document.
# DCS2_SaveOptions DCS2_SaveOptions.halftoneScreen #
DCS2_SaveOptions.halftoneScreen #

  bool halftoneScreen

Description #

If true, includes halftone screen.
# DCS2_SaveOptions DCS2_SaveOptions.interpolation #
DCS2_SaveOptions.interpolation #

  bool interpolation

Description #

If true, image interpolation is used.
# DCS2_SaveOptions DCS2_SaveOptions.multiFileDCS #
DCS2_SaveOptions.multiFileDCS #

  bool multiFileDCS

Description #

If true, saves color channels as multiple files.
# DCS2_SaveOptions DCS2_SaveOptions.preview #
DCS2_SaveOptions.preview #

  MacPreviewType preview

Description #

The type of preview.
# DCS2_SaveOptions DCS2_SaveOptions.spotColors #
DCS2_SaveOptions.spotColors #

  bool spotColors

Description #

If true, the spot colors are saved.
# DCS2_SaveOptions DCS2_SaveOptions.transferFunction #
DCS2_SaveOptions.transferFunction #

  bool transferFunction

Description #

If true, includes transfer functions in the document to compensate for
dot gain between the image and film.
# DCS2_SaveOptions DCS2_SaveOptions.vectorData #
DCS2_SaveOptions.vectorData #

  bool vectorData

Description #

If true, includes vector data. Valid only if the document contains
vector data (un-rasterized text).
# DCSType DCSType.COLORCOMPOSITE #
DCSType.COLORCOMPOSITE #

  int COLORCOMPOSITE

Description #

Creates a color composite file in addition to DCS files.
# DCSType DCSType.GRAYSCALECOMPOSITE #
DCSType.GRAYSCALECOMPOSITE #

  int GRAYSCALECOMPOSITE

Description #

Creates a grayscale composite file in addition to DCS files.
# DCSType DCSType.NOCOMPOSITE #
DCSType.NOCOMPOSITE #

  int NOCOMPOSITE

Description #

Does not create a composite file.
# DepthMapSource DepthMapSource.IMAGEHIGHLIGHT #
DepthMapSource.IMAGEHIGHLIGHT #

  int IMAGEHIGHLIGHT

Description #

Uses the image highlight for the depth map.
# DepthMapSource DepthMapSource.LAYERMASK #
DepthMapSource.LAYERMASK #

  int LAYERMASK

Description #

Uses the layer mask for the depth map.
# DepthMapSource DepthMapSource.NONE #
DepthMapSource.NONE #

  int NONE

Description #

No depth map in use.
# DepthMapSource DepthMapSource.TRANSPARENCYCHANNEL #
DepthMapSource.TRANSPARENCYCHANNEL #

  int TRANSPARENCYCHANNEL

Description #

Uses the transparency channel for the depth map.
# DescValueType DescValueType.ALIASTYPE #
DescValueType.ALIASTYPE #

  int ALIASTYPE

Description #

Alias.
# DescValueType DescValueType.BOOLEANTYPE #
DescValueType.BOOLEANTYPE #

  int BOOLEANTYPE

Description #

Boolean.
# DescValueType DescValueType.CLASSTYPE #
DescValueType.CLASSTYPE #

  int CLASSTYPE

Description #

Class.
# DescValueType DescValueType.DOUBLETYPE #
DescValueType.DOUBLETYPE #

  int DOUBLETYPE

Description #

Double.
# DescValueType DescValueType.ENUMERATEDTYPE #
DescValueType.ENUMERATEDTYPE #

  int ENUMERATEDTYPE

Description #

Enumeration.
# DescValueType DescValueType.INTEGERTYPE #
DescValueType.INTEGERTYPE #

  int INTEGERTYPE

Description #

Integer.
# DescValueType DescValueType.LARGEINTEGERTYPE #
DescValueType.LARGEINTEGERTYPE #

  int LARGEINTEGERTYPE

Description #
# DescValueType DescValueType.LISTTYPE #
DescValueType.LISTTYPE #

  int LISTTYPE

Description #

Action list.
# DescValueType DescValueType.OBJECTTYPE #
DescValueType.OBJECTTYPE #

  int OBJECTTYPE

Description #

Object.
# DescValueType DescValueType.RAWTYPE #
DescValueType.RAWTYPE #

  int RAWTYPE

Description #

Raw.
# DescValueType DescValueType.REFERENCETYPE #
DescValueType.REFERENCETYPE #

  int REFERENCETYPE

Description #

Reference.
# DescValueType DescValueType.STRINGTYPE #
DescValueType.STRINGTYPE #

  int STRINGTYPE

Description #

String.
# DescValueType DescValueType.UNITDOUBLE #
DescValueType.UNITDOUBLE #

  int UNITDOUBLE

Description #

Unit value of type double.
# DialogModes DialogModes.ALL #
DialogModes.ALL #

  int ALL

Description #

Show all dialogs.
# DialogModes DialogModes.ERROR #
DialogModes.ERROR #

  int ERROR

Description #

Show only dialogs related to errors.
# DialogModes DialogModes.NO #
DialogModes.NO #

  int NO

Description #

Show no dialogs.
# DICOMOpenOptions DICOMOpenOptions.anonymize #
DICOMOpenOptions.anonymize #

  bool anonymize

Description #

If true, patient information is anonymized.
# DICOMOpenOptions DICOMOpenOptions.columns #
DICOMOpenOptions.columns #

  int columns

Description #

The number of columns in an n-up configuration.
# DICOMOpenOptions DICOMOpenOptions.reverse #
DICOMOpenOptions.reverse #

  bool reverse

Description #

If true, the image is inverted.
# DICOMOpenOptions DICOMOpenOptions.rows #
DICOMOpenOptions.rows #

  int rows

Description #

The number of rows in an n-up configuration.
# DICOMOpenOptions DICOMOpenOptions.showOverlays #
DICOMOpenOptions.showOverlays #

  bool showOverlays

Description #

If true, overlays are shown (if present).
# DICOMOpenOptions DICOMOpenOptions.windowLevel #
DICOMOpenOptions.windowLevel #

  int windowLevel

Description #

The contrast of the image in Houndsfield units.
# DICOMOpenOptions DICOMOpenOptions.windowWidth #
DICOMOpenOptions.windowWidth #

  int windowWidth

Description #

The brightness of the image in Houndsfield units.
# Direction Direction.HORIZONTAL #
Direction.HORIZONTAL #

  int HORIZONTAL

Description #

Horizontal.
# Direction Direction.VERTICAL #
Direction.VERTICAL #

  int VERTICAL

Description #

Vertical.
# DisplacementMapType DisplacementMapType.STRETCHTOFIT #
DisplacementMapType.STRETCHTOFIT #

  int STRETCHTOFIT

Description #

The map is resized.
# DisplacementMapType DisplacementMapType.TILE #
DisplacementMapType.TILE #

  int TILE

Description #

The selection is filled by repeating the map in a pattern.
# DitherType DitherType.DIFFUSION #
DitherType.DIFFUSION #

  int DIFFUSION

Description #

Diffuses dither effects in random patterns across adjacent pixels.
# DitherType DitherType.NOISE #
DitherType.NOISE #

  int NOISE

Description #

Applies a random pattern but without diffusing the pattern across
adjacent pixels; prevents the appearance of seams.
# DitherType DitherType.NONE #
DitherType.NONE #

  int NONE

Description #

No dither is used.
# DitherType DitherType.PATTERN #
DitherType.PATTERN #

  int PATTERN

Description #

Applies a halftone-like square pattern.
# DocPositionStyle DocPositionStyle.PRINTCENTERED #
DocPositionStyle.PRINTCENTERED #

  int PRINTCENTERED

Description #

Print image centered on page.
# DocPositionStyle DocPositionStyle.SIZETOFIT #
DocPositionStyle.SIZETOFIT #

  int SIZETOFIT

Description #

Resize image to fit on page when printing.
# DocPositionStyle DocPositionStyle.USERDEFINED #
DocPositionStyle.USERDEFINED #

  int USERDEFINED

Description #

Print using user defined spacing.
# Document Document.activeChannels #
Document.activeChannels #

  Channel activeChannels

Description #

The selected channels.
# Document Document.activeHistoryBrushSource #
Document.activeHistoryBrushSource #

  HistoryState activeHistoryBrushSource

Description #

The history state to use with the history brush.
# Document Document.activeHistoryState #
Document.activeHistoryState #

  HistoryState activeHistoryState

Description #

The current history state for this document.
# Document Document.activeLayer #
Document.activeLayer #

  Layer activeLayer

Description #

The selected layer.
# Document Document.artLayers #
Document.artLayers #

  ArtLayers artLayers

Description #

The art layers collection in the document.
# Document Document.autoCount #
Document.autoCount #

  void autoCount ( Channel channel , int threshold )

Parameters #

  ---------------- ------------------------------------------------------
  channel          The channel to use for counting.

  threshold        Threshold to use for counting. Range: 0 to 255.
  ---------------- ------------------------------------------------------

Description #

Counts the objects in the document.
# Document Document.backgroundLayer #
Document.backgroundLayer #

  ArtLayer backgroundLayer

Description #

The background layer for the document.
# Document Document.bitsPerChannel #
Document.bitsPerChannel #

  BitsPerChannelType bitsPerChannel

Description #

The number of bits per channel.
# Document Document.changeMode #
Document.changeMode #

  void changeMode ( ChangeMode destinationMode ,
  DocumentConversionOptions options )

Parameters #

  ---------------------------- ------------------------------------------
  destinationMode              The mode to change to.

  options                      Options for changing the mode.
  ---------------------------- ------------------------------------------

Description #

Changes the mode of the document.
# Document Document.channels #
Document.channels #

  Channels channels

Description #

The channels collection in this document.
# Document Document.close #
Document.close #

  void close ( SaveOptionsType saving )

Parameters #

  ------------ ----------------------------------------------------------
  saving       Specifies whether changes should be saved before closing.

  ------------ ----------------------------------------------------------

Description #

Closes the document.
# Document Document.colorProfileName #
Document.colorProfileName #

  String colorProfileName

Description #

The name of the color profile. Valid only when no value is specified for
color profile kind (to indicate a custom color profile).
# Document Document.colorProfileType #
Document.colorProfileType #

  ColorProfileType colorProfileType

Description #

The type of color model that defines the working space of the document.
# Document Document.colorSamplers #
Document.colorSamplers #

  ColorSamplers colorSamplers

Description #

The current color samplers associated with the document.
# Document Document.componentChannels #
Document.componentChannels #

  Channel componentChannels

Description #

The color component channels for this document.
# Document Document.convertProfile #
Document.convertProfile #

  void convertProfile ( String destinationProfile , Intent intent , bool
  blackPointCompensation , bool dither )

Parameters #

  ------------------------ ----------------------------------------------------------
  destinationProfile       The color profile to convert to. Either a string
                           specifying a color profile, one of the working color
                           spaces, or Lab color.

  intent                   The conversion intent.

  blackPointCompensation   If true, black point compensation is used.

  dither                   If true, dither is used.
  ------------------------ ----------------------------------------------------------

Description #

Converts the document from using one color profile to using another.
# Document Document.countItems #
Document.countItems #

  CountItems countItems

Description #

The current count items in the document.
# Document Document.crop #
Document.crop #

  void crop ( UnitRect bounds , Number angle , UnitValue width ,
  UnitValue height )

Parameters #

  ----------------- -----------------------------------------------------
  bounds            The area to crop.

  angle             The angle of cropping bounds.

  width             The width of the resulting document.

  height            The height of the resulting document.
  ----------------- -----------------------------------------------------

Description #

Crops the document.
# Document Document.duplicate #
Document.duplicate #

  Document duplicate ( String name , bool mergeLayersOnly )

Parameters #

  ------------------------ ----------------------------------------------
  name                     The name of the new document.

  mergeLayersOnly          If ture, duplicates merged layers only.
  ------------------------ ----------------------------------------------

Description #

Creates a duplicate of the document object.
# Document Document.exportDocument #
Document.exportDocument #

  void exportDocument ( File exportIn , ExportType exportAs ,
  ExportOptions options )

Parameters #

  ------------------ ----------------------------------------------------
  exportIn           The file to export to.

  exportAs           The type of export.

  options            Options for the specified export type.
  ------------------ ----------------------------------------------------

Description #

Exports the document.
# DocumentFill DocumentFill.BACKGROUNDCOLOR #
DocumentFill.BACKGROUNDCOLOR #

  int BACKGROUNDCOLOR

Description #

The background color as displayed in the toolbox.
# DocumentFill DocumentFill.TRANSPARENT #
DocumentFill.TRANSPARENT #

  int TRANSPARENT

Description #

Transparent.
# DocumentFill DocumentFill.WHITE #
DocumentFill.WHITE #

  int WHITE

Description #

White.
# Document Document.flatten #
Document.flatten #

  void flatten ()

Description #

Flattens all layers.
# Document Document.flipCanvas #
Document.flipCanvas #

  void flipCanvas ( Direction direction )

Parameters #

  ----------------- -----------------------------------------------------
  direction         The direction in which to flip the canvas.

  ----------------- -----------------------------------------------------

Description #

Flips the canvas horizontally or vertically.
# Document Document.fullName #
Document.fullName #

  File fullName

Description #

The full path name of the document.
# Document Document.guides #
Document.guides #

  Guides guides

Description #

The guides in this document.
# Document Document.height #
Document.height #

  UnitValue height

Description #

The height of the document.
# Document Document.histogram #
Document.histogram #

  int histogram

Description #

A histogram showing the number of pixels at each color intensity level
for the composite channel.

Valid only when ‘mode’ = RGB, CMYK, or indexed.
# Document Document.historyStates #
Document.historyStates #

  HistoryStates historyStates

Description #

The history states collection in this document.
# Document Document.id #
Document.id #

  int id

Description #

The unique ID of this document.
# Document Document.importAnnotations #
Document.importAnnotations #

  void importAnnotations ( File file )

Parameters #

  ------------- ---------------------------------------------------------
  file          The document to import annotations from.

  ------------- ---------------------------------------------------------

Description #

Imports annotations into the document.
# DocumentInfo DocumentInfo.author #
DocumentInfo.author #

  String author

Description #

The author.
# DocumentInfo DocumentInfo.authorPosition #
DocumentInfo.authorPosition #

  String authorPosition

Description #

The author’s position.
# DocumentInfo DocumentInfo.caption #
DocumentInfo.caption #

  String caption

Description #

The caption.
# DocumentInfo DocumentInfo.captionWriter #
DocumentInfo.captionWriter #

  String captionWriter

Description #

The caption author.
# DocumentInfo DocumentInfo.category #
DocumentInfo.category #

  String category

Description #

The document category.
# DocumentInfo DocumentInfo.city #
DocumentInfo.city #

  String city

Description #

The city.
# DocumentInfo DocumentInfo.copyrighted #
DocumentInfo.copyrighted #

  CopyrightedType copyrighted

Description #

The copyright status.
# DocumentInfo DocumentInfo.copyrightNotice #
DocumentInfo.copyrightNotice #

  String copyrightNotice

Description #

The copyright notice.
# DocumentInfo DocumentInfo.country #
DocumentInfo.country #

  String country

Description #

The country.
# DocumentInfo DocumentInfo.creationDate #
DocumentInfo.creationDate #

  String creationDate

Description #

The creation date.
# DocumentInfo DocumentInfo.credit #
DocumentInfo.credit #

  String credit

Description #

The author credit.
# DocumentInfo DocumentInfo.exif #
DocumentInfo.exif #

  any exif

Description #

For JPEG images, information stored with digital photographs including
camera type, date and time of photo, and file size.
# DocumentInfo DocumentInfo.headline #
DocumentInfo.headline #

  String headline

Description #

The headline.
# Document Document.info #
Document.info #

  DocumentInfo info

Description #

Metadata about the document.
# DocumentInfo DocumentInfo.instructions #
DocumentInfo.instructions #

  String instructions

Description #

Instructions for using or processing the image.
# DocumentInfo DocumentInfo.jobName #
DocumentInfo.jobName #

  String jobName

Description #

The job name.
# DocumentInfo DocumentInfo.keywords #
DocumentInfo.keywords #

  String keywords

Description #

A list of keywords.
# DocumentInfo DocumentInfo.ownerUrl #
DocumentInfo.ownerUrl #

  String ownerUrl

Description #

The url of the copyright info.
# DocumentInfo DocumentInfo.parent #
DocumentInfo.parent #

  Object parent

Description #

The object’s container.
# DocumentInfo DocumentInfo.provinceState #
DocumentInfo.provinceState #

  String provinceState

Description #

The state or province.
# DocumentInfo DocumentInfo.source #
DocumentInfo.source #

  String source

Description #

The source.
# DocumentInfo DocumentInfo.supplementalCategories #
DocumentInfo.supplementalCategories #

  String supplementalCategories

Description #

Other categories.
# DocumentInfo DocumentInfo.title #
DocumentInfo.title #

  String title

Description #

The document title.
# DocumentInfo DocumentInfo.transmissionReference #
DocumentInfo.transmissionReference #

  String transmissionReference

Description #

The transmission reference.
# DocumentInfo DocumentInfo.typename #
DocumentInfo.typename #

  String typename

Description #

The class name of the object.
# DocumentInfo DocumentInfo.urgency #
DocumentInfo.urgency #

  Urgency urgency

Description #

The document urgency.
# Document Document.layerComps #
Document.layerComps #

  LayerComps layerComps

Description #

The layer comps collection in this document.
# Document Document.layerSets #
Document.layerSets #

  LayerSets layerSets

Description #

The layer sets collection in the document.
# Document Document.layers #
Document.layers #

  Layers layers

Description #

The layers collection in the document.
# Document Document.managed #
Document.managed #

  bool managed

Description #

If true, the document is a workgroup document.
# Document Document.measurementScale #
Document.measurementScale #

  MeasurementScale measurementScale

Description #

The measurement scale of the document.
# Document Document.mergeVisibleLayers #
Document.mergeVisibleLayers #

  void mergeVisibleLayers ()

Description #

Flattens all visible layers in the document.
# DocumentMode DocumentMode.BITMAP #
DocumentMode.BITMAP #

  int BITMAP

Description #

Bitmap, which uses one of two color values (black or white) to represent
the pixels in an image.
# DocumentMode DocumentMode.CMYK #
DocumentMode.CMYK #

  int CMYK

Description #

CMYK.
# DocumentMode DocumentMode.DUOTONE #
DocumentMode.DUOTONE #

  int DUOTONE

Description #

Duotone mode, which creates monotone, duotone (two-color), tritone
(three-color), and quadtone (four-color) grayscale images using one to
four custom inks.
# DocumentMode DocumentMode.GRAYSCALE #
DocumentMode.GRAYSCALE #

  int GRAYSCALE

Description #

Grayscale.
# Document Document.mode #
Document.mode #

  DocumentMode mode

Description #

The color profile.
# DocumentMode DocumentMode.INDEXEDCOLOR #
DocumentMode.INDEXEDCOLOR #

  int INDEXEDCOLOR

Description #

Indexed color, in which the number of colors in the image is at most
256, the standard number of colors supported by the GIF and PNG-8
formats and many multimedia applications.
# DocumentMode DocumentMode.LAB #
DocumentMode.LAB #

  int LAB

Description #

Lab.
# DocumentMode DocumentMode.MULTICHANNEL #
DocumentMode.MULTICHANNEL #

  int MULTICHANNEL

Description #

Image with multiple color channels.
# DocumentMode DocumentMode.RGB #
DocumentMode.RGB #

  int RGB

Description #

RGB.
# Document Document.name #
Document.name #

  String name

Description #

The document name.
# Document Document.parent #
Document.parent #

  Object parent

Description #

The object’s container.
# Document Document.paste #
Document.paste #

  ArtLayer paste (bool intoSelection )

Parameters #

  ----------------- -----------------------------------------------------
  intoSelection     If true, contents are pasted into the current
                    selection.

  ----------------- -----------------------------------------------------

Description #

Pastes contents of the clipboard into the document.
# Document Document.path #
Document.path #

  File path

Description #

The path to the document.
# Document Document.pathItems #
Document.pathItems #

  PathItems pathItems

Description #

The path items collection in this document.
# Document Document.pixelAspectRatio #
Document.pixelAspectRatio #

  Number pixelAspectRatio

Description #

The (custom) pixel aspect ratio of the document. Range: 0.100 to 10.000.
# Document Document.print #
Document.print #

  void print ( SourceSpaceType sourceSpace , String printSpace , Intent
  intent , bool blackPointCompensation )

Parameters #

  ------------------------ -------------------------------------------------------------
  sourceSpace              The color space for the source.

  printSpace               The color space for the printer. Can be “nothing” (meaning
                           same as source); one of the working spaces or Lab color; or a
                           string specifying a color space. Default: nothing.

  intent                   The color conversion intent.

  blackPointCompensation   If true, black point compensation is used.
  ------------------------ -------------------------------------------------------------

Description #

Prints the document.
# Document Document.printOneCopy #
Document.printOneCopy #

  void printOneCopy ()

Description #

Print one copy of the document.
# DocumentPrintSettings DocumentPrintSettings.activePrinter #
DocumentPrintSettings.activePrinter #

  String activePrinter

Description #

Currently selected printer.
# DocumentPrintSettings DocumentPrintSettings.backgroundColor #
DocumentPrintSettings.backgroundColor #

  SolidColor backgroundColor

Description #

Background color of page.
# DocumentPrintSettings DocumentPrintSettings.bleedWidth #
DocumentPrintSettings.bleedWidth #

  UnitValue bleedWidth

Description #

Bleed width.
# DocumentPrintSettings DocumentPrintSettings.caption #
DocumentPrintSettings.caption #

  bool caption

Description #

Description field from File Info.
# DocumentPrintSettings DocumentPrintSettings.centerCropMarks #
DocumentPrintSettings.centerCropMarks #

  bool centerCropMarks

Description #

Print center crop marks.
# DocumentPrintSettings DocumentPrintSettings.colorBars #
DocumentPrintSettings.colorBars #

  bool colorBars

Description #

Print color calibration bars.
# DocumentPrintSettings DocumentPrintSettings.colorHandling #
DocumentPrintSettings.colorHandling #

  PrintColorHandling colorHandling

Description #

Color handling.
# DocumentPrintSettings DocumentPrintSettings.copies #
DocumentPrintSettings.copies #

  int copies

Description #

Number of copies.
# DocumentPrintSettings DocumentPrintSettings.cornerCropMarks #
DocumentPrintSettings.cornerCropMarks #

  bool cornerCropMarks

Description #

Print corner crop marks.
# DocumentPrintSettings DocumentPrintSettings.docPosition #
DocumentPrintSettings.docPosition #

  DocPositionStyle docPosition

Description #

Position of image when printing.
# DocumentPrintSettings DocumentPrintSettings.flip #
DocumentPrintSettings.flip #

  bool flip

Description #

Flip the image horizontally.
# DocumentPrintSettings DocumentPrintSettings.hardProof #
DocumentPrintSettings.hardProof #

  bool hardProof

Description #

Print a hard proof.
# Document Document.printSettings #
Document.printSettings #

  DocumentPrintSettings printSettings

Description #

Document print settings.
# DocumentPrintSettings DocumentPrintSettings.interpolate #
DocumentPrintSettings.interpolate #

  bool interpolate

Description #
# DocumentPrintSettings DocumentPrintSettings.labels #
DocumentPrintSettings.labels #

  bool labels

Description #

Prints the document title.
# DocumentPrintSettings DocumentPrintSettings.mapBlack #
DocumentPrintSettings.mapBlack #

  bool mapBlack

Description #

Map blacks.
# DocumentPrintSettings DocumentPrintSettings.negative #
DocumentPrintSettings.negative #

  bool negative

Description #

Invert the image colors.
# DocumentPrintSettings DocumentPrintSettings.parent #
DocumentPrintSettings.parent #

  Object parent

Description #

The object’s container.
# DocumentPrintSettings DocumentPrintSettings.posX #
DocumentPrintSettings.posX #

  UnitValue posX

Description #

X position of image on page.
# DocumentPrintSettings DocumentPrintSettings.posY #
DocumentPrintSettings.posY #

  UnitValue posY

Description #

Y position of image on page.
# DocumentPrintSettings DocumentPrintSettings.printBorder #
DocumentPrintSettings.printBorder #

  UnitValue printBorder

Description #

Width of the print border.
# DocumentPrintSettings DocumentPrintSettings.printerName #
DocumentPrintSettings.printerName #

  String printerName

Description #

Name of printer.
# DocumentPrintSettings DocumentPrintSettings.printers #
DocumentPrintSettings.printers #

  String printers

Description #

List of available printers.
# DocumentPrintSettings DocumentPrintSettings.printSpace #
DocumentPrintSettings.printSpace #

  String printSpace

Description #

Color space for printer. Can be nothing (meaning same as source) or a
string specifying a specific color profile.
# DocumentPrintSettings DocumentPrintSettings.registrationMarks #
DocumentPrintSettings.registrationMarks #

  bool registrationMarks

Description #

Print registration marks.
# DocumentPrintSettings DocumentPrintSettings.renderIntent #
DocumentPrintSettings.renderIntent #

  Intent renderIntent

Description #

Color conversion intent when print space is different from the source
space.
# DocumentPrintSettings DocumentPrintSettings.scale #
DocumentPrintSettings.scale #

  Number scale

Description #

Scale of image on page.
# DocumentPrintSettings DocumentPrintSettings.setPagePosition #
DocumentPrintSettings.setPagePosition #

  void setPagePosition ( DocPositionStyle docPosition , UnitValue posX ,
  UnitValue posY , Number scale )

Parameters #

  ------------- ------------------------------------------------------------
  docPosition   Position of the image on page when printing. Can be
                centered, scale to fit, or user defined.

  posX          X position of image on page.

  posY          Y position of image on page.

  scale         Position of the image on page when printing. Can be
                centered, scale to fit, or user defined.
  ------------- ------------------------------------------------------------

Description #

Set the position of the image on the page.
# DocumentPrintSettings DocumentPrintSettings.typename #
DocumentPrintSettings.typename #

  String typename

Description #

The class name of the object.
# DocumentPrintSettings DocumentPrintSettings.vectorData #
DocumentPrintSettings.vectorData #

  bool vectorData

Description #

Include vector data.
# Document Document.quickMaskMode #
Document.quickMaskMode #

  bool quickMaskMode

Description #

If true, the document is in Quick Mask mode.
# Document Document.rasterizeAllLayers #
Document.rasterizeAllLayers #

  void rasterizeAllLayers ()

Description #

Rasterizes all layers.
# Document Document.recordMeasurements #
Document.recordMeasurements #

  void recordMeasurements ( MeasurementSource source , String dataPoints
  )

Parameters #

  ------------ --------------------------------------------------------------
  source       The source of the measurements to record.

  dataPoints   An array of identifiers of data points to record. Any data
               points not appropriate for the specified source are ignored.
  ------------ --------------------------------------------------------------

Description #

Records the measurements of document.
# Document Document.resizeCanvas #
Document.resizeCanvas #

  void resizeCanvas ( UnitValue width , UnitValue height ,
  AnchorPosition anchor )

Parameters #

  ----------------- -----------------------------------------------------
  width             The desired width of the canvas.

  height            The desired height of the canvas.

  anchor            The anchor point to resize around.
  ----------------- -----------------------------------------------------

Description #

Changes the size of the canvas.
# Document Document.resizeImage #
Document.resizeImage #

  void resizeImage ( UnitValue width , UnitValue height , Number
  resolution , ResampleMethod resampleMethod , int amount )

Parameters #

  ---------------- ------------------------------------------------------
  width            The desired width of the image.

  height           The desired height of the image.

  resolution       The resolution (in pixels per inch)

  resampleMethod   The downsample method.

  amount           Amount of noise value when using preserve details
                   (range: 0 - 100)
  ---------------- ------------------------------------------------------

Description #

Changes the size of the image.
# Document Document.resolution #
Document.resolution #

  Number resolution

Description #

The resolution of the document (in pixels per inch)
# Document Document.revealAll #
Document.revealAll #

  void revealAll ()

Description #

Expands the document to show clipped sections.
# Document Document.rotateCanvas #
Document.rotateCanvas #

  void rotateCanvas ( Number angle )

Parameters #

  ------- ------------------------------------------------------------------
  angle   The number of degrees to rotate. A positive angle rotates the
          canvas clockwise; a negative value rotates the canvas
          counter-clockwise.

  ------- ------------------------------------------------------------------

Description #

Rotates the canvas.
# Documents Documents.add #
Documents.add #

  Document add ( UnitValue width , UnitValue height , Number resolution
  , String name , NewDocumentMode mode , DocumentFill initialFill ,
  Number pixelAspectRatio , BitsPerChannelType bitsPerChannel , String
  colorProfileName )

Parameters #

  -------------------- --------------------------------------------------
  width                The width of the document.

  height               The height of the document.

  resolution           The resolution of the document (in pixels per
                       inch)

  name                 The name of the document.

  mode                 The document mode.

  initialFill          The initial fill of the document.

  pixelAspectRatio     The initial pixel aspect ratio of the document.

  bitsPerChannel       The number of bits per channel.

  colorProfileName     The name of color profile for document.
  -------------------- --------------------------------------------------

Description #

A document.
# Document Document.saveAs #
Document.saveAs #

  void saveAs ( File saveIn , any options , bool asCopy ,
  MacExtensionType extensionType )

Parameters #

  --------------- ---------------------------------------------------------------
  saveIn          The file to save to, specified as a string containing the full
                  file path or an alias. If not specified, the document is saved
                  to its existing file.

  options         Options for the specified file type.

  asCopy          Saves the document as a copy, leaving the original open.

  extensionType   Appends the specified extension to the file name.
  --------------- ---------------------------------------------------------------

Description #

Saves the document with the specified save options.
# Document Document.saved #
Document.saved #

  bool saved

Description #

If true, the document been saved since the last change.
# Document Document.save #
Document.save #

  void save ()

Description #

Saves the document.
# Document Document.selection #
Document.selection #

  Selection selection

Description #

The selected area of the document.
# Documents Documents.getByName #
Documents.getByName #

  Document getByName ( String name )

Parameters #

  ---------------------------------------------------------- ------------
  name                                                       

  ---------------------------------------------------------- ------------

Description #

Get the first element in the collection with the provided name.
# Documents Documents.[] #
Documents.[] #

  Document [] (uint index )

Parameters #

  ------------------------------------------------------------ ----------
  index                                                        

  ------------------------------------------------------------ ----------

Description #

Get an element in the collection with the provided index.
# Documents Documents.length #
Documents.length #

  int length

Description #

Number of elements in the collection.
# Documents Documents.parent #
Documents.parent #

  Object parent

Description #

The object’s container.
# Document Document.splitChannels #
Document.splitChannels #

  Document splitChannels ()

Description #

Splits the channels of the document.
# Documents Documents.typename #
Documents.typename #

  String typename

Description #

The class name of the object.
# Document Document.suspendHistory #
Document.suspendHistory #

  void suspendHistory ( String historyString , String javaScriptString )

Parameters #

  ------------------ ------------------------------------------------------
  historyString      The string to use for the history state.

  javaScriptString   A string of JavaScript code to execute during the
                     suspension of history.
  ------------------ ------------------------------------------------------

Description #

Provides a single history state for the entire script. Allows a single
undo for all actions taken in the script.
# Document Document.trap #
Document.trap #

  void trap (int width )

Parameters #

  -------------------- --------------------------------------------------
  width                The trap width in pixels.

  -------------------- --------------------------------------------------

Description #

Applies trapping to a CMYK document. Valid only when ‘mode’ = CMYK.
# Document Document.trim #
Document.trim #

  void trim ( TrimType type , bool top , bool left , bool bottom , bool
  right )

Parameters #

  ------------- ---------------------------------------------------------
  type          The color or type of pixels to base the trim on.

  top           If true, trims away the top of the document.

  left          If true, trims away the left of the document.

  bottom        If true, trims away the bottom of the document.

  right         If true, trims away the right of the document.
  ------------- ---------------------------------------------------------

Description #

Trims the transparent area around the image on the specified sides of
the canvas.
# Document Document.typename #
Document.typename #

  String typename

Description #

The class name of the object.
# Document Document.width #
Document.width #

  UnitValue width

Description #

The width of the document.
# Document Document.xmpMetadata #
Document.xmpMetadata #

  XMPMetadata xmpMetadata

Description #

The XMP properties of the document. The Camera RAW settings are stored
here.
# EditLogItemsType EditLogItemsType.CONCISE #
EditLogItemsType.CONCISE #

  int CONCISE

Description #

Save a concise history log.
# EditLogItemsType EditLogItemsType.DETAILED #
EditLogItemsType.DETAILED #

  int DETAILED

Description #

Save a detailed history log.
# EditLogItemsType EditLogItemsType.SESSIONONLY #
EditLogItemsType.SESSIONONLY #

  int SESSIONONLY

Description #

Save a history for only for the session.
# ElementPlacement ElementPlacement.PLACEAFTER #
ElementPlacement.PLACEAFTER #

  int PLACEAFTER

Description #

Place after an element.
# ElementPlacement ElementPlacement.PLACEATEND #
ElementPlacement.PLACEATEND #

  int PLACEATEND

Description #

Place an element at the end.
# ElementPlacement ElementPlacement.PLACEBEFORE #
ElementPlacement.PLACEBEFORE #

  int PLACEBEFORE

Description #

Place before an element.
# EliminateFields EliminateFields.EVENFIELDS #
EliminateFields.EVENFIELDS #

  int EVENFIELDS

Description #

Eliminate even interlaced lines in a video image.
# EliminateFields EliminateFields.ODDFIELDS #
EliminateFields.ODDFIELDS #

  int ODDFIELDS

Description #

Eliminate odd interlaced lines in a video image.
# EPSSaveOptions EPSSaveOptions.embedColorProfile #
EPSSaveOptions.embedColorProfile #

  bool embedColorProfile

Description #

If true, the color profile is embedded in the document.
# EPSSaveOptions EPSSaveOptions.encoding #
EPSSaveOptions.encoding #

  SaveEncoding encoding

Description #

The type of encoding to use for the document.
# EPSSaveOptions EPSSaveOptions.halftoneScreen #
EPSSaveOptions.halftoneScreen #

  bool halftoneScreen

Description #

If true, includes the halftone screen.
# EPSSaveOptions EPSSaveOptions.interpolation #
EPSSaveOptions.interpolation #

  bool interpolation

Description #

If true, uses image interpolation.
# EPSSaveOptions EPSSaveOptions.preview #
EPSSaveOptions.preview #

  MacPreviewType preview

Description #

The type of preview.
# EPSSaveOptions EPSSaveOptions.psColorManagement #
EPSSaveOptions.psColorManagement #

  bool psColorManagement

Description #

If true, uses PostScript color management.
# EPSSaveOptions EPSSaveOptions.transferFunction #
EPSSaveOptions.transferFunction #

  bool transferFunction

Description #

If true, includes the transfer functions in the document to compensate
for dot gain between the image and film.
# EPSSaveOptions EPSSaveOptions.transparentWhites #
EPSSaveOptions.transparentWhites #

  bool transparentWhites

Description #

If true, displays white areas as transparent. Valid only for documents
in BitMap mode.
# EPSSaveOptions EPSSaveOptions.vectorData #
EPSSaveOptions.vectorData #

  bool vectorData

Description #

If true, includes vector data. Valid only when the document contains
vector data (un-rasterized text).
# ExportOptionsIllustrator ExportOptionsIllustrator.path #
ExportOptionsIllustrator.path #

  IllustratorPathType path

Description #

The path to export.
# ExportOptionsIllustrator ExportOptionsIllustrator.pathName #
ExportOptionsIllustrator.pathName #

  String pathName

Description #

The name of the path to export. Valid only for named paths.
# ExportOptionsSaveForWeb ExportOptionsSaveForWeb.blur #
ExportOptionsSaveForWeb.blur #

  Number blur

Description #

The amount of blur to apply to the image to reduce artifacts.
# ExportOptionsSaveForWeb ExportOptionsSaveForWeb.colorReduction #
ExportOptionsSaveForWeb.colorReduction #

  ColorReductionType colorReduction

Description #

The color reduction algorithm.
# ExportOptionsSaveForWeb ExportOptionsSaveForWeb.colors #
ExportOptionsSaveForWeb.colors #

  int colors

Description #

The number of colors in the palette.
# ExportOptionsSaveForWeb ExportOptionsSaveForWeb.ditherAmount #
ExportOptionsSaveForWeb.ditherAmount #

  int ditherAmount

Description #

The amount of dither. Valid only when ‘dither’ = diffusion.
# ExportOptionsSaveForWeb ExportOptionsSaveForWeb.dither #
ExportOptionsSaveForWeb.dither #

  DitherType dither

Description #

The type of dither.
# ExportOptionsSaveForWeb ExportOptionsSaveForWeb.format #
ExportOptionsSaveForWeb.format #

  SaveDocumentType format

Description #

The file format to use. Save For Web supports only Compuserve GIF, JPEG,
PNG-8, PNG-24, and BMP formats.
# ExportOptionsSaveForWeb ExportOptionsSaveForWeb.includeProfile #
ExportOptionsSaveForWeb.includeProfile #

  bool includeProfile

Description #

If true, includes the document’s embedded profile.
# ExportOptionsSaveForWeb ExportOptionsSaveForWeb.interlaced #
ExportOptionsSaveForWeb.interlaced #

  bool interlaced

Description #

If true, the image downloads in multiple passes, progressive.
# ExportOptionsSaveForWeb ExportOptionsSaveForWeb.lossy #
ExportOptionsSaveForWeb.lossy #

  int lossy

Description #

The amount of lossiness allowed.
# ExportOptionsSaveForWeb ExportOptionsSaveForWeb.matteColor #
ExportOptionsSaveForWeb.matteColor #

  RGBColor matteColor

Description #

The colors to blend transparent pixels against.
# ExportOptionsSaveForWeb ExportOptionsSaveForWeb.optimized #
ExportOptionsSaveForWeb.optimized #

  bool optimized

Description #

If true, creates smaller but less compatible files.
# ExportOptionsSaveForWeb ExportOptionsSaveForWeb.PNG8 #
ExportOptionsSaveForWeb.PNG8 #

  bool PNG8

Description #

If true, uses 8 bits. If false, uses 24 bits. Valid only when ‘format’ =
PNG.
# ExportOptionsSaveForWeb ExportOptionsSaveForWeb.quality #
ExportOptionsSaveForWeb.quality #

  int quality

Description #

The quality of the produced image (as a percentage). Range: 0 to 100.
# ExportOptionsSaveForWeb ExportOptionsSaveForWeb.transparencyAmount #
ExportOptionsSaveForWeb.transparencyAmount #

  int transparencyAmount

Description #

The amount of transparency dither. Valid only when ‘transparency’ =
true.
# ExportOptionsSaveForWeb ExportOptionsSaveForWeb.transparencyDither #
ExportOptionsSaveForWeb.transparencyDither #

  DitherType transparencyDither

Description #

The transparency dither algorithm.
# ExportOptionsSaveForWeb ExportOptionsSaveForWeb.transparency #
ExportOptionsSaveForWeb.transparency #

  bool transparency

Description #

If true, transparent areas of the image are included in the saved image.
# ExportOptionsSaveForWeb ExportOptionsSaveForWeb.webSnap #
ExportOptionsSaveForWeb.webSnap #

  int webSnap

Description #

The tolerance amount within which to snap close colors to web palette
colors.
# ExportType ExportType.ILLUSTRATORPATHS #
ExportType.ILLUSTRATORPATHS #

  int ILLUSTRATORPATHS

Description #

Exports Photoshop paths as Adobe Illustrator files.
# ExportType ExportType.SAVEFORWEB #
ExportType.SAVEFORWEB #

  int SAVEFORWEB

Description #

Uses the save for web export options.
# FileNamingType FileNamingType.DDMM #
FileNamingType.DDMM #

  int DDMM

Description #

Uses the date formatted as ddmm.
# FileNamingType FileNamingType.DDMMYY #
FileNamingType.DDMMYY #

  int DDMMYY

Description #

Uses the date formatted as ddmmyy.
# FileNamingType FileNamingType.DOCUMENTNAMELOWER #
FileNamingType.DOCUMENTNAMELOWER #

  int DOCUMENTNAMELOWER

Description #

Use the document name in lower case.
# FileNamingType FileNamingType.DOCUMENTNAMEMIXED #
FileNamingType.DOCUMENTNAMEMIXED #

  int DOCUMENTNAMEMIXED

Description #

Use the document name in mixed case.
# FileNamingType FileNamingType.DOCUMENTNAMEUPPER #
FileNamingType.DOCUMENTNAMEUPPER #

  int DOCUMENTNAMEUPPER

Description #

Use the document name in UPPER case.
# FileNamingType FileNamingType.EXTENSIONLOWER #
FileNamingType.EXTENSIONLOWER #

  int EXTENSIONLOWER

Description #

Use the extension of the file in lower case.
# FileNamingType FileNamingType.EXTENSIONUPPER #
FileNamingType.EXTENSIONUPPER #

  int EXTENSIONUPPER

Description #

Use the extension of the file in UPPER case.
# FileNamingType FileNamingType.MMDD #
FileNamingType.MMDD #

  int MMDD

Description #

Uses the date formatted as mmdd.
# FileNamingType FileNamingType.MMDDYY #
FileNamingType.MMDDYY #

  int MMDDYY

Description #

Uses the date formatted as mmddyy.
# FileNamingType FileNamingType.SERIALLETTERLOWER #
FileNamingType.SERIALLETTERLOWER #

  int SERIALLETTERLOWER

Description #

Use letter serial number lower case (a, b, c, …)
# FileNamingType FileNamingType.SERIALLETTERUPPER #
FileNamingType.SERIALLETTERUPPER #

  int SERIALLETTERUPPER

Description #

Use letter serial number UPPER case (A, B, C, …)
# FileNamingType FileNamingType.SERIALNUMBER1 #
FileNamingType.SERIALNUMBER1 #

  int SERIALNUMBER1

Description #

Use a 1-digit serial number.
# FileNamingType FileNamingType.SERIALNUMBER2 #
FileNamingType.SERIALNUMBER2 #

  int SERIALNUMBER2

Description #

Use a 2-digit serial number.
# FileNamingType FileNamingType.SERIALNUMBER3 #
FileNamingType.SERIALNUMBER3 #

  int SERIALNUMBER3

Description #

Use a 3-digit serial number.
# FileNamingType FileNamingType.SERIALNUMBER4 #
FileNamingType.SERIALNUMBER4 #

  int SERIALNUMBER4

Description #

Use a 4-digit serial number.
# FileNamingType FileNamingType.YYDDMM #
FileNamingType.YYDDMM #

  int YYDDMM

Description #

Uses the date formatted as yyddmm.
# FileNamingType FileNamingType.YYMMDD #
FileNamingType.YYMMDD #

  int YYMMDD

Description #

Uses the date formatted as yymmdd.
# FileNamingType FileNamingType.YYYYMMDD #
FileNamingType.YYYYMMDD #

  int YYYYMMDD

Description #

Uses the date formatted as yyyymmdd.
# FontPreviewType FontPreviewType.EXTRALARGE #
FontPreviewType.EXTRALARGE #

  int EXTRALARGE

Description #

Extra large preview.
# FontPreviewType FontPreviewType.HUGE #
FontPreviewType.HUGE #

  int HUGE

Description #

Huge preview.
# FontPreviewType FontPreviewType.LARGE #
FontPreviewType.LARGE #

  int LARGE

Description #

Large type.
# FontPreviewType FontPreviewType.MEDIUM #
FontPreviewType.MEDIUM #

  int MEDIUM

Description #

Medium type.
# FontPreviewType FontPreviewType.NONE #
FontPreviewType.NONE #

  int NONE

Description #

No preview.
# FontPreviewType FontPreviewType.SMALL #
FontPreviewType.SMALL #

  int SMALL

Description #

Small type.
# FontSize FontSize.LARGE #
FontSize.LARGE #

  int LARGE

Description #

Large size.
# FontSize FontSize.MEDIUM #
FontSize.MEDIUM #

  int MEDIUM

Description #

Medium size.
# FontSize FontSize.SMALL #
FontSize.SMALL #

  int SMALL

Description #

Small size.
# ForcedColors ForcedColors.BLACKWHITE #
ForcedColors.BLACKWHITE #

  int BLACKWHITE

Description #

Forces pure black and white.
# ForcedColors ForcedColors.NONE #
ForcedColors.NONE #

  int NONE

Description #

No forced colors.
# ForcedColors ForcedColors.PRIMARIES #
ForcedColors.PRIMARIES #

  int PRIMARIES

Description #

Forces red, green, blue, cyan, magenta, yellow, black, and white.
# ForcedColors ForcedColors.WEB #
ForcedColors.WEB #

  int WEB

Description #

Forces the 216 web-safe colors.
# FormatOptionsType FormatOptionsType.OPTIMIZEDBASELINE #
FormatOptionsType.OPTIMIZEDBASELINE #

  int OPTIMIZEDBASELINE

Description #

Baseline (Optimized). Optimized color and a slightly reduced file size.
# FormatOptionsType FormatOptionsType.PROGRESSIVE #
FormatOptionsType.PROGRESSIVE #

  int PROGRESSIVE

Description #

Displays a series of increasingly detailed scans as the image downloads.
# FormatOptionsType FormatOptionsType.STANDARDBASELINE #
FormatOptionsType.STANDARDBASELINE #

  int STANDARDBASELINE

Description #

Baseline (Standard). Recognized by most web browsers.
# GalleryBannerOptions GalleryBannerOptions.contactInfo #
GalleryBannerOptions.contactInfo #

  String contactInfo

Description #

Web photo gallery contact info.
# GalleryBannerOptions GalleryBannerOptions.date #
GalleryBannerOptions.date #

  String date

Description #

Web photo gallery date.
# GalleryBannerOptions GalleryBannerOptions.font #
GalleryBannerOptions.font #

  GalleryFontType font

Description #

The font setting for the banner text.
# GalleryBannerOptions GalleryBannerOptions.fontSize #
GalleryBannerOptions.fontSize #

  int fontSize

Description #

The size of the font for the banner text.
# GalleryBannerOptions GalleryBannerOptions.photographer #
GalleryBannerOptions.photographer #

  String photographer

Description #

Web photo gallery photographer.
# GalleryBannerOptions GalleryBannerOptions.siteName #
GalleryBannerOptions.siteName #

  String siteName

Description #

Web photo gallery site name.
# GalleryConstrainType GalleryConstrainType.CONSTRAINBOTH #
GalleryConstrainType.CONSTRAINBOTH #

  int CONSTRAINBOTH

Description #

Constrain both the height and the width of the image.
# GalleryConstrainType GalleryConstrainType.CONSTRAINHEIGHT #
GalleryConstrainType.CONSTRAINHEIGHT #

  int CONSTRAINHEIGHT

Description #

Constrain the height of the image.
# GalleryConstrainType GalleryConstrainType.CONSTRAINWIDTH #
GalleryConstrainType.CONSTRAINWIDTH #

  int CONSTRAINWIDTH

Description #

Constrain width.
# GalleryCustomColorOptions GalleryCustomColorOptions.activeLinkColor #
GalleryCustomColorOptions.activeLinkColor #

  RGBColor activeLinkColor

Description #

Active link color.
# GalleryCustomColorOptions GalleryCustomColorOptions.backgroundColor #
GalleryCustomColorOptions.backgroundColor #

  RGBColor backgroundColor

Description #

Background color.
# GalleryCustomColorOptions GalleryCustomColorOptions.bannerColor #
GalleryCustomColorOptions.bannerColor #

  RGBColor bannerColor

Description #

Banner color.
# GalleryCustomColorOptions GalleryCustomColorOptions.linkColor #
GalleryCustomColorOptions.linkColor #

  RGBColor linkColor

Description #

Link color.
# GalleryCustomColorOptions GalleryCustomColorOptions.textColor #
GalleryCustomColorOptions.textColor #

  RGBColor textColor

Description #

Text color.
# GalleryCustomColorOptions GalleryCustomColorOptions.visitedLinkColor #
GalleryCustomColorOptions.visitedLinkColor #

  RGBColor visitedLinkColor

Description #

Visited link color.
# GalleryFontType GalleryFontType.ARIAL #
GalleryFontType.ARIAL #

  int ARIAL

Description #

Arial font.
# GalleryFontType GalleryFontType.COURIERNEW #
GalleryFontType.COURIERNEW #

  int COURIERNEW

Description #

Courier New font.
# GalleryFontType GalleryFontType.HELVETICA #
GalleryFontType.HELVETICA #

  int HELVETICA

Description #

Helvetica font.
# GalleryFontType GalleryFontType.TIMESNEWROMAN #
GalleryFontType.TIMESNEWROMAN #

  int TIMESNEWROMAN

Description #

Times New Roman font.
# GalleryImagesOptions GalleryImagesOptions.border #
GalleryImagesOptions.border #

  int border

Description #

The amount of border pixels you want between your images.
# GalleryImagesOptions GalleryImagesOptions.caption #
GalleryImagesOptions.caption #

  bool caption

Description #

Generate a caption for the images.
# GalleryImagesOptions GalleryImagesOptions.dimension #
GalleryImagesOptions.dimension #

  int dimension

Description #

Resized image dimensions in pixels.
# GalleryImagesOptions GalleryImagesOptions.font #
GalleryImagesOptions.font #

  GalleryFontType font

Description #

Font for the gallery images text.
# GalleryImagesOptions GalleryImagesOptions.fontSize #
GalleryImagesOptions.fontSize #

  int fontSize

Description #

Font size for the gallery images text.
# GalleryImagesOptions GalleryImagesOptions.imageQuality #
GalleryImagesOptions.imageQuality #

  int imageQuality

Description #

The quality setting for the JPEG image.
# GalleryImagesOptions GalleryImagesOptions.includeCopyright #
GalleryImagesOptions.includeCopyright #

  bool includeCopyright

Description #

Include the copyright in the text for the gallery images.
# GalleryImagesOptions GalleryImagesOptions.includeCredits #
GalleryImagesOptions.includeCredits #

  bool includeCredits

Description #

Include the credits in the text for the gallery images.
# GalleryImagesOptions GalleryImagesOptions.includeFilename #
GalleryImagesOptions.includeFilename #

  bool includeFilename

Description #

Include the file name in the text for the gallery images.
# GalleryImagesOptions GalleryImagesOptions.includeTitle #
GalleryImagesOptions.includeTitle #

  bool includeTitle

Description #

Include the title in the text for the gallery images.
# GalleryImagesOptions GalleryImagesOptions.numericLinks #
GalleryImagesOptions.numericLinks #

  bool numericLinks

Description #

Add numeric links.
# GalleryImagesOptions GalleryImagesOptions.resizeConstraint #
GalleryImagesOptions.resizeConstraint #

  GalleryConstrainType resizeConstraint

Description #

How should the image be constrained.
# GalleryImagesOptions GalleryImagesOptions.resizeImages #
GalleryImagesOptions.resizeImages #

  bool resizeImages

Description #

Resize images data.
# GalleryOptions GalleryOptions.addSizeAttributes #
GalleryOptions.addSizeAttributes #

  bool addSizeAttributes

Description #

Add width and height attributes for images.
# GalleryOptions GalleryOptions.bannerOptions #
GalleryOptions.bannerOptions #

  GalleryBannerOptions bannerOptions

Description #

Options related to banner settings.
# GalleryOptions GalleryOptions.customColorOptions #
GalleryOptions.customColorOptions #

  GalleryCustomColorOptions customColorOptions

Description #

Options related to custom color settings.
# GalleryOptions GalleryOptions.emailAddress #
GalleryOptions.emailAddress #

  String emailAddress

Description #

The email address to show on the web page.
# GalleryOptions GalleryOptions.imagesOptions #
GalleryOptions.imagesOptions #

  GalleryImagesOptions imagesOptions

Description #

Options related to images settings.
# GalleryOptions GalleryOptions.includeSubFolders #
GalleryOptions.includeSubFolders #

  bool includeSubFolders

Description #

Include all files found in sub folders of the input folder.
# GalleryOptions GalleryOptions.layoutStyle #
GalleryOptions.layoutStyle #

  String layoutStyle

Description #

The style to use for laying out the web page.
# GalleryOptions GalleryOptions.preserveAllMetadata #
GalleryOptions.preserveAllMetadata #

  bool preserveAllMetadata

Description #

Save all of the metadata in the JPEG files.
# GalleryOptions GalleryOptions.securityOptions #
GalleryOptions.securityOptions #

  GallerySecurityOptions securityOptions

Description #

Options related to security settings.
# GalleryOptions GalleryOptions.thumbnailOptions #
GalleryOptions.thumbnailOptions #

  GalleryThumbnailOptions thumbnailOptions

Description #

Options related to thumbnail settings.
# GalleryOptions GalleryOptions.useShortExtension #
GalleryOptions.useShortExtension #

  bool useShortExtension

Description #

Short web page extension .htm or long web page extension .html.
# GalleryOptions GalleryOptions.useUTF8Encoding #
GalleryOptions.useUTF8Encoding #

  bool useUTF8Encoding

Description #

Web page should use UTF-8 encoding.
# GallerySecurityOptions GallerySecurityOptions.content #
GallerySecurityOptions.content #

  GallerySecurityType content

Description #

Web photo gallery security content.
# GallerySecurityOptions GallerySecurityOptions.font #
GallerySecurityOptions.font #

  GalleryFontType font

Description #

Web photo gallery security font.
# GallerySecurityOptions GallerySecurityOptions.fontSize #
GallerySecurityOptions.fontSize #

  int fontSize

Description #

Web photo gallery security font size.
# GallerySecurityOptions GallerySecurityOptions.opacity #
GallerySecurityOptions.opacity #

  int opacity

Description #

Web page security opacity as a percent.
# GallerySecurityOptions GallerySecurityOptions.textColor #
GallerySecurityOptions.textColor #

  RGBColor textColor

Description #

Web page security text color.
# GallerySecurityOptions GallerySecurityOptions.text #
GallerySecurityOptions.text #

  String text

Description #

Web photo gallery security custom text.
# GallerySecurityOptions GallerySecurityOptions.textPosition #
GallerySecurityOptions.textPosition #

  GallerySecurityTextPositionType textPosition

Description #

Web photo gallery security text position.
# GallerySecurityOptions GallerySecurityOptions.textRotate #
GallerySecurityOptions.textRotate #

  GallerySecurityTextRotateType textRotate

Description #

Web photo gallery security text rotate.
# GallerySecurityTextColorType GallerySecurityTextColorType.BLACK #
GallerySecurityTextColorType.BLACK #

  int BLACK

Description #

Black text.
# GallerySecurityTextColorType GallerySecurityTextColorType.CUSTOM #
GallerySecurityTextColorType.CUSTOM #

  int CUSTOM

Description #

Custom color.
# GallerySecurityTextColorType GallerySecurityTextColorType.WHITE #
GallerySecurityTextColorType.WHITE #

  int WHITE

Description #

White text.
# GallerySecurityTextPositionType GallerySecurityTextPositionType.CENTERED #
GallerySecurityTextPositionType.CENTERED #

  int CENTERED

Description #

Text is centered on each image.
# GallerySecurityTextPositionType GallerySecurityTextPositionType.LOWERLEFT #
GallerySecurityTextPositionType.LOWERLEFT #

  int LOWERLEFT

Description #

Ltext is in the lower left corner of each image.
# GallerySecurityTextPositionType GallerySecurityTextPositionType.LOWERRIGHT #
GallerySecurityTextPositionType.LOWERRIGHT #

  int LOWERRIGHT

Description #

Text is in the lower right corner of each image.
# GallerySecurityTextPositionType GallerySecurityTextPositionType.UPPERLEFT #
GallerySecurityTextPositionType.UPPERLEFT #

  int UPPERLEFT

Description #

Text is in the upper left corner of each image.
# GallerySecurityTextPositionType GallerySecurityTextPositionType.UPPERRIGHT #
GallerySecurityTextPositionType.UPPERRIGHT #

  int UPPERRIGHT

Description #

Text is in the upper right corner of each image.
# GallerySecurityTextRotateType GallerySecurityTextRotateType.CLOCKWISE45 #
GallerySecurityTextRotateType.CLOCKWISE45 #

  int CLOCKWISE45

Description #

Rotate 45 degrees clock wise.
# GallerySecurityTextRotateType GallerySecurityTextRotateType.CLOCKWISE90 #
GallerySecurityTextRotateType.CLOCKWISE90 #

  int CLOCKWISE90

Description #

Rotate 90 degrees clock wise.
# GallerySecurityTextRotateType GallerySecurityTextRotateType.COUNTERCLOCKWISE45 #
GallerySecurityTextRotateType.COUNTERCLOCKWISE45 #

  int COUNTERCLOCKWISE45

Description #

Rotate 45 degrees counter clock wise.
# GallerySecurityTextRotateType GallerySecurityTextRotateType.COUNTERCLOCKWISE90 #
GallerySecurityTextRotateType.COUNTERCLOCKWISE90 #

  int COUNTERCLOCKWISE90

Description #

Rotate 90 degrees counter clock wise.
# GallerySecurityTextRotateType GallerySecurityTextRotateType.ZERO #
GallerySecurityTextRotateType.ZERO #

  int ZERO

Description #

No rotate.
# GallerySecurityType GallerySecurityType.CAPTION #
GallerySecurityType.CAPTION #

  int CAPTION

Description #

Caption security.
# GallerySecurityType GallerySecurityType.COPYRIGHT #
GallerySecurityType.COPYRIGHT #

  int COPYRIGHT

Description #

Copyright security.
# GallerySecurityType GallerySecurityType.CREDIT #
GallerySecurityType.CREDIT #

  int CREDIT

Description #

Credit security.
# GallerySecurityType GallerySecurityType.CUSTOMTEXT #
GallerySecurityType.CUSTOMTEXT #

  int CUSTOMTEXT

Description #

Custom text security.
# GallerySecurityType GallerySecurityType.FILENAME #
GallerySecurityType.FILENAME #

  int FILENAME

Description #

Filename security.
# GallerySecurityType GallerySecurityType.NONE #
GallerySecurityType.NONE #

  int NONE

Description #

No security.
# GallerySecurityType GallerySecurityType.TITLE #
GallerySecurityType.TITLE #

  int TITLE

Description #

Title security.
# GalleryThumbnailOptions GalleryThumbnailOptions.border #
GalleryThumbnailOptions.border #

  int border

Description #

The amount of border pixels you want around your thumbnail images.
# GalleryThumbnailOptions GalleryThumbnailOptions.caption #
GalleryThumbnailOptions.caption #

  bool caption

Description #

With caption.
# GalleryThumbnailOptions GalleryThumbnailOptions.columnCount #
GalleryThumbnailOptions.columnCount #

  int columnCount

Description #

Web photo gallery thumbnail columns.
# GalleryThumbnailOptions GalleryThumbnailOptions.dimension #
GalleryThumbnailOptions.dimension #

  int dimension

Description #

Web photo gallery thumbnail dimension in pixels.
# GalleryThumbnailOptions GalleryThumbnailOptions.font #
GalleryThumbnailOptions.font #

  GalleryFontType font

Description #

Web photo gallery font.
# GalleryThumbnailOptions GalleryThumbnailOptions.fontSize #
GalleryThumbnailOptions.fontSize #

  int fontSize

Description #

The size of the font for the thumbnail images text.
# GalleryThumbnailOptions GalleryThumbnailOptions.includeCopyright #
GalleryThumbnailOptions.includeCopyright #

  bool includeCopyright

Description #

Include copyright for thumbnail.
# GalleryThumbnailOptions GalleryThumbnailOptions.includeCredits #
GalleryThumbnailOptions.includeCredits #

  bool includeCredits

Description #

Include credits for thumbnail.
# GalleryThumbnailOptions GalleryThumbnailOptions.includeFilename #
GalleryThumbnailOptions.includeFilename #

  bool includeFilename

Description #

Include file name for thumbnail.
# GalleryThumbnailOptions GalleryThumbnailOptions.includeTitle #
GalleryThumbnailOptions.includeTitle #

  bool includeTitle

Description #

Include title for thumbnail.
# GalleryThumbnailOptions GalleryThumbnailOptions.rowCount #
GalleryThumbnailOptions.rowCount #

  int rowCount

Description #

Web photo gallery thumbnail rows.
# GalleryThumbnailOptions GalleryThumbnailOptions.size #
GalleryThumbnailOptions.size #

  GalleryThumbSizeType size

Description #

The size of the thumbnail images.
# GalleryThumbSizeType GalleryThumbSizeType.CUSTOM #
GalleryThumbSizeType.CUSTOM #

  int CUSTOM

Description #

Custom thumbnail.
# GalleryThumbSizeType GalleryThumbSizeType.LARGE #
GalleryThumbSizeType.LARGE #

  int LARGE

Description #

Large thumbnail.
# GalleryThumbSizeType GalleryThumbSizeType.MEDIUM #
GalleryThumbSizeType.MEDIUM #

  int MEDIUM

Description #

Medium thumbnail.
# GalleryThumbSizeType GalleryThumbSizeType.SMALL #
GalleryThumbSizeType.SMALL #

  int SMALL

Description #

Small thumbnail.
# GenericEPSOpenOptions GenericEPSOpenOptions.antiAlias #
GenericEPSOpenOptions.antiAlias #

  bool antiAlias

Description #

If true, anti-aliasing is used.
# GenericEPSOpenOptions GenericEPSOpenOptions.constrainProportions #
GenericEPSOpenOptions.constrainProportions #

  bool constrainProportions

Description #

If true, the image proportions are constrained.
# GenericEPSOpenOptions GenericEPSOpenOptions.height #
GenericEPSOpenOptions.height #

  UnitValue height

Description #

The image height.
# GenericEPSOpenOptions GenericEPSOpenOptions.mode #
GenericEPSOpenOptions.mode #

  OpenDocumentMode mode

Description #

The document mode.
# GenericEPSOpenOptions GenericEPSOpenOptions.resolution #
GenericEPSOpenOptions.resolution #

  Number resolution

Description #

The resolution of the document (in pixels per inch)
# GenericEPSOpenOptions GenericEPSOpenOptions.width #
GenericEPSOpenOptions.width #

  UnitValue width

Description #

The image width.
# GenericPDFOpenOptions GenericPDFOpenOptions.antiAlias #
GenericPDFOpenOptions.antiAlias #

  bool antiAlias

Description #

If true, anti-aliasing is used.
# GenericPDFOpenOptions GenericPDFOpenOptions.bitsPerChannel #
GenericPDFOpenOptions.bitsPerChannel #

  BitsPerChannelType bitsPerChannel

Description #

The number of bits per channel.
# GenericPDFOpenOptions GenericPDFOpenOptions.constrainProportions #
GenericPDFOpenOptions.constrainProportions #

  bool constrainProportions

Description #

DEPRECATED.
# GenericPDFOpenOptions GenericPDFOpenOptions.cropPage #
GenericPDFOpenOptions.cropPage #

  CropToType cropPage

Description #

The cropping method to use.
# GenericPDFOpenOptions GenericPDFOpenOptions.height #
GenericPDFOpenOptions.height #

  UnitValue height

Description #

DEPRECATED.
# GenericPDFOpenOptions GenericPDFOpenOptions.mode #
GenericPDFOpenOptions.mode #

  OpenDocumentMode mode

Description #

The document mode.
# GenericPDFOpenOptions GenericPDFOpenOptions.name #
GenericPDFOpenOptions.name #

  String name

Description #

The name of the document.
# GenericPDFOpenOptions GenericPDFOpenOptions.object #
GenericPDFOpenOptions.object #

  int object

Description #

The number of the 3d object to open.
# GenericPDFOpenOptions GenericPDFOpenOptions.page #
GenericPDFOpenOptions.page #

  int page

Description #

The number of the page or image to open.
# GenericPDFOpenOptions GenericPDFOpenOptions.resolution #
GenericPDFOpenOptions.resolution #

  Number resolution

Description #

The resolution of the document (in pixels per inch)
# GenericPDFOpenOptions GenericPDFOpenOptions.suppressWarnings #
GenericPDFOpenOptions.suppressWarnings #

  bool suppressWarnings

Description #

If true, suppresses any warnings that may occur during opening.
# GenericPDFOpenOptions GenericPDFOpenOptions.use3DObjectNumber #
GenericPDFOpenOptions.use3DObjectNumber #

  bool use3DObjectNumber

Description #

If true, the value specified in the page property refers to a page
number. If false, the value specifies an image number.
# GenericPDFOpenOptions GenericPDFOpenOptions.usePageNumber #
GenericPDFOpenOptions.usePageNumber #

  bool usePageNumber

Description #

If true, the value specified in the page property refers to a page
number. If false, the value specifies an image number.
# GenericPDFOpenOptions GenericPDFOpenOptions.width #
GenericPDFOpenOptions.width #

  UnitValue width

Description #

DEPRECATED.
# Geometry Geometry.HEPTAGON #
Geometry.HEPTAGON #

  int HEPTAGON

Description #

Heptagon.
# Geometry Geometry.HEXAGON #
Geometry.HEXAGON #

  int HEXAGON

Description #

Hexagon.
# Geometry Geometry.OCTAGON #
Geometry.OCTAGON #

  int OCTAGON

Description #

Octagon.
# Geometry Geometry.PENTAGON #
Geometry.PENTAGON #

  int PENTAGON

Description #

Pentagon.
# Geometry Geometry.SQUARE #
Geometry.SQUARE #

  int SQUARE

Description #

Square.
# Geometry Geometry.TRIANGLE #
Geometry.TRIANGLE #

  int TRIANGLE

Description #

Triangle.
# GIFSaveOptions GIFSaveOptions.colors #
GIFSaveOptions.colors #

  int colors

Description #

The number of colors in palette. Not valid for all palette types.
# GIFSaveOptions GIFSaveOptions.ditherAmount #
GIFSaveOptions.ditherAmount #

  int ditherAmount

Description #

The amount of dither. Valid only when ‘dither type’ is diffusion. Range:
1 to 100.
# GIFSaveOptions GIFSaveOptions.dither #
GIFSaveOptions.dither #

  DitherType dither

Description #

The type of dither.
# GIFSaveOptions GIFSaveOptions.forced #
GIFSaveOptions.forced #

  ForcedColors forced

Description #

The type of colors to force into the color palette.
# GIFSaveOptions GIFSaveOptions.interlaced #
GIFSaveOptions.interlaced #

  bool interlaced

Description #

If true, rows are interlaced.
# GIFSaveOptions GIFSaveOptions.matte #
GIFSaveOptions.matte #

  MatteType matte

Description #

The color to use to fill anti-aliased edges adjacent to transparent
areas of the image. Default: white.
# GIFSaveOptions GIFSaveOptions.palette #
GIFSaveOptions.palette #

  PaletteType palette

Description #

The type of palette to use.
# GIFSaveOptions GIFSaveOptions.preserveExactColors #
GIFSaveOptions.preserveExactColors #

  bool preserveExactColors

Description #

If true, protects colors in the image that contain entries in the color
table from being dithered. Valid only when ‘dither’ = diffusion.
# GIFSaveOptions GIFSaveOptions.transparency #
GIFSaveOptions.transparency #

  bool transparency

Description #

If true, preserves transparent ares of the image during GIF conversion.
# GrayColor GrayColor.gray #
GrayColor.gray #

  Number gray

Description #

The gray value. Range: 0.0 to 100.0.
# GridLineStyle GridLineStyle.DASHED #
GridLineStyle.DASHED #

  int DASHED

Description #

Dashed.
# GridLineStyle GridLineStyle.DOTTED #
GridLineStyle.DOTTED #

  int DOTTED

Description #

Dotted.
# GridLineStyle GridLineStyle.SOLID #
GridLineStyle.SOLID #

  int SOLID

Description #

Solid.
# GridSize GridSize.LARGE #
GridSize.LARGE #

  int LARGE

Description #

Large grid squares.
# GridSize GridSize.MEDIUM #
GridSize.MEDIUM #

  int MEDIUM

Description #

Medium grid squares.
# GridSize GridSize.NONE #
GridSize.NONE #

  int NONE

Description #

No grid is displayed.
# GridSize GridSize.SMALL #
GridSize.SMALL #

  int SMALL

Description #

Small grid squares.
# Guide Guide.coordinate #
Guide.coordinate #

  UnitValue coordinate

Description #

Location of the guide from origin of image.
# Guide Guide.direction #
Guide.direction #

  Direction direction

Description #

Indicates whether the guide is vertical or horizontal.
# GuideLineStyle GuideLineStyle.DASHED #
GuideLineStyle.DASHED #

  int DASHED

Description #

Dashed.
# GuideLineStyle GuideLineStyle.SOLID #
GuideLineStyle.SOLID #

  int SOLID

Description #

Solid.
# Guide Guide.parent #
Guide.parent #

  Object parent

Description #

The object’s container.
# Guide Guide.removeAll #
Guide.removeAll #

  void removeAll ()

Description #

Deletes all elements.
# Guide Guide.remove #
Guide.remove #

  void remove ()

Description #

Deletes this object.
# Guides Guides.add #
Guides.add #

  Guide add ( Direction direction , UnitValue coordinate )

Parameters #

  --------------- -------------------------------------------------------
  direction       Indicates whether the guide is vertical or horizontal.

  coordinate      Location of the guide from origin of image.
  --------------- -------------------------------------------------------

Description #

A guide.
# Guides Guides.getByName #
Guides.getByName #

  Guide getByName ( String name )

Parameters #

  ---------------------------------------------------------- ------------
  name                                                       

  ---------------------------------------------------------- ------------

Description #

Get the first element in the collection with the provided name.
# Guides Guides.length #
Guides.length #

  int length

Description #

Number of elements in the collection.
# Guides Guides.parent #
Guides.parent #

  Object parent

Description #

The object’s container.
# Guides Guides.typename #
Guides.typename #

  String typename

Description #

The class name of the object.
# Guide Guide.typename #
Guide.typename #

  String typename

Description #

The class name of the object.
# HistoryState HistoryState.name #
HistoryState.name #

  String name

Description #

The history state name.
# HistoryState HistoryState.parent #
HistoryState.parent #

  Object parent

Description #

The object’s container.
# HistoryStates HistoryStates.getByName #
HistoryStates.getByName #

  HistoryState getByName ( String name )

Parameters #

  ---------------------------------------------------------- ------------
  name                                                       

  ---------------------------------------------------------- ------------

Description #

Get the first element in the collection with the provided name.
# HistoryStates HistoryStates.[] #
HistoryStates.[] #

  HistoryState [] (uint index )

Parameters #

  ------------------------------------------------------------ ----------
  index                                                        

  ------------------------------------------------------------ ----------

Description #

Get an element in the collection with the provided index.
# HistoryStates HistoryStates.length #
HistoryStates.length #

  int length

Description #

Number of elements in the collection.
# HistoryState HistoryState.snapshot #
HistoryState.snapshot #

  bool snapshot

Description #

If true, the history state is a snapshot.
# HistoryStates HistoryStates.parent #
HistoryStates.parent #

  Object parent

Description #

The object’s container.
# HistoryStates HistoryStates.typename #
HistoryStates.typename #

  String typename

Description #

The class name of the object.
# HistoryState HistoryState.typename #
HistoryState.typename #

  String typename

Description #

The class name of the object.
# HSBColor HSBColor.brightness #
HSBColor.brightness #

  Number brightness

Description #

The brightness value. Range: 0.0 to 100.0.
# HSBColor HSBColor.hue #
HSBColor.hue #

  Number hue

Description #

The hue value. Range: 0.0 to 360.0.
# HSBColor HSBColor.saturation #
HSBColor.saturation #

  Number saturation

Description #

The saturation value. Range: 0.0 to 100.0.
# IllustratorPathType IllustratorPathType.ALLPATHS #
IllustratorPathType.ALLPATHS #

  int ALLPATHS

Description #

Exports all paths.
# IllustratorPathType IllustratorPathType.DOCUMENTBOUNDS #
IllustratorPathType.DOCUMENTBOUNDS #

  int DOCUMENTBOUNDS

Description #

Exports the document bounds.
# IllustratorPathType IllustratorPathType.NAMEDPATH #
IllustratorPathType.NAMEDPATH #

  int NAMEDPATH

Description #

Exports the specified path. To specify the path, see the path name
property of the illustrator export options object.
# IndexedConversionOptions IndexedConversionOptions.colors #
IndexedConversionOptions.colors #

  int colors

Description #

The number of colors in the palette. Not valid for all palette types.
# IndexedConversionOptions IndexedConversionOptions.ditherAmount #
IndexedConversionOptions.ditherAmount #

  int ditherAmount

Description #

The amount of dither. Valid only when ‘dither’ = diffusion.
# IndexedConversionOptions IndexedConversionOptions.dither #
IndexedConversionOptions.dither #

  DitherType dither

Description #

The type of dither.
# IndexedConversionOptions IndexedConversionOptions.forced #
IndexedConversionOptions.forced #

  ForcedColors forced

Description #

The type of colors to force into the color palette.
# IndexedConversionOptions IndexedConversionOptions.matte #
IndexedConversionOptions.matte #

  MatteType matte

Description #

The color to use to fill anti-aliased edges adjacent to transparent
areas of the image. When transparency = false, the matte color is
applied to transparent areas.
# IndexedConversionOptions IndexedConversionOptions.palette #
IndexedConversionOptions.palette #

  PaletteType palette

Description #

The type of palette.
# IndexedConversionOptions IndexedConversionOptions.preserveExactColors #
IndexedConversionOptions.preserveExactColors #

  bool preserveExactColors

Description #

If true, protects colors in the image that contain entries in the color
table from being dithered. Valid only when ‘dither’ = diffusion.
# IndexedConversionOptions IndexedConversionOptions.transparency #
IndexedConversionOptions.transparency #

  bool transparency

Description #

If true, preserves transparent areas of the image during conversion to
GIF format.
# Intent Intent.ABSOLUTECOLORIMETRIC #
Intent.ABSOLUTECOLORIMETRIC #

  int ABSOLUTECOLORIMETRIC

Description #

Aims to maintain color accuracy at the expense of preserving
relationships between colors and is suitable for proofing to simulate
the output of a particular device. This intent is particularly useful
for previewing how paper color affects printed colors.

Leaves colors that fall inside the destination gamut unchanged. Out of
gamut colors are clipped. No scaling of colors to destination white
point is performed.
# Intent Intent.PERCEPTUAL #
Intent.PERCEPTUAL #

  int PERCEPTUAL

Description #

Gives priority to colors for which the human eye has greater
sensitivity.

Suitable for photographic images with a lot of out of gamut colors. This
is the standard rendering intent for the Japanese printing industry.
# Intent Intent.RELATIVECOLORIMETRIC #
Intent.RELATIVECOLORIMETRIC #

  int RELATIVECOLORIMETRIC

Description #

Compares the extreme highlight of the source color space to that of the
destination color space and shifts all colors accordingly. Out of gamut
colors are shifted to the closest reproducible color in the destination
color space.

The standard rendering intent for printing in North America and Europe.
# Intent Intent.SATURATION #
Intent.SATURATION #

  int SATURATION

Description #

Tries to produce vivid colors in an image at the expense of color
accuracy.

Suitable for business graphics like graphs or charts, where bright
saturated colors are more important than the exact relationship between
colors.
# JavaScriptExecutionMode JavaScriptExecutionMode.BEFORERUNNING #
JavaScriptExecutionMode.BEFORERUNNING #

  int BEFORERUNNING

Description #

Show the JavaScript debugger when the first line of the JavaScript
executes.
# JavaScriptExecutionMode JavaScriptExecutionMode.NEVER #
JavaScriptExecutionMode.NEVER #

  int NEVER

Description #

Never show the JavaScript debugger. Treat runtime errors by throwing a
JavaScript exceptions.
# JavaScriptExecutionMode JavaScriptExecutionMode.ONRUNTIMEERROR #
JavaScriptExecutionMode.ONRUNTIMEERROR #

  int ONRUNTIMEERROR

Description #

Show the JavaScript debugger if a runtime error occurs.
# JPEGSaveOptions JPEGSaveOptions.embedColorProfile #
JPEGSaveOptions.embedColorProfile #

  bool embedColorProfile

Description #

If true, the color profile is embedded in the document.
# JPEGSaveOptions JPEGSaveOptions.formatOptions #
JPEGSaveOptions.formatOptions #

  FormatOptionsType formatOptions

Description #

The download format to use.
# JPEGSaveOptions JPEGSaveOptions.matte #
JPEGSaveOptions.matte #

  MatteType matte

Description #

The color to use to fill anti-aliased edges adjacent to transparent
areas of the image. Default: white.
# JPEGSaveOptions JPEGSaveOptions.quality #
JPEGSaveOptions.quality #

  int quality

Description #

The quality of the produced image.
# JPEGSaveOptions JPEGSaveOptions.scans #
JPEGSaveOptions.scans #

  int scans

Description #

The number of scans. Valid only for progressive type JPEG files.
# Justification Justification.CENTER #
Justification.CENTER #

  int CENTER

Description #

Text is centered on each line.
# Justification Justification.CENTERJUSTIFIED #
Justification.CENTERJUSTIFIED #

  int CENTERJUSTIFIED

Description #

Justifies all lines except the last, which is center-aligned.
# Justification Justification.FULLYJUSTIFIED #
Justification.FULLYJUSTIFIED #

  int FULLYJUSTIFIED

Description #

Justifies all lines including the last, which is force-justified.
# Justification Justification.LEFT #
Justification.LEFT #

  int LEFT

Description #

Aligns the left edges, leaving the right edge ragged.
# Justification Justification.LEFTJUSTIFIED #
Justification.LEFTJUSTIFIED #

  int LEFTJUSTIFIED

Description #

Justifies all lines except the last, which is left-aligned.
# Justification Justification.RIGHT #
Justification.RIGHT #

  int RIGHT

Description #

Aligns the right edges, leaving the left edge ragged.
# Justification Justification.RIGHTJUSTIFIED #
Justification.RIGHTJUSTIFIED #

  int RIGHTJUSTIFIED

Description #

Justifies all lines except the last, which is right-aligned.
# LabColor LabColor.A #
LabColor.A #

  Number A

Description #

The a-value. Range: -128.0 and 127.0.
# LabColor LabColor.B #
LabColor.B #

  Number B

Description #

The b-value. Range: -128.0 and 127.0.
# LabColor LabColor.L #
LabColor.L #

  Number L

Description #

The L-value. Range: 0.0 to 100.0.
# Language Language.BRAZILLIANPORTUGUESE #
Language.BRAZILLIANPORTUGUESE #

  int BRAZILLIANPORTUGUESE

Description #

Brazillian Portuguese.
# Language Language.CANADIANFRENCH #
Language.CANADIANFRENCH #

  int CANADIANFRENCH

Description #

Canadian French.
# Language Language.DANISH #
Language.DANISH #

  int DANISH

Description #

Danish.
# Language Language.DUTCH #
Language.DUTCH #

  int DUTCH

Description #

Dutch.
# Language Language.ENGLISHUK #
Language.ENGLISHUK #

  int ENGLISHUK

Description #

British English.
# Language Language.ENGLISHUSA #
Language.ENGLISHUSA #

  int ENGLISHUSA

Description #

American English.
# Language Language.FINNISH #
Language.FINNISH #

  int FINNISH

Description #

Finnish.
# Language Language.FRENCH #
Language.FRENCH #

  int FRENCH

Description #

French.
# Language Language.GERMAN #
Language.GERMAN #

  int GERMAN

Description #

German.
# Language Language.ITALIAN #
Language.ITALIAN #

  int ITALIAN

Description #

Italian.
# Language Language.NORWEGIAN #
Language.NORWEGIAN #

  int NORWEGIAN

Description #

Norwegian.
# Language Language.NYNORSKNORWEGIAN #
Language.NYNORSKNORWEGIAN #

  int NYNORSKNORWEGIAN

Description #

Nynorsk Norwegian.
# Language Language.OLDGERMAN #
Language.OLDGERMAN #

  int OLDGERMAN

Description #

Old German.
# Language Language.PORTUGUESE #
Language.PORTUGUESE #

  int PORTUGUESE

Description #

Portuguese.
# Language Language.SPANISH #
Language.SPANISH #

  int SPANISH

Description #

Spanish.
# Language Language.SWEDISH #
Language.SWEDISH #

  int SWEDISH

Description #

Swedish.
# Language Language.SWISSGERMAN #
Language.SWISSGERMAN #

  int SWISSGERMAN

Description #

Swiss German.
# Layer Layer.allLocked #
Layer.allLocked #

  bool allLocked

Description #

If true, the layer’s contents and settings are locked.
# Layer Layer.blendMode #
Layer.blendMode #

  BlendMode blendMode

Description #

The mode to use when compositing an object.
# Layer Layer.bounds #
Layer.bounds #

  UnitRect bounds

Description #

If the Layer is a layer set, this property returns a reference to the
corresponding layer set object.
# Layer Layer.boundsNoEffects #
Layer.boundsNoEffects #

  UnitRect boundsNoEffects

Description #

Bounding rectangle of the Layer not including effects.
# LayerComp LayerComp.add #
LayerComp.add #

  LayerComp add ()

Description #

Adds an element.
# LayerComp LayerComp.appearance #
LayerComp.appearance #

  bool appearance

Description #

If true, uses layer appearance (layer styles) settings.
# LayerComp LayerComp.apply #
LayerComp.apply #

  void apply ()

Description #

Applies the layer comp to the document.
# LayerComp LayerComp.comment #
LayerComp.comment #

  any comment

Description #

The description of the layer comp.
# LayerComp LayerComp.name #
LayerComp.name #

  String name

Description #

The name of the layer comp.
# LayerComp LayerComp.parent #
LayerComp.parent #

  Object parent

Description #

The object’s container.
# LayerComp LayerComp.position #
LayerComp.position #

  bool position

Description #

If true, uses layer position.
# LayerComp LayerComp.recapture #
LayerComp.recapture #

  void recapture ()

Description #

Recaptures the current layer state(s) for this layer comp.
# LayerComp LayerComp.removeAll #
LayerComp.removeAll #

  void removeAll ()

Description #

Deletes all elements.
# LayerComp LayerComp.remove #
LayerComp.remove #

  void remove ()

Description #

Deletes this object.
# LayerComp LayerComp.resetFromComp #
LayerComp.resetFromComp #

  void resetFromComp ()

Description #

Resets the layer comp state to the document state.
# LayerCompressionType LayerCompressionType.RLE #
LayerCompressionType.RLE #

  int RLE

Description #

Run Length Encoding, which is lossless.
# LayerCompressionType LayerCompressionType.ZIP #
LayerCompressionType.ZIP #

  int ZIP

Description #

Zip compression, which is lossless and most effective for images that
contain large areas of single color.
# LayerComps LayerComps.add #
LayerComps.add #

  LayerComp add ( String name , String comment , bool appearance , bool
  position , bool visibility )

Parameters #

  -------------- --------------------------------------------------------
  name           The name of the layer comp.

  comment        The description of the layer comp.

  appearance     If true, uses the layer appearance or style for this
                 layer comp.

  position       If true, uses the layer position for this layer comp.

  visibility     If true, uses the layer visibility for this layer comp.
  -------------- --------------------------------------------------------

Description #

Adds a layer comp.
# LayerComp LayerComp.selected #
LayerComp.selected #

  bool selected

Description #

If true, the layer comp is currently selected.
# LayerComps LayerComps.getByName #
LayerComps.getByName #

  LayerComp getByName ( String name )

Parameters #

  ---------------------------------------------------------- ------------
  name                                                       

  ---------------------------------------------------------- ------------

Description #

Get the first element in the collection with the provided name.
# LayerComps LayerComps.[] #
LayerComps.[] #

  LayerComp [] (uint index )

Parameters #

  ------------------------------------------------------------ ----------
  index                                                        

  ------------------------------------------------------------ ----------

Description #

Get an element in the collection with the provided index.
# LayerComps LayerComps.length #
LayerComps.length #

  int length

Description #

Number of elements in the collection.
# LayerComps LayerComps.parent #
LayerComps.parent #

  Object parent

Description #

The object’s container.
# LayerComps LayerComps.typename #
LayerComps.typename #

  String typename

Description #

The class name of the object.
# LayerComp LayerComp.typename #
LayerComp.typename #

  String typename

Description #

The class name of the object.
# LayerComp LayerComp.visibility #
LayerComp.visibility #

  bool visibility

Description #

If true, the layer comp is visible.
# Layer Layer.duplicate #
Layer.duplicate #

  Layer duplicate ( Object relativeObject , ElementPlacement
  insertionLocation )

Parameters #

  ----------------------------------------------------------------- -----
  relativeObject                                                    

  insertionLocation                                                 
  ----------------------------------------------------------------- -----

Description #

Duplicate this object.
# Layer Layer.id #
Layer.id #

  int id

Description #

The unique ID of this layer.
# Layer Layer.itemIndex #
Layer.itemIndex #

  int itemIndex

Description #

The layer index sans layer groups, how Photoshop would index them.
# LayerKind LayerKind.BLACKANDWHITE #
LayerKind.BLACKANDWHITE #

  int BLACKANDWHITE

Description #

Black and white layer.
# LayerKind LayerKind.BRIGHTNESSCONTRAST #
LayerKind.BRIGHTNESSCONTRAST #

  int BRIGHTNESSCONTRAST

Description #

Brightness contrast adjustment layer.
# LayerKind LayerKind.CHANNELMIXER #
LayerKind.CHANNELMIXER #

  int CHANNELMIXER

Description #

Channel mixer adjustment layer.
# LayerKind LayerKind.COLORBALANCE #
LayerKind.COLORBALANCE #

  int COLORBALANCE

Description #

Color balance adjustment layer.
# LayerKind LayerKind.COLORLOOKUP #
LayerKind.COLORLOOKUP #

  int COLORLOOKUP

Description #

Color lookup layer.
# LayerKind LayerKind.CURVES #
LayerKind.CURVES #

  int CURVES

Description #

Curves adjustment layer.
# LayerKind LayerKind.EXPOSURE #
LayerKind.EXPOSURE #

  int EXPOSURE

Description #

Exposure layer.
# LayerKind LayerKind.GRADIENTFILL #
LayerKind.GRADIENTFILL #

  int GRADIENTFILL

Description #

Gradient fill.
# LayerKind LayerKind.GRADIENTMAP #
LayerKind.GRADIENTMAP #

  int GRADIENTMAP

Description #

Gradient map adjustment laye.
# LayerKind LayerKind.HUESATURATION #
LayerKind.HUESATURATION #

  int HUESATURATION

Description #

Hue saturation adjustment laye.
# LayerKind LayerKind.INVERSION #
LayerKind.INVERSION #

  int INVERSION

Description #

Invert adjustment layer.
# LayerKind LayerKind.LAYER3D #
LayerKind.LAYER3D #

  int LAYER3D

Description #

3D layer.
# LayerKind LayerKind.LEVELS #
LayerKind.LEVELS #

  int LEVELS

Description #

Levels adjustment layer.
# LayerKind LayerKind.NORMAL #
LayerKind.NORMAL #

  int NORMAL

Description #

Normal.
# LayerKind LayerKind.PATTERNFILL #
LayerKind.PATTERNFILL #

  int PATTERNFILL

Description #

Pattern fill.
# LayerKind LayerKind.PHOTOFILTER #
LayerKind.PHOTOFILTER #

  int PHOTOFILTER

Description #

Photo filter layer.
# LayerKind LayerKind.POSTERIZE #
LayerKind.POSTERIZE #

  int POSTERIZE

Description #

Posterize adjustment layer.
# LayerKind LayerKind.SELECTIVECOLOR #
LayerKind.SELECTIVECOLOR #

  int SELECTIVECOLOR

Description #

Selective color adjustment layer.
# LayerKind LayerKind.SMARTOBJECT #
LayerKind.SMARTOBJECT #

  int SMARTOBJECT

Description #

Smart object layer.
# LayerKind LayerKind.SOLIDFILL #
LayerKind.SOLIDFILL #

  int SOLIDFILL

Description #

Solid color.
# LayerKind LayerKind.TEXT #
LayerKind.TEXT #

  int TEXT

Description #

Text.
# LayerKind LayerKind.THRESHOLD #
LayerKind.THRESHOLD #

  int THRESHOLD

Description #

Threshold adjustment layer.
# LayerKind LayerKind.VIBRANCE #
LayerKind.VIBRANCE #

  int VIBRANCE

Description #

Vibrance layer.
# LayerKind LayerKind.VIDEO #
LayerKind.VIDEO #

  int VIDEO

Description #

Video layer.
# Layer Layer.linkedLayers #
Layer.linkedLayers #

  Layer linkedLayers

Description #

The layers linked to this layer.
# Layer Layer.link #
Layer.link #

  void link ( Layer with )

Parameters #

  --------------------- -------------------------------------------------
  with                  The layer to link to.

  --------------------- -------------------------------------------------

Description #

Links the layer with the specified layer.
# Layer Layer.move #
Layer.move #

  Layer move ( Object relativeObject , ElementPlacement
  insertionLocation )

Parameters #

  ----------------------------------------------------------------- -----
  relativeObject                                                    

  insertionLocation                                                 
  ----------------------------------------------------------------- -----

Description #

Move the object.
# Layer Layer.moveToEnd #
Layer.moveToEnd #

  void moveToEnd ( LayerSet layerSet )

Parameters #

  -------------------------------------------------------------- ---------
  layerSet                                                       

  -------------------------------------------------------------- ---------

Description #

…
# Layer Layer.name #
Layer.name #

  String name

Description #

The name of the layer.
# Layer Layer.opacity #
Layer.opacity #

  Number opacity

Description #

The layer’s master opacity (as a percentage). Range: 0.0 to 100.0.
# Layer Layer.parent #
Layer.parent #

  Object parent

Description #

The object’s container.
# Layer Layer.removeAll #
Layer.removeAll #

  void removeAll ()

Description #

Deletes all elements.
# Layer Layer.remove #
Layer.remove #

  void remove ()

Description #

Deletes this object.
# Layer Layer.resize #
Layer.resize #

  void resize ( Number horizontal , Number vertical , AnchorPosition
  anchor )

Parameters #

  -------------- --------------------------------------------------------
  horizontal     The amount to scale the object horizontally (as a
                 percentage).

  vertical       The amount to scale the object vertically (as a
                 percentage).

  anchor         The point to resize about.
  -------------- --------------------------------------------------------

Description #

Scales the object.
# Layer Layer.rotate #
Layer.rotate #

  void rotate ( Number angle , AnchorPosition anchor )

Parameters #

  -------------- --------------------------------------------------------
  angle          The number of degrees to rotate the object.

  anchor         The point to rotate about.
  -------------- --------------------------------------------------------

Description #

Rotates the object.
# LayerSet LayerSet.add #
LayerSet.add #

  LayerSet add ()

Description #

Adds an element.
# LayerSet LayerSet.artLayers #
LayerSet.artLayers #

  ArtLayers artLayers

Description #

The art layers contained in this layer set.
# LayerSet LayerSet.enabledChannels #
LayerSet.enabledChannels #

  Channel enabledChannels

Description #

The channels that are enabled for the layer set. Must be a list of
component channels.
# LayerSet LayerSet.layerSets #
LayerSet.layerSets #

  LayerSets layerSets

Description #

The layer sets contained within the layer set.
# LayerSet LayerSet.layers #
LayerSet.layers #

  Layers layers

Description #

The layers in this layer set.
# LayerSet LayerSet.merge #
LayerSet.merge #

  ArtLayer merge ()

Description #

Merges the layer set.
# LayerSet LayerSet.parent #
LayerSet.parent #

  Object parent

Description #

The object’s container.
# LayerSets LayerSets.add #
LayerSets.add #

  LayerSet add ()

Description #

Adds an element.
# LayerSets LayerSets.getByName #
LayerSets.getByName #

  LayerSet getByName ( String name )

Parameters #

  ---------------------------------------------------------- ------------
  name                                                       

  ---------------------------------------------------------- ------------

Description #

Get the first element in the collection with the provided name.
# LayerSets LayerSets.[] #
LayerSets.[] #

  LayerSet [] (uint index )

Parameters #

  ------------------------------------------------------------ ----------
  index                                                        

  ------------------------------------------------------------ ----------

Description #

Get an element in the collection with the provided index.
# LayerSets LayerSets.length #
LayerSets.length #

  int length

Description #

Number of elements in the collection.
# LayerSets LayerSets.parent #
LayerSets.parent #

  Object parent

Description #

The object’s container.
# LayerSets LayerSets.removeAll #
LayerSets.removeAll #

  void removeAll ()

Description #

Deletes all elements.
# LayerSets LayerSets.typename #
LayerSets.typename #

  String typename

Description #

The class name of the object.
# LayerSet LayerSet.typename #
LayerSet.typename #

  String typename

Description #

The class name of the object.
# Layers Layers.getByName #
Layers.getByName #

  Layer getByName ( String name )

Parameters #

  ---------------------------------------------------------- ------------
  name                                                       

  ---------------------------------------------------------- ------------

Description #

Get the first element in the collection with the provided name.
# Layers Layers.[] #
Layers.[] #

  Layer [] (uint index )

Parameters #

  ------------------------------------------------------------ ----------
  index                                                        

  ------------------------------------------------------------ ----------

Description #

Get an element in the collection with the provided index.
# Layers Layers.length #
Layers.length #

  int length

Description #

Number of elements in the collection.
# Layers Layers.parent #
Layers.parent #

  Object parent

Description #

The object’s container.
# Layers Layers.removeAll #
Layers.removeAll #

  void removeAll ()

Description #

Deletes all elements.
# Layers Layers.typename #
Layers.typename #

  String typename

Description #

The class name of the object.
# Layer Layer.translate #
Layer.translate #

  void translate ( UnitValue deltaX , UnitValue deltaY )

Parameters #

  -------------- --------------------------------------------------------
  deltaX         The amount to move the object horizontally.

  deltaY         The amount to move the object vertically.
  -------------- --------------------------------------------------------

Description #

Moves the object relative to its current position.
# Layer Layer.typename #
Layer.typename #

  String typename

Description #

The class name of the object.
# Layer Layer.unlink #
Layer.unlink #

  void unlink ()

Description #

Unlinks the layer.
# Layer Layer.visible #
Layer.visible #

  bool visible

Description #

If true, the layer is visible.
# Layer Layer.xmpMetadata #
Layer.xmpMetadata #

  XMPMetadata xmpMetadata

Description #

XMP metadata associated with the Layer.
# LensType LensType.MOVIEPRIME #
LensType.MOVIEPRIME #

  int MOVIEPRIME

Description #

Movie Prime.
# LensType LensType.PRIME105 #
LensType.PRIME105 #

  int PRIME105

Description #

105mm Prime.
# LensType LensType.PRIME35 #
LensType.PRIME35 #

  int PRIME35

Description #

35mm Prime.
# LensType LensType.ZOOMLENS #
LensType.ZOOMLENS #

  int ZOOMLENS

Description #

50-300mm Zoom.
# MacExtensionType MacExtensionType.LOWERCASE #
MacExtensionType.LOWERCASE #

  int LOWERCASE

Description #

The extension is in lowercase letters.
# MacExtensionType MacExtensionType.NONE #
MacExtensionType.NONE #

  int NONE

Description #

Does not use an extension.
# MacExtensionType MacExtensionType.UPPERCASE #
MacExtensionType.UPPERCASE #

  int UPPERCASE

Description #

The extension is in uppercase letters.
# MacPreviewType MacPreviewType.EIGHTBITTIFF #
MacPreviewType.EIGHTBITTIFF #

  int EIGHTBITTIFF

Description #

8-bit TIFF.
# MacPreviewType MacPreviewType.MACOSEIGHTBIT #
MacPreviewType.MACOSEIGHTBIT #

  int MACOSEIGHTBIT

Description #

8-bit.
# MacPreviewType MacPreviewType.MACOSJPEG #
MacPreviewType.MACOSJPEG #

  int MACOSJPEG

Description #

JPEG.
# MacPreviewType MacPreviewType.MACOSMONOCHROME #
MacPreviewType.MACOSMONOCHROME #

  int MACOSMONOCHROME

Description #

Monochrome.
# MacPreviewType MacPreviewType.MONOCHROMETIFF #
MacPreviewType.MONOCHROMETIFF #

  int MONOCHROMETIFF

Description #

Monochrome TIFF.
# MacPreviewType MacPreviewType.NONE #
MacPreviewType.NONE #

  int NONE

Description #

Does not use a preview.
# MagnificationType MagnificationType.ACTUALSIZE #
MagnificationType.ACTUALSIZE #

  int ACTUALSIZE

Description #

Displays the image at actual size.
# MagnificationType MagnificationType.FITPAGE #
MagnificationType.FITPAGE #

  int FITPAGE

Description #

Fits the image to the page.
# MatteType MatteType.BACKGROUND #
MatteType.BACKGROUND #

  int BACKGROUND

Description #

The current background color.
# MatteType MatteType.BLACK #
MatteType.BLACK #

  int BLACK

Description #

Black.
# MatteType MatteType.FOREGROUND #
MatteType.FOREGROUND #

  int FOREGROUND

Description #

The current foreground color.
# MatteType MatteType.NETSCAPE #
MatteType.NETSCAPE #

  int NETSCAPE

Description #

Gray.
# MatteType MatteType.NONE #
MatteType.NONE #

  int NONE

Description #

None.
# MatteType MatteType.SEMIGRAY #
MatteType.SEMIGRAY #

  int SEMIGRAY

Description #

50% gray.
# MatteType MatteType.WHITE #
MatteType.WHITE #

  int WHITE

Description #

White.
# MeasurementLog MeasurementLog.deleteMeasurements #
MeasurementLog.deleteMeasurements #

  void deleteMeasurements ( MeasurementRange range )

Parameters #

  ------------- ---------------------------------------------------------
  range         The measurements to delete. Default: selected.

  ------------- ---------------------------------------------------------

Description #

Deletes the specified measurements.
# MeasurementLog MeasurementLog.exportMeasurements #
MeasurementLog.exportMeasurements #

  void exportMeasurements ( File file , MeasurementRange range , String
  dataPoints )

Parameters #

  ------------ -----------------------------------------------------------------
  file         The file to export to. If not specified, a ‘file save’ dialog is
               displayed.

  range        The measurements to export. Default: selected.

  dataPoints   An array of identifiers of data points to export. The order of
               the data points is respected in the exported file. Defaults to
               data points visible in Measurement Log palette.
  ------------ -----------------------------------------------------------------

Description #

Exports the specified measurements.
# MeasurementLog MeasurementLog.parent #
MeasurementLog.parent #

  Object parent

Description #

The object’s container.
# MeasurementLog MeasurementLog.typename #
MeasurementLog.typename #

  String typename

Description #

The class name of the object.
# MeasurementRange MeasurementRange.ACTIVEMEASUREMENTS #
MeasurementRange.ACTIVEMEASUREMENTS #

  int ACTIVEMEASUREMENTS

Description #

Only active measurements.
# MeasurementRange MeasurementRange.ALLMEASUREMENTS #
MeasurementRange.ALLMEASUREMENTS #

  int ALLMEASUREMENTS

Description #

All measurements.
# MeasurementScale MeasurementScale.logicalLength #
MeasurementScale.logicalLength #

  Number logicalLength

Description #

The logical length this scale equates to.
# MeasurementScale MeasurementScale.logicalUnits #
MeasurementScale.logicalUnits #

  String logicalUnits

Description #

The logical units for this scale.
# MeasurementScale MeasurementScale.name #
MeasurementScale.name #

  String name

Description #

The name of the scale.
# MeasurementScale MeasurementScale.parent #
MeasurementScale.parent #

  Object parent

Description #

The object’s container.
# MeasurementScale MeasurementScale.pixelLength #
MeasurementScale.pixelLength #

  int pixelLength

Description #

The length (in pixels) to which this scale equates.
# MeasurementScale MeasurementScale.typename #
MeasurementScale.typename #

  String typename

Description #

The class name of the object.
# MeasurementSource MeasurementSource.MEASURECOUNTTOOL #
MeasurementSource.MEASURECOUNTTOOL #

  int MEASURECOUNTTOOL

Description #

The measure count tool.
# MeasurementSource MeasurementSource.MEASURERULERTOOL #
MeasurementSource.MEASURERULERTOOL #

  int MEASURERULERTOOL

Description #

The measure ruler tool.
# MeasurementSource MeasurementSource.MEASURESELECTION #
MeasurementSource.MEASURESELECTION #

  int MEASURESELECTION

Description #

The measure selection.
# NewDocumentMode NewDocumentMode.BITMAP #
NewDocumentMode.BITMAP #

  int BITMAP

Description #

Bitmap.
# NewDocumentMode NewDocumentMode.CMYK #
NewDocumentMode.CMYK #

  int CMYK

Description #

CMYK.
# NewDocumentMode NewDocumentMode.GRAYSCALE #
NewDocumentMode.GRAYSCALE #

  int GRAYSCALE

Description #

Grayscale.
# NewDocumentMode NewDocumentMode.LAB #
NewDocumentMode.LAB #

  int LAB

Description #

Lab.
# NewDocumentMode NewDocumentMode.RGB #
NewDocumentMode.RGB #

  int RGB

Description #

RGB.
# NoiseDistribution NoiseDistribution.GAUSSIAN #
NoiseDistribution.GAUSSIAN #

  int GAUSSIAN

Description #

Distributes color values of noise along a bell-shaped curve, creating a
speckled effect.
# NoiseDistribution NoiseDistribution.UNIFORM #
NoiseDistribution.UNIFORM #

  int UNIFORM

Description #

Distributes color values of noise using random numbers between 0 and
plus or minus the specified value, creating a subtle effect.
# Notifier Notifier.eventClass #
Notifier.eventClass #

  String eventClass

Description #

The class ID associated with the event for the Notifier object, four
characters or a unique string.
# Notifier Notifier.eventFile #
Notifier.eventFile #

  File eventFile

Description #

The path to the file to execute when the event occurs/activates the
notifier.
# Notifier Notifier.event #
Notifier.event #

  String event

Description #

The event ID in four characters or a unique string that the notifier is
associated with.
# Notifier Notifier.parent #
Notifier.parent #

  Object parent

Description #

The object’s container.
# Notifier Notifier.removeAll #
Notifier.removeAll #

  void removeAll ()

Description #

Deletes all elements.
# Notifier Notifier.remove #
Notifier.remove #

  void remove ()

Description #

Deletes this object.
# Notifiers Notifiers.add #
Notifiers.add #

  Notifier add ( String event , File eventFile , String eventClass )

Parameters #

  ------------ -------------------------------------------------------------------
  event        The class id of the event, four characters or a unique string.

  eventFile    The script file to execute when the event occurs.

  eventClass   The class of the object the event is applied to, four characters or
               a unique string. When an event applies to multiple types of
               objects, you use the event class parameter to distinguish which
               object this Notifier applies to. For example, the Make event (?Mk?)
               applies to documents (?Dcmn?), channels (?Chnl?) and other objects.
  ------------ -------------------------------------------------------------------

Description #

Creates a notifier.
# Notifiers Notifiers.getByName #
Notifiers.getByName #

  Notifier getByName ( String name )

Parameters #

  ---------------------------------------------------------- ------------
  name                                                       

  ---------------------------------------------------------- ------------

Description #

Get the first element in the collection with the provided name.
# Notifiers Notifiers.[] #
Notifiers.[] #

  Notifier [] (uint index )

Parameters #

  ------------------------------------------------------------ ----------
  index                                                        

  ------------------------------------------------------------ ----------

Description #

Get an element in the collection with the provided index.
# Notifiers Notifiers.length #
Notifiers.length #

  int length

Description #

Number of elements in the collection.
# Notifiers Notifiers.parent #
Notifiers.parent #

  Object parent

Description #

The object’s container.
# Notifiers Notifiers.removeAll #
Notifiers.removeAll #

  void removeAll ()

Description #

Deletes all elements.
# Notifiers Notifiers.typename #
Notifiers.typename #

  String typename

Description #

The class name of the object.
# Notifier Notifier.typename #
Notifier.typename #

  String typename

Description #

The class name of the object.
# OffsetUndefinedAreas OffsetUndefinedAreas.REPEATEDGEPIXELS #
OffsetUndefinedAreas.REPEATEDGEPIXELS #

  int REPEATEDGEPIXELS

Description #

Extends the colors of pixels along the edge of the image in the
direction specified. Banding may result if the edge pixels are different
colors.
# OffsetUndefinedAreas OffsetUndefinedAreas.SETTOBACKGROUND #
OffsetUndefinedAreas.SETTOBACKGROUND #

  int SETTOBACKGROUND

Description #

For background layers, sets pixels to the background layer color. For
nonbackground layers, sets the pixels to transparent.
# OffsetUndefinedAreas OffsetUndefinedAreas.WRAPAROUND #
OffsetUndefinedAreas.WRAPAROUND #

  int WRAPAROUND

Description #

Fills the undefined space with content from the opposite edge of the
image.
# OpenDocumentMode OpenDocumentMode.CMYK #
OpenDocumentMode.CMYK #

  int CMYK

Description #

CMYK.
# OpenDocumentMode OpenDocumentMode.GRAYSCALE #
OpenDocumentMode.GRAYSCALE #

  int GRAYSCALE

Description #

Grayscale.
# OpenDocumentMode OpenDocumentMode.LAB #
OpenDocumentMode.LAB #

  int LAB

Description #

Lab.
# OpenDocumentMode OpenDocumentMode.RGB #
OpenDocumentMode.RGB #

  int RGB

Description #

RGB.
# OpenDocumentType OpenDocumentType.ALIASPIX #
OpenDocumentType.ALIASPIX #

  int ALIASPIX

Description #

Alias PIX format.
# OpenDocumentType OpenDocumentType.BMP #
OpenDocumentType.BMP #

  int BMP

Description #

BMP format.
# OpenDocumentType OpenDocumentType.CAMERARAW #
OpenDocumentType.CAMERARAW #

  int CAMERARAW

Description #

Camera RAW format.
# OpenDocumentType OpenDocumentType.COMPUSERVEGIF #
OpenDocumentType.COMPUSERVEGIF #

  int COMPUSERVEGIF

Description #

CompuServe GIF format.
# OpenDocumentType OpenDocumentType.DICOM #
OpenDocumentType.DICOM #

  int DICOM

Description #

DICOM format.
# OpenDocumentType OpenDocumentType.ELECTRICIMAGE #
OpenDocumentType.ELECTRICIMAGE #

  int ELECTRICIMAGE

Description #

Electric format.
# OpenDocumentType OpenDocumentType.EPS #
OpenDocumentType.EPS #

  int EPS

Description #

Generic EPS format.
# OpenDocumentType OpenDocumentType.EPSPICTPREVIEW #
OpenDocumentType.EPSPICTPREVIEW #

  int EPSPICTPREVIEW

Description #

EPS format with embedded PICT Preview.
# OpenDocumentType OpenDocumentType.EPSTIFFPREVIEW #
OpenDocumentType.EPSTIFFPREVIEW #

  int EPSTIFFPREVIEW

Description #

EPS format with embedded TIFF Preview.
# OpenDocumentType OpenDocumentType.FILMSTRIP #
OpenDocumentType.FILMSTRIP #

  int FILMSTRIP

Description #

Filmstrip format.
# OpenDocumentType OpenDocumentType.JPEG #
OpenDocumentType.JPEG #

  int JPEG

Description #

JPEG format.
# OpenDocumentType OpenDocumentType.PCX #
OpenDocumentType.PCX #

  int PCX

Description #

PCX format.
# OpenDocumentType OpenDocumentType.PDF #
OpenDocumentType.PDF #

  int PDF

Description #

Generic PDF format.
# OpenDocumentType OpenDocumentType.PHOTOCD #
OpenDocumentType.PHOTOCD #

  int PHOTOCD

Description #

Photo CD format.
# OpenDocumentType OpenDocumentType.PHOTOSHOPDCS_1 #
OpenDocumentType.PHOTOSHOPDCS_1 #

  int PHOTOSHOPDCS_1

Description #

Photoshop DCS 1.0 format.
# OpenDocumentType OpenDocumentType.PHOTOSHOPDCS_2 #
OpenDocumentType.PHOTOSHOPDCS_2 #

  int PHOTOSHOPDCS_2

Description #

Photoshop DCS 2.0 format.
# OpenDocumentType OpenDocumentType.PHOTOSHOPEPS #
OpenDocumentType.PHOTOSHOPEPS #

  int PHOTOSHOPEPS

Description #

EPS document produced by Photoshop.
# OpenDocumentType OpenDocumentType.PHOTOSHOP #
OpenDocumentType.PHOTOSHOP #

  int PHOTOSHOP

Description #

Photoshop format.
# OpenDocumentType OpenDocumentType.PHOTOSHOPPDF #
OpenDocumentType.PHOTOSHOPPDF #

  int PHOTOSHOPPDF

Description #

PDF document produced by Photoshop.
# OpenDocumentType OpenDocumentType.PICTFILEFORMAT #
OpenDocumentType.PICTFILEFORMAT #

  int PICTFILEFORMAT

Description #

PICT file format.
# OpenDocumentType OpenDocumentType.PICTRESOURCEFORMAT #
OpenDocumentType.PICTRESOURCEFORMAT #

  int PICTRESOURCEFORMAT

Description #

PICT resource format.
# OpenDocumentType OpenDocumentType.PIXAR #
OpenDocumentType.PIXAR #

  int PIXAR

Description #

Pixar format.
# OpenDocumentType OpenDocumentType.PNG #
OpenDocumentType.PNG #

  int PNG

Description #

PNG format.
# OpenDocumentType OpenDocumentType.PORTABLEBITMAP #
OpenDocumentType.PORTABLEBITMAP #

  int PORTABLEBITMAP

Description #

Portable Bitmap format.
# OpenDocumentType OpenDocumentType.RAW #
OpenDocumentType.RAW #

  int RAW

Description #

Raw format.
# OpenDocumentType OpenDocumentType.SCITEXCT #
OpenDocumentType.SCITEXCT #

  int SCITEXCT

Description #

Scitex CT format.
# OpenDocumentType OpenDocumentType.SGIRGB #
OpenDocumentType.SGIRGB #

  int SGIRGB

Description #

SGI RGB format.
# OpenDocumentType OpenDocumentType.SOFTIMAGE #
OpenDocumentType.SOFTIMAGE #

  int SOFTIMAGE

Description #

SoftImage format.
# OpenDocumentType OpenDocumentType.TARGA #
OpenDocumentType.TARGA #

  int TARGA

Description #

Targa format.
# OpenDocumentType OpenDocumentType.TIFF #
OpenDocumentType.TIFF #

  int TIFF

Description #

TIFF format.
# OpenDocumentType OpenDocumentType.WAVEFRONTRLA #
OpenDocumentType.WAVEFRONTRLA #

  int WAVEFRONTRLA

Description #

Wavefront RLA format.
# OpenDocumentType OpenDocumentType.WIRELESSBITMAP #
OpenDocumentType.WIRELESSBITMAP #

  int WIRELESSBITMAP

Description #

Wireless Bitmap format (WBMP)
# OperatingSystem OperatingSystem.OS2 #
OperatingSystem.OS2 #

  int OS2

Description #

Mac OS/2 operating system.
# OperatingSystem OperatingSystem.WINDOWS #
OperatingSystem.WINDOWS #

  int WINDOWS

Description #

Windows operating system.
# Orientation Orientation.LANDSCAPE #
Orientation.LANDSCAPE #

  int LANDSCAPE

Description #

Landscape.
# Orientation Orientation.PORTRAIT #
Orientation.PORTRAIT #

  int PORTRAIT

Description #

Portrait.
# OtherPaintingCursors OtherPaintingCursors.PRECISEOTHER #
OtherPaintingCursors.PRECISEOTHER #

  int PRECISEOTHER

Description #

Displays pointers as cross hairs.
# OtherPaintingCursors OtherPaintingCursors.STANDARDOTHER #
OtherPaintingCursors.STANDARDOTHER #

  int STANDARDOTHER

Description #

Displays pointers as tool icons.
# PaintingCursors PaintingCursors.BRUSHSIZE #
PaintingCursors.BRUSHSIZE #

  int BRUSHSIZE

Description #

Displays cursors as brush shapes representing the size of the current
brush. Valid only for painting cursors.

Brush size cursors may not appear for very large brushes.
# PaintingCursors PaintingCursors.PRECISE #
PaintingCursors.PRECISE #

  int PRECISE

Description #

Displays pointers as cross hairs.
# PaintingCursors PaintingCursors.STANDARD #
PaintingCursors.STANDARD #

  int STANDARD

Description #

Displays pointers as tool icons.
# PaletteType PaletteType.EXACT #
PaletteType.EXACT #

  int EXACT

Description #

The palette uses the exact colors appearing in the RGB image; available
only if the image uses 256 or fewer colors.

Because the image’s palette contains all colors in the image, there is
no dithering.
# PaletteType PaletteType.LOCALADAPTIVE #
PaletteType.LOCALADAPTIVE #

  int LOCALADAPTIVE

Description #

Creates a palette by sampling the colors from the spectrum appearing
most commonly in the image.

For example, an RGB image with only the colors green and blue produces a
palette made primarily of greens and blues.
# PaletteType PaletteType.LOCALPERCEPTUAL #
PaletteType.LOCALPERCEPTUAL #

  int LOCALPERCEPTUAL

Description #

Creates a custom palette by giving priority to colors for in the image
which the human eye has greater sensitivity.
# PaletteType PaletteType.LOCALSELECTIVE #
PaletteType.LOCALSELECTIVE #

  int LOCALSELECTIVE

Description #

Creates a color table similar to the Perceptual color table, but
favoring broad areas of color in the image and the preservation of web
colors.

Usually produces images with the greatest color integrity.
# PaletteType PaletteType.MACOSPALETTE #
PaletteType.MACOSPALETTE #

  int MACOSPALETTE

Description #

The Mac OS default 8-bit palette, whch is based on a uniform sampling of
RGB colors.
# PaletteType PaletteType.MASTERADAPTIVE #
PaletteType.MASTERADAPTIVE #

  int MASTERADAPTIVE

Description #

Creates a palette by sampling the colors from the spectrum appearing
most commonly in a group of open images that share the same color
palette.
# PaletteType PaletteType.MASTERPERCEPTUAL #
PaletteType.MASTERPERCEPTUAL #

  int MASTERPERCEPTUAL

Description #

Creates a custom palette by giving priority to colors in a group of open
images with the same color palette for which the human eye has greater
sensitivity.
# PaletteType PaletteType.MASTERSELECTIVE #
PaletteType.MASTERSELECTIVE #

  int MASTERSELECTIVE

Description #

Creates a color table similar to the Master Perceptual color table, but
favoring broad areas of color and the preservation of web colors.
# PaletteType PaletteType.PREVIOUSPALETTE #
PaletteType.PREVIOUSPALETTE #

  int PREVIOUSPALETTE

Description #

Uses the custom palette from the previous conversion, making it easy to
convert several images with the same custom palette.
# PaletteType PaletteType.UNIFORM #
PaletteType.UNIFORM #

  int UNIFORM

Description #

Creates a palette by uniformly sampling colors from the RGB color cube.

For example, if Photoshop takes six evenly spaced color levels each of
red, green, and blue, the combination produces a uniform palette of 216
colors (6 cubed = 6 x 6 x 6 = 216). The total number of colors displayed
in an image corresponds to the nearest perfect cube (8, 27, 64, 125, or
216) that is less than the value in the Colors text box.
# PaletteType PaletteType.WEBPALETTE #
PaletteType.WEBPALETTE #

  int WEBPALETTE

Description #

The 216-color palette that web browsers, regardless of platform, use to
display images on a monitor limited to 256 colors.

A subset of the Mac OS 8-bit palette. Use this option to avoid browser
dither when viewing images on a monitor display limited to 256 colors.
# PaletteType PaletteType.WINDOWSPALETTE #
PaletteType.WINDOWSPALETTE #

  int WINDOWSPALETTE

Description #

The Windows system’s default 8-bit palette, whch is based on a uniform
sampling of RGB colors.
# PathItem PathItem.add #
PathItem.add #

  PathItem add ()

Description #

Adds an element.
# PathItem PathItem.deselect #
PathItem.deselect #

  void deselect ()

Description #

Unselects the selection, no path items are selected.
# PathItem PathItem.duplicate #
PathItem.duplicate #

  PathItem duplicate ( String name )

Parameters #

  ------------------ ----------------------------------------------------
  name               The name for the new path.

  ------------------ ----------------------------------------------------

Description #

Duplicates this path item.
# PathItem PathItem.fillPath #
PathItem.fillPath #

  void fillPath (any fillColor , ColorBlendMode mode , Number opacity ,
  bool preserveTransparency , Number feather , bool antiAlias , bool
  wholePath )

Parameters #

  ---------------------- -----------------------------------------------------
  fillColor              The color of the fill for this path.

  mode                   The blending mode of the fill for this path.

  opacity                The opacity of the fill for this path (as a
                         percentage). Range: 0.0 to 100.0.

  preserveTransparency   If true, transparency is preserved.

  feather                The feather amount in pixels. Range: 0.0 to 250.0.

  antiAlias              If true, uses anti-aliasing for the selection.

  wholePath              If true, uses all subpaths when doing the fill.
  ---------------------- -----------------------------------------------------

Description #

Fills the area enclosed by the path.
# PathItem PathItem.kind #
PathItem.kind #

  PathKind kind

Description #

The type of path.
# PathItem PathItem.makeClippingPath #
PathItem.makeClippingPath #

  void makeClippingPath ( Number flatness )

Parameters #

  ---------- --------------------------------------------------------------
  flatness   Flatness in device pixels; tells the PostScript printer how to
             approximate curves. Range: 0.2 to 100).

  ---------- --------------------------------------------------------------

Description #

Makes this path item the clipping path for this document.
# PathItem PathItem.makeSelection #
PathItem.makeSelection #

  void makeSelection ( Number feather , bool antiAlias , SelectionType
  operation )

Parameters #

  ----------- -------------------------------------------------------------
  feather     The feather amount in pixels. Range: 0.0 to 250.0.

  antiAlias   If true, the selection uses anti-aliasing.

  operation   The selection behavior relative to the existing selection
              (when a selection already exists).
  ----------- -------------------------------------------------------------

Description #

Makes a selection object, whose border is the path, from this path item
object.
# PathItem PathItem.name #
PathItem.name #

  String name

Description #

The name of the path item.
# PathItem PathItem.parent #
PathItem.parent #

  Object parent

Description #

The object’s container.
# PathItem PathItem.removeAll #
PathItem.removeAll #

  void removeAll ()

Description #

Deletes all elements.
# PathItem PathItem.remove #
PathItem.remove #

  void remove ()

Description #

Deletes this object.
# PathItems PathItems.add #
PathItems.add #

  PathItem add ( String name , SubPathInfo entirePath )

Parameters #

  ------------------------- ---------------------------------------------
  name                      The name for the new path.

  entirePath                The item’s sub paths.
  ------------------------- ---------------------------------------------

Description #

Creates a new path item.
# PathItem PathItem.select #
PathItem.select #

  void select ()

Description #

Makes this path item the active or selected path item.
# PathItems PathItems.getByName #
PathItems.getByName #

  PathItem getByName ( String name )

Parameters #

  ---------------------------------------------------------- ------------
  name                                                       

  ---------------------------------------------------------- ------------

Description #

Get the first element in the collection with the provided name.
# PathItems PathItems.[] #
PathItems.[] #

  PathItem [] (uint index )

Parameters #

  ------------------------------------------------------------ ----------
  index                                                        

  ------------------------------------------------------------ ----------

Description #

Get an element in the collection with the provided index.
# PathItems PathItems.length #
PathItems.length #

  int length

Description #

Number of elements in the collection.
# PathItems PathItems.parent #
PathItems.parent #

  Object parent

Description #

The object’s container.
# PathItem PathItem.strokePath #
PathItem.strokePath #

  void strokePath ( ToolType tool , bool simulatePressure )

Parameters #

  -------------------- --------------------------------------------------
  tool                 The tool to use when stroking the path.

  simulatePressure     If true, simulates the pressure when using the
                       tool.
  -------------------- --------------------------------------------------

Description #

Strokes the path.
# PathItems PathItems.typename #
PathItems.typename #

  String typename

Description #

The class name of the object.
# PathItem PathItem.subPathItems #
PathItem.subPathItems #

  SubPathItems subPathItems

Description #

The sub path objects for this path item.
# PathItem PathItem.typename #
PathItem.typename #

  String typename

Description #

The class name of the object.
# PathKind PathKind.CLIPPINGPATH #
PathKind.CLIPPINGPATH #

  int CLIPPINGPATH

Description #

Clipping path.
# PathKind PathKind.NORMALPATH #
PathKind.NORMALPATH #

  int NORMALPATH

Description #

Normal path.
# PathKind PathKind.TEXTMASK #
PathKind.TEXTMASK #

  int TEXTMASK

Description #

Text mask path.
# PathKind PathKind.VECTORMASK #
PathKind.VECTORMASK #

  int VECTORMASK

Description #

Vector mask path.
# PathKind PathKind.WORKPATH #
PathKind.WORKPATH #

  int WORKPATH

Description #

Workpath.
# PathPoint PathPoint.anchor #
PathPoint.anchor #

  Point anchor

Description #

The position (coordinates) of the anchor point.
# PathPointInfo PathPointInfo.anchor #
PathPointInfo.anchor #

  Point anchor

Description #

The x and y coordinates of one end point of the path segment.
# PathPointInfo PathPointInfo.kind #
PathPointInfo.kind #

  PointKind kind

Description #

The point type.
# PathPointInfo PathPointInfo.leftDirection #
PathPointInfo.leftDirection #

  Point leftDirection

Description #

The location of the left direction point (“in” position).
# PathPointInfo PathPointInfo.rightDirection #
PathPointInfo.rightDirection #

  Point rightDirection

Description #

The location of the right direction point (“out” position).
# PathPoint PathPoint.kind #
PathPoint.kind #

  PointKind kind

Description #

The type of point.
# PathPoint PathPoint.leftDirection #
PathPoint.leftDirection #

  Point leftDirection

Description #

The location of the left direction point (the “in” position).
# PathPoint PathPoint.parent #
PathPoint.parent #

  Object parent

Description #

The object’s container.
# PathPoint PathPoint.rightDirection #
PathPoint.rightDirection #

  Point rightDirection

Description #

The location of the right direction point (the “out” position).
# PathPoints PathPoints.getByName #
PathPoints.getByName #

  PathPoint getByName ( String name )

Parameters #

  ---------------------------------------------------------- ------------
  name                                                       

  ---------------------------------------------------------- ------------

Description #

Get the first element in the collection with the provided name.
# PathPoints PathPoints.[] #
PathPoints.[] #

  PathPoint [] (uint index )

Parameters #

  ------------------------------------------------------------ ----------
  index                                                        

  ------------------------------------------------------------ ----------

Description #

Get an element in the collection with the provided index.
# PathPoints PathPoints.length #
PathPoints.length #

  int length

Description #

Number of elements in the collection.
# PathPoints PathPoints.parent #
PathPoints.parent #

  Object parent

Description #

The object’s container.
# PathPoints PathPoints.typename #
PathPoints.typename #

  String typename

Description #

The class name of the object.
# PathPoint PathPoint.typename #
PathPoint.typename #

  String typename

Description #

The class name of the object.
# PDFCompatibilityType PDFCompatibilityType.PDF13 #
PDFCompatibilityType.PDF13 #

  int PDF13

Description #

PDF 1.3 (Acrobat 4 or higher).
# PDFCompatibilityType PDFCompatibilityType.PDF14 #
PDFCompatibilityType.PDF14 #

  int PDF14

Description #

PDF 1.4 (Acrobat 5 or higher).
# PDFCompatibilityType PDFCompatibilityType.PDF15 #
PDFCompatibilityType.PDF15 #

  int PDF15

Description #

PDF 1.5 (Acrobat 6 or higher).
# PDFCompatibilityType PDFCompatibilityType.PDF16 #
PDFCompatibilityType.PDF16 #

  int PDF16

Description #

PDF 1.6 (Acrobat 7 or higher)
# PDFCompatibilityType PDFCompatibilityType.PDF17 #
PDFCompatibilityType.PDF17 #

  int PDF17

Description #

PDF 1.7 (Acrobat 9 or higher)
# PDFEncodingType PDFEncodingType.JPEG2000HIGH #
PDFEncodingType.JPEG2000HIGH #

  int JPEG2000HIGH

Description #

JPEG2000 compression with high image quality.
# PDFEncodingType PDFEncodingType.JPEG2000LOSSLESS #
PDFEncodingType.JPEG2000LOSSLESS #

  int JPEG2000LOSSLESS

Description #

JPEG2000 lossless compression.
# PDFEncodingType PDFEncodingType.JPEG2000LOW #
PDFEncodingType.JPEG2000LOW #

  int JPEG2000LOW

Description #

JPEG2000 compression with low image quality.
# PDFEncodingType PDFEncodingType.JPEG2000MEDHIGH #
PDFEncodingType.JPEG2000MEDHIGH #

  int JPEG2000MEDHIGH

Description #

JPEG2000 compression with medium high image quality.
# PDFEncodingType PDFEncodingType.JPEG2000MED #
PDFEncodingType.JPEG2000MED #

  int JPEG2000MED

Description #

JPEG2000 compression with medium image quality.
# PDFEncodingType PDFEncodingType.JPEG2000MEDLOW #
PDFEncodingType.JPEG2000MEDLOW #

  int JPEG2000MEDLOW

Description #

JPEG2000 compression with medium low image quality.
# PDFEncodingType PDFEncodingType.JPEGHIGH #
PDFEncodingType.JPEGHIGH #

  int JPEGHIGH

Description #

JPEG compression with high image quality.
# PDFEncodingType PDFEncodingType.JPEG #
PDFEncodingType.JPEG #

  int JPEG

Description #

JPEG compression.
# PDFEncodingType PDFEncodingType.JPEGLOW #
PDFEncodingType.JPEGLOW #

  int JPEGLOW

Description #

JPEG compression with low image quality.
# PDFEncodingType PDFEncodingType.JPEGMEDHIGH #
PDFEncodingType.JPEGMEDHIGH #

  int JPEGMEDHIGH

Description #

JPEG compression with medium high image quality.
# PDFEncodingType PDFEncodingType.JPEGMED #
PDFEncodingType.JPEGMED #

  int JPEGMED

Description #

JPEG compression with medium image quality.
# PDFEncodingType PDFEncodingType.JPEGMEDLOW #
PDFEncodingType.JPEGMEDLOW #

  int JPEGMEDLOW

Description #

JPEG compression with medium low image quality.
# PDFEncodingType PDFEncodingType.NONE #
PDFEncodingType.NONE #

  int NONE

Description #

No encoding.
# PDFEncodingType PDFEncodingType.PDFZIP4BIT #
PDFEncodingType.PDFZIP4BIT #

  int PDFZIP4BIT

Description #

Zip compression with 4-bit image quality.
# PDFEncodingType PDFEncodingType.PDFZIP #
PDFEncodingType.PDFZIP #

  int PDFZIP

Description #

Zip compression.
# PDFResampleType PDFResampleType.NONE #
PDFResampleType.NONE #

  int NONE

Description #

Does not downsample.
# PDFResampleType PDFResampleType.PDFAVERAGE #
PDFResampleType.PDFAVERAGE #

  int PDFAVERAGE

Description #

Averages the pixels in a sample area and replaces the entire area with
the average pixel color at the specified resolution.
# PDFResampleType PDFResampleType.PDFBICUBIC #
PDFResampleType.PDFBICUBIC #

  int PDFBICUBIC

Description #

Uses a weighted average to determine pixel color, which usually yields
better results than the simple averaging method of downsampling. The
slowest but most precise method, resulting in the smoothest gradations.
# PDFResampleType PDFResampleType.PDFSUBSAMPLE #
PDFResampleType.PDFSUBSAMPLE #

  int PDFSUBSAMPLE

Description #

Chooses a pixel in the center of the sample area and replaces the entire
area with that pixel color; significantly reduces conversion time but
results in images that are less smooth and continuous.
# PDFSaveOptions PDFSaveOptions.alphaChannels #
PDFSaveOptions.alphaChannels #

  bool alphaChannels

Description #

If true, the alpha channels are saved.
# PDFSaveOptions PDFSaveOptions.annotations #
PDFSaveOptions.annotations #

  bool annotations

Description #

If true, the annotations are saved.
# PDFSaveOptions PDFSaveOptions.colorConversion #
PDFSaveOptions.colorConversion #

  bool colorConversion

Description #

If true, converts the color profile to the destination profile.
# PDFSaveOptions PDFSaveOptions.convertToEightBit #
PDFSaveOptions.convertToEightBit #

  bool convertToEightBit

Description #

If true, converts a 16-bit image to 8-bit for better compatibility with
other applications.
# PDFSaveOptions PDFSaveOptions.description #
PDFSaveOptions.description #

  String description

Description #

Description of the save options in use.
# PDFSaveOptions PDFSaveOptions.destinationProfile #
PDFSaveOptions.destinationProfile #

  String destinationProfile

Description #

Describes the final RGB or CMYK output device, such as a monitor or
press standard.
# PDFSaveOptions PDFSaveOptions.downgradeColorProfile #
PDFSaveOptions.downgradeColorProfile #

  bool downgradeColorProfile

Description #

DEPRECATED, ( should the embedded color profile be downgraded to version
2 )
# PDFSaveOptions PDFSaveOptions.downSample #
PDFSaveOptions.downSample #

  PDFResampleType downSample

Description #

The downsample method to use.
# PDFSaveOptions PDFSaveOptions.downSampleSize #
PDFSaveOptions.downSampleSize #

  Number downSampleSize

Description #

The size (in pixels per inch) to downsample images to if they exceed the
value specified for ‘down sample size limit’.
# PDFSaveOptions PDFSaveOptions.downSampleSizeLimit #
PDFSaveOptions.downSampleSizeLimit #

  Number downSampleSizeLimit

Description #

Limits downsampling or subsampling to images that exceed this value (in
pixels per inch).
# PDFSaveOptions PDFSaveOptions.embedColorProfile #
PDFSaveOptions.embedColorProfile #

  bool embedColorProfile

Description #

If true, the color profile is embedded in the document.
# PDFSaveOptions PDFSaveOptions.embedFonts #
PDFSaveOptions.embedFonts #

  bool embedFonts

Description #

DEPRECATED. ( embed fonts? Only valid if a text layer is included )
# PDFSaveOptions PDFSaveOptions.embedThumbnail #
PDFSaveOptions.embedThumbnail #

  bool embedThumbnail

Description #

If true, includes a small preview image in Acrobat.
# PDFSaveOptions PDFSaveOptions.encoding #
PDFSaveOptions.encoding #

  PDFEncodingType encoding

Description #

The encoding method to use.
# PDFSaveOptions PDFSaveOptions.interpolation #
PDFSaveOptions.interpolation #

  bool interpolation

Description #

DEPRECATED. ( use image interpolation? )
# PDFSaveOptions PDFSaveOptions.jpegQuality #
PDFSaveOptions.jpegQuality #

  int jpegQuality

Description #

The quality of the produced image. Valid only for JPEG-encoded PDF
documents. Range: 0 to 12.
# PDFSaveOptions PDFSaveOptions.layers #
PDFSaveOptions.layers #

  bool layers

Description #

If true, the layers are saved.
# PDFSaveOptions PDFSaveOptions.optimizeForWeb #
PDFSaveOptions.optimizeForWeb #

  bool optimizeForWeb

Description #

If true, improves performance of PDFs on Web servers.
# PDFSaveOptions PDFSaveOptions.outputCondition #
PDFSaveOptions.outputCondition #

  String outputCondition

Description #

An optional comment field for inserting descriptions of the output
condition. The text is stored in the PDF/X file.
# PDFSaveOptions PDFSaveOptions.outputConditionID #
PDFSaveOptions.outputConditionID #

  String outputConditionID

Description #

The identifier for the output condition.
# PDFSaveOptions PDFSaveOptions.PDFCompatibility #
PDFSaveOptions.PDFCompatibility #

  PDFCompatibilityType PDFCompatibility

Description #

The PDF version to make the document compatible with.
# PDFSaveOptions PDFSaveOptions.PDFStandard #
PDFSaveOptions.PDFStandard #

  PDFStandardType PDFStandard

Description #

The PDF standard to make the document compatible with.
# PDFSaveOptions PDFSaveOptions.preserveEditing #
PDFSaveOptions.preserveEditing #

  bool preserveEditing

Description #

If true, allows users to reopen the PDF in Photoshop with native
Photoshop data intact.
# PDFSaveOptions PDFSaveOptions.presetFile #
PDFSaveOptions.presetFile #

  String presetFile

Description #

The preset file to use for settings; overrides other settings.
# PDFSaveOptions PDFSaveOptions.profileInclusionPolicy #
PDFSaveOptions.profileInclusionPolicy #

  bool profileInclusionPolicy

Description #

If true, shows which profiles to include.
# PDFSaveOptions PDFSaveOptions.registryName #
PDFSaveOptions.registryName #

  String registryName

Description #

The URL where the output condition is registered.
# PDFSaveOptions PDFSaveOptions.spotColors #
PDFSaveOptions.spotColors #

  bool spotColors

Description #

If true, the spot colors are saved.
# PDFSaveOptions PDFSaveOptions.tileSize #
PDFSaveOptions.tileSize #

  int tileSize

Description #

The compression option. Valid only when encoding is JPEG2000.
# PDFSaveOptions PDFSaveOptions.transparency #
PDFSaveOptions.transparency #

  bool transparency

Description #

DEPRECATED.
# PDFSaveOptions PDFSaveOptions.useOutlines #
PDFSaveOptions.useOutlines #

  bool useOutlines

Description #

DEPRECATED. ( use outlines for text? Only valid if vector data is
included )
# PDFSaveOptions PDFSaveOptions.vectorData #
PDFSaveOptions.vectorData #

  bool vectorData

Description #

DEPRECATED. ( include vector data )
# PDFSaveOptions PDFSaveOptions.view #
PDFSaveOptions.view #

  bool view

Description #

If true, opens the saved PDF in Acrobat.
# PDFStandardType PDFStandardType.NONE #
PDFStandardType.NONE #

  int NONE

Description #

The document does not use the PDF/X standard.
# PDFStandardType PDFStandardType.PDFX1A2001 #
PDFStandardType.PDFX1A2001 #

  int PDFX1A2001

Description #

PDF/X-1a standard, which requires all fonts to be embedded, the
appropriate PDF bounding boxes to be specified, and color to appear as
CMYK, spot colors, or both; can be opened in Acrobat 4.0 and Acrobat
Reader 4.0 and later.
# PDFStandardType PDFStandardType.PDFX1A2003 #
PDFStandardType.PDFX1A2003 #

  int PDFX1A2003

Description #

PDF/X-1a standard, which requires all fonts to be embedded, the
appropriate PDF bounding boxes to be specified, and color to appear as
CMYK, spot colors, or both; can be opened in Acrobat 4.0 and Acrobat
Reader 4.0 and later.
# PDFStandardType PDFStandardType.PDFX32002 #
PDFStandardType.PDFX32002 #

  int PDFX32002

Description #

PDF/X-3 standard, which requires all fonts to be embedded and the
appropriate PDF bounding boxes to be specified, and for color allows
either the use of color management and device-independent color (CIE
L*a*b, ICC-based color spaces, CalRGB, and CalGray) or CMYK, spot
colors, or both; can be opened in Acrobat 4.0 and Acrobat Reader 4.0 and
later.
# PDFStandardType PDFStandardType.PDFX32003 #
PDFStandardType.PDFX32003 #

  int PDFX32003

Description #

PDF/X-3 standard, which requires all fonts to be embedded and the
appropriate PDF bounding boxes to be specified, and for color allows
either the use of color management and device-independent color (CIE
L*a*b, ICC-based color spaces, CalRGB, and CalGray) or CMYK, spot
colors, or both; can be opened in Acrobat 4.0 and Acrobat Reader 4.0 and
later.
# PDFStandardType PDFStandardType.PDFX42008 #
PDFStandardType.PDFX42008 #

  int PDFX42008

Description #

PDF/X-4 standard, which requires all fonts to be embedded and the
appropriate PDF bounding boxes to be specified, and for color allows
either the use of color management and device-independent color (CIE
L*a*b, ICC-based color spaces, CalRGB, and CalGray) or CMYK, spot
colors, or both; can be opened in Acrobat 8.0 and Acrobat Reader 8.0 and
later.
# PhotoCDColorSpace PhotoCDColorSpace.LAB16 #
PhotoCDColorSpace.LAB16 #

  int LAB16

Description #

Lab with 16 bits per channel.
# PhotoCDColorSpace PhotoCDColorSpace.LAB8 #
PhotoCDColorSpace.LAB8 #

  int LAB8

Description #

Lab with 8 bits per channel.
# PhotoCDColorSpace PhotoCDColorSpace.RGB16 #
PhotoCDColorSpace.RGB16 #

  int RGB16

Description #

RGB with 16 bits per channel.
# PhotoCDColorSpace PhotoCDColorSpace.RGB8 #
PhotoCDColorSpace.RGB8 #

  int RGB8

Description #

RGB with 8 bits per channel.
# PhotoCDOpenOptions PhotoCDOpenOptions.colorProfileName #
PhotoCDOpenOptions.colorProfileName #

  String colorProfileName

Description #

The profile to use when reading the image.
# PhotoCDOpenOptions PhotoCDOpenOptions.colorSpace #
PhotoCDOpenOptions.colorSpace #

  PhotoCDColorSpace colorSpace

Description #

The color space for the image.
# PhotoCDOpenOptions PhotoCDOpenOptions.orientation #
PhotoCDOpenOptions.orientation #

  Orientation orientation

Description #

The image orientation.
# PhotoCDOpenOptions PhotoCDOpenOptions.pixelSize #
PhotoCDOpenOptions.pixelSize #

  PhotoCDSize pixelSize

Description #

The dimensions of the image.
# PhotoCDOpenOptions PhotoCDOpenOptions.resolution #
PhotoCDOpenOptions.resolution #

  Number resolution

Description #

The resolution of the image (in pixels per inch)
# PhotoCDSize PhotoCDSize.EXTRALARGE #
PhotoCDSize.EXTRALARGE #

  int EXTRALARGE

Description #

1024x1536 image.
# PhotoCDSize PhotoCDSize.LARGE #
PhotoCDSize.LARGE #

  int LARGE

Description #

512x768 image.
# PhotoCDSize PhotoCDSize.MAXIMUM #
PhotoCDSize.MAXIMUM #

  int MAXIMUM

Description #

2048x3072 image.
# PhotoCDSize PhotoCDSize.MEDIUM #
PhotoCDSize.MEDIUM #

  int MEDIUM

Description #

256x384 image.
# PhotoCDSize PhotoCDSize.MINIMUM #
PhotoCDSize.MINIMUM #

  int MINIMUM

Description #

64x96 image.
# PhotoCDSize PhotoCDSize.SMALL #
PhotoCDSize.SMALL #

  int SMALL

Description #

128x192 image.
# PhotoshopSaveOptions PhotoshopSaveOptions.alphaChannels #
PhotoshopSaveOptions.alphaChannels #

  bool alphaChannels

Description #

If true, the alpha channels are saved.
# PhotoshopSaveOptions PhotoshopSaveOptions.annotations #
PhotoshopSaveOptions.annotations #

  bool annotations

Description #

If true, the annotations are saved.
# PhotoshopSaveOptions PhotoshopSaveOptions.embedColorProfile #
PhotoshopSaveOptions.embedColorProfile #

  bool embedColorProfile

Description #

If true, the color profile is embedded in the document.
# PhotoshopSaveOptions PhotoshopSaveOptions.layers #
PhotoshopSaveOptions.layers #

  bool layers

Description #

If true, the layers are saved.
# PhotoshopSaveOptions PhotoshopSaveOptions.spotColors #
PhotoshopSaveOptions.spotColors #

  bool spotColors

Description #

If true, spot colors are saved.
# PICTBitsPerPixels PICTBitsPerPixels.EIGHT #
PICTBitsPerPixels.EIGHT #

  int EIGHT

Description #

8 bits per pixel.
# PICTBitsPerPixels PICTBitsPerPixels.FOUR #
PICTBitsPerPixels.FOUR #

  int FOUR

Description #

4 bits per pixel.
# PICTBitsPerPixels PICTBitsPerPixels.SIXTEEN #
PICTBitsPerPixels.SIXTEEN #

  int SIXTEEN

Description #

16 bits per pixel.
# PICTBitsPerPixels PICTBitsPerPixels.THIRTYTWO #
PICTBitsPerPixels.THIRTYTWO #

  int THIRTYTWO

Description #

32 bits per pixel.
# PICTBitsPerPixels PICTBitsPerPixels.TWO #
PICTBitsPerPixels.TWO #

  int TWO

Description #

2 bits per pixel.
# PICTCompression PICTCompression.JPEGHIGHPICT #
PICTCompression.JPEGHIGHPICT #

  int JPEGHIGHPICT

Description #

High quality JPEG encoding.
# PICTCompression PICTCompression.JPEGLOWPICT #
PICTCompression.JPEGLOWPICT #

  int JPEGLOWPICT

Description #

Low quality JPEG encoding (high amount of compression).
# PICTCompression PICTCompression.JPEGMAXIMUMPICT #
PICTCompression.JPEGMAXIMUMPICT #

  int JPEGMAXIMUMPICT

Description #

Maximum quality JPEG encoding (very little compression).
# PICTCompression PICTCompression.JPEGMEDIUMPICT #
PICTCompression.JPEGMEDIUMPICT #

  int JPEGMEDIUMPICT

Description #

Medium quality JPEG encoding (medium amount of compression).
# PICTCompression PICTCompression.NONE #
PICTCompression.NONE #

  int NONE

Description #

No compression.
# PICTFileSaveOptions PICTFileSaveOptions.alphaChannels #
PICTFileSaveOptions.alphaChannels #

  bool alphaChannels

Description #

If true, the alpha channels are saved.
# PICTFileSaveOptions PICTFileSaveOptions.compression #
PICTFileSaveOptions.compression #

  PICTCompression compression

Description #

The compression method.
# PICTFileSaveOptions PICTFileSaveOptions.embedColorProfile #
PICTFileSaveOptions.embedColorProfile #

  bool embedColorProfile

Description #

If true, the color profile is embedded in the document.
# PICTFileSaveOptions PICTFileSaveOptions.resolution #
PICTFileSaveOptions.resolution #

  PICTBitsPerPixels resolution

Description #

The number of bits per pixel.
# PICTResourceSaveOptions PICTResourceSaveOptions.alphaChannels #
PICTResourceSaveOptions.alphaChannels #

  bool alphaChannels

Description #

If true, the alpha channels are saved.
# PICTResourceSaveOptions PICTResourceSaveOptions.compression #
PICTResourceSaveOptions.compression #

  PICTCompression compression

Description #

The compression type.
# PICTResourceSaveOptions PICTResourceSaveOptions.embedColorProfile #
PICTResourceSaveOptions.embedColorProfile #

  bool embedColorProfile

Description #

If true, the color profile is embedded in the document.
# PICTResourceSaveOptions PICTResourceSaveOptions.name #
PICTResourceSaveOptions.name #

  String name

Description #

The name of PICT resource.
# PICTResourceSaveOptions PICTResourceSaveOptions.resolution #
PICTResourceSaveOptions.resolution #

  PICTBitsPerPixels resolution

Description #

The number of bits per pixel.
# PICTResourceSaveOptions PICTResourceSaveOptions.resourceID #
PICTResourceSaveOptions.resourceID #

  int resourceID

Description #

The ID of the PICT resource.
# PicturePackageOptions PicturePackageOptions.content #
PicturePackageOptions.content #

  PicturePackageTextType content

Description #

The content information.
# PicturePackageOptions PicturePackageOptions.flatten #
PicturePackageOptions.flatten #

  bool flatten

Description #

If true, flattens all layers in the final document.
# PicturePackageOptions PicturePackageOptions.font #
PicturePackageOptions.font #

  GalleryFontType font

Description #

The font used for security text.
# PicturePackageOptions PicturePackageOptions.fontSize #
PicturePackageOptions.fontSize #

  int fontSize

Description #

The font size.
# PicturePackageOptions PicturePackageOptions.layout #
PicturePackageOptions.layout #

  String layout

Description #

The layout to use to generate the picture package.
# PicturePackageOptions PicturePackageOptions.mode #
PicturePackageOptions.mode #

  NewDocumentMode mode

Description #

The document color mode.
# PicturePackageOptions PicturePackageOptions.opacity #
PicturePackageOptions.opacity #

  int opacity

Description #

The web page security text opacity (as a percentage) Range: 0 to 100.
# PicturePackageOptions PicturePackageOptions.resolution #
PicturePackageOptions.resolution #

  Number resolution

Description #

The resolution of the document (in pixels per inch)
# PicturePackageOptions PicturePackageOptions.textColor #
PicturePackageOptions.textColor #

  RGBColor textColor

Description #

The color of the security text.
# PicturePackageOptions PicturePackageOptions.text #
PicturePackageOptions.text #

  String text

Description #

The picture package custom text.
# PicturePackageOptions PicturePackageOptions.textPosition #
PicturePackageOptions.textPosition #

  GallerySecurityTextPositionType textPosition

Description #

The position of the security text.
# PicturePackageOptions PicturePackageOptions.textRotate #
PicturePackageOptions.textRotate #

  GallerySecurityTextRotateType textRotate

Description #

The orientation of the security text.
# PicturePackageTextType PicturePackageTextType.CAPTION #
PicturePackageTextType.CAPTION #

  int CAPTION

Description #

The text is a caption.
# PicturePackageTextType PicturePackageTextType.COPYRIGHT #
PicturePackageTextType.COPYRIGHT #

  int COPYRIGHT

Description #

The text is the copyright.
# PicturePackageTextType PicturePackageTextType.CREDIT #
PicturePackageTextType.CREDIT #

  int CREDIT

Description #

The text is the credit.
# PicturePackageTextType PicturePackageTextType.FILENAME #
PicturePackageTextType.FILENAME #

  int FILENAME

Description #

The text is the filename.
# PicturePackageTextType PicturePackageTextType.NONE #
PicturePackageTextType.NONE #

  int NONE

Description #

No text.
# PicturePackageTextType PicturePackageTextType.ORIGIN #
PicturePackageTextType.ORIGIN #

  int ORIGIN

Description #

The text is the origin.
# PicturePackageTextType PicturePackageTextType.USER #
PicturePackageTextType.USER #

  int USER

Description #

The text is user defined.
# PixarSaveOptions PixarSaveOptions.alphaChannels #
PixarSaveOptions.alphaChannels #

  bool alphaChannels

Description #

If true, the alpha channels are saved.
# PNGSaveOptions PNGSaveOptions.compression #
PNGSaveOptions.compression #

  int compression

Description #

Compression used on the image.
# PNGSaveOptions PNGSaveOptions.interlaced #
PNGSaveOptions.interlaced #

  bool interlaced

Description #

If true, rows are interlaced.
# PointKind PointKind.CORNERPOINT #
PointKind.CORNERPOINT #

  int CORNERPOINT

Description #

The point must be a corner.
# PointKind PointKind.SMOOTHPOINT #
PointKind.SMOOTHPOINT #

  int SMOOTHPOINT

Description #

The point can be a curve.
# PointType PointType.POSTSCRIPT #
PointType.POSTSCRIPT #

  int POSTSCRIPT

Description #

72 points per inch.
# PointType PointType.TRADITIONAL #
PointType.TRADITIONAL #

  int TRADITIONAL

Description #

72.27 points per inch.
# PolarConversionType PolarConversionType.POLARTORECTANGULAR #
PolarConversionType.POLARTORECTANGULAR #

  int POLARTORECTANGULAR

Description #

The selection is converted from its polar to rectangular coordinates.
# PolarConversionType PolarConversionType.RECTANGULARTOPOLAR #
PolarConversionType.RECTANGULARTOPOLAR #

  int RECTANGULARTOPOLAR

Description #

The selection is converted from its rectangular to polar coordinates.
# Preferences Preferences.additionalPluginFolder #
Preferences.additionalPluginFolder #

  File additionalPluginFolder

Description #

The path to the additional plug-in folder. Valid only when ‘use
additional plugin folder’ = true.
# Preferences Preferences.appendExtension #
Preferences.appendExtension #

  SaveBehavior appendExtension

Description #

Save files with extensions on Windows.
# Preferences Preferences.askBeforeSavingLayeredTIFF #
Preferences.askBeforeSavingLayeredTIFF #

  bool askBeforeSavingLayeredTIFF

Description #

If true, asks the user to verify layer preservation options when saving
a file in TIFF format.
# Preferences Preferences.autoUpdateOpenDocuments #
Preferences.autoUpdateOpenDocuments #

  bool autoUpdateOpenDocuments

Description #

If true, automatically updates open documents.
# Preferences Preferences.beepWhenDone #
Preferences.beepWhenDone #

  bool beepWhenDone

Description #

If true, alerts the user when a process finishes.
# Preferences Preferences.colorChannelsInColor #
Preferences.colorChannelsInColor #

  bool colorChannelsInColor

Description #

If true, displays component channels in the Channels palette in color.
# Preferences Preferences.colorPicker #
Preferences.colorPicker #

  ColorPicker colorPicker

Description #

The color picker to use.
# Preferences Preferences.columnGutter #
Preferences.columnGutter #

  Number columnGutter

Description #

The gutter of columns (in points)
# Preferences Preferences.columnWidth #
Preferences.columnWidth #

  Number columnWidth

Description #

The width of columns (in points)
# Preferences Preferences.createFirstSnapshot #
Preferences.createFirstSnapshot #

  bool createFirstSnapshot

Description #

If true, automatically makes the first snapshot when a new document is
created.
# Preferences Preferences.dynamicColorSliders #
Preferences.dynamicColorSliders #

  bool dynamicColorSliders

Description #

If true, dynamic color sliders appear in the Color palette.
# Preferences Preferences.editLogItems #
Preferences.editLogItems #

  EditLogItemsType editLogItems

Description #

Options for edit log items.
# Preferences Preferences.exportClipboard #
Preferences.exportClipboard #

  bool exportClipboard

Description #

If true, retains Adobe Photoshop contents on the clipboard after you
exit the application.
# Preferences Preferences.fontPreviewSize #
Preferences.fontPreviewSize #

  FontPreviewType fontPreviewSize

Description #

Show font previews in the type tool font menus.
# Preferences Preferences.fullSizePreview #
Preferences.fullSizePreview #

  bool fullSizePreview

Description #

If true, shows the image preview as a full size image.
# Preferences Preferences.gamutWarningOpacity #
Preferences.gamutWarningOpacity #

  Number gamutWarningOpacity

Description #

The opacity (as a percentage) of the warning color for out-of-gamut
colors. Range: 0 to 100.
# Preferences Preferences.gridSize #
Preferences.gridSize #

  GridSize gridSize

Description #

The size of grid squares.
# Preferences Preferences.gridStyle #
Preferences.gridStyle #

  GridLineStyle gridStyle

Description #

The formatting style for non-printing grid lines.
# Preferences Preferences.gridSubDivisions #
Preferences.gridSubDivisions #

  int gridSubDivisions

Description #

The value by which to subdivide the grid.
# Preferences Preferences.guideStyle #
Preferences.guideStyle #

  GuideLineStyle guideStyle

Description #

The formatting style for non-printing guide lines.
# Preferences Preferences.iconPreview #
Preferences.iconPreview #

  bool iconPreview

Description #

If true, shows the image preview as a thumbnail.
# Preferences Preferences.imageCacheForHistograms #
Preferences.imageCacheForHistograms #

  bool imageCacheForHistograms

Description #

If true, shows the current image cache used to create the histogram.
# Preferences Preferences.imageCacheLevels #
Preferences.imageCacheLevels #

  int imageCacheLevels

Description #

The number of images to hold in the cache. Range: 1 to 8.
# Preferences Preferences.imagePreviews #
Preferences.imagePreviews #

  SaveBehavior imagePreviews

Description #

The behavior mode to use when saving files.
# Preferences Preferences.interpolation #
Preferences.interpolation #

  ResampleMethod interpolation

Description #

The method to use to assign color values to any new pixels created when
an image is resampled or resized.
# Preferences Preferences.keyboardZoomResizesWindows #
Preferences.keyboardZoomResizesWindows #

  bool keyboardZoomResizesWindows

Description #

If true, automatically resizes the window when zooming in or out using
keyboard shortcuts.
# Preferences Preferences.macOSThumbnail #
Preferences.macOSThumbnail #

  bool macOSThumbnail

Description #

If true, creates a thumbnail when saving the image in Mac OS.
# Preferences Preferences.maximizeCompatibility #
Preferences.maximizeCompatibility #

  QueryStateType maximizeCompatibility

Description #

The behavior to use to check whether to maximize compatibility when
opening Adobe Photoshop (PSD) files.
# Preferences Preferences.maxRAMuse #
Preferences.maxRAMuse #

  int maxRAMuse

Description #

Maximum percentage of available RAM used by Photoshop.
# Preferences Preferences.nonLinearHistory #
Preferences.nonLinearHistory #

  bool nonLinearHistory

Description #

If true, allows non-linear history.
# Preferences Preferences.numberOfHistoryStates #
Preferences.numberOfHistoryStates #

  int numberOfHistoryStates

Description #

The number of history states to preserve. Range: 1 to 100.
# Preferences Preferences.otherCursors #
Preferences.otherCursors #

  OtherPaintingCursors otherCursors

Description #

The type of pointer to use.
# Preferences Preferences.paintingCursors #
Preferences.paintingCursors #

  PaintingCursors paintingCursors

Description #

The type of pointer to use.
# Preferences Preferences.parent #
Preferences.parent #

  Object parent

Description #

The object’s container.
# Preferences Preferences.pixelDoubling #
Preferences.pixelDoubling #

  bool pixelDoubling

Description #

If true, halves the resolution or (doubles the size of pixels) to make
previews display more quickly.
# Preferences Preferences.pointSize #
Preferences.pointSize #

  PointType pointSize

Description #

The point/pica size.
# Preferences Preferences.recentFileListLength #
Preferences.recentFileListLength #

  int recentFileListLength

Description #

The number of items in the recent file list. Range: 0 to 30.
# Preferences Preferences.rulerUnits #
Preferences.rulerUnits #

  Units rulerUnits

Description #

The unit that the scripting system uses when receiving and returning
values.
# Preferences Preferences.saveLogItemsFile #
Preferences.saveLogItemsFile #

  File saveLogItemsFile

Description #

File to save the history log.
# Preferences Preferences.saveLogItems #
Preferences.saveLogItems #

  SaveLogItemsType saveLogItems

Description #

Options for saving the history items.
# Preferences Preferences.savePaletteLocations #
Preferences.savePaletteLocations #

  bool savePaletteLocations

Description #

If true, makes new palette locations the default location.
# Preferences Preferences.showAsianTextOptions #
Preferences.showAsianTextOptions #

  bool showAsianTextOptions

Description #

If true, Asian text options are displayed in the Paragraph palette.
# Preferences Preferences.showEnglishFontNames #
Preferences.showEnglishFontNames #

  bool showEnglishFontNames

Description #

If true, Asian font names are listed in English.
# Preferences Preferences.showSliceNumber #
Preferences.showSliceNumber #

  bool showSliceNumber

Description #

If true, displays slice numbers in the document window when using the
Slice tool.
# Preferences Preferences.showToolTips #
Preferences.showToolTips #

  bool showToolTips

Description #

If true, pop-up definitions are displayed on mouseover.
# Preferences Preferences.smartQuotes #
Preferences.smartQuotes #

  bool smartQuotes

Description #

If true, curly quote marks are used.
# Preferences Preferences.textFontSize #
Preferences.textFontSize #

  FontSize textFontSize

Description #

Size of the small font used in panels and dialogs.
# Preferences Preferences.typename #
Preferences.typename #

  String typename

Description #

The class name of the object.
# Preferences Preferences.typeUnits #
Preferences.typeUnits #

  TypeUnits typeUnits

Description #

The unit type-size that the numeric inputs are assumed to represent.
# Preferences Preferences.useAdditionalPluginFolder #
Preferences.useAdditionalPluginFolder #

  bool useAdditionalPluginFolder

Description #

If true, uses an additional folder for compatible plug-ins stored with a
different application.
# Preferences Preferences.useDiffusionDither #
Preferences.useDiffusionDither #

  bool useDiffusionDither

Description #

If true, uses diffusion dither.
# Preferences Preferences.useHistoryLog #
Preferences.useHistoryLog #

  bool useHistoryLog

Description #

Turn on and off the history logging.
# Preferences Preferences.useLowerCaseExtension #
Preferences.useLowerCaseExtension #

  bool useLowerCaseExtension

Description #

If true, the file extension is lowercase.
# Preferences Preferences.useShiftKeyForToolSwitch #
Preferences.useShiftKeyForToolSwitch #

  bool useShiftKeyForToolSwitch

Description #

If true, enables cycling through a set of hidden tools.
# Preferences Preferences.useVideoAlpha #
Preferences.useVideoAlpha #

  bool useVideoAlpha

Description #

If true, enables Adobe Photoshop to send transparency information to
your computer?s video board. (Requires hardware support.)
# Preferences Preferences.windowsThumbnail #
Preferences.windowsThumbnail #

  bool windowsThumbnail

Description #

If true, creates a thumbnail when saving the image in Windows. (Requires
hardware support.)
# PresentationOptions PresentationOptions.autoAdvance #
PresentationOptions.autoAdvance #

  bool autoAdvance

Description #

If true, the presentation auto advances.
# PresentationOptions PresentationOptions.includeFilename #
PresentationOptions.includeFilename #

  bool includeFilename

Description #

If true, includes the file name for the image.
# PresentationOptions PresentationOptions.interval #
PresentationOptions.interval #

  int interval

Description #

The amount of time (in seconds) before auto advancing the view. Valid
only when ‘auto advance’ is true. Range: 1 to 60.
# PresentationOptions PresentationOptions.loop #
PresentationOptions.loop #

  bool loop

Description #

If true, the presentation loops after the last page.
# PresentationOptions PresentationOptions.magnification #
PresentationOptions.magnification #

  MagnificationType magnification

Description #

The magnification type when viewing the image.
# PresentationOptions PresentationOptions.PDFFileOptions #
PresentationOptions.PDFFileOptions #

  PDFSaveOptions PDFFileOptions

Description #

Options for creating the PDF file.
# PresentationOptions PresentationOptions.presentation #
PresentationOptions.presentation #

  bool presentation

Description #

If true, the file type is presentation. If false, the file type is
Multi-Page document.
# PresentationOptions PresentationOptions.transition #
PresentationOptions.transition #

  TransitionType transition

Description #

The image transition type.
# PrintColorHandling PrintColorHandling.PHOTOSHOPMANAGED #
PrintColorHandling.PHOTOSHOPMANAGED #

  int PHOTOSHOPMANAGED

Description #

Photoshop manages color conversions.
# PrintColorHandling PrintColorHandling.PRINTERMANAGED #
PrintColorHandling.PRINTERMANAGED #

  int PRINTERMANAGED

Description #

Printer manages color conversions.
# PrintColorHandling PrintColorHandling.SEPARATIONS #
PrintColorHandling.SEPARATIONS #

  int SEPARATIONS

Description #

Print each channel separately without color conversions.
# PurgeTarget PurgeTarget.ALLCACHES #
PurgeTarget.ALLCACHES #

  int ALLCACHES

Description #

Clears all caches.
# PurgeTarget PurgeTarget.CLIPBOARDCACHE #
PurgeTarget.CLIPBOARDCACHE #

  int CLIPBOARDCACHE

Description #

Clears the clipboard.
# PurgeTarget PurgeTarget.HISTORYCACHES #
PurgeTarget.HISTORYCACHES #

  int HISTORYCACHES

Description #

Deletes all history states from the History palette.
# PurgeTarget PurgeTarget.UNDOCACHES #
PurgeTarget.UNDOCACHES #

  int UNDOCACHES

Description #

Clears the undo cache.
# QueryStateType QueryStateType.ALWAYS #
QueryStateType.ALWAYS #

  int ALWAYS

Description #

Always maximize compatibility.
# QueryStateType QueryStateType.ASK #
QueryStateType.ASK #

  int ASK

Description #

Always ask about maximize compatibility.
# QueryStateType QueryStateType.NEVER #
QueryStateType.NEVER #

  int NEVER

Description #

Never ask about maximize compatibility.
# RadialBlurMethod RadialBlurMethod.SPIN #
RadialBlurMethod.SPIN #

  int SPIN

Description #

Blurs along concentric circular lines at the specified degree of
rotation.
# RadialBlurMethod RadialBlurMethod.ZOOM #
RadialBlurMethod.ZOOM #

  int ZOOM

Description #

Blurs along radial lines, as if zooming into or out of the image.
# RadialBlurQuality RadialBlurQuality.BEST #
RadialBlurQuality.BEST #

  int BEST

Description #

Produces best results.
# RadialBlurQuality RadialBlurQuality.DRAFT #
RadialBlurQuality.DRAFT #

  int DRAFT

Description #

Produces fast but grainy results.
# RadialBlurQuality RadialBlurQuality.GOOD #
RadialBlurQuality.GOOD #

  int GOOD

Description #

Produces good results.
# RasterizeType RasterizeType.ENTIRELAYER #
RasterizeType.ENTIRELAYER #

  int ENTIRELAYER

Description #

Rasterizes all vector data on the layer.
# RasterizeType RasterizeType.FILLCONTENT #
RasterizeType.FILLCONTENT #

  int FILLCONTENT

Description #

Rasterizes the fill of a shape layer, leaving the vector mask.
# RasterizeType RasterizeType.LAYERCLIPPINGPATH #
RasterizeType.LAYERCLIPPINGPATH #

  int LAYERCLIPPINGPATH

Description #

Rasterizes the vector mask of a shape layer, turning it into a layer
mask.
# RasterizeType RasterizeType.LINKEDLAYERS #
RasterizeType.LINKEDLAYERS #

  int LINKEDLAYERS

Description #

Rasterizes the selected layers.
# RasterizeType RasterizeType.SHAPE #
RasterizeType.SHAPE #

  int SHAPE

Description #

Rasterizes a shape layer.
# RasterizeType RasterizeType.TEXTCONTENTS #
RasterizeType.TEXTCONTENTS #

  int TEXTCONTENTS

Description #

Rasterizes the type on a type layer. Doesn’t rasterize any other vector
data on the layer.
# RawFormatOpenOptions RawFormatOpenOptions.bitsPerChannel #
RawFormatOpenOptions.bitsPerChannel #

  int bitsPerChannel

Description #

The number of bits for each channel. Valid values: 8 or 16.
# RawFormatOpenOptions RawFormatOpenOptions.byteOrder #
RawFormatOpenOptions.byteOrder #

  ByteOrderType byteOrder

Description #

The order in which bytes will be read. Valid only when ‘bits per
channel’ = 16.
# RawFormatOpenOptions RawFormatOpenOptions.channelNumber #
RawFormatOpenOptions.channelNumber #

  int channelNumber

Description #

The number of channels in the image. Valid only when ‘bits per channel’
= 16. Range: 1 to 56.
# RawFormatOpenOptions RawFormatOpenOptions.headerSize #
RawFormatOpenOptions.headerSize #

  int headerSize

Description #

The number of bytes of information that will appear in the file before
actual image information begins; that is, the number of zeroes inserted
at the beginning of the file as placeholders. Range: 0 to 1919999.
# RawFormatOpenOptions RawFormatOpenOptions.height #
RawFormatOpenOptions.height #

  int height

Description #

The image height (in pixels)
# RawFormatOpenOptions RawFormatOpenOptions.interleaveChannels #
RawFormatOpenOptions.interleaveChannels #

  bool interleaveChannels

Description #

If true, color values are stored sequentially.
# RawFormatOpenOptions RawFormatOpenOptions.retainHeader #
RawFormatOpenOptions.retainHeader #

  bool retainHeader

Description #

If true, the header is retained when saving.
# RawFormatOpenOptions RawFormatOpenOptions.width #
RawFormatOpenOptions.width #

  int width

Description #

The image width (in pixels)
# RawSaveOptions RawSaveOptions.alphaChannels #
RawSaveOptions.alphaChannels #

  bool alphaChannels

Description #

If true, the alpha channels are saved.
# RawSaveOptions RawSaveOptions.spotColors #
RawSaveOptions.spotColors #

  bool spotColors

Description #

If true, spot colors are saved.
# Rectangle Rectangle.bottom #
Rectangle.bottom #

  Number bottom

Description #

The bottom coordinate.
# Rectangle Rectangle.height #
Rectangle.height #

  Number height

Description #

The height.
# Rectangle Rectangle.left #
Rectangle.left #

  Number left

Description #

The left coordinate.
# Rectangle Rectangle.length #
Rectangle.length #

  Number length

Description #

The array length.
# Rectangle Rectangle.right #
Rectangle.right #

  Number right

Description #

The right coordinate.
# Rectangle Rectangle.top #
Rectangle.top #

  Number top

Description #

The top coordinate.
# Rectangle Rectangle.width #
Rectangle.width #

  Number width

Description #

The width.
# Rectangle Rectangle.x #
Rectangle.x #

  Number x

Description #

The left coordinate.
# Rectangle Rectangle.y #
Rectangle.y #

  Number y

Description #

The top coordinate.
# ReferenceFormType ReferenceFormType.CLASSTYPE #
ReferenceFormType.CLASSTYPE #

  int CLASSTYPE

Description #

Class.
# ReferenceFormType ReferenceFormType.ENUMERATED #
ReferenceFormType.ENUMERATED #

  int ENUMERATED

Description #

Enumerated.
# ReferenceFormType ReferenceFormType.IDENTIFIER #
ReferenceFormType.IDENTIFIER #

  int IDENTIFIER

Description #

Identifier.
# ReferenceFormType ReferenceFormType.INDEX #
ReferenceFormType.INDEX #

  int INDEX

Description #

Index.
# ReferenceFormType ReferenceFormType.NAME #
ReferenceFormType.NAME #

  int NAME

Description #

Name.
# ReferenceFormType ReferenceFormType.OFFSET #
ReferenceFormType.OFFSET #

  int OFFSET

Description #

Offset.
# ReferenceFormType ReferenceFormType.PROPERTY #
ReferenceFormType.PROPERTY #

  int PROPERTY

Description #

Property.
# ResampleMethod ResampleMethod.AUTOMATIC #
ResampleMethod.AUTOMATIC #

  int AUTOMATIC

Description #
# ResampleMethod ResampleMethod.BICUBICAUTOMATIC #
ResampleMethod.BICUBICAUTOMATIC #

  int BICUBICAUTOMATIC

Description #
# ResampleMethod ResampleMethod.BICUBIC #
ResampleMethod.BICUBIC #

  int BICUBIC

Description #

Uses a weighted average to determine pixel color, which usually yields
better results than the simple averageing method of downsampling.

The slowest but most precise method, resulting in the smoothest
gradations.
# ResampleMethod ResampleMethod.BICUBICSHARPER #
ResampleMethod.BICUBICSHARPER #

  int BICUBICSHARPER

Description #

A good method for reducing the size of an image based on Bicubic
interpolation with enhanced sharpening. Maintains the detail in a
resampled image.
# ResampleMethod ResampleMethod.BICUBICSMOOTHER #
ResampleMethod.BICUBICSMOOTHER #

  int BICUBICSMOOTHER

Description #

A good method for enlarging images based on Bicubic interpolation but
designed to produce smoother results.
# ResampleMethod ResampleMethod.BILINEAR #
ResampleMethod.BILINEAR #

  int BILINEAR

Description #

Averages the pixels in a sample area and replaces the entire area with
the average pixel color at the specified resolution. Same as average
downsampling.
# ResampleMethod ResampleMethod.NEARESTNEIGHBOR #
ResampleMethod.NEARESTNEIGHBOR #

  int NEARESTNEIGHBOR

Description #

Chooses a pixel in the center of the sample area and replaces the entire
area with that pixel color. Same as subsampling.

Significantly reduces the conversion time compared with downsampling but
results in images that are less smooth and continuous.
# ResampleMethod ResampleMethod.NONE #
ResampleMethod.NONE #

  int NONE

Description #

Does not resample.
# ResampleMethod ResampleMethod.PRESERVEDETAILS #
ResampleMethod.PRESERVEDETAILS #

  int PRESERVEDETAILS

Description #
# ResetTarget ResetTarget.ALLTOOLS #
ResetTarget.ALLTOOLS #

  int ALLTOOLS

Description #

Tools.
# ResetTarget ResetTarget.ALLWARNINGS #
ResetTarget.ALLWARNINGS #

  int ALLWARNINGS

Description #

Warning dialogs.
# ResetTarget ResetTarget.EVERYTHING #
ResetTarget.EVERYTHING #

  int EVERYTHING

Description #

All targets.
# RGBColor RGBColor.blue #
RGBColor.blue #

  Number blue

Description #

The blue color value. Range: 0.0 to 255.0.
# RGBColor RGBColor.green #
RGBColor.green #

  Number green

Description #

The green color value. Range: 0.0 to 255.0.
# RGBColor RGBColor.hexValue #
RGBColor.hexValue #

  String hexValue

Description #

The hex representation of this color.
# RGBColor RGBColor.red #
RGBColor.red #

  Number red

Description #

The red color value. Range: 0.0 to 255.0.
# RippleSize RippleSize.LARGE #
RippleSize.LARGE #

  int LARGE

Description #

Large.
# RippleSize RippleSize.MEDIUM #
RippleSize.MEDIUM #

  int MEDIUM

Description #

Medium.
# RippleSize RippleSize.SMALL #
RippleSize.SMALL #

  int SMALL

Description #

Small.
# SaveBehavior SaveBehavior.ALWAYSSAVE #
SaveBehavior.ALWAYSSAVE #

  int ALWAYSSAVE

Description #

Always save the item with the file.
# SaveBehavior SaveBehavior.ASKWHENSAVING #
SaveBehavior.ASKWHENSAVING #

  int ASKWHENSAVING

Description #

Prompt the user whether to save the item with the file.
# SaveBehavior SaveBehavior.NEVERSAVE #
SaveBehavior.NEVERSAVE #

  int NEVERSAVE

Description #

Never save the item with the file.
# SaveDocumentType SaveDocumentType.ALIASPIX #
SaveDocumentType.ALIASPIX #

  int ALIASPIX

Description #

Alias PIX format.
# SaveDocumentType SaveDocumentType.BMP #
SaveDocumentType.BMP #

  int BMP

Description #

BMP format.
# SaveDocumentType SaveDocumentType.COMPUSERVEGIF #
SaveDocumentType.COMPUSERVEGIF #

  int COMPUSERVEGIF

Description #

CompuServe GIF format.
# SaveDocumentType SaveDocumentType.ELECTRICIMAGE #
SaveDocumentType.ELECTRICIMAGE #

  int ELECTRICIMAGE

Description #

Electric format.
# SaveDocumentType SaveDocumentType.JPEG #
SaveDocumentType.JPEG #

  int JPEG

Description #

JPEG format.
# SaveDocumentType SaveDocumentType.PCX #
SaveDocumentType.PCX #

  int PCX

Description #

PCX format.
# SaveDocumentType SaveDocumentType.PHOTOSHOPDCS_1 #
SaveDocumentType.PHOTOSHOPDCS_1 #

  int PHOTOSHOPDCS_1

Description #

Photoshop DCS 1.0 format.
# SaveDocumentType SaveDocumentType.PHOTOSHOPDCS_2 #
SaveDocumentType.PHOTOSHOPDCS_2 #

  int PHOTOSHOPDCS_2

Description #

Photoshop DCS 2.0 format.
# SaveDocumentType SaveDocumentType.PHOTOSHOPEPS #
SaveDocumentType.PHOTOSHOPEPS #

  int PHOTOSHOPEPS

Description #

EPS document produced by Photoshop.
# SaveDocumentType SaveDocumentType.PHOTOSHOP #
SaveDocumentType.PHOTOSHOP #

  int PHOTOSHOP

Description #

Photoshop format.
# SaveDocumentType SaveDocumentType.PHOTOSHOPPDF #
SaveDocumentType.PHOTOSHOPPDF #

  int PHOTOSHOPPDF

Description #

PDF document produced by Photoshop.
# SaveDocumentType SaveDocumentType.PICTFileFORMAT #
SaveDocumentType.PICTFileFORMAT #

  int PICTFileFORMAT

Description #

PICT file format.
# SaveDocumentType SaveDocumentType.PICTRESOURCEFORMAT #
SaveDocumentType.PICTRESOURCEFORMAT #

  int PICTRESOURCEFORMAT

Description #

PICT resource format.
# SaveDocumentType SaveDocumentType.PIXAR #
SaveDocumentType.PIXAR #

  int PIXAR

Description #

Pixar format.
# SaveDocumentType SaveDocumentType.PNG #
SaveDocumentType.PNG #

  int PNG

Description #

PNG format.
# SaveDocumentType SaveDocumentType.PORTABLEBITMAP #
SaveDocumentType.PORTABLEBITMAP #

  int PORTABLEBITMAP

Description #

Portable Bitmap format.
# SaveDocumentType SaveDocumentType.RAW #
SaveDocumentType.RAW #

  int RAW

Description #

Raw format.
# SaveDocumentType SaveDocumentType.SCITEXCT #
SaveDocumentType.SCITEXCT #

  int SCITEXCT

Description #

Scitex CT format.
# SaveDocumentType SaveDocumentType.SGIRGB #
SaveDocumentType.SGIRGB #

  int SGIRGB

Description #

SGI RGB format.
# SaveDocumentType SaveDocumentType.SOFTIMAGE #
SaveDocumentType.SOFTIMAGE #

  int SOFTIMAGE

Description #

SoftImage format.
# SaveDocumentType SaveDocumentType.TARGA #
SaveDocumentType.TARGA #

  int TARGA

Description #

Targa format.
# SaveDocumentType SaveDocumentType.TIFF #
SaveDocumentType.TIFF #

  int TIFF

Description #

TIFF format.
# SaveDocumentType SaveDocumentType.WAVEFRONTRLA #
SaveDocumentType.WAVEFRONTRLA #

  int WAVEFRONTRLA

Description #

Wavefront RLA format.
# SaveDocumentType SaveDocumentType.WIRELESSBITMAP #
SaveDocumentType.WIRELESSBITMAP #

  int WIRELESSBITMAP

Description #

Wireless Bitmap format (WBMP)
# SaveEncoding SaveEncoding.ASCII #
SaveEncoding.ASCII #

  int ASCII

Description #

ASCII.
# SaveEncoding SaveEncoding.BINARY #
SaveEncoding.BINARY #

  int BINARY

Description #

Binary.
# SaveEncoding SaveEncoding.JPEGHIGH #
SaveEncoding.JPEGHIGH #

  int JPEGHIGH

Description #

High quality JPEG encoding.
# SaveEncoding SaveEncoding.JPEGLOW #
SaveEncoding.JPEGLOW #

  int JPEGLOW

Description #

Low quality JPEG encoding (high amount of compression).
# SaveEncoding SaveEncoding.JPEGMAXIMUM #
SaveEncoding.JPEGMAXIMUM #

  int JPEGMAXIMUM

Description #

Maximum quality JPEG encoding (very little compression).
# SaveEncoding SaveEncoding.JPEGMEDIUM #
SaveEncoding.JPEGMEDIUM #

  int JPEGMEDIUM

Description #

Medium quality JPEG encoding (medium compression).
# SaveLogItemsType SaveLogItemsType.LOGFILEANDMETADATA #
SaveLogItemsType.LOGFILEANDMETADATA #

  int LOGFILEANDMETADATA

Description #

Save history log in file metadata and a text file.
# SaveLogItemsType SaveLogItemsType.LOGFILE #
SaveLogItemsType.LOGFILE #

  int LOGFILE

Description #

Save history log in a text file.
# SaveLogItemsType SaveLogItemsType.METADATA #
SaveLogItemsType.METADATA #

  int METADATA

Description #

Save history log in file metadata.
# SaveOptions SaveOptions.DONOTSAVECHANGES #
SaveOptions.DONOTSAVECHANGES #

  int DONOTSAVECHANGES

Description #

Do not save changes.
# SaveOptions SaveOptions.PROMPTTOSAVECHANGES #
SaveOptions.PROMPTTOSAVECHANGES #

  int PROMPTTOSAVECHANGES

Description #

Ask the user whether to save.
# SaveOptions SaveOptions.SAVECHANGES #
SaveOptions.SAVECHANGES #

  int SAVECHANGES

Description #

Save changes.
# SaveOptionsType SaveOptionsType.DONOTSAVECHANGES #
SaveOptionsType.DONOTSAVECHANGES #

  int DONOTSAVECHANGES

Description #

Do not save changes.
# SaveOptionsType SaveOptionsType.PROMPTTOSAVECHANGES #
SaveOptionsType.PROMPTTOSAVECHANGES #

  int PROMPTTOSAVECHANGES

Description #

Ask the user whether to save.
# SaveOptionsType SaveOptionsType.SAVECHANGES #
SaveOptionsType.SAVECHANGES #

  int SAVECHANGES

Description #

Save changes.
# Selection Selection.bounds #
Selection.bounds #

  UnitRect bounds

Description #

The bounding rectangle of the entire selection.
# Selection Selection.clear #
Selection.clear #

  void clear ()

Description #

Clears the selection and does not copy it to the clipboard.
# Selection Selection.contract #
Selection.contract #

  void contract ( UnitValue by )

Parameters #

  ------------ ----------------------------------------------------------
  by           The amount to contract the selection.

  ------------ ----------------------------------------------------------

Description #

Contracts the selection.
# Selection Selection.copy #
Selection.copy #

  void copy (bool merge )

Parameters #

  ------- ---------------------------------------------------------------
  merge   If true the copy includes all visible layers. If false, copies
          only from the current layer.

  ------- ---------------------------------------------------------------

Description #

Copies the selection to the clipboard.
# Selection Selection.cut #
Selection.cut #

  void cut ()

Description #

Cuts the current selection to the clipboard.
# Selection Selection.deselect #
Selection.deselect #

  void deselect ()

Description #

Deselects the current selection.
# Selection Selection.expand #
Selection.expand #

  void expand ( UnitValue by )

Parameters #

  ------------ ----------------------------------------------------------
  by           The amount to expand the selection.

  ------------ ----------------------------------------------------------

Description #

Expands the selection.
# Selection Selection.feather #
Selection.feather #

  void feather ( UnitValue by )

Parameters #

  -------------- --------------------------------------------------------
  by             The amount to feather the edge.

  -------------- --------------------------------------------------------

Description #

Feathers the edges of the selection.
# Selection Selection.fill #
Selection.fill #

  void fill (any fillType , ColorBlendMode mode , int opacity , bool
  preserveTransparency )

Parameters #

  ---------------------- ------------------------------------------------
  fillType               The color or history state with which to fill
                         the object.

  mode                   The color blend mode.

  opacity                The opacity as a percentage. Range: 1 to 100.

  preserveTransparency   If true, perserves transparencies.
  ---------------------- ------------------------------------------------

Description #

Fills the selection.
# Selection Selection.grow #
Selection.grow #

  void grow (int tolerance , bool antiAlias )

Parameters #

  ------------------- ---------------------------------------------------
  tolerance           The tolerance range. Range: 0 to 255.

  antiAlias           If true, anti-aliasing is used.
  ------------------- ---------------------------------------------------

Description #

Grows the selection to include all adjacent pixels falling within the
specified tolerance range.
# Selection Selection.invert #
Selection.invert #

  void invert ()

Description #

Inverts the selection.
# Selection Selection.load #
Selection.load #

  void load ( Channel from , SelectionType combination , bool inverting
  )

Parameters #

  -------------- --------------------------------------------------------
  from           The channel to load the selection from.

  combination    How to combine the channel contents with the existing
                 selection.

  inverting      If true, selects the inverse of the channel contents.
  -------------- --------------------------------------------------------

Description #

Loads the selection from the specified channel.
# Selection Selection.makeWorkPath #
Selection.makeWorkPath #

  void makeWorkPath ( Number tolerance )

Parameters #

  -------------------------- --------------------------------------------
  tolerance                  The tolerance in pixels.

  -------------------------- --------------------------------------------

Description #

Makes this selection item the workpath for this document.
# Selection Selection.parent #
Selection.parent #

  Object parent

Description #

The object’s container.
# Selection Selection.resizeBoundary #
Selection.resizeBoundary #

  void resizeBoundary ( Number horizontal , Number vertical ,
  AnchorPosition anchor )

Parameters #

  -------------- --------------------------------------------------------
  horizontal     The amount to scale the object horizontally (as a
                 percentage).

  vertical       The amount to scale the object vertically (as a
                 percentage).

  anchor         The point to scale around.
  -------------- --------------------------------------------------------

Description #

Scales the boundary of the selection.
# Selection Selection.resize #
Selection.resize #

  void resize ( Number horizontal , Number vertical , AnchorPosition
  anchor )

Parameters #

  ------------- ---------------------------------------------------------
  horizontal    The amount to scale the selection horizontally (as a
                percentage).

  vertical      The amount to scale the selection vertically (as a
                percentage).

  anchor        The point to scale around.
  ------------- ---------------------------------------------------------

Description #

Resizes the selected area to the specified dimensions and anchor
position.
# Selection Selection.rotateBoundary #
Selection.rotateBoundary #

  void rotateBoundary ( Number angle , AnchorPosition anchor )

Parameters #

  ------------------- ---------------------------------------------------
  angle               The rotation angle (in degrees)

  anchor              The point to rotate about.
  ------------------- ---------------------------------------------------

Description #

Rotates the boundary of the selection.
# Selection Selection.rotate #
Selection.rotate #

  void rotate ( Number angle , AnchorPosition anchor )

Parameters #

  -------------- --------------------------------------------------------
  angle          The number of degrees to rotate the object.

  anchor         The point to rotate about.
  -------------- --------------------------------------------------------

Description #

Rotates the object.
# Selection Selection.selectAll #
Selection.selectAll #

  void selectAll ()

Description #

Selects the entire layer.
# Selection Selection.selectBorder #
Selection.selectBorder #

  void selectBorder ( UnitValue width )

Parameters #

  ---------------- ------------------------------------------------------
  width            The width of the border selection.

  ---------------- ------------------------------------------------------

Description #

Selects the selection border only (in the specified width); subsequent
actions do not affect the selected area within the borders.
# Selection Selection.select #
Selection.select #

  void select (any region , SelectionType type , Number feather , bool
  antiAlias )

Parameters #

  ----------- ---------------------------------------------------------------
  region      Array of x and y coordinates that describe the corners of the
              selection, in the format [[x1, y1], [x2,y2],[x3, y3], [x4,y4]]

  type        The method for combining the new selection with the existing
              selection.

  feather     The feather amount.

  antiAlias   If true, anti-aliasing is used.
  ----------- ---------------------------------------------------------------

Description #

Selects the specified region.
# Selection Selection.similar #
Selection.similar #

  void similar (int tolerance , bool antiAlias )

Parameters #

  ------------------- ---------------------------------------------------
  tolerance           The tolerance range. Range: 0 to 255.

  antiAlias           If true, anti-aliasing is used.
  ------------------- ---------------------------------------------------

Description #

Grows the selection to include pixels throughout the image falling
within the tolerance range.
# Selection Selection.smooth #
Selection.smooth #

  void smooth (int radius )

Parameters #

  -------------- --------------------------------------------------------
  radius         The sample radius in pixels. Range: 0 to 100.

  -------------- --------------------------------------------------------

Description #

Cleans up stray pixels left inside or outside a color-based selection
(within the radius specified in pixels).
# Selection Selection.solid #
Selection.solid #

  bool solid

Description #

If true, the bounding rectangle a solid rectangle.
# Selection Selection.store #
Selection.store #

  void store ( Channel into , SelectionType combination )

Parameters #

  -------------- --------------------------------------------------------
  into           The channel to save the selection to.

  combination    How to add the selection to the existing contents of the
                 channel.
  -------------- --------------------------------------------------------

Description #

Saves the selection as a channel.
# Selection Selection.stroke #
Selection.stroke #

  void stroke (any strokeColor , int width , StrokeLocation location ,
  ColorBlendMode mode , int opacity , bool preserveTransparency )

Parameters #

  ---------------------- ---------------------------------------------------
  strokeColor            The color to stroke the selection with.

  width                  The stroke width.

  location               The stroke location.

  mode                   The color blend mode.

  opacity                The opacity of the stroke color as a percentage.
                         Range: 1 to 100.

  preserveTransparency   If true, preserves transparency.
  ---------------------- ---------------------------------------------------

Description #

Strokes the selection.
# Selection Selection.translateBoundary #
Selection.translateBoundary #

  void translateBoundary ( UnitValue deltaX , UnitValue deltaY )

Parameters #

  -------------- --------------------------------------------------------
  deltaX         The amount to move the object horizontally.

  deltaY         The amount to move the object vertically.
  -------------- --------------------------------------------------------

Description #

Moves the boundary of selection relative to its current position.
# Selection Selection.translate #
Selection.translate #

  void translate ( UnitValue deltaX , UnitValue deltaY )

Parameters #

  -------------- --------------------------------------------------------
  deltaX         The amount to move the object horizontally.

  deltaY         The amount to move the object vertically.
  -------------- --------------------------------------------------------

Description #

Moves the object relative to its current position.
# SelectionType SelectionType.DIMINISH #
SelectionType.DIMINISH #

  int DIMINISH

Description #

Remove the selection from the already selected area.
# SelectionType SelectionType.EXTEND #
SelectionType.EXTEND #

  int EXTEND

Description #

Add the selection to an already selected area.
# SelectionType SelectionType.INTERSECT #
SelectionType.INTERSECT #

  int INTERSECT

Description #

Make the selection only the area where the new selection intersects the
already selected area.
# Selection Selection.typename #
Selection.typename #

  String typename

Description #

The class name of the object.
# SelectionType SelectionType.REPLACE #
SelectionType.REPLACE #

  int REPLACE

Description #

Replace the selected area.
# SGIRGBSaveOptions SGIRGBSaveOptions.alphaChannels #
SGIRGBSaveOptions.alphaChannels #

  bool alphaChannels

Description #

If true, the alpha channels are saved.
# SGIRGBSaveOptions SGIRGBSaveOptions.spotColors #
SGIRGBSaveOptions.spotColors #

  bool spotColors

Description #

If true, the spot colors are saved.
# ShapeOperation ShapeOperation.SHAPEADD #
ShapeOperation.SHAPEADD #

  int SHAPEADD

Description #

Adds the shapes.
# ShapeOperation ShapeOperation.SHAPEINTERSECT #
ShapeOperation.SHAPEINTERSECT #

  int SHAPEINTERSECT

Description #

The resulting shape is the area of intersection between the two shapes.
# ShapeOperation ShapeOperation.SHAPESUBTRACT #
ShapeOperation.SHAPESUBTRACT #

  int SHAPESUBTRACT

Description #

Subtracts the loaded shape from the selection is the destination image.
# ShapeOperation ShapeOperation.SHAPEXOR #
ShapeOperation.SHAPEXOR #

  int SHAPEXOR

Description #

Replaces the shape in the destination image with the loaded selection.
# SmartBlurMode SmartBlurMode.EDGEONLY #
SmartBlurMode.EDGEONLY #

  int EDGEONLY

Description #

Blur is applied only to edges of color transitions.

Where significant contrast occurs, applies black-and-white edges.
# SmartBlurMode SmartBlurMode.NORMAL #
SmartBlurMode.NORMAL #

  int NORMAL

Description #

Blur is applied to entire image.
# SmartBlurMode SmartBlurMode.OVERLAYEDGE #
SmartBlurMode.OVERLAYEDGE #

  int OVERLAYEDGE

Description #

Blur is applied only to edges of color transitions.

Where significant contrast occurs, applies white edges.
# SmartBlurQuality SmartBlurQuality.HIGH #
SmartBlurQuality.HIGH #

  int HIGH

Description #

High quality.
# SmartBlurQuality SmartBlurQuality.LOW #
SmartBlurQuality.LOW #

  int LOW

Description #

Low quality.
# SmartBlurQuality SmartBlurQuality.MEDIUM #
SmartBlurQuality.MEDIUM #

  int MEDIUM

Description #

Medium quality.
# SolidColor SolidColor.cmyk #
SolidColor.cmyk #

  CMYKColor cmyk

Description #

The CMYK color model.
# SolidColor SolidColor.gray #
SolidColor.gray #

  GrayColor gray

Description #

The grayscale color model.
# SolidColor SolidColor.hsb #
SolidColor.hsb #

  HSBColor hsb

Description #

The HSB color model.
# SolidColor SolidColor.isEqual #
SolidColor.isEqual #

  bool isEqual ( SolidColor color )

Parameters #

  ------------------ ----------------------------------------------------
  color              Another color to compare with.

  ------------------ ----------------------------------------------------

Description #

Compares two colors.
# SolidColor SolidColor.lab #
SolidColor.lab #

  LabColor lab

Description #

The lab color model.
# SolidColor SolidColor.model #
SolidColor.model #

  ColorModel model

Description #

The color model.
# SolidColor SolidColor.nearestWebColor #
SolidColor.nearestWebColor #

  RGBColor nearestWebColor

Description #

The nearest web color to the current color.
# SolidColor SolidColor.rgb #
SolidColor.rgb #

  RGBColor rgb

Description #

The RGB color model.
# SourceSpaceType SourceSpaceType.DOCUMENT #
SourceSpaceType.DOCUMENT #

  int DOCUMENT

Description #

The document color space.
# SourceSpaceType SourceSpaceType.PROOF #
SourceSpaceType.PROOF #

  int PROOF

Description #

The proof color space.
# SpherizeMode SpherizeMode.HORIZONTAL #
SpherizeMode.HORIZONTAL #

  int HORIZONTAL

Description #

Distorts the image as if it is wrapped around a horizontal cylinder.
# SpherizeMode SpherizeMode.NORMAL #
SpherizeMode.NORMAL #

  int NORMAL

Description #

Distorts the image as if it is wrapped around a sphere.
# SpherizeMode SpherizeMode.VERTICAL #
SpherizeMode.VERTICAL #

  int VERTICAL

Description #

Distorts the image as if it is wrapped around a vertical cylinder.
# StrikeThruType StrikeThruType.STRIKEBOX #
StrikeThruType.STRIKEBOX #

  int STRIKEBOX

Description #

(For vertical type) The strikethrough is through the em box.
# StrikeThruType StrikeThruType.STRIKEHEIGHT #
StrikeThruType.STRIKEHEIGHT #

  int STRIKEHEIGHT

Description #

(For vertical type) The strikethrough is through the height of the text.
# StrikeThruType StrikeThruType.STRIKEOFF #
StrikeThruType.STRIKEOFF #

  int STRIKEOFF

Description #

No strikethrough.
# StrokeLocation StrokeLocation.CENTER #
StrokeLocation.CENTER #

  int CENTER

Description #

The border is placed in the center of the the selection or layer
boundaries.
# StrokeLocation StrokeLocation.INSIDE #
StrokeLocation.INSIDE #

  int INSIDE

Description #

The border is placed inside the selection or layer boundaries.
# StrokeLocation StrokeLocation.OUTSIDE #
StrokeLocation.OUTSIDE #

  int OUTSIDE

Description #

The border is placed outside the selection or layer boundaries.
# SubPathInfo SubPathInfo.closed #
SubPathInfo.closed #

  bool closed

Description #

If true, the path is closed.
# SubPathInfo SubPathInfo.entireSubPath #
SubPathInfo.entireSubPath #

  PathPointInfo entireSubPath

Description #

All of the sub path item’s path points.
# SubPathInfo SubPathInfo.operation #
SubPathInfo.operation #

  ShapeOperation operation

Description #

The sub path operation on other sub paths.
# SubPathItem SubPathItem.closed #
SubPathItem.closed #

  bool closed

Description #

If true, the path is closed.
# SubPathItem SubPathItem.operation #
SubPathItem.operation #

  ShapeOperation operation

Description #

The sub path operation on other sub paths.
# SubPathItem SubPathItem.parent #
SubPathItem.parent #

  Object parent

Description #

The object’s container.
# SubPathItem SubPathItem.pathPoints #
SubPathItem.pathPoints #

  PathPoints pathPoints

Description #

The path points collection in the sub path.
# SubPathItems SubPathItems.getByName #
SubPathItems.getByName #

  SubPathItem getByName ( String name )

Parameters #

  ---------------------------------------------------------- ------------
  name                                                       

  ---------------------------------------------------------- ------------

Description #

Get the first element in the collection with the provided name.
# SubPathItems SubPathItems.[] #
SubPathItems.[] #

  SubPathItem [] (uint index )

Parameters #

  ------------------------------------------------------------ ----------
  index                                                        

  ------------------------------------------------------------ ----------

Description #

Get an element in the collection with the provided index.
# SubPathItems SubPathItems.length #
SubPathItems.length #

  int length

Description #

Number of elements in the collection.
# SubPathItems SubPathItems.parent #
SubPathItems.parent #

  Object parent

Description #

The object’s container.
# SubPathItems SubPathItems.typename #
SubPathItems.typename #

  String typename

Description #

The class name of the object.
# SubPathItem SubPathItem.typename #
SubPathItem.typename #

  String typename

Description #

The class name of the object.
# TargaBitsPerPixels TargaBitsPerPixels.SIXTEEN #
TargaBitsPerPixels.SIXTEEN #

  int SIXTEEN

Description #

16 bits per pixel.
# TargaBitsPerPixels TargaBitsPerPixels.THIRTYTWO #
TargaBitsPerPixels.THIRTYTWO #

  int THIRTYTWO

Description #

32 bits per pixel.
# TargaBitsPerPixels TargaBitsPerPixels.TWENTYFOUR #
TargaBitsPerPixels.TWENTYFOUR #

  int TWENTYFOUR

Description #

24 bits per pixel.
# TargaSaveOptions TargaSaveOptions.alphaChannels #
TargaSaveOptions.alphaChannels #

  bool alphaChannels

Description #

If true, the alpha channels are saved.
# TargaSaveOptions TargaSaveOptions.resolution #
TargaSaveOptions.resolution #

  TargaBitsPerPixels resolution

Description #

The number of bits per pixel.
# TargaSaveOptions TargaSaveOptions.rleCompression #
TargaSaveOptions.rleCompression #

  bool rleCompression

Description #

If true, RLE compression is used.
# TextComposer TextComposer.ADOBEEVERYLINE #
TextComposer.ADOBEEVERYLINE #

  int ADOBEEVERYLINE

Description #

Considers a network of break points for a range of lines and thus
optimizes earlier lines in the paragraph to eliminate especially
unattractive breaks later on. Results in more even spacing and fewer
hyphens.

The Adobe Every-line composer approaches composition by identifying
possible breakpoints, evaluating them, and assigning a weighted penalty
based on these principles: Highest importance is given to evenness of
letter and word spacing; Possible breakpoints are evaluated and
penalized according to how much they deviate from optimal spacing;
Hyphenation is avoided when possible; Breakpoints that require
hyphenation are penalized more than those that create uneven spacing;
Good breakpoints are preferred over bad breakpoints.
# TextComposer TextComposer.ADOBESINGLELINE #
TextComposer.ADOBESINGLELINE #

  int ADOBESINGLELINE

Description #

Offers a traditional approach to composing type one line at a time.
Useful if you prefer to have manual control over how lines break.

Uses the following principles when considering a breakpoint: Compressed
or expanded word spacing is preferable to hyphenation; Hyphenation is
preferable to compressed or expanded letter spacing; If spacing must be
adjusted, compression is better than expansion.
# TextFont TextFont.family #
TextFont.family #

  String family

Description #

The font family.
# TextFont TextFont.name #
TextFont.name #

  String name

Description #

The font name.
# TextFont TextFont.parent #
TextFont.parent #

  Object parent

Description #

The object’s container.
# TextFont TextFont.postScriptName #
TextFont.postScriptName #

  String postScriptName

Description #

The PostScript name of the font.
# TextFonts TextFonts.getByName #
TextFonts.getByName #

  TextFont getByName ( String name )

Parameters #

  ---------------------------------------------------------- ------------
  name                                                       

  ---------------------------------------------------------- ------------

Description #

Get the first element in the collection with the provided name.
# TextFonts TextFonts.[] #
TextFonts.[] #

  TextFont [] (uint index )

Parameters #

  ------------------------------------------------------------ ----------
  index                                                        

  ------------------------------------------------------------ ----------

Description #

Get an element in the collection with the provided index.
# TextFonts TextFonts.length #
TextFonts.length #

  int length

Description #

Number of elements in the collection.
# TextFonts TextFonts.parent #
TextFonts.parent #

  Object parent

Description #

The object’s container.
# TextFont TextFont.style #
TextFont.style #

  String style

Description #

The font style.
# TextFonts TextFonts.typename #
TextFonts.typename #

  String typename

Description #

The class name of the object.
# TextFont TextFont.typename #
TextFont.typename #

  String typename

Description #

The class name of the object.
# TextItem TextItem.alternateLigatures #
TextItem.alternateLigatures #

  bool alternateLigatures

Description #

If true, alternate ligatures are used.
# TextItem TextItem.antiAliasMethod #
TextItem.antiAliasMethod #

  AntiAlias antiAliasMethod

Description #

The method of anti-aliasing to use.
# TextItem TextItem.autoKerning #
TextItem.autoKerning #

  AutoKernType autoKerning

Description #

Options for auto kerning.
# TextItem TextItem.autoLeadingAmount #
TextItem.autoLeadingAmount #

  Number autoLeadingAmount

Description #

The percentage to use for auto leading. Range: 0.01 to 5000.00.
# TextItem TextItem.baselineShift #
TextItem.baselineShift #

  UnitValue baselineShift

Description #

The amount of baseline offset of text.
# TextItem TextItem.capitalization #
TextItem.capitalization #

  Case capitalization

Description #

The case of the text.
# TextItem TextItem.color #
TextItem.color #

  SolidColor color

Description #

The text color.
# TextItem TextItem.contents #
TextItem.contents #

  String contents

Description #

The actual text in the layer.
# TextItem TextItem.convertToShape #
TextItem.convertToShape #

  void convertToShape ()

Description #

Converts the text object and its containing layer to a fill layer with
the text changed to a clipping path.
# TextItem TextItem.createPath #
TextItem.createPath #

  void createPath ()

Description #

Creates a clipping path from the outlines of the actual text items (such
as letters or words).
# TextItem TextItem.desiredGlyphScaling #
TextItem.desiredGlyphScaling #

  Number desiredGlyphScaling

Description #

The desired amount (as a percentage) to scale the horizontal size of the
text letters. Range: 50 - 200; at 100, the width of characters is not
scaled. Valid only for justified text.
# TextItem TextItem.desiredLetterScaling #
TextItem.desiredLetterScaling #

  Number desiredLetterScaling

Description #

The amount of space (as a percentage) between letters. Range: 100 - 500;
at 0, no space is added between letters. Valid only for justified text.
# TextItem TextItem.desiredWordScaling #
TextItem.desiredWordScaling #

  Number desiredWordScaling

Description #

The amount (as a percentage) of space between words. Range: 0 -1000; at
100, no additional space is added between words. Valid only for
justified text.
# TextItem TextItem.direction #
TextItem.direction #

  Direction direction

Description #

The text orientation.
# TextItem TextItem.fauxBold #
TextItem.fauxBold #

  bool fauxBold

Description #

If true, faux bold is used.
# TextItem TextItem.fauxItalic #
TextItem.fauxItalic #

  bool fauxItalic

Description #

If true, faux italic is used.
# TextItem TextItem.firstLineIndent #
TextItem.firstLineIndent #

  UnitValue firstLineIndent

Description #

The amount to indent the first line of paragraphs. Range: -1296 to 1296.
# TextItem TextItem.font #
TextItem.font #

  String font

Description #

The text face of the character.
# TextItem TextItem.hangingPuntuation #
TextItem.hangingPuntuation #

  bool hangingPuntuation

Description #

If true, uses Roman hanging punctuation.
# TextItem TextItem.height #
TextItem.height #

  UnitValue height

Description #

The height of the bounding box for paragraph text.
# TextItem TextItem.horizontalScale #
TextItem.horizontalScale #

  int horizontalScale

Description #

Character scaling (horizontal) in proportion to horizontal scale. Range:
0 - 1000 as a percentage.
# TextItem TextItem.hyphenateAfterFirst #
TextItem.hyphenateAfterFirst #

  int hyphenateAfterFirst

Description #

The number of letters after which hyphenation in word wrap is allowed.
Range: 1 to 15.
# TextItem TextItem.hyphenateBeforeLast #
TextItem.hyphenateBeforeLast #

  int hyphenateBeforeLast

Description #

The number of letters before which hyphenation in word wrap is allowed.
Range: 1 to 15.
# TextItem TextItem.hyphenateCapitalWords #
TextItem.hyphenateCapitalWords #

  bool hyphenateCapitalWords

Description #

If true, capitalized words can be hyphenated.
# TextItem TextItem.hyphenateWordsLongerThan #
TextItem.hyphenateWordsLongerThan #

  int hyphenateWordsLongerThan

Description #

The minimum number of letters a word must have in order for hyphenation
in word wrap to be allowed. Range: 2 to 25.
# TextItem TextItem.hyphenation #
TextItem.hyphenation #

  bool hyphenation

Description #

If true, hyphenation is used.
# TextItem TextItem.hyphenationZone #
TextItem.hyphenationZone #

  UnitValue hyphenationZone

Description #

The distance at the end of a line that will cause a word to break in
unjustified type. Range: 0 - 720 picas.
# TextItem TextItem.hyphenLimit #
TextItem.hyphenLimit #

  int hyphenLimit

Description #

The maximum number of consecutive lines that can end with a hyphenated
word.
# TextItem TextItem.justification #
TextItem.justification #

  Justification justification

Description #

The paragraph justification.
# TextItem TextItem.kind #
TextItem.kind #

  TextType kind

Description #

The type of text.
# TextItem TextItem.language #
TextItem.language #

  Language language

Description #

The language.
# TextItem TextItem.leading #
TextItem.leading #

  UnitValue leading

Description #

The leading amount.
# TextItem TextItem.leftIndent #
TextItem.leftIndent #

  UnitValue leftIndent

Description #

The amount to indent text from the left. Range: -1296 to 1296.
# TextItem TextItem.ligatures #
TextItem.ligatures #

  bool ligatures

Description #

If true, ligatures are used.
# TextItem TextItem.maximumGlyphScaling #
TextItem.maximumGlyphScaling #

  Number maximumGlyphScaling

Description #

The maximum amount (as a percentage) to scale the horizontal size of the
text letters. Range: 50 - 200; at 100, the width of characters is not
scaled. Valid only for justified text.
# TextItem TextItem.maximumLetterScaling #
TextItem.maximumLetterScaling #

  Number maximumLetterScaling

Description #

The maximum amount (as a percentage) of space between letters. Range:
100 - 500; at 0, no space is added between letters. Valid only for
justified text.
# TextItem TextItem.maximumWordScaling #
TextItem.maximumWordScaling #

  Number maximumWordScaling

Description #

The maximum amount (as a percentage) of space between words (0 -1000; at
100, no additional space is added between words). Valid only for
justified text.
# TextItem TextItem.minimumGlyphScaling #
TextItem.minimumGlyphScaling #

  Number minimumGlyphScaling

Description #

The minimum amount (as a percentage) to scale the horizontal size of the
text letters. Range: 50 - 200; at 100, the width of characters is not
scaled. Valid only for justified text.
# TextItem TextItem.minimumLetterScaling #
TextItem.minimumLetterScaling #

  Number minimumLetterScaling

Description #

The minimum amount of space (as a percentage) between letters. Range:
100 to 500; at 0, no space is added between letters. Valid only for
justified text.
# TextItem TextItem.minimumWordScaling #
TextItem.minimumWordScaling #

  Number minimumWordScaling

Description #

The minimum amount (as a percentage) of space between words. Range: 0
-1000; at 100, no additional space is added between words. Valid only
for justified text.
# TextItem TextItem.noBreak #
TextItem.noBreak #

  bool noBreak

Description #

If true, words are not allowed to break at the end of a line. When
enacted on large amounts of consecutive characters, can prevent word
wrap and thus may prevent some text from appearing on the screen.
# TextItem TextItem.oldStyle #
TextItem.oldStyle #

  bool oldStyle

Description #

If true, old style is used.
# TextItem TextItem.parent #
TextItem.parent #

  Object parent

Description #

The object’s container.
# TextItem TextItem.position #
TextItem.position #

  UnitPoint position

Description #

The position of the origin for the text. The array must contain two
values. Setting this property is basically equivalent to clicking the
text tool at a point in the document to create the point of origin for
text.
# TextItem TextItem.rightIndent #
TextItem.rightIndent #

  UnitValue rightIndent

Description #

The amount to indent text from the right. Range: -1296 to 1296.
# TextItem TextItem.size #
TextItem.size #

  UnitValue size

Description #

The font size in points.
# TextItem TextItem.spaceAfter #
TextItem.spaceAfter #

  UnitValue spaceAfter

Description #

The amount of space after each paragraph. Range: -1296 to 1296.
# TextItem TextItem.spaceBefore #
TextItem.spaceBefore #

  UnitValue spaceBefore

Description #

The amount of space before each paragraph. Range: -1296 to 1296.
# TextItem TextItem.strikeThru #
TextItem.strikeThru #

  StrikeThruType strikeThru

Description #

The strike through option to use.
# TextItem TextItem.textComposer #
TextItem.textComposer #

  TextComposer textComposer

Description #

The text composing engine to use.
# TextItem TextItem.tracking #
TextItem.tracking #

  Number tracking

Description #

The amount of uniform spacing between multiple characters. Range: -1000
to 10000.
# TextItem TextItem.typename #
TextItem.typename #

  String typename

Description #

The class name of the object.
# TextItem TextItem.underline #
TextItem.underline #

  UnderlineType underline

Description #

Options for underlining the text.
# TextItem TextItem.useAutoLeading #
TextItem.useAutoLeading #

  bool useAutoLeading

Description #

If true, uses the font’s built-in leading information.
# TextItem TextItem.verticalScale #
TextItem.verticalScale #

  int verticalScale

Description #

Character scaling (vertical) in proportion to horizontal scale. Range:
0 - 1000 as a percentage.
# TextItem TextItem.warpBend #
TextItem.warpBend #

  Number warpBend

Description #

The warp bend percentage. Range: -100 to 100.
# TextItem TextItem.warpDirection #
TextItem.warpDirection #

  Direction warpDirection

Description #

The warp direction.
# TextItem TextItem.warpHorizontalDistortion #
TextItem.warpHorizontalDistortion #

  Number warpHorizontalDistortion

Description #

The warp horizontal distortion percentage. Range: -100 to 100.
# TextItem TextItem.warpStyle #
TextItem.warpStyle #

  WarpStyle warpStyle

Description #

The style of warp.
# TextItem TextItem.warpVerticalDistortion #
TextItem.warpVerticalDistortion #

  Number warpVerticalDistortion

Description #

The warp vertical distortion percentage. Range: -100 to 100.
# TextItem TextItem.width #
TextItem.width #

  UnitValue width

Description #

The width of the bounding box for paragraph text.
# TextType TextType.PARAGRAPHTEXT #
TextType.PARAGRAPHTEXT #

  int PARAGRAPHTEXT

Description #

Text that wraps within a bounding box.
# TextType TextType.POINTTEXT #
TextType.POINTTEXT #

  int POINTTEXT

Description #

Text that does not wrap.
# TextureType TextureType.BLOCKS #
TextureType.BLOCKS #

  int BLOCKS

Description #

The image appears as if viewed through glass blocks.
# TextureType TextureType.CANVAS #
TextureType.CANVAS #

  int CANVAS

Description #

The image appears as if painted on canvas.
# TextureType TextureType.FILE #
TextureType.FILE #

  int FILE

Description #

Texture from an existing document.
# TextureType TextureType.FROSTED #
TextureType.FROSTED #

  int FROSTED

Description #

The image appears as if frosted.
# TextureType TextureType.TINYLENS #
TextureType.TINYLENS #

  int TINYLENS

Description #

The image appears as if viewed through an array of tiny lenses.
# TiffEncodingType TiffEncodingType.JPEG #
TiffEncodingType.JPEG #

  int JPEG

Description #

JPEG compression, which is lossy and recommended for continuous-tone
images, such as photographs.
# TiffEncodingType TiffEncodingType.NONE #
TiffEncodingType.NONE #

  int NONE

Description #

No compression.
# TiffEncodingType TiffEncodingType.TIFFLZW #
TiffEncodingType.TIFFLZW #

  int TIFFLZW

Description #

LZW compression, which is lossless and most useful for images with large
areas of single color.
# TiffEncodingType TiffEncodingType.TIFFZIP #
TiffEncodingType.TIFFZIP #

  int TIFFZIP

Description #

Zip compression, which is lossless and most effective for images that
contain large areas of single color.
# TiffSaveOptions TiffSaveOptions.alphaChannels #
TiffSaveOptions.alphaChannels #

  bool alphaChannels

Description #

If true, the alpha channels are saved.
# TiffSaveOptions TiffSaveOptions.annotations #
TiffSaveOptions.annotations #

  bool annotations

Description #

If true, the annotations are saved.
# TiffSaveOptions TiffSaveOptions.byteOrder #
TiffSaveOptions.byteOrder #

  ByteOrderType byteOrder

Description #

The order in which the bytes will be read. Default: Mac OS when running
in Mac OS, and IBM PC when running in Windows.
# TiffSaveOptions TiffSaveOptions.embedColorProfile #
TiffSaveOptions.embedColorProfile #

  bool embedColorProfile

Description #

If true, the color profile is embedded in the document.
# TiffSaveOptions TiffSaveOptions.imageCompression #
TiffSaveOptions.imageCompression #

  TiffEncodingType imageCompression

Description #

The compression type.
# TiffSaveOptions TiffSaveOptions.interleaveChannels #
TiffSaveOptions.interleaveChannels #

  bool interleaveChannels

Description #

If true, the channels in the image are interleaved.
# TiffSaveOptions TiffSaveOptions.jpegQuality #
TiffSaveOptions.jpegQuality #

  int jpegQuality

Description #

The quality of the produced image, which is inversely proportionate to
the amount of JPEG compression. Valid only for JPEG compressed TIFF
documents. Range: 0 to 12.
# TiffSaveOptions TiffSaveOptions.layerCompression #
TiffSaveOptions.layerCompression #

  LayerCompressionType layerCompression

Description #

The method of compression to use when saving layers (as opposed to
saving composite data). Valid only when ‘layers’ = true.
# TiffSaveOptions TiffSaveOptions.layers #
TiffSaveOptions.layers #

  bool layers

Description #

If true, the layers are saved.
# TiffSaveOptions TiffSaveOptions.saveImagePyramid #
TiffSaveOptions.saveImagePyramid #

  bool saveImagePyramid

Description #

If true, preserves multi-resolution information.
# TiffSaveOptions TiffSaveOptions.spotColors #
TiffSaveOptions.spotColors #

  bool spotColors

Description #

If true, spot colors are saved.
# TiffSaveOptions TiffSaveOptions.transparency #
TiffSaveOptions.transparency #

  bool transparency

Description #

If true, saves the transparency as an additional alpha channel when the
file is opened in another application.
# ToolType ToolType.ARTHISTORYBRUSH #
ToolType.ARTHISTORYBRUSH #

  int ARTHISTORYBRUSH

Description #

Art history brush.
# ToolType ToolType.BACKGROUNDERASER #
ToolType.BACKGROUNDERASER #

  int BACKGROUNDERASER

Description #

Background eraser.
# ToolType ToolType.BLUR #
ToolType.BLUR #

  int BLUR

Description #

Blur.
# ToolType ToolType.BRUSH #
ToolType.BRUSH #

  int BRUSH

Description #

Brush.
# ToolType ToolType.BURN #
ToolType.BURN #

  int BURN

Description #

Burn.
# ToolType ToolType.CLONESTAMP #
ToolType.CLONESTAMP #

  int CLONESTAMP

Description #

Clone stamp.
# ToolType ToolType.COLORREPLACEMENTTOOL #
ToolType.COLORREPLACEMENTTOOL #

  int COLORREPLACEMENTTOOL

Description #

Color replacement tool.
# ToolType ToolType.DODGE #
ToolType.DODGE #

  int DODGE

Description #

Dodge.
# ToolType ToolType.ERASER #
ToolType.ERASER #

  int ERASER

Description #

Eraser.
# ToolType ToolType.HEALINGBRUSH #
ToolType.HEALINGBRUSH #

  int HEALINGBRUSH

Description #

Healing brush.
# ToolType ToolType.HISTORYBRUSH #
ToolType.HISTORYBRUSH #

  int HISTORYBRUSH

Description #

History brush.
# ToolType ToolType.PATTERNSTAMP #
ToolType.PATTERNSTAMP #

  int PATTERNSTAMP

Description #

Pattern stamp.
# ToolType ToolType.PENCIL #
ToolType.PENCIL #

  int PENCIL

Description #

Pencil.
# ToolType ToolType.SHARPEN #
ToolType.SHARPEN #

  int SHARPEN

Description #

Sharpen.
# ToolType ToolType.SMUDGE #
ToolType.SMUDGE #

  int SMUDGE

Description #

Smudge.
# ToolType ToolType.SPONGE #
ToolType.SPONGE #

  int SPONGE

Description #

Sponge.
# TransitionType TransitionType.BLINDSHORIZONTAL #
TransitionType.BLINDSHORIZONTAL #

  int BLINDSHORIZONTAL

Description #

Images transition in horizontal stripes like Venetian blinds.
# TransitionType TransitionType.BLINDSVERTICAL #
TransitionType.BLINDSVERTICAL #

  int BLINDSVERTICAL

Description #

Images transition in vertical stripes.
# TransitionType TransitionType.BOXIN #
TransitionType.BOXIN #

  int BOXIN

Description #

Images transition using a shrinking box shape.
# TransitionType TransitionType.BOXOUT #
TransitionType.BOXOUT #

  int BOXOUT

Description #

Images transition using an expanding box shape.
# TransitionType TransitionType.DISSOLVE #
TransitionType.DISSOLVE #

  int DISSOLVE

Description #

One image dissolves into the next.
# TransitionType TransitionType.GLITTERDOWN #
TransitionType.GLITTERDOWN #

  int GLITTERDOWN

Description #

Images dissolve top to bottom.
# TransitionType TransitionType.GLITTERRIGHTDOWN #
TransitionType.GLITTERRIGHTDOWN #

  int GLITTERRIGHTDOWN

Description #

Images dissolve top-left to bottom-right.
# TransitionType TransitionType.GLITTERRIGHT #
TransitionType.GLITTERRIGHT #

  int GLITTERRIGHT

Description #

Images dissolve left to right.
# TransitionType TransitionType.NONE #
TransitionType.NONE #

  int NONE

Description #

Images change with no visible transition.
# TransitionType TransitionType.RANDOM #
TransitionType.RANDOM #

  int RANDOM

Description #

Images transition using random effects.
# TransitionType TransitionType.SPLITHORIZONTALIN #
TransitionType.SPLITHORIZONTALIN #

  int SPLITHORIZONTALIN

Description #

The new images roll in from the top and bottom of the screen.
# TransitionType TransitionType.SPLITHORIZONTALOUT #
TransitionType.SPLITHORIZONTALOUT #

  int SPLITHORIZONTALOUT

Description #

The new image spreads from the middle of the screen to the top and
bottom of the screen.
# TransitionType TransitionType.SPLITVERTICALIN #
TransitionType.SPLITVERTICALIN #

  int SPLITVERTICALIN

Description #

The new image rolls in from the left and right edges of the screen.
# TransitionType TransitionType.SPLITVERTICALOUT #
TransitionType.SPLITVERTICALOUT #

  int SPLITVERTICALOUT

Description #

The new image rolls out from the middle of the screen to the left and
right edges of the screen.
# TransitionType TransitionType.WIPEDOWN #
TransitionType.WIPEDOWN #

  int WIPEDOWN

Description #

The new image rolls in from the top of the screen.
# TransitionType TransitionType.WIPELEFT #
TransitionType.WIPELEFT #

  int WIPELEFT

Description #

The new image rolls in from the right side of the screen.
# TransitionType TransitionType.WIPERIGHT #
TransitionType.WIPERIGHT #

  int WIPERIGHT

Description #

The new image rolls in from the left side of the screen.
# TransitionType TransitionType.WIPEUP #
TransitionType.WIPEUP #

  int WIPEUP

Description #

The new image rolls in from the bottom of the screen.
# TrimType TrimType.BOTTOMRIGHT #
TrimType.BOTTOMRIGHT #

  int BOTTOMRIGHT

Description #

Removes from the image an area the color of the lower right pixel.
# TrimType TrimType.TOPLEFT #
TrimType.TOPLEFT #

  int TOPLEFT

Description #

Removes from the image an area the color of the upper left pixel.
# TrimType TrimType.TRANSPARENT #
TrimType.TRANSPARENT #

  int TRANSPARENT

Description #

Trims away transparency at the edges of the image, leaving the smallest
image containing nontransparent pixels.
# TypeUnits TypeUnits.MM #
TypeUnits.MM #

  int MM

Description #

Millimeters.
# TypeUnits TypeUnits.PIXELS #
TypeUnits.PIXELS #

  int PIXELS

Description #

Pixels.
# TypeUnits TypeUnits.POINTS #
TypeUnits.POINTS #

  int POINTS

Description #

Points.
# UndefinedAreas UndefinedAreas.REPEATEDGEPIXELS #
UndefinedAreas.REPEATEDGEPIXELS #

  int REPEATEDGEPIXELS

Description #

Extends the colors of pixels along the edge of the image in the
direction specified. Banding may result if the edge pixels are different
colors.
# UndefinedAreas UndefinedAreas.WRAPAROUND #
UndefinedAreas.WRAPAROUND #

  int WRAPAROUND

Description #

Fills the undefined space with content from the opposite edge of the
image.
# UnderlineType UnderlineType.UNDERLINELEFT #
UnderlineType.UNDERLINELEFT #

  int UNDERLINELEFT

Description #

(For vertical type) The underline is to the left of the text.
# UnderlineType UnderlineType.UNDERLINEOFF #
UnderlineType.UNDERLINEOFF #

  int UNDERLINEOFF

Description #

No underline.
# UnderlineType UnderlineType.UNDERLINERIGHT #
UnderlineType.UNDERLINERIGHT #

  int UNDERLINERIGHT

Description #

(For vertical type) The underline is to the right of the text.
# Units Units.CM #
Units.CM #

  int CM

Description #

Centimeters.
# Units Units.INCHES #
Units.INCHES #

  int INCHES

Description #

Inches.
# Units Units.MM #
Units.MM #

  int MM

Description #

Millimeters.
# Units Units.PERCENT #
Units.PERCENT #

  int PERCENT

Description #

Percent.
# Units Units.PICAS #
Units.PICAS #

  int PICAS

Description #

Picas.
# Units Units.PIXELS #
Units.PIXELS #

  int PIXELS

Description #

Pixels.
# Units Units.POINTS #
Units.POINTS #

  int POINTS

Description #

Points.
# Urgency Urgency.FOUR #
Urgency.FOUR #

  int FOUR

Description #

Level 4 (fourth highest)
# Urgency Urgency.HIGH #
Urgency.HIGH #

  int HIGH

Description #

Highest level of urgency.
# Urgency Urgency.LOW #
Urgency.LOW #

  int LOW

Description #

Low.
# Urgency Urgency.NONE #
Urgency.NONE #

  int NONE

Description #

No urgency.
# Urgency Urgency.NORMAL #
Urgency.NORMAL #

  int NORMAL

Description #

Medium urgency.
# Urgency Urgency.SEVEN #
Urgency.SEVEN #

  int SEVEN

Description #

Level 7 (second lowest)
# Urgency Urgency.SIX #
Urgency.SIX #

  int SIX

Description #

Level 6 (third lowest)
# Urgency Urgency.THREE #
Urgency.THREE #

  int THREE

Description #

Level 3 (third highest)
# Urgency Urgency.TWO #
Urgency.TWO #

  int TWO

Description #

Level 2 (second highest)
# WarpStyle WarpStyle.ARCH #
WarpStyle.ARCH #

  int ARCH

Description #

Text is warped in the form of an arch.
# WarpStyle WarpStyle.ARC #
WarpStyle.ARC #

  int ARC

Description #

The type is warped in the shape of an arc.
# WarpStyle WarpStyle.ARCLOWER #
WarpStyle.ARCLOWER #

  int ARCLOWER

Description #

Warp is heavier on the lower or left edge of the text than on the upper
or right edge.
# WarpStyle WarpStyle.ARCUPPER #
WarpStyle.ARCUPPER #

  int ARCUPPER

Description #

Warp is heavier on the upper or right edge of the text than on the lower
or left edge.
# WarpStyle WarpStyle.BULGE #
WarpStyle.BULGE #

  int BULGE

Description #

Text is warped outward on both the upper and lower or right and left
edges.
# WarpStyle WarpStyle.FISHEYE #
WarpStyle.FISHEYE #

  int FISHEYE

Description #

Text bulges in the middle and is squeezed on the edges as if viewed
through a fisheye lens.
# WarpStyle WarpStyle.FISH #
WarpStyle.FISH #

  int FISH

Description #

Text is warped in the shape of a fish.
# WarpStyle WarpStyle.FLAG #
WarpStyle.FLAG #

  int FLAG

Description #

Text is warped in the shape of a waving flag.
# WarpStyle WarpStyle.INFLATE #
WarpStyle.INFLATE #

  int INFLATE

Description #

Text is inflated.
# WarpStyle WarpStyle.NONE #
WarpStyle.NONE #

  int NONE

Description #

No warp.
# WarpStyle WarpStyle.RISE #
WarpStyle.RISE #

  int RISE

Description #

Text is warped in an undulating, rising pattern.
# WarpStyle WarpStyle.SHELLLOWER #
WarpStyle.SHELLLOWER #

  int SHELLLOWER

Description #

Text is warped downward or to the right in the shape of a fan-like
seashell.
# WarpStyle WarpStyle.SHELLUPPER #
WarpStyle.SHELLUPPER #

  int SHELLUPPER

Description #

Text is warped upward or to the left in the shape of a fan-like
seashell.
# WarpStyle WarpStyle.SQUEEZE #
WarpStyle.SQUEEZE #

  int SQUEEZE

Description #

Text is squeezed.
# WarpStyle WarpStyle.TWIST #
WarpStyle.TWIST #

  int TWIST

Description #

Text is twisted.
# WarpStyle WarpStyle.WAVE #
WarpStyle.WAVE #

  int WAVE

Description #

Text is warped in the shape of a wave.
# WaveType WaveType.SINE #
WaveType.SINE #

  int SINE

Description #

Rolling.
# WaveType WaveType.SQUARE #
WaveType.SQUARE #

  int SQUARE

Description #

Square.
# WaveType WaveType.TRIANGULAR #
WaveType.TRIANGULAR #

  int TRIANGULAR

Description #

Triangular.
# WhiteBalanceType WhiteBalanceType.ASSHOT #
WhiteBalanceType.ASSHOT #

  int ASSHOT

Description #

Use the settings of the camera as shot.
# WhiteBalanceType WhiteBalanceType.AUTO #
WhiteBalanceType.AUTO #

  int AUTO

Description #

Automatically use the white balance settings.
# WhiteBalanceType WhiteBalanceType.CLOUDY #
WhiteBalanceType.CLOUDY #

  int CLOUDY

Description #

Use the settings as shot on a cloudy day.
# WhiteBalanceType WhiteBalanceType.CUSTOM #
WhiteBalanceType.CUSTOM #

  int CUSTOM

Description #

Use the custom settings for the shot parameters.
# WhiteBalanceType WhiteBalanceType.DAYLIGHT #
WhiteBalanceType.DAYLIGHT #

  int DAYLIGHT

Description #

Use the settings as shot in daylight.
# WhiteBalanceType WhiteBalanceType.FLASH #
WhiteBalanceType.FLASH #

  int FLASH

Description #

Use the settings as shot with a flash.
# WhiteBalanceType WhiteBalanceType.FLUORESCENT #
WhiteBalanceType.FLUORESCENT #

  int FLUORESCENT

Description #

Use the settings as shot with fluorescent lighting.
# WhiteBalanceType WhiteBalanceType.SHADE #
WhiteBalanceType.SHADE #

  int SHADE

Description #

Use the settings as shot in the shade.
# WhiteBalanceType WhiteBalanceType.TUNGSTEN #
WhiteBalanceType.TUNGSTEN #

  int TUNGSTEN

Description #

Use the settings as shot with tungsten lighting.
# XMPMetadata XMPMetadata.parent #
XMPMetadata.parent #

  Object parent

Description #

The object’s container.
# XMPMetadata XMPMetadata.rawData #
XMPMetadata.rawData #

  String rawData

Description #

The raw XML form of file information.
# XMPMetadata XMPMetadata.typename #
XMPMetadata.typename #

  String typename

Description #

The class name of the object.
# ZigZagType ZigZagType.AROUNDCENTER #
ZigZagType.AROUNDCENTER #

  int AROUNDCENTER

Description #

Pixels are rotated around the center of the selection.
# ZigZagType ZigZagType.OUTFROMCENTER #
ZigZagType.OUTFROMCENTER #

  int OUTFROMCENTER

Description #

Pixels are displaced toward or away from the center of the selection.
# ZigZagType ZigZagType.PONDRIPPLES #
ZigZagType.PONDRIPPLES #

  int PONDRIPPLES

Description #

Pixels are displaced to the upper left or lower right.
# Bounds Bounds.bottom #
Bounds.bottom #

  Number bottom

Description #

The vertical coordinate, a pixel offset from the origin of the element’s
coordinate space.
# Bounds Bounds.height #
Bounds.height #

  Number height

Description #

The height in pixels.
# Bounds Bounds.left #
Bounds.left #

  Number left

Description #

The horizontal coordinate, a pixel offset from the origin of the
element’s coordinate space.
# Bounds Bounds.length #
Bounds.length #

  Number length

Description #

The array length.
# Bounds Bounds.right #
Bounds.right #

  Number right

Description #

The width in pixels.
# Bounds Bounds.top #
Bounds.top #

  Number top

Description #

The height in pixels.
# Bounds Bounds.width #
Bounds.width #

  Number width

Description #

The width in pixels.
# Bounds Bounds.x #
Bounds.x #

  Number x

Description #

The horizontal coordinate, a pixel offset from the origin of the
element’s coordinate space.
# Bounds Bounds.y #
Bounds.y #

  Number y

Description #

The vertical coordinate, a pixel offset from the origin of the element’s
coordinate space.
# Button Button.active #
Button.active #

  Boolean active

Description #

True if this element is active.

An active control is the one with keyboard focus?that is, the one that
accepts keystrokes, or in the case of a?Button, is selected when the
user types Return or Enter in Windows, or the space bar in Mac OS.
# Button Button.addEventListener #
Button.addEventListener #

  Boolean addEventListener ( String eventName , Function handler ,
  Boolean capturePhase )

Parameters #

  -------------- ----------------------------------------------------------
  eventName      The name of the event.

  handler        The function that handles the event.

  capturePhase   When true, the handler is called only in the capturing
                 phase of the event propagation.
  -------------- ----------------------------------------------------------

Description #

Registers an event handler for a particular type of event occuring in
this element.
# Button Button.alignment #
Button.alignment #

  String alignment

Description #

The alignment style for this element. If defined, this value overrides
the alignChildren setting for the parent container.

This can be a single string, which indicates the alignment for the
orientation specified in the parent container, or an array of two
strings, indicating both the horizontal and vertical alignment (in that
order). Allowed values depend on the orientation value of the parent
container. They are not case sensitive. For orientation=row:top, bottom,
fill For orientation=column: left, right, fill For
orientation=stack:top, bottom, left, right, fill
# Button Button.bounds #
Button.bounds #

  Bounds bounds

Description #

The boundaries of the element, in parent-relative coordinates.

Setting an element’s size or location changes its bounds property, and
vice-versa.
# Button Button.characters #
Button.characters #

  Number characters

Description #

A number of characters for which to reserve space when calculating the
preferred size of the element.
# Button Button.children #
Button.children #

  Object children

Description #

An array of child elements.
# Button Button.dispatchEvent #
Button.dispatchEvent #

  Event dispatchEvent ()

Description #

Simulates the occurrence of an event in this target.

A script can create a?UIEvent?object for a specific event and pass it to
this method to start the event propagation for the event.
# Button Button.enabled #
Button.enabled #

  Boolean enabled

Description #

True if this element is enabled.

An enabled element can accept input, according to its type. When false,
control elements do not accept input, and all types of elements have a
dimmed appearance.
# Button Button.graphics #
Button.graphics #

  ScriptUIGraphics graphics

Description #

The graphics object that can be used to customize the element’s
appearance, in response to the?onDraw()?event.
# Button Button.helpTip #
Button.helpTip #

  String helpTip

Description #

The help string that is displayed when the mouse hovers over the
element.
# Button Button.hide #
Button.hide #

  void hide ()

Description #

Hides this element.
# Button Button.indent #
Button.indent #

  Number indent

Description #

The number of pixels to indent the element during automatic layout.

Applies for column orientation and left alignment, or row orientation
and top alignment.
# Button Button.justify #
Button.justify #

  String justify

Description #

The text justification style.

One of left, center, or right. Justification only works if this value is
set on creation of the element.
# Button Button.location #
Button.location #

  Point location

Description #

The upper left corner of this element relative to its parent.

The location is defined as [bounds.x, bounds.y]. Setting an element’s
location changes its bounds property, and vice-versa.
# Button Button.maximumSize #
Button.maximumSize #

  Dimension maximumSize

Description #

The maximum height and width to which the element can be resized.
# Button Button.minimumSize #
Button.minimumSize #

  Dimension minimumSize

Description #

The minimum height and width to which the element can be resized.
# Button Button.notify #
Button.notify #

  void notify ( String eventName )

Parameters #

  ----------------- -----------------------------------------------------
  eventName         The name of the control event handler to call.

  ----------------- -----------------------------------------------------

Description #

Sends a notification message, simulating the specified user interaction
event.
# Button Button.onActivate #
Button.onActivate #

  void onActivate ()

Description #

An event-handler callback function, called when the element acquires the
keyboard focus.

Called when the user gives the control the keyboard focus by clicking it
or tabbing into it.
# Button Button.onClick #
Button.onClick #

  void onClick ()

Description #

An event-handler callback function, called when the element has been
clicked
# Button Button.onDeactivate #
Button.onDeactivate #

  void onDeactivate ()

Description #

An event-handler callback function, called when the element loses the
keyboard focus.

Called when the user moves the keyboard focus from the previously active
control to another control.
# Button Button.onDraw #
Button.onDraw #

  void onDraw ()

Description #

An event-handler callback function, called when the window is about to
be drawn.

Allows the script to modify or control the appearance, using the
control?s associated?ScriptUIGraphics?object. Handler takes one
argument, a?DrawState?object.
# Button Button.onShortcutKey #
Button.onShortcutKey #

  void onShortcutKey ()

Description #

An event-handler callback function, called when the element’s
shortcutKey sequence is typed in the active window.

In Windows only.
# Button Button.parent #
Button.parent #

  Object parent

Description #

The parent element.
# Button Button.preferredSize #
Button.preferredSize #

  Dimension preferredSize

Description #

The preferred size, used by layout managers to determine the best size
for each element.

If not explicitly set by a script, value is established by the UI
framework in which ScriptUI is employed, and is based on such attributes
of the element as its text, font, font size, icon size, and other UI
framework-specific attributes.A script can explicitly set this value
before the layout manager is invoked in order to establish an element
size other than the default.
# Button Button.properties #
Button.properties #

  Object properties

Description #

An object that contains one or more creation properties of the container
(properties used only when the element is created).

A Button object has no creation properties, but the third argument to
the add() method that creates it can be the initial text value.
# Button Button.removeEventListener #
Button.removeEventListener #

  Boolean removeEventListener ( String eventName , Function handler ,
  Boolean capturePhase )

Parameters #

  -------------- ----------------------------------------------------------
  eventName      The name of the event.

  handler        The function that handles the event.

  capturePhase   Whether to call the handler only in the capturing phase of
                 the event propagation.
  -------------- ----------------------------------------------------------

Description #

Unregisters an event handler for a particular type of event occuring in
this element.

All arguments must be identical to those that were used to register the
event handler.
# Button Button.shortcutKey #
Button.shortcutKey #

  String shortcutKey

Description #

The key sequence that invokes the?onShortcutKey()?callback for this
element (in Windows only).
# Button Button.show #
Button.show #

  void show ()

Description #

Shows this element.

When a window or container is hidden, its children are also hidden, but
when it is shown again, the children retain their own visibility states.
# Button Button.size #
Button.size #

  Dimension size

Description #

The current dimensions of this element.

Initially undefined, and unless explicitly set by a script, it is
defined by a?LayoutManager?. A script can explicitly set size before the
layout manager is invoked to establish an element size other than the
preferredSize or the default size, but this is not recommended. Defined
as [bounds.width, bounds.height]. Setting an element’s size changes its
bounds property, and vice-versa.
# Button Button.text #
Button.text #

  String text

Description #

The text to display, a localizable string.
# Button Button.type #
Button.type #

  String type

Description #

The element type; “button”.
# Button Button.visible #
Button.visible #

  Boolean visible

Description #

True if this element is shown, false if it is hidden.

When a container is hidden, its children are also hidden, but they
retain their own visibility values, and are shown or hidden accordingly
when the parent is next shown.
# Button Button.windowBounds #
Button.windowBounds #

  Bounds windowBounds

Description #

The bounds of this element relative to the top-level parent window.
# Button Button.window #
Button.window #

  Window window

Description #

The window that this element belongs to.
# Checkbox Checkbox.active #
Checkbox.active #

  Boolean active

Description #

True if this element is active.

An active control is the one with keyboard focus?that is, the one that
accepts keystrokes, or in the case of a?Button, is selected when the
user types Return or Enter in Windows, or the space bar in Mac OS.
# Checkbox Checkbox.addEventListener #
Checkbox.addEventListener #

  Boolean addEventListener ( String eventName , Function handler ,
  Boolean capturePhase )

Parameters #

  -------------- ----------------------------------------------------------
  eventName      The name of the event.

  handler        The function that handles the event.

  capturePhase   When true, the handler is called only in the capturing
                 phase of the event propagation.
  -------------- ----------------------------------------------------------

Description #

Registers an event handler for a particular type of event occuring in
this element.
# Checkbox Checkbox.alignment #
Checkbox.alignment #

  String alignment

Description #

The alignment style for this element. If defined, this value overrides
the alignChildren setting for the parent container.

This can be a single string, which indicates the alignment for the
orientation specified in the parent container, or an array of two
strings, indicating both the horizontal and vertical alignment (in that
order). Allowed values depend on the orientation value of the parent
container. They are not case sensitive. For orientation=row:top, bottom,
fill For orientation=column: left, right, fill For
orientation=stack:top, bottom, left, right, fill
# Checkbox Checkbox.bounds #
Checkbox.bounds #

  Bounds bounds

Description #

The boundaries of the element, in parent-relative coordinates.

Setting an element’s size or location changes its bounds property, and
vice-versa.
# Checkbox Checkbox.characters #
Checkbox.characters #

  Number characters

Description #

A number of characters for which to reserve space when calculating the
preferred size of the element.
# Checkbox Checkbox.children #
Checkbox.children #

  Object children

Description #

An array of child elements.
# Checkbox Checkbox.dispatchEvent #
Checkbox.dispatchEvent #

  Event dispatchEvent ()

Description #

Simulates the occurrence of an event in this target.

A script can create a?UIEvent?object for a specific event and pass it to
this method to start the event propagation for the event.
# Checkbox Checkbox.enabled #
Checkbox.enabled #

  Boolean enabled

Description #

True if this element is enabled.

An enabled element can accept input, according to its type. When false,
control elements do not accept input, and all types of elements have a
dimmed appearance.
# Checkbox Checkbox.graphics #
Checkbox.graphics #

  ScriptUIGraphics graphics

Description #

The graphics object that can be used to customize the element’s
appearance, in response to the?onDraw()?event.
# Checkbox Checkbox.helpTip #
Checkbox.helpTip #

  String helpTip

Description #

The help text that is displayed when the mouse hovers over the element.
# Checkbox Checkbox.hide #
Checkbox.hide #

  void hide ()

Description #

Hides this element.
# Checkbox Checkbox.indent #
Checkbox.indent #

  Number indent

Description #

The number of pixels to indent the element during automatic layout.

Applies for column orientation and left alignment, or row orientation
and top alignment.
# Checkbox Checkbox.justify #
Checkbox.justify #

  String justify

Description #

The default text justification style for child text elements.

One of left, center, or right. Justification only works if this value is
set on creation of the element.
# Checkbox Checkbox.location #
Checkbox.location #

  Point location

Description #

The upper left corner of this element relative to its parent.

The location is defined as [bounds.x, bounds.y]. Setting an element’s
location changes its bounds property, and vice-versa.
# Checkbox Checkbox.maximumSize #
Checkbox.maximumSize #

  Dimension maximumSize

Description #

The maximum height and width to which the element can be resized.
# Checkbox Checkbox.minimumSize #
Checkbox.minimumSize #

  Dimension minimumSize

Description #

The minimum height and width to which the element can be resized.
# Checkbox Checkbox.notify #
Checkbox.notify #

  void notify ( String eventName )

Parameters #

  ----------------- -----------------------------------------------------
  eventName         The name of the control event handler to call.

  ----------------- -----------------------------------------------------

Description #

Sends a notification message, simulating the specified user interaction
event.
# Checkbox Checkbox.onActivate #
Checkbox.onActivate #

  void onActivate ()

Description #

An event-handler callback function, called when the element acquires the
keyboard focus.

Called when the user gives the control the keyboard focus by clicking it
or tabbing into it.
# Checkbox Checkbox.onClick #
Checkbox.onClick #

  void onClick ()

Description #

An event-handler callback function, called when the element has been
clicked.
# Checkbox Checkbox.onDeactivate #
Checkbox.onDeactivate #

  void onDeactivate ()

Description #

An event-handler callback function, called when the element loses the
keyboard focus.

Called when the user moves the keyboard focus from the previously active
control to another control.
# Checkbox Checkbox.onDraw #
Checkbox.onDraw #

  void onDraw ()

Description #

An event-handler callback function, called when the window is about to
be drawn.

Allows the script to modify or control the appearance, using the
control?s associated?ScriptUIGraphics?object. Handler takes one
argument, a?DrawState?object.
# Checkbox Checkbox.onShortcutKey #
Checkbox.onShortcutKey #

  void onShortcutKey ()

Description #

An event-handler callback function, called when the
element’s?shortcutKey?sequence is typed in the active window.

In Windows only.
# Checkbox Checkbox.parent #
Checkbox.parent #

  Object parent

Description #

The parent element.
# Checkbox Checkbox.preferredSize #
Checkbox.preferredSize #

  Dimension preferredSize

Description #

The preferred size, used by layout managers to determine the best size
for each element.

If not explicitly set by a script, value is established by the UI
framework in which ScriptUI is employed, and is based on such attributes
of the element as its text, font, font size, icon size, and other UI
framework-specific attributes.A script can explicitly set this value
before the layout manager is invoked in order to establish an element
size other than the default.
# Checkbox Checkbox.properties #
Checkbox.properties #

  Object properties

Description #

An object that contains one or more creation properties of the item
(properties used only when the element is created).

A CheckBox object has no creation properties. The third argument to
the?add()?method that creates it is the text to be displayed.
# Checkbox Checkbox.removeEventListener #
Checkbox.removeEventListener #

  Boolean removeEventListener ( String eventName , Function handler ,
  Boolean capturePhase )

Parameters #

  -------------- ----------------------------------------------------------
  eventName      The name of the event.

  handler        The function that handles the event.

  capturePhase   Whether to call the handler only in the capturing phase of
                 the event propagation.
  -------------- ----------------------------------------------------------

Description #

Unregisters an event handler for a particular type of event occuring in
this element.

All arguments must be identical to those that were used to register the
event handler.
# Checkbox Checkbox.shortcutKey #
Checkbox.shortcutKey #

  String shortcutKey

Description #

The key sequence that invokes the?onShortcutKey()?callback for this
element (in Windows only).
# Checkbox Checkbox.show #
Checkbox.show #

  void show ()

Description #

Shows this element.

When a window or container is hidden, its children are also hidden, but
when it is shown again, the children retain their own visibility states.
# Checkbox Checkbox.size #
Checkbox.size #

  Dimension size

Description #

The current dimensions of this element.

Initially undefined, and unless explicitly set by a script, it is
defined by a?LayoutManager?. A script can explicitly set size before the
layout manager is invoked to establish an element size other than the
preferredSize or the default size, but this is not recommended. Defined
as [bounds.width, bounds.height]. Setting an element’s size changes its
bounds property, and vice-versa.
# Checkbox Checkbox.text #
Checkbox.text #

  String text

Description #

The text to display, a localizable string.
# Checkbox Checkbox.type #
Checkbox.type #

  String type

Description #

The element type; “checkbox”.
# Checkbox Checkbox.value #
Checkbox.value #

  Boolean value

Description #

The selection state of the control.

When true, the control is in the selected or set state and displays the
check mark. When false, shows an empty box.
# Checkbox Checkbox.visible #
Checkbox.visible #

  Boolean visible

Description #

True if this element is shown, false if it is hidden.

When a container is hidden, its children are also hidden, but they
retain their own visibility values, and are shown or hidden accordingly
when the parent is next shown.
# Checkbox Checkbox.windowBounds #
Checkbox.windowBounds #

  Bounds windowBounds

Description #

The bounds of this element relative to the top-level parent window.
# Checkbox Checkbox.window #
Checkbox.window #

  Window window

Description #

The window that this element belongs to.
# Dimension Dimension.height #
Dimension.height #

  Number height

Description #

The height in pixels.
# Dimension Dimension.length #
Dimension.length #

  Number length

Description #

The array length.
# Dimension Dimension.width #
Dimension.width #

  Number width

Description #

The width in pixels.
# DrawState DrawState.altKeyPressed #
DrawState.altKeyPressed #

  Boolean altKeyPressed

Description #

True if the Alt key is being pressed (in Windows only).
# DrawState DrawState.capsLockKeyPressed #
DrawState.capsLockKeyPressed #

  Boolean capsLockKeyPressed

Description #

True if the Caps Lock key is being pressed.
# DrawState DrawState.cmdKeyPressed #
DrawState.cmdKeyPressed #

  Boolean cmdKeyPressed

Description #

True if the Command key is being pressed (in Mac OS only).
# DrawState DrawState.ctrlKeyPressed #
DrawState.ctrlKeyPressed #

  Boolean ctrlKeyPressed

Description #

True if the Ctrl key is being pressed.
# DrawState DrawState.hasFocus #
DrawState.hasFocus #

  Boolean hasFocus

Description #

True if the element has the input focus.
# DrawState DrawState.leftButtonPressed #
DrawState.leftButtonPressed #

  Boolean leftButtonPressed

Description #

True if the left mouse button is being pressed.
# DrawState DrawState.middleButtonPressed #
DrawState.middleButtonPressed #

  Boolean middleButtonPressed

Description #

True if the middle mouse button is being pressed.
# DrawState DrawState.mouseOver #
DrawState.mouseOver #

  Boolean mouseOver

Description #

True if the cursor is hovering over this element.
# DrawState DrawState.numLockKeyPressed #
DrawState.numLockKeyPressed #

  Boolean numLockKeyPressed

Description #

True if the Num Lock key is being pressed.
# DrawState DrawState.optKeyPressed #
DrawState.optKeyPressed #

  Boolean optKeyPressed

Description #

True if the Option key is being pressed (in Mac OS only).
# DrawState DrawState.rightButtonPressed #
DrawState.rightButtonPressed #

  Boolean rightButtonPressed

Description #

True if the right mouse button is being pressed.
# DrawState DrawState.shiftKeyPressed #
DrawState.shiftKeyPressed #

  Boolean shiftKeyPressed

Description #

True if the Shift key is being pressed.
# DropDownList DropDownList.active #
DropDownList.active #

  Boolean active

Description #

True if this element is active.

An active control is the one with keyboard focus?that is, the one that
accepts keystrokes, or in the case of a?Button, is selected when the
user types Return or Enter in Windows, or the space bar in Mac OS.
# DropDownList DropDownList.addEventListener #
DropDownList.addEventListener #

  Boolean addEventListener ( String eventName , Function handler ,
  Boolean capturePhase )

Parameters #

  -------------- ----------------------------------------------------------
  eventName      The name of the event.

  handler        The function that handles the event.

  capturePhase   When true, the handler is called only in the capturing
                 phase of the event propagation.
  -------------- ----------------------------------------------------------

Description #

Registers an event handler for a particular type of event occuring in
this element.
# DropDownList DropDownList.add #
DropDownList.add #

  ListItem add ( String type , String text )

Parameters #

  ------------- ---------------------------------------------------------
  type          The type of the child element.

  text          The localizable text label for the item.
  ------------- ---------------------------------------------------------

Description #

Adds an item or separator to the choices in this list.

Returns the item control object for type=”item”, or null for
type=”separator”.
# DropDownList DropDownList.alignment #
DropDownList.alignment #

  String alignment

Description #

The alignment style for this element. If defined, this value overrides
the alignChildren setting for the parent container.

This can be a single string, which indicates the alignment for the
orientation specified in the parent container, or an array of two
strings, indicating both the horizontal and vertical alignment (in that
order). Allowed values depend on the orientation value of the parent
container. They are not case sensitive. For orientation=row:top, bottom,
fill For orientation=column: left, right, fill For
orientation=stack:top, bottom, left, right, fill
# DropDownList DropDownList.bounds #
DropDownList.bounds #

  Bounds bounds

Description #

The boundaries of the element, in parent-relative coordinates.

Setting an element’s size or location changes its bounds property, and
vice-versa.
# DropDownList DropDownList.children #
DropDownList.children #

  Object children

Description #

An array of child elements.
# DropDownList DropDownList.dispatchEvent #
DropDownList.dispatchEvent #

  Event dispatchEvent ()

Description #

Simulates the occurrence of an event in this target.

A script can create a?UIEvent?object for a specific event and pass it to
this method to start the event propagation for the event.
# DropDownList DropDownList.enabled #
DropDownList.enabled #

  Boolean enabled

Description #

True if this element is enabled.

An enabled element can accept input, according to its type. When false,
control elements do not accept input, and all types of elements have a
dimmed appearance.
# DropDownList DropDownList.find #
DropDownList.find #

  ListItem find ( String text )

Parameters #

  ------------------- ---------------------------------------------------
  text                The text string to match.

  ------------------- ---------------------------------------------------

Description #

Retrieves an item object from the list that has a given text label.
# DropDownList DropDownList.graphics #
DropDownList.graphics #

  ScriptUIGraphics graphics

Description #

The graphics object that can be used to customize the element’s
appearance, in response to the?onDraw()?event.
# DropDownList DropDownList.helpTip #
DropDownList.helpTip #

  String helpTip

Description #

The help text that is displayed when the mouse hovers over the element.
# DropDownList DropDownList.hide #
DropDownList.hide #

  void hide ()

Description #

Hides this element.
# DropDownList DropDownList.indent #
DropDownList.indent #

  Number indent

Description #

The number of pixels to indent the element during automatic layout.

Applies for column orientation and left alignment, or row orientation
and top alignment.
# DropDownList DropDownList.items #
DropDownList.items #

  ListItem items

Description #

The array of choice items displayed in the drop-down or pop-up list.

Access this array with a 0-based index. To obtain the number of items in
the list, use items.length.The objects are created when items are
specified on creation of the parent list object, or afterward using the
list control?s?add()?method. Items in a drop-down list can be of type
separator, in which case they cannot be selected, and are shown as a
horizontal line. Each item has a?selected?property that is true when it
is in the selected state.
# DropDownList DropDownList.itemSize #
DropDownList.itemSize #

  Dimension itemSize

Description #

The width and height in pixels of each item in the list.

Used by auto-layout to determine the?preferredSize?of the list, if not
otherwise specified. If not set explicitly, the size of each item is set
to match the largest height and width among all items in the list
# DropDownList DropDownList.location #
DropDownList.location #

  Point location

Description #

The upper left corner of this element relative to its parent.

The location is defined as [bounds.x, bounds.y]. Setting an element’s
location changes its bounds property, and vice-versa.
# DropDownList DropDownList.maximumSize #
DropDownList.maximumSize #

  Dimension maximumSize

Description #

The maximum height and width to which the element can be resized.
# DropDownList DropDownList.minimumSize #
DropDownList.minimumSize #

  Dimension minimumSize

Description #

The minimum height and width to which the element can be resized.
# DropDownList DropDownList.notify #
DropDownList.notify #

  void notify ( String eventName )

Parameters #

  ----------------- -----------------------------------------------------
  eventName         The name of the control event handler to call.

  ----------------- -----------------------------------------------------

Description #

Sends a notification message, simulating the specified user interaction
event.
# DropDownList DropDownList.onActivate #
DropDownList.onActivate #

  void onActivate ()

Description #

An event-handler callback function, called when the element acquires the
keyboard focus.

Called when the user gives the control the keyboard focus by clicking it
or tabbing into it.
# DropDownList DropDownList.onChange #
DropDownList.onChange #

  void onChange ()

Description #

An event-handler callback function, called when the content of the
element has been changed
# DropDownList DropDownList.onDeactivate #
DropDownList.onDeactivate #

  void onDeactivate ()

Description #

An event-handler callback function, called when the element loses the
keyboard focus.

Called when the user moves the keyboard focus from the previously active
control to another control.
# DropDownList DropDownList.onDraw #
DropDownList.onDraw #

  void onDraw ()

Description #

An event-handler callback function, called when the window is about to
be drawn.

Allows the script to modify or control the appearance, using the
control?s associated?ScriptUIGraphics?object. Handler takes one
argument, a?DrawState?object.
# DropDownList DropDownList.onShortcutKey #
DropDownList.onShortcutKey #

  void onShortcutKey ()

Description #

An event-handler callback function, called when the
element’s?shortcutKey?sequence is typed in the active window.

In Windows only.
# DropDownList DropDownList.parent #
DropDownList.parent #

  Object parent

Description #

The parent element.
# DropDownList DropDownList.preferredSize #
DropDownList.preferredSize #

  Dimension preferredSize

Description #

The preferred size, used by layout managers to determine the best size
for each element.

If not explicitly set by a script, value is established by the UI
framework in which ScriptUI is employed, and is based on such attributes
of the element as its text, font, font size, icon size, and other UI
framework-specific attributes.A script can explicitly set this value
before the layout manager is invoked in order to establish an element
size other than the default.
# DropDownList DropDownList.properties #
DropDownList.properties #

  Object properties

Description #

An object that contains one or more creation properties of the container
(properties used only when the element is created).

Creation properties of a DropDownList object can include: items: An
array of strings for the text of each list item. An item object is
created for each item. An item with the text string “-” creates a
separator item. Supply this property, or the items argument to
the?add()?method, not both. This form is most useful for elements
defined using Resource Specifications.
# DropDownList DropDownList.removeAll #
DropDownList.removeAll #

  void removeAll ()

Description #

Removes all child items from the list.
# DropDownList DropDownList.removeEventListener #
DropDownList.removeEventListener #

  Boolean removeEventListener ( String eventName , Function handler ,
  Boolean capturePhase )

Parameters #

  -------------- ----------------------------------------------------------
  eventName      The name of the event.

  handler        The function that handles the event.

  capturePhase   Whether to call the handler only in the capturing phase of
                 the event propagation.
  -------------- ----------------------------------------------------------

Description #

Unregisters an event handler for a particular type of event occuring in
this element.

All arguments must be identical to those that were used to register the
event handler.
# DropDownList DropDownList.remove #
DropDownList.remove #

  void remove (any what )

Parameters #

  ------- ---------------------------------------------------------------
  what    The item or child to remove, specified by 0-based index, text
          value, or as a?ListItem?object.

  ------- ---------------------------------------------------------------

Description #

Removes a child item from the list.
# DropDownList DropDownList.selection #
DropDownList.selection #

  ListItem selection

Description #

The currently selected list item.

Setting this value causes the selected item to be highlighted and to be
scrolled into view if necessary. If no items are selected, the value is
null. Set to null to deselect all items.You can set the value using the
index of an item, rather than an object reference. If set to an index
value that is out of range, the operation is ignored. When set with an
index value, the property still returns an object reference.
# DropDownList DropDownList.shortcutKey #
DropDownList.shortcutKey #

  String shortcutKey

Description #

The key sequence that invokes the?onShortcutKey()?callback for this
element (in Windows only).
# DropDownList DropDownList.show #
DropDownList.show #

  void show ()

Description #

Shows this element.

When a window or container is hidden, its children are also hidden, but
when it is shown again, the children retain their own visibility states.
# DropDownList DropDownList.size #
DropDownList.size #

  Dimension size

Description #

The current dimensions of this element.

Initially undefined, and unless explicitly set by a script, it is
defined by a?LayoutManager?. A script can explicitly set size before the
layout manager is invoked to establish an element size other than the
preferredSize or the default size, but this is not recommended. Defined
as [bounds.width, bounds.height]. Setting an element’s size changes its
bounds property, and vice-versa.
# DropDownList DropDownList.type #
DropDownList.type #

  String type

Description #

The element type; “dropdownlist”.
# DropDownList DropDownList.visible #
DropDownList.visible #

  Boolean visible

Description #

True if this element is shown, false if it is hidden.

When a container is hidden, its children are also hidden, but they
retain their own visibility values, and are shown or hidden accordingly
when the parent is next shown.
# DropDownList DropDownList.windowBounds #
DropDownList.windowBounds #

  Bounds windowBounds

Description #

The bounds of this element relative to the top-level parent window.
# DropDownList DropDownList.window #
DropDownList.window #

  Window window

Description #

The window that this element belongs to.
# EditText EditText.active #
EditText.active #

  Boolean active

Description #

True if this element is active.

An active control is the one with keyboard focus?that is, the one that
accepts keystrokes, or in the case of a?Button, is selected when the
user types Return or Enter in Windows, or the space bar in Mac OS.
# EditText EditText.addEventListener #
EditText.addEventListener #

  Boolean addEventListener ( String eventName , Function handler ,
  Boolean capturePhase )

Parameters #

  -------------- ----------------------------------------------------------
  eventName      The name of the event.

  handler        The function that handles the event.

  capturePhase   When true, the handler is called only in the capturing
                 phase of the event propagation.
  -------------- ----------------------------------------------------------

Description #

Registers an event handler for a particular type of event occuring in
this element.
# EditText EditText.alignment #
EditText.alignment #

  String alignment

Description #

The alignment style for this element. If defined, this value overrides
the alignChildren setting for the parent container.

This can be a single string, which indicates the alignment for the
orientation specified in the parent container, or an array of two
strings, indicating both the horizontal and vertical alignment (in that
order). Allowed values depend on the orientation value of the parent
container. They are not case sensitive. For orientation=row:top, bottom,
fill For orientation=column: left, right, fill For
orientation=stack:top, bottom, left, right, fill
# EditText EditText.bounds #
EditText.bounds #

  Bounds bounds

Description #

The boundaries of the element, in parent-relative coordinates.

Setting an element’s size or location changes its bounds property, and
vice-versa.
# EditText EditText.characters #
EditText.characters #

  Number characters

Description #

A number of characters for which to reserve space when calculating the
preferred size of the element.
# EditText EditText.children #
EditText.children #

  Object children

Description #

An array of child elements.
# EditText EditText.dispatchEvent #
EditText.dispatchEvent #

  Event dispatchEvent ()

Description #

Simulates the occurrence of an event in this target.

A script can create a?UIEvent?object for a specific event and pass it to
this method to start the event propagation for the event.
# EditText EditText.enabled #
EditText.enabled #

  Boolean enabled

Description #

True if this element is enabled.

An enabled element can accept input, according to its type. When false,
control elements do not accept input, and all types of elements have a
dimmed appearance.
# EditText EditText.graphics #
EditText.graphics #

  ScriptUIGraphics graphics

Description #

The graphics object that can be used to customize the element’s
appearance, in response to the?onDraw()?event.
# EditText EditText.helpTip #
EditText.helpTip #

  String helpTip

Description #

The help text that is displayed when the mouse hovers over the element.
# EditText EditText.hide #
EditText.hide #

  void hide ()

Description #

Hides this element.
# EditText EditText.indent #
EditText.indent #

  Number indent

Description #

The number of pixels to indent the element during automatic layout.

Applies for column orientation and left alignment, or row orientation
and top alignment.
# EditText EditText.justify #
EditText.justify #

  String justify

Description #

The text justification style.

One of left, center, or right. Justification only works if this value is
set on creation of the element.
# EditText EditText.location #
EditText.location #

  Point location

Description #

The upper left corner of this element relative to its parent.

The location is defined as [bounds.x, bounds.y]. Setting an element’s
location changes its bounds property, and vice-versa.
# EditText EditText.maximumSize #
EditText.maximumSize #

  Dimension maximumSize

Description #

The maximum height and width to which the element can be resized.
# EditText EditText.minimumSize #
EditText.minimumSize #

  Dimension minimumSize

Description #

The minimum height and width to which the element can be resized.
# EditText EditText.notify #
EditText.notify #

  void notify ( String eventName )

Parameters #

  ----------------- -----------------------------------------------------
  eventName         The name of the control event handler to call.

  ----------------- -----------------------------------------------------

Description #

Sends a notification message, simulating the specified user interaction
event.
# EditText EditText.onActivate #
EditText.onActivate #

  void onActivate ()

Description #

An event-handler callback function, called when the element acquires the
keyboard focus.

Called when the user gives the control the keyboard focus by clicking it
or tabbing into it.
# EditText EditText.onChange #
EditText.onChange #

  void onChange ()

Description #

An event-handler callback function, called when the content of the
element has been changed

The handler is called only when the change is complete?that is, when
focus moves to another control, or the user types Enter. The exact
behavior depends on the creation parameter enterKeySignalsOnChange;see
the properties property.
# EditText EditText.onChanging #
EditText.onChanging #

  void onChanging ()

Description #

An event-handler callback function, called when the content of the
element is in the process of changing

The handler is called for each keypress while this control has the input
focus.
# EditText EditText.onDeactivate #
EditText.onDeactivate #

  void onDeactivate ()

Description #

An event-handler callback function, called when the element loses the
keyboard focus.

Called when the user moves the keyboard focus from the previously active
control to another control.
# EditText EditText.onDraw #
EditText.onDraw #

  void onDraw ()

Description #

An event-handler callback function, called when the window is about to
be drawn.

Allows the script to modify or control the appearance, using the
control?s associated?ScriptUIGraphics?object. Handler takes one
argument, a?DrawState?object.
# EditText EditText.onShortcutKey #
EditText.onShortcutKey #

  void onShortcutKey ()

Description #

An event-handler callback function, called when the
element’s?shortcutKey?sequence is typed in the active window.

In Windows only.
# EditText EditText.parent #
EditText.parent #

  Object parent

Description #

The parent element.
# EditText EditText.preferredSize #
EditText.preferredSize #

  Dimension preferredSize

Description #

The preferred size, used by layout managers to determine the best size
for each element.

If not explicitly set by a script, value is established by the UI
framework in which ScriptUI is employed, and is based on such attributes
of the element as its text, font, font size, icon size, and other UI
framework-specific attributes.A script can explicitly set this value
before the layout manager is invoked in order to establish an element
size other than the default.
# EditText EditText.properties #
EditText.properties #

  Object properties

Description #

An object that contains one or more creation properties of the container
(properties used only when the element is created).

Creation properties of an EditText object can include: multiline: When
false (the default), the control displays a single line of text. When
true, the control displays multiple lines, in which case the text wraps
within the width of the control. readonly: When false (the default), the
control accepts text input. When true, the control does not accept input
but only displays the contents of the text property. noecho: When false
(the default), the control displays input text. When true, the control
does not display input text (used for password input fields).
enterKeySignalsOnChange: When false (the default), the control signals
an onChange event when the editable text is changed and the control
loses the keyboard focus (that is, the user tabs to another control,
clicks outside the control, or types Enter). When true, the control only
signals an?onChange()?event when the editable text is changed and the
user types Enter; other changes to the keyboard focus do not signal the
event. wantReturn: Only applies to multiple line edit controls in
ScriptUI Version 6.0 or later. When true the RETURN/ENTER keystroke is
considered as text-input advancing the cursor to the next line. The
default value is false.
# EditText EditText.removeEventListener #
EditText.removeEventListener #

  Boolean removeEventListener ( String eventName , Function handler ,
  Boolean capturePhase )

Parameters #

  -------------- ----------------------------------------------------------
  eventName      The name of the event.

  handler        The function that handles the event.

  capturePhase   Whether to call the handler only in the capturing phase of
                 the event propagation.
  -------------- ----------------------------------------------------------

Description #

Unregisters an event handler for a particular type of event occuring in
this element.

All arguments must be identical to those that were used to register the
event handler.
# EditText EditText.shortcutKey #
EditText.shortcutKey #

  String shortcutKey

Description #

The key sequence that invokes the?onShortcutKey()?callback for this
element (in Windows only).
# EditText EditText.show #
EditText.show #

  void show ()

Description #

Shows this element.

When a window or container is hidden, its children are also hidden, but
when it is shown again, the children retain their own visibility states.
# EditText EditText.size #
EditText.size #

  Dimension size

Description #

The current dimensions of this element.

Initially undefined, and unless explicitly set by a script, it is
defined by a?LayoutManager?. A script can explicitly set size before the
layout manager is invoked to establish an element size other than the
preferredSize or the default size, but this is not recommended. Defined
as [bounds.width, bounds.height]. Setting an element’s size changes its
bounds property, and vice-versa.
# EditText EditText.text #
EditText.text #

  String text

Description #

The current text displayed in the field, a localizable string.
# EditText EditText.textselection #
EditText.textselection #

  String textselection

Description #

The currently selected text, or the empty string if there is no text
selected.

Setting the value replaces the current text selection and modifies the
value of the?text?property. If there is no current selection, inserts
the new value into the text string at the current insertion point. The
textselection value is reset to an empty string after it modifies the
text value. Note that setting the textselection property before the
element?s parent Window exists is an undefined operation.
# EditText EditText.type #
EditText.type #

  String type

Description #

The element type; “edittext”.
# EditText EditText.visible #
EditText.visible #

  Boolean visible

Description #

True if this element is shown, false if it is hidden.

When a container is hidden, its children are also hidden, but they
retain their own visibility values, and are shown or hidden accordingly
when the parent is next shown.
# EditText EditText.windowBounds #
EditText.windowBounds #

  Bounds windowBounds

Description #

The bounds of this element relative to the top-level parent window.
# EditText EditText.window #
EditText.window #

  Window window

Description #

The window that this element belongs to.
# Environment Environment.keyboardState #
Environment.keyboardState #

  KeyboardState keyboardState

Description #

An object that reports the active state of the keyboard at any time.

Provides access to the key state independent of the event-handling
framework.
# Event Event.AT_TARGET #
Event.AT_TARGET #

  any AT_TARGET

Description #
# Event Event.bubbles #
Event.bubbles #

  Boolean bubbles

Description #

True if the event is of a type that bubbles.
# Event Event.BUBBLING_PHASE #
Event.BUBBLING_PHASE #

  any BUBBLING_PHASE

Description #
# Event Event.cancelable #
Event.cancelable #

  Boolean cancelable

Description #

True if the default action associated with the event can be canceled
with preventDefault().
# Event Event.captures #
Event.captures #

  Boolean captures

Description #

True if this event can be captured.
# Event Event.CAPTURING_PHASE #
Event.CAPTURING_PHASE #

  any CAPTURING_PHASE

Description #
# Event Event.currentTarget #
Event.currentTarget #

  Boolean currentTarget

Description #

The event target object which is currently handling the event. During
capturing and bubbling, this is different from the property target.
# Event Event.eventPhase #
Event.eventPhase #

  String eventPhase

Description #

The current phase of event propagation; one of none, target, capture,
bubble.
# Event Event.NOT_DISPATCHING #
Event.NOT_DISPATCHING #

  any NOT_DISPATCHING

Description #
# Event Event.preventDefault #
Event.preventDefault #

  void preventDefault ()

Description #

Prevents the default action associated with this event from being
called.
# Events Events.createEvent #
Events.createEvent #

  Event createEvent ( String eventType )

Parameters #

  ----------- -----------------------------------------------------------
  eventType   The name of an event type: one of “UIEvent”,
              “KeyboardEvent”, or “MouseEvent”.

  ----------- -----------------------------------------------------------

Description #

Creates an instance of the specified?Event?subclass.

The?Event?returned is a?UIEvent, KeyboardEvent?or?MouseEvent?object,
depending on the requested type. This object can be passed as a
parameter to an element’s dispatchEvent function in order to simulate a
user-interaction event.
# Event Event.stopPropagation #
Event.stopPropagation #

  void stopPropagation ()

Description #

Stops the propagation of this event.
# Event Event.target #
Event.target #

  Object target

Description #

The event target object for this event.
# Event Event.timeStamp #
Event.timeStamp #

  Date timeStamp

Description #

The date and time at which the event occurred.
# Event Event.type #
Event.type #

  String type

Description #

The name of the event that this object represents.

Event types are listed in the JavaScript Tools Guide.
# FlashPlayer FlashPlayer.active #
FlashPlayer.active #

  Boolean active

Description #

True if this element is active.

An active control is the one with keyboard focus?that is, the one that
accepts keystrokes, or in the case of a?Button, is selected when the
user types Return or Enter in Windows, or the space bar in Mac OS.
# FlashPlayer FlashPlayer.addEventListener #
FlashPlayer.addEventListener #

  Boolean addEventListener ( String eventName , Function handler ,
  Boolean capturePhase )

Parameters #

  -------------- ----------------------------------------------------------
  eventName      The name of the event.

  handler        The function that handles the event.

  capturePhase   When true, the handler is called only in the capturing
                 phase of the event propagation.
  -------------- ----------------------------------------------------------

Description #

Registers an event handler for a particular type of event occuring in
this element.
# FlashPlayer FlashPlayer.alignment #
FlashPlayer.alignment #

  String alignment

Description #

The alignment style for this element. If defined, this value overrides
the alignChildren setting for the parent container.

This can be a single string, which indicates the alignment for the
orientation specified in the parent container, or an array of two
strings, indicating both the horizontal and vertical alignment (in that
order). Allowed values depend on the orientation value of the parent
container. They are not case sensitive. For orientation=row:top, bottom,
fill For orientation=column: left, right, fill For
orientation=stack:top, bottom, left, right, fill
# FlashPlayer FlashPlayer.bounds #
FlashPlayer.bounds #

  Bounds bounds

Description #

The boundaries of the element, in parent-relative coordinates.

Setting an element’s size or location changes its bounds property, and
vice-versa.
# FlashPlayer FlashPlayer.callback #
FlashPlayer.callback #

  void callback ()

Description #

A function definition for a callback from the Flash ActionScript
environment.

The Flash ActionScript code can call any callback function defined on
the ExtendScript side of the FlashPlayer object, invoking it by name as
a property of the control object. The function can take any arguments of
a supported data types, and can return any value of a supported data
type. data types:Number, String, Boolean, null, undefined, Object,
Array.
# FlashPlayer FlashPlayer.dispatchEvent #
FlashPlayer.dispatchEvent #

  Event dispatchEvent ()

Description #

Simulates the occurrence of an event in this target.

A script can create a?UIEvent?object for a specific event and pass it to
this method to start the event propagation for the event.
# FlashPlayer FlashPlayer.enabled #
FlashPlayer.enabled #

  Boolean enabled

Description #

True if this element is enabled.

An enabled element can accept input, according to its type. When false,
control elements do not accept input, and all types of elements have a
dimmed appearance.
# FlashPlayer FlashPlayer.helpTip #
FlashPlayer.helpTip #

  String helpTip

Description #

The help text that is displayed when the mouse hovers over the element.
# FlashPlayer FlashPlayer.hide #
FlashPlayer.hide #

  void hide ()

Description #

Hides this element.
# FlashPlayer FlashPlayer.indent #
FlashPlayer.indent #

  Number indent

Description #

The number of pixels to indent the element during automatic layout.

Applies for column orientation and left alignment, or row orientation
and top alignment.
# FlashPlayer FlashPlayer.invokePlayerFunction #
FlashPlayer.invokePlayerFunction #

  any invokePlayerFunction ( String name , any argument )

Parameters #

  ---------- ----------------------------------------------------------------
  name       The name of a Flash ActionScript function that has been
             registered with the ExternalInterface object by the currently
             loaded SWF file.

  argument   An argument to pass through to the function.
  ---------- ----------------------------------------------------------------

Description #

Invokes an ActionScript function defined in the Flash application.

Returns the result of the invoked function, which must be one of the
allowed types. The ActionScript class and date objects are not supported
as return values.
# FlashPlayer FlashPlayer.loadMovie #
FlashPlayer.loadMovie #

  void loadMovie ( File file )

Parameters #

  ------------- ---------------------------------------------------------
  file          The File object for the SWF file to load.

  ------------- ---------------------------------------------------------

Description #

Loads a movie into the Flash Player, and begins playing it.
# FlashPlayer FlashPlayer.location #
FlashPlayer.location #

  Point location

Description #

The upper left corner of this element relative to its parent.

The location is defined as [bounds.x, bounds.y]. Setting an element’s
location changes its bounds property, and vice-versa.
# FlashPlayer FlashPlayer.maximumSize #
FlashPlayer.maximumSize #

  Dimension maximumSize

Description #

The maximum height and width to which the element can be resized.
# FlashPlayer FlashPlayer.minimumSize #
FlashPlayer.minimumSize #

  Dimension minimumSize

Description #

The minimum height and width to which the element can be resized.
# FlashPlayer FlashPlayer.notify #
FlashPlayer.notify #

  void notify ( String eventName )

Parameters #

  ----------------- -----------------------------------------------------
  eventName         The name of the control event handler to call.

  ----------------- -----------------------------------------------------

Description #

Sends a notification message, simulating the specified user interaction
event.
# FlashPlayer FlashPlayer.parent #
FlashPlayer.parent #

  Object parent

Description #

The parent element.
# FlashPlayer FlashPlayer.playMovie #
FlashPlayer.playMovie #

  void playMovie ( Boolean rewind )

Parameters #

  -------- ---------------------------------------------------------------
  rewind   When true, restarts the movie from the beginning; otherwise,
           starts playing from thepoint where it was stopped.

  -------- ---------------------------------------------------------------

Description #

Restarts a movie that has been stopped.

Do not use on a movie that is currently playing.The
stopMovie()-playMovie() sequence does not work for SWF files produced by
Flex, or for some files produced by Flash Authoring (depending on how
they were implemented).
# FlashPlayer FlashPlayer.preferredSize #
FlashPlayer.preferredSize #

  Dimension preferredSize

Description #

The preferred size, used by layout managers to determine the best size
for each element.

If not explicitly set by a script, value is established by the UI
framework in which ScriptUI is employed, and is based on such attributes
of the element as its text, font, font size, icon size, and other UI
framework-specific attributes.A script can explicitly set this value
before the layout manager is invoked in order to establish an element
size other than the default.
# FlashPlayer FlashPlayer.properties #
FlashPlayer.properties #

  Object properties

Description #

An object that contains one or more creation properties of the container
(properties used only when the element is created).

A FlashPlayer object has no creation properties.
# FlashPlayer FlashPlayer.removeEventListener #
FlashPlayer.removeEventListener #

  Boolean removeEventListener ( String eventName , Function handler ,
  Boolean capturePhase )

Parameters #

  -------------- ----------------------------------------------------------
  eventName      The name of the event.

  handler        The function that handles the event.

  capturePhase   Whether to call the handler only in the capturing phase of
                 the event propagation.
  -------------- ----------------------------------------------------------

Description #

Unregisters an event handler for a particular type of event occuring in
this element.

All arguments must be identical to those that were used to register the
event handler.
# FlashPlayer FlashPlayer.show #
FlashPlayer.show #

  void show ()

Description #

Shows this element.

When a window or container is hidden, its children are also hidden, but
when it is shown again, the children retain their own visibility states.
# FlashPlayer FlashPlayer.size #
FlashPlayer.size #

  Dimension size

Description #

The current dimensions of this element.

Initially undefined, and unless explicitly set by a script, it is
defined by a?LayoutManager?. A script can explicitly set size before the
layout manager is invoked to establish an element size other than the
preferredSize or the default size, but this is not recommended. Defined
as [bounds.width, bounds.height]. Setting an element’s size changes its
bounds property, and vice-versa.
# FlashPlayer FlashPlayer.stopMovie #
FlashPlayer.stopMovie #

  void stopMovie ()

Description #

Halts playback of the current movie.

The stopMovie()-playMovie() sequence does not work for SWF files
produced by Flex, or for some files produced by Flash Authoring
(depending on how they were implemented).Using stopMovie() from the
player’s hosting environment has no effect on an SWF file playing in a
ScriptUI Flash Player element. It is, however, possible to produce an
SWF using Flash Authoring that can stop itself in response to user
interaction.
# FlashPlayer FlashPlayer.type #
FlashPlayer.type #

  String type

Description #

The element type, “flashplayer”.
# FlashPlayer FlashPlayer.visible #
FlashPlayer.visible #

  Boolean visible

Description #

True if this element is shown, false if it is hidden.

When a container is hidden, its children are also hidden, but they
retain their own visibility values, and are shown or hidden accordingly
when the parent is next shown.
# FlashPlayer FlashPlayer.windowBounds #
FlashPlayer.windowBounds #

  Bounds windowBounds

Description #

The bounds of this element relative to the top-level parent window.
# FlashPlayer FlashPlayer.window #
FlashPlayer.window #

  Window window

Description #

The window that this element belongs to.
# Group Group.addEventListener #
Group.addEventListener #

  Boolean addEventListener ( String eventName , Function handler ,
  Boolean capturePhase )

Parameters #

  -------------- ----------------------------------------------------------
  eventName      The name of the event.

  handler        The function that handles the event.

  capturePhase   When true, the handler is called only in the capturing
                 phase of the event propagation.
  -------------- ----------------------------------------------------------

Description #

Registers an event handler for a particular type of event occuring in
this element.
# Group Group.add #
Group.add #

  Object add ( String type , Bounds bounds , String text , Object
  properties )

Parameters #

  ------------ ---------------------------------------------------------------
  type         The type of the child element, as specified for the type
               property.

  bounds       A bounds specification that describes the size and position of
               the new control or container, relative to its parent.

  text         The text or label, a localizable string.

  properties   An object that contains one or more creation properties of the
               new child (properties used only when the element is created).
  ------------ ---------------------------------------------------------------

Description #

Adds a child element to this container.

Creates and returns a new control or container object and adds it to the
children of this group.
# Group Group.alignChildren #
Group.alignChildren #

  String alignChildren

Description #

Tells the layout manager how unlike-sized children of this container
should be aligned within a column or row.

Order of creation determines which children are at the top of a column
or the left of a row; the earlier a child is created, the closer it is
to the top or left of its column or row. If defined, alignment for a
child element overrides the alignChildren setting for the parent
container. See alignment property for values.
# Group Group.alignment #
Group.alignment #

  String alignment

Description #

The alignment style for this element. If defined, this value overrides
the alignChildren setting for the parent container.

This can be a single string, which indicates the alignment for the
orientation specified in the parent container, or an array of two
strings, indicating both the horizontal and vertical alignment (in that
order). Allowed values depend on the orientation value of the parent
container. They are not case sensitive. For orientation=row:top, bottom,
fill For orientation=column: left, right, fill For
orientation=stack:top, bottom, left, right, fill
# Group Group.bounds #
Group.bounds #

  Bounds bounds

Description #

The boundaries of the element, in parent-relative coordinates.

Setting an element’s size or location changes its bounds property, and
vice-versa.
# Group Group.children #
Group.children #

  Object children

Description #

An array of child elements.
# Group Group.dispatchEvent #
Group.dispatchEvent #

  Event dispatchEvent ()

Description #

Simulates the occurrence of an event in this target.

A script can create a?UIEvent?object for a specific event and pass it to
this method to start the event propagation for the event.
# Group Group.enabled #
Group.enabled #

  Boolean enabled

Description #

True if this element is enabled.

An enabled element can accept input, according to its type. When false,
control elements do not accept input, and all types of elements have a
dimmed appearance.
# Group Group.graphics #
Group.graphics #

  ScriptUIGraphics graphics

Description #

The graphics object that can be used to customize the element’s
appearance, in response to the?onDraw()?event.
# Group Group.helpTip #
Group.helpTip #

  String helpTip

Description #

The help text that is displayed when the mouse hovers over the element.
# Group Group.hide #
Group.hide #

  void hide ()

Description #

Hides this element.
# Group Group.indent #
Group.indent #

  Number indent

Description #

The number of pixels to indent the element during automatic layout.

Applies for column orientation and left alignment, or row orientation
and top alignment.
# Group Group.layout #
Group.layout #

  LayoutManager layout

Description #

The layout manager for this container.

The first time a container object is made visible, ScriptUI invokes this
layout manager by calling its?layout()?function. Default is an instance
of the?LayoutManager?class that is automatically created when the
container element is created.
# Group Group.location #
Group.location #

  Point location

Description #

The upper left corner of this element relative to its parent.

The location is defined as [bounds.x, bounds.y]. Setting an element’s
location changes its bounds property, and vice-versa.
# Group Group.margins #
Group.margins #

  Number margins

Description #

The number of pixels between the edges of a container and the outermost
child elements.

You can specify different margins for each edge of the container. The
default value is based on the type of container, and is chosen to match
the standard Adobe UI guidelines.
# Group Group.maximumSize #
Group.maximumSize #

  Dimension maximumSize

Description #

The maximum height and width to which the element can be resized.
# Group Group.minimumSize #
Group.minimumSize #

  Dimension minimumSize

Description #

The minimum height and width to which the element can be resized.
# Group Group.onDraw #
Group.onDraw #

  void onDraw ()

Description #

An event-handler callback function, called when the group is about to be
drawn.

Allows the script to modify or control the appearance, using the
control?s associated?ScriptUIGraphics?object. Handler takes one
argument, a?DrawState?object.
# Group Group.orientation #
Group.orientation #

  String orientation

Description #

The layout orientation of children in a container.

Interpreted by the layout manager for the container. The
default?LayoutManager? Object accepts the (case-insensitive) values row,
column, or stack. For window and panel, the default is column, and for
group the default is row. The allowed values for the container?s
alignChildren and its children?s alignment properties depend on the
orientation.
# Group Group.parent #
Group.parent #

  Object parent

Description #

The parent element.
# Group Group.preferredSize #
Group.preferredSize #

  Dimension preferredSize

Description #

The preferred size, used by layout managers to determine the best size
for each element.

If not explicitly set by a script, value is established by the UI
framework in which ScriptUI is employed, and is based on such attributes
of the element as its text, font, font size, icon size, and other UI
framework-specific attributes.A script can explicitly set this value
before the layout manager is invoked in order to establish an element
size other than the default.
# Group Group.properties #
Group.properties #

  Object properties

Description #

An object that contains one or more creation properties of the control
(properties used only when the element is created).

A Group object has no creation properties.
# Group Group.removeEventListener #
Group.removeEventListener #

  Boolean removeEventListener ( String eventName , Function handler ,
  Boolean capturePhase )

Parameters #

  -------------- ----------------------------------------------------------
  eventName      The name of the event.

  handler        The function that handles the event.

  capturePhase   Whether to call the handler only in the capturing phase of
                 the event propagation.
  -------------- ----------------------------------------------------------

Description #

Unregisters an event handler for a particular type of event occuring in
this element.

All arguments must be identical to those that were used to register the
event handler.
# Group Group.remove #
Group.remove #

  void remove (any what )

Parameters #

  ------ ----------------------------------------------------------------
  what   The child control to remove, specified by 0-based index, text
         property value, or as a control object.

  ------ ----------------------------------------------------------------

Description #

Removes the specified child control from this group’s?children?array.

No error results if the child does not exist.
# Group Group.show #
Group.show #

  void show ()

Description #

Shows this element.

When a window or container is hidden, its children are also hidden, but
when it is shown again, the children retain their own visibility states.
# Group Group.size #
Group.size #

  Dimension size

Description #

The current dimensions of this element.

Initially undefined, and unless explicitly set by a script, it is
defined by a?LayoutManager?. A script can explicitly set size before the
layout manager is invoked to establish an element size other than the
preferredSize or the default size, but this is not recommended. Defined
as [bounds.width, bounds.height]. Setting an element’s size changes its
bounds property, and vice-versa.
# Group Group.spacing #
Group.spacing #

  Number spacing

Description #

The number of pixels separating one child element from its adjacent
sibling element.

Because each container holds only a single row or column of children,
only a single spacing value is needed for a container. The default value
is based on the type of container, and is chosen to match standard Adobe
UI guidelines.
# Group Group.type #
Group.type #

  String type

Description #

The element type; “group”.
# Group Group.visible #
Group.visible #

  Boolean visible

Description #

True if this element is shown, false if it is hidden.

When a container is hidden, its children are also hidden, but they
retain their own visibility values, and are shown or hidden accordingly
when the parent is next shown.
# Group Group.windowBounds #
Group.windowBounds #

  Bounds windowBounds

Description #

The bounds of this element relative to the top-level parent window.
# Group Group.window #
Group.window #

  Window window

Description #

The window that this element belongs to.
# IconButton IconButton.active #
IconButton.active #

  Boolean active

Description #

True if this element is active.

An active control is the one with keyboard focus?that is, the one that
accepts keystrokes, or in the case of a?Button, is selected when the
user types Return or Enter in Windows, or the space bar in Mac OS.
# IconButton IconButton.addEventListener #
IconButton.addEventListener #

  Boolean addEventListener ( String eventName , Function handler ,
  Boolean capturePhase )

Parameters #

  -------------- ----------------------------------------------------------
  eventName      The name of the event.

  handler        The function that handles the event.

  capturePhase   When true, the handler is called only in the capturing
                 phase of the event propagation.
  -------------- ----------------------------------------------------------

Description #

Registers an event handler for a particular type of event occuring in
this element.
# IconButton IconButton.alignment #
IconButton.alignment #

  String alignment

Description #

The alignment style for this element. If defined, this value overrides
the alignChildren setting for the parent container.

This can be a single string, which indicates the alignment for the
orientation specified in the parent container, or an array of two
strings, indicating both the horizontal and vertical alignment (in that
order). Allowed values depend on the orientation value of the parent
container. They are not case sensitive. For orientation=row:top, bottom,
fill For orientation=column: left, right, fill For
orientation=stack:top, bottom, left, right, fill
# IconButton IconButton.bounds #
IconButton.bounds #

  Bounds bounds

Description #

The boundaries of the element, in parent-relative coordinates.

Setting an element’s size or location changes its bounds property, and
vice-versa.
# IconButton IconButton.children #
IconButton.children #

  Object children

Description #

An array of child elements.
# IconButton IconButton.dispatchEvent #
IconButton.dispatchEvent #

  Event dispatchEvent ()

Description #

Simulates the occurrence of an event in this target.

A script can create a?UIEvent?object for a specific event and pass it to
this method to start the event propagation for the event.
# IconButton IconButton.enabled #
IconButton.enabled #

  Boolean enabled

Description #

True if this element is enabled.

An enabled element can accept input, according to its type. When false,
control elements do not accept input, and all types of elements have a
dimmed appearance.
# IconButton IconButton.graphics #
IconButton.graphics #

  ScriptUIGraphics graphics

Description #

The graphics object that can be used to customize the element’s
appearance, in response to the?onDraw()?event.
# IconButton IconButton.helpTip #
IconButton.helpTip #

  String helpTip

Description #

The help text that is displayed when the mouse hovers over the element.
# IconButton IconButton.hide #
IconButton.hide #

  void hide ()

Description #

Hides this element.
# IconButton IconButton.image #
IconButton.image #

  ScriptUIImage image

Description #

The image object that defines the image to be drawn.
# IconButton IconButton.indent #
IconButton.indent #

  Number indent

Description #

The number of pixels to indent the element during automatic layout.

Applies for column orientation and left alignment, or row orientation
and top alignment.
# IconButton IconButton.location #
IconButton.location #

  Point location

Description #

The upper left corner of this element relative to its parent.

The location is defined as [bounds.x, bounds.y]. Setting an element’s
location changes its bounds property, and vice-versa.
# IconButton IconButton.maximumSize #
IconButton.maximumSize #

  Dimension maximumSize

Description #

The maximum height and width to which the element can be resized.
# IconButton IconButton.minimumSize #
IconButton.minimumSize #

  Dimension minimumSize

Description #

The minimum height and width to which the element can be resized.
# IconButton IconButton.notify #
IconButton.notify #

  void notify ( String eventName )

Parameters #

  ----------------- -----------------------------------------------------
  eventName         The name of the control event handler to call.

  ----------------- -----------------------------------------------------

Description #

Sends a notification message, simulating the specified user interaction
event.
# IconButton IconButton.onActivate #
IconButton.onActivate #

  void onActivate ()

Description #

An event-handler callback function, called when the element acquires the
keyboard focus.

Called when the user gives the control the keyboard focus by clicking it
or tabbing into it.
# IconButton IconButton.onClick #
IconButton.onClick #

  void onClick ()

Description #

An event-handler callback function, called when the element has been
clicked.
# IconButton IconButton.onDeactivate #
IconButton.onDeactivate #

  void onDeactivate ()

Description #

An event-handler callback function, called when the element loses the
keyboard focus.

Called when the user moves the keyboard focus from the previously active
control to another control.
# IconButton IconButton.onDraw #
IconButton.onDraw #

  void onDraw ()

Description #

An event-handler callback function, called when the window is about to
be drawn.

Allows the script to modify or control the appearance, using the
control?s associated?ScriptUIGraphics?object. Handler takes one
argument, a?DrawState?object.
# IconButton IconButton.onShortcutKey #
IconButton.onShortcutKey #

  void onShortcutKey ()

Description #

An event-handler callback function, called when the element’s
shortcutKey sequence is typed in the active window.

In Windows only.
# IconButton IconButton.parent #
IconButton.parent #

  Object parent

Description #

The parent element.
# IconButton IconButton.preferredSize #
IconButton.preferredSize #

  Dimension preferredSize

Description #

The preferred size, used by layout managers to determine the best size
for each element.

If not explicitly set by a script, value is established by the UI
framework in which ScriptUI is employed, and is based on such attributes
of the element as its text, font, font size, icon size, and other UI
framework-specific attributes.A script can explicitly set this value
before the layout manager is invoked in order to establish an element
size other than the default.
# IconButton IconButton.properties #
IconButton.properties #

  Object properties

Description #

An object that contains one or more creation properties of the container
(properties used only when the element is created).

Creation properties of an IconButton object can include: style: A string
for the visual style, either “button”, which has a visible border with a
raised or 3D appearance, or “toolbutton”, which has a flat appearance,
appropriate for inclusion in a toolbar.
# IconButton IconButton.removeEventListener #
IconButton.removeEventListener #

  Boolean removeEventListener ( String eventName , Function handler ,
  Boolean capturePhase )

Parameters #

  -------------- ----------------------------------------------------------
  eventName      The name of the event.

  handler        The function that handles the event.

  capturePhase   Whether to call the handler only in the capturing phase of
                 the event propagation.
  -------------- ----------------------------------------------------------

Description #

Unregisters an event handler for a particular type of event occuring in
this element.

All arguments must be identical to those that were used to register the
event handler.
# IconButton IconButton.shortcutKey #
IconButton.shortcutKey #

  String shortcutKey

Description #

The key sequence that invokes the?onShortcutKey()?callback for this
element (in Windows only).
# IconButton IconButton.show #
IconButton.show #

  void show ()

Description #

Shows this element.

When a window or container is hidden, its children are also hidden, but
when it is shown again, the children retain their own visibility states.
# IconButton IconButton.size #
IconButton.size #

  Dimension size

Description #

The current dimensions of this element.

Initially undefined, and unless explicitly set by a script, it is
defined by a?LayoutManager?. A script can explicitly set size before the
layout manager is invoked to establish an element size other than the
preferredSize or the default size, but this is not recommended. Defined
as [bounds.width, bounds.height]. Setting an element’s size changes its
bounds property, and vice-versa.
# IconButton IconButton.type #
IconButton.type #

  String type

Description #

The element type; “iconbutton”.
# IconButton IconButton.visible #
IconButton.visible #

  Boolean visible

Description #

True if this element is shown, false if it is hidden.

When a container is hidden, its children are also hidden, but they
retain their own visibility values, and are shown or hidden accordingly
when the parent is next shown.
# IconButton IconButton.windowBounds #
IconButton.windowBounds #

  Bounds windowBounds

Description #

The bounds of this element relative to the top-level parent window.
# IconButton IconButton.window #
IconButton.window #

  Window window

Description #

The window that this element belongs to.
# KeyboardState KeyboardState.altKey #
KeyboardState.altKey #

  Boolean altKey

Description #

True if the Alt or Option key is pressed.
# KeyboardState KeyboardState.ctrlKey #
KeyboardState.ctrlKey #

  Boolean ctrlKey

Description #

True if the Ctrl key is pressed.
# KeyboardState KeyboardState.keyName #
KeyboardState.keyName #

  String keyName

Description #

A string containing the name of the currently pressed key, such as “a”,
or an empty string.
# KeyboardState KeyboardState.metaKey #
KeyboardState.metaKey #

  Boolean metaKey

Description #

True if the Cmd key (in Mac OS) or Windows key (in Windows) is pressed.
# KeyboardState KeyboardState.shiftKey #
KeyboardState.shiftKey #

  Boolean shiftKey

Description #

True if the Shift key is pressed.
# LayoutManager LayoutManager.layout #
LayoutManager.layout #

  void layout ()

Description #

Invokes the automatic layout behavior for the managed container.

Adjusts sizes and positions of the child elements of this window or
container according to the placement and alignment property values in
the parent and children. Invoked automatically the first time the window
is displayed. Thereafter, the script must invoke it explicitly to change
the layout in case of changes in the size or position of the parent or
children.
# LayoutManager LayoutManager.resize #
LayoutManager.resize #

  void resize ()

Description #

Performs a layout after a Window is resized, based on the new size.

Resizes the child elements of the managed container with a given
alignment type, after the window has been resized by the user.
# ListBox ListBox.active #
ListBox.active #

  Boolean active

Description #

True if this element is active.

An active control is the one with keyboard focus?that is, the one that
accepts keystrokes, or in the case of a?Button, is selected when the
user types Return or Enter in Windows, or the space bar in Mac OS.
# ListBox ListBox.addEventListener #
ListBox.addEventListener #

  Boolean addEventListener ( String eventName , Function handler ,
  Boolean capturePhase )

Parameters #

  -------------- ----------------------------------------------------------
  eventName      The name of the event.

  handler        The function that handles the event.

  capturePhase   When true, the handler is called only in the capturing
                 phase of the event propagation.
  -------------- ----------------------------------------------------------

Description #

Registers an event handler for a particular type of event occuring in
this element.
# ListBox ListBox.add #
ListBox.add #

  ListItem add ( String type , String text )

Parameters #

  ----------- -----------------------------------------------------------
  type        The type of the child element, the string “item”.

  text        The localizable text label for the item.
  ----------- -----------------------------------------------------------

Description #

Adds an item to the choices in this list.

Returns the item control object. If this is a multi-column list box,
each added?ListItem?represents one selectable row.
Its?text?and?image?values specify the label in the first column, and
the?subitems?property specifies the labels in the additional columns.
# ListBox ListBox.alignment #
ListBox.alignment #

  String alignment

Description #

The alignment style for this element. If defined, this value overrides
the alignChildren setting for the parent container.

This can be a single string, which indicates the alignment for the
orientation specified in the parent container, or an array of two
strings, indicating both the horizontal and vertical alignment (in that
order). Allowed values depend on the orientation value of the parent
container. They are not case sensitive. For orientation=row:top, bottom,
fill For orientation=column: left, right, fill For
orientation=stack:top, bottom, left, right, fill
# ListBox ListBox.bounds #
ListBox.bounds #

  Bounds bounds

Description #

The boundaries of the element, in parent-relative coordinates.

Setting an element’s size or location changes its bounds property, and
vice-versa.
# ListBox ListBox.children #
ListBox.children #

  Object children

Description #

An array of child?ListItem?elements.
# ListBox ListBox.columns #
ListBox.columns #

  Object columns

Description #

For a multi-column list box, the column properties.

A JavaScript object with two read-only properties whose values are set
by the creation parameters: titles: An array of column title strings,
whose length matches the number of columns specified at creation.
preferredWidths: An array of column widths, whose length matches the
number of columns specified at creation. visible: An array of boolean
visible attributes, whose length matches the number of columns specified
at creation.This property can be used to show/hide a column. Avaiblable
in ScriptUI Version 6.0 or later provided ScriptUI.frameworkName ==
‘Flex’.
# ListBox ListBox.dispatchEvent #
ListBox.dispatchEvent #

  Event dispatchEvent ()

Description #

Simulates the occurrence of an event in this target.

A script can create a?UIEvent?object for a specific event and pass it to
this method to start the event propagation for the event.
# ListBox ListBox.enabled #
ListBox.enabled #

  Boolean enabled

Description #

True if this element is enabled.

An enabled element can accept input, according to its type. When false,
control elements do not accept input, and all types of elements have a
dimmed appearance.
# ListBox ListBox.find #
ListBox.find #

  ListItem find ( String text )

Parameters #

  ------------------- ---------------------------------------------------
  text                The text string to match.

  ------------------- ---------------------------------------------------

Description #

Retrieves an item object from the list that has a given text label.
# ListBox ListBox.graphics #
ListBox.graphics #

  ScriptUIGraphics graphics

Description #

The graphics object that can be used to customize the element’s
appearance, in response to the?onDraw()?event.
# ListBox ListBox.helpTip #
ListBox.helpTip #

  String helpTip

Description #

The help text that is displayed when the mouse hovers over the element.
# ListBox ListBox.hide #
ListBox.hide #

  void hide ()

Description #

Hides this element.
# ListBox ListBox.indent #
ListBox.indent #

  Number indent

Description #

The number of pixels to indent the element during automatic layout.

Applies for column orientation and left alignment, or row orientation
and top alignment.
# ListBox ListBox.items #
ListBox.items #

  ListItem items

Description #

The array of choice items displayed in the list.

Access this array with a 0-based index. To obtain the number of items in
the list, use items.length.The objects are created when items are
specified on creation of the parent list object, or afterward using the
list control?s?add()?method. Each item has a?selected?property that is
true when it is in the selected state.
# ListBox ListBox.itemSize #
ListBox.itemSize #

  Dimension itemSize

Description #

The width and height in pixels of each item in the list.

Used by auto-layout to determine the?preferredSize?of the list, if not
otherwise specified. If not set explicitly, the size of each item is set
to match the largest height and width among all items in the list
# ListBox ListBox.location #
ListBox.location #

  Point location

Description #

The upper left corner of this element relative to its parent.

The location is defined as [bounds.x, bounds.y]. Setting an element’s
location changes its bounds property, and vice-versa.
# ListBox ListBox.maximumSize #
ListBox.maximumSize #

  Dimension maximumSize

Description #

The maximum height and width to which the element can be resized.
# ListBox ListBox.minimumSize #
ListBox.minimumSize #

  Dimension minimumSize

Description #

The minimum height and width to which the element can be resized.
# ListBox ListBox.notify #
ListBox.notify #

  void notify ( String eventName )

Parameters #

  ----------------- -----------------------------------------------------
  eventName         The name of the control event handler to call.

  ----------------- -----------------------------------------------------

Description #

Sends a notification message, simulating the specified user interaction
event.
# ListBox ListBox.onActivate #
ListBox.onActivate #

  void onActivate ()

Description #

An event-handler callback function, called when the element acquires the
keyboard focus.

Called when the user gives the control the keyboard focus by clicking it
or tabbing into it.
# ListBox ListBox.onChange #
ListBox.onChange #

  void onChange ()

Description #

An event-handler callback function, called when the content of the
element has been changed
# ListBox ListBox.onDeactivate #
ListBox.onDeactivate #

  void onDeactivate ()

Description #

An event-handler callback function, called when the element loses the
keyboard focus.

Called when the user moves the keyboard focus from the previously active
control to another control.
# ListBox ListBox.onDoubleClick #
ListBox.onDoubleClick #

  void onDoubleClick ()

Description #

An event-handler callback function, called when an item in the listbox
is double-clicked

Check the?selection?property to identify the item that was
double-clicked.
# ListBox ListBox.onDraw #
ListBox.onDraw #

  void onDraw ()

Description #

An event-handler callback function, called when the window is about to
be drawn.

Allows the script to modify or control the appearance, using the
control?s associated?ScriptUIGraphics?object. Handler takes one
argument, a?DrawState?object.
# ListBox ListBox.onShortcutKey #
ListBox.onShortcutKey #

  void onShortcutKey ()

Description #

An event-handler callback function, called when the
element’s?shortcutKey?sequence is typed in the active window.

In Windows only.
# ListBox ListBox.parent #
ListBox.parent #

  Object parent

Description #

The parent element.
# ListBox ListBox.preferredSize #
ListBox.preferredSize #

  Dimension preferredSize

Description #

The preferred size, used by layout managers to determine the best size
for each element.

If not explicitly set by a script, value is established by the UI
framework in which ScriptUI is employed, and is based on such attributes
of the element as its text, font, font size, icon size, and other UI
framework-specific attributes.A script can explicitly set this value
before the layout manager is invoked in order to establish an element
size other than the default.
# ListBox ListBox.properties #
ListBox.properties #

  Object properties

Description #

An object that contains one or more creation properties of the control
(properties used only when the element is created).

Creation properties of a ListBox object can include: multiselect: When
false (the default), only one item can be selected. When true, multiple
items can be selected. items: An array of strings for the text of each
list item. An item object is created for each item. An item with the
text string “-” creates a separator item. Supply this property, or the
items argument to the?add()?method, not both. This form is most useful
for elements defined using Resource Specifications. numberOfColumns: A
number of columns in which to display the items; default is 1. When
there are multiple columns, each?ListItem?object represents a selectable
row. Its?text?and?image?values specify the label in the first column,
and the?subitems?property specifies the labels in the additional
columns. showHeaders: True to display column titles. columnWidths: An
array of numbers for the preferred width in pixels of each column.
columnTitles: A corresponding array of strings for the title of each
column, to be shown if showHeaders is true.
# ListBox ListBox.removeAll #
ListBox.removeAll #

  void removeAll ()

Description #

Removes all child items from the list.
# ListBox ListBox.removeEventListener #
ListBox.removeEventListener #

  Boolean removeEventListener ( String eventName , Function handler ,
  Boolean capturePhase )

Parameters #

  -------------- ----------------------------------------------------------
  eventName      The name of the event.

  handler        The function that handles the event.

  capturePhase   Whether to call the handler only in the capturing phase of
                 the event propagation.
  -------------- ----------------------------------------------------------

Description #

Unregisters an event handler for a particular type of event occuring in
this element.

All arguments must be identical to those that were used to register the
event handler.
# ListBox ListBox.remove #
ListBox.remove #

  void remove (any what )

Parameters #

  ------- ---------------------------------------------------------------
  what    The item or child to remove, specified by 0-based index, text
          value, or as a?ListItem?object.

  ------- ---------------------------------------------------------------

Description #

Removes a child item from the list.
# ListBox ListBox.selection #
ListBox.selection #

  ListItem selection

Description #

The currently selected item for a single-selection list, or an array of
items for current selection in a multi-selection list.

Setting this value causes the selected item to be highlighted and to be
scrolled into view if necessary. If no items are selected, the value is
null. Set to null to deselect all items. You can set the value using the
index of an item or an array of indices, rather than object references.
If set to an index value that is out of range, the operation is ignored.
When set with index values, the property still returns object
references. If you set the value to an array for a single-selection
list, only the first item in the array is selected. If you set the value
to a single item for a multi-selection list, that item is added to the
current selection.
# ListBox ListBox.shortcutKey #
ListBox.shortcutKey #

  String shortcutKey

Description #

The key sequence that invokes the?onShortcutKey()?callback for this
element (in Windows only).
# ListBox ListBox.show #
ListBox.show #

  void show ()

Description #

Shows this element.

When a window or container is hidden, its children are also hidden, but
when it is shown again, the children retain their own visibility states.
# ListBox ListBox.size #
ListBox.size #

  Dimension size

Description #

The current dimensions of this element.

Initially undefined, and unless explicitly set by a script, it is
defined by a?LayoutManager?. A script can explicitly set size before the
layout manager is invoked to establish an element size other than the
preferredSize or the default size, but this is not recommended. Defined
as [bounds.width, bounds.height]. Setting an element’s size changes its
bounds property, and vice-versa.
# ListBox ListBox.type #
ListBox.type #

  String type

Description #

The element type; “listbox”.
# ListBox ListBox.visible #
ListBox.visible #

  Boolean visible

Description #

True if this element is shown, false if it is hidden.

When a container is hidden, its children are also hidden, but they
retain their own visibility values, and are shown or hidden accordingly
when the parent is next shown.
# ListBox ListBox.windowBounds #
ListBox.windowBounds #

  Bounds windowBounds

Description #

The bounds of this element relative to the top-level parent window.
# ListBox ListBox.window #
ListBox.window #

  Window window

Description #

The window that this element belongs to.
# ListItem ListItem.checked #
ListItem.checked #

  Boolean checked

Description #

The checked state of an item in a list.

When true, the item is marked with the platform-appropriate checkmark.
When false, no checkmark is drawn, but space is reserved for it in the
left margin, so that the item lines up with other checkable items. When
undefined, no space is reserved for a checkmark.
# ListItem ListItem.expanded #
ListItem.expanded #

  Boolean expanded

Description #

The expansion state of an item of type node that is a child of
a?TreeView?list control.

When true, the item is in the expanded state and its children are shown,
when false, it is collapsed and children are hidden.
# ListItem ListItem.image #
ListItem.image #

  ScriptUIImage image

Description #

An image object for an icon to display in the item.

When specified, the image appropriate to the selections state is drawn
to the left of the text label. If the parent is a multi-column list box,
this describes the label in the first column. Labels in additional
columns are described by the?subitems?property.
# ListItem ListItem.index #
ListItem.index #

  Number index

Description #

The 0-based index of this item in the items collection of its parent
list control.
# ListItem ListItem.parent #
ListItem.parent #

  Object parent

Description #

The parent element, a list control.
# ListItem ListItem.properties #
ListItem.properties #

  Object properties

Description #

An object that contains one or more creation properties of the item
(properties used only when the element is created).

A ListItem object has no creation properties.
# ListItem ListItem.selected #
ListItem.selected #

  Boolean selected

Description #

The selection state of this item.

When true, the item is part of the selection for its parent list. When
false, the item is not selected. Set to true to select this item in a
single-selection list, or to add it to the selection array for a
multi-selection list.
# ListItem ListItem.subItems #
ListItem.subItems #

  Array subItems

Description #

When the parent is a multi-column?ListBox, this describes the labels for
this selectable row in additional columns.

A array of JavaScript objects whose length is one less than the number
of columns. The first member describes the label in the second column.
Each member object has two properties, of which you can specify one or
both: text: A display string for the corresponding label. image:
An?ScriptUIImage?object for the corresponding label.
# ListItem ListItem.text #
ListItem.text #

  String text

Description #

The label text to display for the item, a localizable string.

If the parent is a multi-column list box, this describes the label in
the first column. Labels in additional columns are described by
the?subitems?property.
# ListItem ListItem.type #
ListItem.type #

  String type

Description #

The element type.

Normally “item”, but an item whose parent is a?DropDownList?control can
have type “separator”. A separator item is not mouse-sensitive and is
drawn as a horizontal line across the drop-down or pop-up menu.
# Panel Panel.addEventListener #
Panel.addEventListener #

  Boolean addEventListener ( String eventName , Function handler ,
  Boolean capturePhase )

Parameters #

  -------------- ----------------------------------------------------------
  eventName      The name of the event.

  handler        The function that handles the event.

  capturePhase   When true, the handler is called only in the capturing
                 phase of the event propagation.
  -------------- ----------------------------------------------------------

Description #

Registers an event handler for a particular type of event occuring in
this element.
# Panel Panel.add #
Panel.add #

  Object add ( String type , Bounds bounds , String text , Object
  properties )

Parameters #

  ------------ ---------------------------------------------------------------
  type         The type of the child element, as specified for the type
               property.

  bounds       A bounds specification that describes the size and position of
               the new control or container, relative to its parent.

  text         The text or label, a localizable string.

  properties   An object that contains one or more creation properties of the
               new child (properties used only when the element is created).
  ------------ ---------------------------------------------------------------

Description #

Adds a child element to this container.

Creates and returns a new control or container object and adds it to the
children of this group.
# Panel Panel.alignChildren #
Panel.alignChildren #

  String alignChildren

Description #

Specifies how to align the child elements.
# Panel Panel.alignment #
Panel.alignment #

  String alignment

Description #

The alignment style for this element. If defined, this value overrides
the alignChildren setting for the parent container.

This can be a single string, which indicates the alignment for the
orientation specified in the parent container, or an array of two
strings, indicating both the horizontal and vertical alignment (in that
order). Allowed values depend on the orientation value of the parent
container. They are not case sensitive. For orientation=row:top, bottom,
fill For orientation=column: left, right, fill For
orientation=stack:top, bottom, left, right, fill
# Panel Panel.bounds #
Panel.bounds #

  Bounds bounds

Description #

The boundaries of the element, in parent-relative coordinates.

Setting an element’s size or location changes its bounds property, and
vice-versa.
# Panel Panel.characters #
Panel.characters #

  Number characters

Description #

Reserve space for the specified number of characters; affects
calculation of?preferredSize?.
# Panel Panel.children #
Panel.children #

  Object children

Description #

An array of child elements.
# Panel Panel.dispatchEvent #
Panel.dispatchEvent #

  Event dispatchEvent ()

Description #

Simulates the occurrence of an event in this target.

A script can create a?UIEvent?object for a specific event and pass it to
this method to start the event propagation for the event.
# Panel Panel.enabled #
Panel.enabled #

  Boolean enabled

Description #

True if this element is enabled.

An enabled element can accept input, according to its type. When false,
control elements do not accept input, and all types of elements have a
dimmed appearance.
# Panel Panel.graphics #
Panel.graphics #

  ScriptUIGraphics graphics

Description #

The graphics object that can be used to customize the element’s
appearance, in response to the?onDraw()?event.
# Panel Panel.helpTip #
Panel.helpTip #

  String helpTip

Description #

The help text that is displayed when the mouse hovers over the element.
# Panel Panel.hide #
Panel.hide #

  void hide ()

Description #

Hides this element.
# Panel Panel.indent #
Panel.indent #

  Number indent

Description #

The number of pixels to indent the element during automatic layout.

Applies for column orientation and left alignment, or row orientation
and top alignment.
# Panel Panel.justify #
Panel.justify #

  String justify

Description #

The default text justification style for child text elements.

One of left, center, or right. Justification only works if this value is
set on creation of the element.
# Panel Panel.layout #
Panel.layout #

  LayoutManager layout

Description #

The layout manager for this container.

The first time a container object is made visible, ScriptUI invokes this
layout manager by calling its?layout()?function. Default is an instance
of the?LayoutManager?class that is automatically created when the
container element is created.
# Panel Panel.location #
Panel.location #

  Point location

Description #

The upper left corner of this element’s frame relative to its parent.

The location is defined as [bounds.x, bounds.y]. Setting an element’s
location changes its bounds property, and vice-versa.
# Panel Panel.margins #
Panel.margins #

  Number margins

Description #

The number of pixels between the edges of a container and the outermost
child elements.

You can specify different margins for each edge of the container. The
default value is based on the type of container, and is chosen to match
the standard Adobe UI guidelines.
# Panel Panel.maximumSize #
Panel.maximumSize #

  Dimension maximumSize

Description #

The maximum height and width to which the element can be resized.
# Panel Panel.minimumSize #
Panel.minimumSize #

  Dimension minimumSize

Description #

The minimum height and width to which the element can be resized.
# Panel Panel.onDraw #
Panel.onDraw #

  void onDraw ()

Description #

An event-handler callback function, called when the panel is about to be
drawn.

Allows the script to modify or control the appearance, using the
control?s associated?ScriptUIGraphics?object. Handler takes one
argument, a?DrawState?object.
# Panel Panel.orientation #
Panel.orientation #

  String orientation

Description #

The layout orientation of children in a container.

Interpreted by the layout manager for the container. The
default?LayoutManager? Object accepts the (case-insensitive) values row,
column, or stack. For window and panel, the default is column, and for
group the default is row. The allowed values for the container?s
alignChildren and its children?s alignment properties depend on the
orientation.
# Panel Panel.parent #
Panel.parent #

  Object parent

Description #

The parent element.
# Panel Panel.preferredSize #
Panel.preferredSize #

  Dimension preferredSize

Description #

The preferred size, used by layout managers to determine the best size
for each element.

If not explicitly set by a script, value is established by the UI
framework in which ScriptUI is employed, and is based on such attributes
of the element as its text, font, font size, icon size, and other UI
framework-specific attributes.A script can explicitly set this value
before the layout manager is invoked in order to establish an element
size other than the default.
# Panel Panel.properties #
Panel.properties #

  Object properties

Description #

An object that contains one or more creation properties of the control
(properties used only when the element is created).

Creation properties of a Panel object can include: borderStyle: A string
that specifies the appearance of the border drawn around the panel. One
of black, etched, gray, raised, sunken. Default is etched.
su1PanelCoordinates: Photoshop only. When true, this panel automatically
adjusts the positions of its children for compatability with Photoshop
CS. Default is false, meaning that the panel does not adjust the
positions of its children, even if the parent window has automatic
adjustment enabled.
# Panel Panel.removeEventListener #
Panel.removeEventListener #

  Boolean removeEventListener ( String eventName , Function handler ,
  Boolean capturePhase )

Parameters #

  -------------- ----------------------------------------------------------
  eventName      The name of the event.

  handler        The function that handles the event.

  capturePhase   Whether to call the handler only in the capturing phase of
                 the event propagation.
  -------------- ----------------------------------------------------------

Description #

Unregisters an event handler for a particular type of event occuring in
this element.

All arguments must be identical to those that were used to register the
event handler.
# Panel Panel.remove #
Panel.remove #

  void remove (any what )

Parameters #

  ------ ----------------------------------------------------------------
  what   The child control to remove, specified by 0-based index, text
         property value, or as a control object.

  ------ ----------------------------------------------------------------

Description #

Removes the specified child control from this group’s?children?array.

No error results if the child does not exist.
# Panel Panel.show #
Panel.show #

  void show ()

Description #

Shows this element.

When a window or container is hidden, its children are also hidden, but
when it is shown again, the children retain their own visibility states.
# Panel Panel.size #
Panel.size #

  Dimension size

Description #

The current dimensions of this element.

Initially undefined, and unless explicitly set by a script, it is
defined by a?LayoutManager?. A script can explicitly set size before the
layout manager is invoked to establish an element size other than the
preferredSize or the default size, but this is not recommended. Defined
as [bounds.width, bounds.height]. Setting an element’s size changes its
bounds property, and vice-versa.
# Panel Panel.spacing #
Panel.spacing #

  Number spacing

Description #

The number of pixels separating one child element from its adjacent
sibling element.

Because each container holds only a single row or column of children,
only a single spacing value is needed for a container. The default value
is based on the type of container, and is chosen to match standard Adobe
UI guidelines.
# Panel Panel.text #
Panel.text #

  String text

Description #

The title or label text, a localizable string.
# Panel Panel.type #
Panel.type #

  String type

Description #

The element type; “panel”.
# Panel Panel.visible #
Panel.visible #

  Boolean visible

Description #

True if this element is shown, false if it is hidden.

When a container is hidden, its children are also hidden, but they
retain their own visibility values, and are shown or hidden accordingly
when the parent is next shown.
# Panel Panel.windowBounds #
Panel.windowBounds #

  Bounds windowBounds

Description #

The bounds of this element relative to the top-level parent window.
# Panel Panel.window #
Panel.window #

  Window window

Description #

The window that this element belongs to.
# Point Point.left #
Point.left #

  Number left

Description #

The left coordinate.
# Point Point.length #
Point.length #

  Number length

Description #

The array length.
# Point Point.top #
Point.top #

  Number top

Description #

The top coordinate.
# Point Point.x #
Point.x #

  Number x

Description #

The horizontal coordinate, a pixel offset from the origin of the
element’s coordinate space.
# Point Point.y #
Point.y #

  Number y

Description #

The vertical coordinate, a pixel offset from the origin of the element’s
coordinate space.
# Progressbar Progressbar.addEventListener #
Progressbar.addEventListener #

  Boolean addEventListener ( String eventName , Function handler ,
  Boolean capturePhase )

Parameters #

  -------------- ----------------------------------------------------------
  eventName      The name of the event.

  handler        The function that handles the event.

  capturePhase   When true, the handler is called only in the capturing
                 phase of the event propagation.
  -------------- ----------------------------------------------------------

Description #

Registers an event handler for a particular type of event occuring in
this element.
# Progressbar Progressbar.alignment #
Progressbar.alignment #

  String alignment

Description #

The alignment style for this element. If defined, this value overrides
the alignChildren setting for the parent container.

This can be a single string, which indicates the alignment for the
orientation specified in the parent container, or an array of two
strings, indicating both the horizontal and vertical alignment (in that
order). Allowed values depend on the orientation value of the parent
container. They are not case sensitive. For orientation=row:top, bottom,
fill For orientation=column: left, right, fill For
orientation=stack:top, bottom, left, right, fill
# Progressbar Progressbar.bounds #
Progressbar.bounds #

  Bounds bounds

Description #

The boundaries of the element, in parent-relative coordinates.

Setting an element’s size or location changes its bounds property, and
vice-versa.
# Progressbar Progressbar.children #
Progressbar.children #

  Object children

Description #

An array of child elements.
# Progressbar Progressbar.dispatchEvent #
Progressbar.dispatchEvent #

  Event dispatchEvent ()

Description #

Simulates the occurrence of an event in this target.

A script can create a?UIEvent?object for a specific event and pass it to
this method to start the event propagation for the event.
# Progressbar Progressbar.enabled #
Progressbar.enabled #

  Boolean enabled

Description #

True if this element is enabled.

An enabled element can accept input, according to its type. When false,
control elements do not accept input, and all types of elements have a
dimmed appearance.
# Progressbar Progressbar.graphics #
Progressbar.graphics #

  ScriptUIGraphics graphics

Description #

The graphics object that can be used to customize the element’s
appearance, in response to the?onDraw()?event.
# Progressbar Progressbar.helpTip #
Progressbar.helpTip #

  String helpTip

Description #

The help text that is displayed when the mouse hovers over the element.
# Progressbar Progressbar.hide #
Progressbar.hide #

  void hide ()

Description #

Hides this element.
# Progressbar Progressbar.indent #
Progressbar.indent #

  Number indent

Description #

The number of pixels to indent the element during automatic layout.

Applies for column orientation and left alignment, or row orientation
and top alignment.
# Progressbar Progressbar.location #
Progressbar.location #

  Point location

Description #

The upper left corner of this element relative to its parent.

The location is defined as [bounds.x, bounds.y]. Setting an element’s
location changes its bounds property, and vice-versa.
# Progressbar Progressbar.maximumSize #
Progressbar.maximumSize #

  Dimension maximumSize

Description #

The maximum height and width to which the element can be resized.
# Progressbar Progressbar.maxvalue #
Progressbar.maxvalue #

  Number maxvalue

Description #

The maximum value in the range. Default is 100.
# Progressbar Progressbar.minimumSize #
Progressbar.minimumSize #

  Dimension minimumSize

Description #

The minimum height and width to which the element can be resized.
# Progressbar Progressbar.minvalue #
Progressbar.minvalue #

  Number minvalue

Description #

The minimum value in the range; always 0. If set to a different value,
it is ignored.
# Progressbar Progressbar.onDraw #
Progressbar.onDraw #

  void onDraw ()

Description #

An event-handler callback function, called when the window is about to
be drawn.

Allows the script to modify or control the appearance, using the
control?s associated?ScriptUIGraphics?object. Handler takes one
argument, a?DrawState?object.
# Progressbar Progressbar.parent #
Progressbar.parent #

  Object parent

Description #

The parent element.
# Progressbar Progressbar.preferredSize #
Progressbar.preferredSize #

  Dimension preferredSize

Description #

The preferred size, used by layout managers to determine the best size
for each element.

If not explicitly set by a script, value is established by the UI
framework in which ScriptUI is employed, and is based on such attributes
of the element as its text, font, font size, icon size, and other UI
framework-specific attributes.A script can explicitly set this value
before the layout manager is invoked in order to establish an element
size other than the default.
# Progressbar Progressbar.properties #
Progressbar.properties #

  Object properties

Description #

An object that contains one or more creation properties of the container
(properties used only when the element is created).

A ProgressBar object has no creation properties. The third argument of
the?add()?method that creates it is the initial value (default 0), and
the fourth argument is the maximum value of the range (default 100).
# Progressbar Progressbar.removeEventListener #
Progressbar.removeEventListener #

  Boolean removeEventListener ( String eventName , Function handler ,
  Boolean capturePhase )

Parameters #

  -------------- ----------------------------------------------------------
  eventName      The name of the event.

  handler        The function that handles the event.

  capturePhase   Whether to call the handler only in the capturing phase of
                 the event propagation.
  -------------- ----------------------------------------------------------

Description #

Unregisters an event handler for a particular type of event occuring in
this element.

All arguments must be identical to those that were used to register the
event handler.
# Progressbar Progressbar.show #
Progressbar.show #

  void show ()

Description #

Shows this element.

When a window or container is hidden, its children are also hidden, but
when it is shown again, the children retain their own visibility states.
# Progressbar Progressbar.size #
Progressbar.size #

  Dimension size

Description #

The current dimensions of this element.

Initially undefined, and unless explicitly set by a script, it is
defined by a?LayoutManager?. A script can explicitly set size before the
layout manager is invoked to establish an element size other than
the?preferredSize?or the default size, but this is not recommended.
Defined as [bounds.width, bounds.height]. Setting an element’s size
changes its bounds property, and vice-versa.
# Progressbar Progressbar.type #
Progressbar.type #

  String type

Description #

The element type, “progessbar”.
# Progressbar Progressbar.value #
Progressbar.value #

  Number value

Description #

The current position of the indicator.

If set to a value outside the range specified by 0 to?maxvalue, it is
automatically reset to the closest boundary.
# Progressbar Progressbar.visible #
Progressbar.visible #

  Boolean visible

Description #

True if this element is shown, false if it is hidden.

When a container is hidden, its children are also hidden, but they
retain their own visibility values, and are shown or hidden accordingly
when the parent is next shown.
# Progressbar Progressbar.windowBounds #
Progressbar.windowBounds #

  Bounds windowBounds

Description #

The bounds of this element relative to the top-level parent window.
# Progressbar Progressbar.window #
Progressbar.window #

  Window window

Description #

The window that this element belongs to.
# RadioButton RadioButton.active #
RadioButton.active #

  Boolean active

Description #

True if this element is active.

An active control is the one with keyboard focus?that is, the one that
accepts keystrokes, or in the case of a?Button, is selected when the
user types Return or Enter in Windows, or the space bar in Mac OS.
# RadioButton RadioButton.addEventListener #
RadioButton.addEventListener #

  Boolean addEventListener ( String eventName , Function handler ,
  Boolean capturePhase )

Parameters #

  -------------- ----------------------------------------------------------
  eventName      The name of the event.

  handler        The function that handles the event.

  capturePhase   When true, the handler is called only in the capturing
                 phase of the event propagation.
  -------------- ----------------------------------------------------------

Description #

Registers an event handler for a particular type of event occuring in
this element.
# RadioButton RadioButton.alignment #
RadioButton.alignment #

  String alignment

Description #

The alignment style for this element. If defined, this value overrides
the alignChildren setting for the parent container.

This can be a single string, which indicates the alignment for the
orientation specified in the parent container, or an array of two
strings, indicating both the horizontal and vertical alignment (in that
order). Allowed values depend on the orientation value of the parent
container. They are not case sensitive. For orientation=row:top, bottom,
fill For orientation=column: left, right, fill For
orientation=stack:top, bottom, left, right, fill
# RadioButton RadioButton.bounds #
RadioButton.bounds #

  Bounds bounds

Description #

The boundaries of the element, in parent-relative coordinates.

Setting an element’s size or location changes its bounds property, and
vice-versa.
# RadioButton RadioButton.characters #
RadioButton.characters #

  Number characters

Description #

A number of characters for which to reserve space when calculating the
preferred size of the element.
# RadioButton RadioButton.children #
RadioButton.children #

  Object children

Description #

An array of child elements.
# RadioButton RadioButton.dispatchEvent #
RadioButton.dispatchEvent #

  Event dispatchEvent ()

Description #

Simulates the occurrence of an event in this target.

A script can create a?UIEvent?object for a specific event and pass it to
this method to start the event propagation for the event.
# RadioButton RadioButton.enabled #
RadioButton.enabled #

  Boolean enabled

Description #

True if this element is enabled.

An enabled element can accept input, according to its type. When false,
control elements do not accept input, and all types of elements have a
dimmed appearance.
# RadioButton RadioButton.graphics #
RadioButton.graphics #

  ScriptUIGraphics graphics

Description #

The graphics object that can be used to customize the element’s
appearance, in response to the?onDraw?event.
# RadioButton RadioButton.helpTip #
RadioButton.helpTip #

  String helpTip

Description #

The help text that is displayed when the mouse hovers over the element.
# RadioButton RadioButton.hide #
RadioButton.hide #

  void hide ()

Description #

Hides this element.
# RadioButton RadioButton.indent #
RadioButton.indent #

  Number indent

Description #

The number of pixels to indent the element during automatic layout.

Applies for column orientation and left alignment, or row orientation
and top alignment.
# RadioButton RadioButton.justify #
RadioButton.justify #

  String justify

Description #

The default text justification style for child text elements.

One of left, center, or right. Justification only works if this value is
set on creation of the element.
# RadioButton RadioButton.location #
RadioButton.location #

  Point location

Description #

The upper left corner of this element relative to its parent.

The location is defined as [bounds.x, bounds.y]. Setting an element’s
location changes its bounds property, and vice-versa.
# RadioButton RadioButton.maximumSize #
RadioButton.maximumSize #

  Dimension maximumSize

Description #

The maximum height and width to which the element can be resized.
# RadioButton RadioButton.minimumSize #
RadioButton.minimumSize #

  Dimension minimumSize

Description #

The minimum height and width to which the element can be resized.
# RadioButton RadioButton.notify #
RadioButton.notify #

  void notify ( String eventName )

Parameters #

  ----------------- -----------------------------------------------------
  eventName         The name of the control event handler to call.

  ----------------- -----------------------------------------------------

Description #

Sends a notification message, simulating the specified user interaction
event.
# RadioButton RadioButton.onActivate #
RadioButton.onActivate #

  void onActivate ()

Description #

An event-handler callback function, called when the element acquires the
keyboard focus.

Called when the user gives the control the keyboard focus by clicking it
or tabbing into it.
# RadioButton RadioButton.onClick #
RadioButton.onClick #

  void onClick ()

Description #

An event-handler callback function, called when the element has been
clicked.
# RadioButton RadioButton.onDeactivate #
RadioButton.onDeactivate #

  void onDeactivate ()

Description #

An event-handler callback function, called when the element loses the
keyboard focus.

Called when the user moves the keyboard focus from the previously active
control to another control.
# RadioButton RadioButton.onDraw #
RadioButton.onDraw #

  void onDraw ()

Description #

An event-handler callback function, called when the window is about to
be drawn.

Allows the script to modify or control the appearance, using the
control?s associated?ScriptUIGraphics?object. Handler takes one
argument, a?DrawState?object.
# RadioButton RadioButton.onShortcutKey #
RadioButton.onShortcutKey #

  void onShortcutKey ()

Description #

An event-handler callback function, called when the
element’s?shortcutKey?sequence is typed in the active window.

In Windows only.
# RadioButton RadioButton.parent #
RadioButton.parent #

  Object parent

Description #

The parent element.
# RadioButton RadioButton.preferredSize #
RadioButton.preferredSize #

  Dimension preferredSize

Description #

The preferred size, used by layout managers to determine the best size
for each element.

If not explicitly set by a script, value is established by the UI
framework in which ScriptUI is employed, and is based on such attributes
of the element as its text, font, font size, icon size, and other UI
framework-specific attributes. A script can explicitly set this value
before the layout manager is invoked in order to establish an element
size other than the default.
# RadioButton RadioButton.properties #
RadioButton.properties #

  Object properties

Description #

An object that contains one or more creation properties of the container
(properties used only when the element is created).

A RadioButton object has no creation properties. The third argument of
the?add()?method that creates can be the label text.
# RadioButton RadioButton.removeEventListener #
RadioButton.removeEventListener #

  Boolean removeEventListener ( String eventName , Function handler ,
  Boolean capturePhase )

Parameters #

  -------------- ----------------------------------------------------------
  eventName      The name of the event.

  handler        The function that handles the event.

  capturePhase   Whether to call the handler only in the capturing phase of
                 the event propagation.
  -------------- ----------------------------------------------------------

Description #

Unregisters an event handler for a particular type of event occuring in
this element.

All arguments must be identical to those that were used to register the
event handler.
# RadioButton RadioButton.shortcutKey #
RadioButton.shortcutKey #

  String shortcutKey

Description #

The key sequence that invokes the?onShortcutKey()?callback for this
element (in Windows only).
# RadioButton RadioButton.show #
RadioButton.show #

  void show ()

Description #

Shows this element.

When a window or container is hidden, its children are also hidden, but
when it is shown again, the children retain their own visibility states.
# RadioButton RadioButton.size #
RadioButton.size #

  Dimension size

Description #

The current dimensions of this element.

Initially undefined, and unless explicitly set by a script, it is
defined by a?LayoutManager?. A script can explicitly set size before the
layout manager is invoked to establish an element size other than
the?preferredSize?or the default size, but this is not recommended.
Defined as [bounds.width, bounds.height]. Setting an element’s size
changes its bounds property, and vice-versa.
# RadioButton RadioButton.text #
RadioButton.text #

  String text

Description #

The label text for this button, a localizable string.
# RadioButton RadioButton.type #
RadioButton.type #

  String type

Description #

The element type; “radiobutton”.
# RadioButton RadioButton.value #
RadioButton.value #

  Boolean value

Description #

The selection state of this button, selected when true.
# RadioButton RadioButton.visible #
RadioButton.visible #

  Boolean visible

Description #

True if this element is shown, false if it is hidden.

When a container is hidden, its children are also hidden, but they
retain their own visibility values, and are shown or hidden accordingly
when the parent is next shown.
# RadioButton RadioButton.windowBounds #
RadioButton.windowBounds #

  Bounds windowBounds

Description #

The bounds of this element relative to the top-level parent window.
# RadioButton RadioButton.window #
RadioButton.window #

  Window window

Description #

The window that this element belongs to.
# ScriptUI ScriptUI.Alignment #
ScriptUI.Alignment #

  String Alignment

Description #

Collects the enumerated values that can be used in the alignment and
alignChildren properties of controls and containers.

Predefined alignment values are: TOP, BOTTOM, LEFT, RIGHT, FILL, CENTER
# ScriptUI ScriptUI.applicationFonts #
ScriptUI.applicationFonts #

  Object applicationFonts

Description #

The font constants defined by the host application.
# ScriptUIBrush ScriptUIBrush.color #
ScriptUIBrush.color #

  Number color

Description #

The brush color.

The paint color to use when the type is SOLID_COLOR. An array in the
form [R, B, G, A] specifying the red, green, blue values of the color
and the opacity (alpha channel) value as numbers in the range
[0.0..1.0]. An opacity of 0 is fully transparent, and an opacity of 1 is
fully opaque.
# ScriptUIBrush ScriptUIBrush.theme #
ScriptUIBrush.theme #

  String theme

Description #

The theme name.

The name of a color theme to use for drawing when the type is
THEME_COLOR. Theme colors are defined by the host application.
# ScriptUIBrush ScriptUIBrush.type #
ScriptUIBrush.type #

  Number type

Description #

The brush type, solid or theme.

One of these constants: ScriptUIGraphics.BrushType.SOLID_COLOR or
ScriptUIGraphics.BrushType.THEME_COLOR
# ScriptUI ScriptUI.compatibility #
ScriptUI.compatibility #

  Object compatibility

Description #

An object whose properties are the names of compatability modes
supported by the host application.

The presence of ScriptUI.compatability.su1PanelCoordinates means that
the application allows backward compatibility with the coordinate system
of Panel elements in ScriptUI version 1.
# ScriptUI ScriptUI.coreVersion #
ScriptUI.coreVersion #

  String coreVersion

Description #

A string containing the internal version number of the ScriptUI module.
# ScriptUI ScriptUI.environment #
ScriptUI.environment #

  Environment environment

Description #

An object whose properties define attributes of the environment in which
ScriptUI operates.
# ScriptUI ScriptUI.events #
ScriptUI.events #

  Events events

Description #

An object whose properties and methods provide access to objects used in
the ScriptUI event system.

It contains one function, createEvent(), which allows you to create
event objects in order to simulate user-interaction event
# ScriptUIFont ScriptUIFont.family #
ScriptUIFont.family #

  String family

Description #

The font family name.
# ScriptUIFont ScriptUIFont.name #
ScriptUIFont.name #

  String name

Description #

The complete font name, consisting of the family and style, if
specified.
# ScriptUIFont ScriptUIFont.size #
ScriptUIFont.size #

  Number size

Description #

The font point size.
# ScriptUIFont ScriptUIFont.style #
ScriptUIFont.style #

  Object style

Description #

The font style. One of the constants in?ScriptUIGraphics.FontStyle.
# ScriptUI ScriptUI.FontStyle #
ScriptUI.FontStyle #

  Object FontStyle

Description #

Collects the enumerated values that can be used as the style argument to
the?ScriptUI.newFont()?method.

Predefined styles are REGULAR, BOLD, ITALIC, BOLDITALIC.
# ScriptUIFont ScriptUIFont.substitute #
ScriptUIFont.substitute #

  String substitute

Description #

The name of a substitution font, a fallback font to substitute for this
font if the requested font family or style is not available.
# ScriptUI ScriptUI.frameworkName #
ScriptUI.frameworkName #

  String frameworkName

Description #

A string containing the name of the UI component framework with which
this version of ScriptUI is compatible.
# ScriptUI ScriptUI.getResourceText #
ScriptUI.getResourceText #

  String getResourceText ( String text )

Parameters #

  ----------------------- -----------------------------------------------
  text                    The text to match.

  ----------------------- -----------------------------------------------

Description #

Finds and returns the resource for a given text string from the host
application’s resource data.

If no string resource matches the given text, the text itself is
returned.
# ScriptUIGraphics ScriptUIGraphics.backgroundColor #
ScriptUIGraphics.backgroundColor #

  ScriptUIBrush backgroundColor

Description #

The background color for containers; for non-containers, the parent
background color.

The paint color and style is defined in this brush object.This property
is only supported for controls like dropdownlist, edittext, and listbox.
# ScriptUIGraphics ScriptUIGraphics.BrushType #
ScriptUIGraphics.BrushType #

  Object BrushType

Description #

Contains the enumerated constants for the type argument of?newBrush().

Type constants are: SOLID_COLOR, THEME_COLOR.
# ScriptUIGraphics ScriptUIGraphics.closePath #
ScriptUIGraphics.closePath #

  void closePath ()

Description #

Closes the current path.

Defines a line from the current postion (currentPoint) to the start
point of the current path (the value of?currentPath).
# ScriptUIGraphics ScriptUIGraphics.currentPath #
ScriptUIGraphics.currentPath #

  ScriptUIPath currentPath

Description #

The current drawing path, encapsulated in a path object.
# ScriptUIGraphics ScriptUIGraphics.currentPoint #
ScriptUIGraphics.currentPoint #

  Point currentPoint

Description #

The current position in the current drawing path.
# ScriptUIGraphics ScriptUIGraphics.disabledBackgroundColor #
ScriptUIGraphics.disabledBackgroundColor #

  ScriptUIBrush disabledBackgroundColor

Description #

The background color for containers when disabled or inactive; for
non-containers, the parent background color.

The paint color and style is defined in this brush object.This property
is only supported for controls like dropdownlist, edittext, and listbox.
# ScriptUIGraphics ScriptUIGraphics.disabledForegroundColor #
ScriptUIGraphics.disabledForegroundColor #

  ScriptUIPen disabledForegroundColor

Description #

The text color when the element is disabled or inactive.

The paint color and style is defined in this pen object.
# ScriptUIGraphics ScriptUIGraphics.drawFocusRing #
ScriptUIGraphics.drawFocusRing #

  void drawFocusRing ( Number left , Number top , Number width , Number
  height )

Parameters #

  ----------------- -----------------------------------------------------
  left              The left coordinate of the region.

  top               The top coordinate of the region.

  width             The width of the region in pixels.

  height            The height of the region in pixels.
  ----------------- -----------------------------------------------------

Description #

Draws a focus ring within a region of this element.
# ScriptUIGraphics ScriptUIGraphics.drawImage #
ScriptUIGraphics.drawImage #

  void drawImage ( ScriptUIImage image , Number left , Number top ,
  Number width , Number height )

Parameters #

  -------- ----------------------------------------------------------------
  image    The image to draw.

  left     The left coordinate of the region, relative to the origin of
           this element.

  top      The top coordinate of the region, relative to the origin of this
           element.

  width    The width in pixels. If provided, the image is stretched or
           shrunk to fit. If omitted, uses the original image width.

  height   The height in pixels. If provided, the image is stretched or
           shrunk to fit. If omitted, uses the original image height.
  -------- ----------------------------------------------------------------

Description #

Draws an image within a given region of the element.

Uses the version of the image that is appropriate to the element’s
current state.
# ScriptUIGraphics ScriptUIGraphics.drawOSControl #
ScriptUIGraphics.drawOSControl #

  void drawOSControl ()

Description #

Draw the platform-specific control associated with this element.
# ScriptUIGraphics ScriptUIGraphics.drawString #
ScriptUIGraphics.drawString #

  void drawString ( String text , ScriptUIPen pen , Number x , Number y
  , ScriptUIFont font )

Parameters #

  --------- -------------------------------------------------------------
  text      The text string.

  pen       The drawing pen to use.

  x         The left coordinate, relative to the origin of this element.

  y         The top coordinate, relative to the origin of this element.

  font      The font to use. Default is the ?font?value in this object.
  --------- -------------------------------------------------------------

Description #

Draw a string of text starting at a given point in this element, using a
given drawing pen and font.
# ScriptUIGraphics ScriptUIGraphics.ellipsePath #
ScriptUIGraphics.ellipsePath #

  Point ellipsePath ( Number left , Number top , Number width , Number
  height )

Parameters #

  --------- -------------------------------------------------------------
  left      The left coordinate of the region, relative to the origin of
            this element.

  top       The top coordinate of the region, relative to the origin of
            this element.

  width     The width of the region in pixels.

  height    The height of the region in pixels.
  --------- -------------------------------------------------------------

Description #

Defines an elliptical path within a given rectangular area in
the?currentPath?object, which can be filled using?fillPath()?or stroked
using?strokePath().

Returns a?Point?object for the upper left corner of the area, which is
the new?currentPoint.
# ScriptUIGraphics ScriptUIGraphics.fillPath #
ScriptUIGraphics.fillPath #

  void fillPath ( ScriptUIBrush brush , ScriptUIPath path )

Parameters #

  ------------- ---------------------------------------------------------
  brush         The brush object that defines the fill color.

  path          The path object. Default is the?currentPath.
  ------------- ---------------------------------------------------------

Description #

Fills a path using a given painting brush.
# ScriptUIGraphics ScriptUIGraphics.font #
ScriptUIGraphics.font #

  ScriptUIFont font

Description #

The default font to use for displaying text.
# ScriptUIGraphics ScriptUIGraphics.foregroundColor #
ScriptUIGraphics.foregroundColor #

  ScriptUIPen foregroundColor

Description #

The text color.

The paint color and style is defined in this pen object.
# ScriptUIGraphics ScriptUIGraphics.lineTo #
ScriptUIGraphics.lineTo #

  Point lineTo ( Number x , Number y )

Parameters #

  ----- -----------------------------------------------------------------
  x     The X coordinate for the destination point, relative to the
        origin of this element.

  y     The Y coordinate for the destination point, relative to the
        origin of this element.
  ----- -----------------------------------------------------------------

Description #

Adds a path segment to the?currentPath.

The line is defined from the?currentPoint?to the specified destination
point. Returns the?Point?object for the destination point, which becomes
the new value of?currentPoint.
# ScriptUIGraphics ScriptUIGraphics.measureString #
ScriptUIGraphics.measureString #

  Dimension measureString ( String text , ScriptUIFont font , Number
  boundingWidth )

Parameters #

  ----------------- -----------------------------------------------------
  text              The text string to measure.

  font              The font to use. Default is the?font?value in this
                    object.

  boundingWidth     The bounding width.
  ----------------- -----------------------------------------------------

Description #

Calculates the size needed to display a string using the given font.

Returns a?Dimension?object that contains the height and width of the
string in pixels.
# ScriptUIGraphics ScriptUIGraphics.moveTo #
ScriptUIGraphics.moveTo #

  Point moveTo ( Number x , Number y )

Parameters #

  ----- -----------------------------------------------------------------
  x     The X coordinate for the new point, relative to the origin of
        this element.

  y     The Y coordinate for the new point, relative to the origin of
        this element.
  ----- -----------------------------------------------------------------

Description #

Adds a given point to the?currentPath, and makes it the current drawing
position.

Returns the?Point?object which is the new value of?currentPoint.
# ScriptUIGraphics ScriptUIGraphics.newBrush #
ScriptUIGraphics.newBrush #

  ScriptUIBrush newBrush ( Number type , Number color )

Parameters #

  ----------------- -----------------------------------------------------
  type              The brush type, solid or theme.

  color             The brush color.
  ----------------- -----------------------------------------------------

Description #

Creates a new painting brush object.
# ScriptUIGraphics ScriptUIGraphics.newPath #
ScriptUIGraphics.newPath #

  ScriptUIPath newPath ()

Description #

Creates a new, empty path object.

Replaces any existing path in?currentPath.
# ScriptUIGraphics ScriptUIGraphics.newPen #
ScriptUIGraphics.newPen #

  ScriptUIPen newPen ( Number type , Number color , Number width )

Parameters #

  --------------- -------------------------------------------------------
  type            The pen type, solid or theme.

  color           The pen color.

  width           The width of the pen line in pixels.
  --------------- -------------------------------------------------------

Description #

Creates a new drawing pen object.
# ScriptUIGraphics ScriptUIGraphics.PenType #
ScriptUIGraphics.PenType #

  Object PenType

Description #

Contains the enumerated constants for the type argument of?newPen().

Type constants are: SOLID_COLOR, THEME_COLOR.
# ScriptUIGraphics ScriptUIGraphics.rectPath #
ScriptUIGraphics.rectPath #

  Point rectPath ( Number left , Number top , Number width , Number
  height )

Parameters #

  ----------- -----------------------------------------------------------
  left        The left coordinate relative to the origin of this element.

  top         The top coordinate relative to the origin of this element.

  width       The width in pixels.

  height      The height in pixels.
  ----------- -----------------------------------------------------------

Description #

Defines a rectangular path in the?currentPath?object.

The rectangle can be filled using?fillPath()?or stroked
using?strokePath().Returns the?Point?object for the upper left corner of
the rectangle, which becomes the new value of?currentPoint.
# ScriptUIGraphics ScriptUIGraphics.strokePath #
ScriptUIGraphics.strokePath #

  void strokePath ( ScriptUIPen pen , ScriptUIPath path )

Parameters #

  ---------- ------------------------------------------------------------
  pen        The drawing pen that defines the color and line width.

  path       The path object. Default is the?currentPath.
  ---------- ------------------------------------------------------------

Description #

Strokes the path segments of a path with a given drawing pen.
# ScriptUIImage ScriptUIImage.format #
ScriptUIImage.format #

  String format

Description #

The image format. One of: resource, JPEG, GIF, TIFF, PNG, or PICT
(Macintosh).
# ScriptUIImage ScriptUIImage.name #
ScriptUIImage.name #

  String name

Description #

The image name. Either the file name, or the resource name.
# ScriptUIImage ScriptUIImage.pathname #
ScriptUIImage.pathname #

  String pathname

Description #

The full path to the file that contains the image.
# ScriptUIImage ScriptUIImage.size #
ScriptUIImage.size #

  Dimension size

Description #

The image size in pixels.
# ScriptUI ScriptUI.newFont #
ScriptUI.newFont #

  ScriptUIFont newFont ( String name , String style , Number size )

Parameters #

  --------- -------------------------------------------------------------
  name      The font name, or the font family name.

  style     The font style; can be string, or one of the values
            of?ScriptUI.FontStyle.

  size      The font size in points.
  --------- -------------------------------------------------------------

Description #

Creates a new font object for use in text controls and titles.
# ScriptUI ScriptUI.newImage #
ScriptUI.newImage #

  ScriptUIImage newImage ( String normal , String disabled , String
  pressed , String rollover )

Parameters #

  ---------- -------------------------------------------------------------
  normal     The resource name or the disk file path to the image used for
             the normal state.

  disabled   The resource name, or the disk file path to the image used
             for the disabled state.

  pressed    The resource name, or the file-system path to the image used
             for the pressed state.

  rollover   The resource name, or the file-system path to the image used
             for the rollover state.
  ---------- -------------------------------------------------------------

Description #

Loads a new image from resources or disk files into an image object.

Creates a new global image object for use in controls that can display
images, loading the associated images from the specified resources or
image files.
# ScriptUIPen ScriptUIPen.color #
ScriptUIPen.color #

  Number color

Description #

The pen color.

The paint color to use when the type is SOLID_COLOR. An array in the
form [R, B, G, A] specifying the red, green, blue values of the color
and the opacity (alpha channel) value as numbers in the range
[0.0..1.0]. An opacity of 0 is fully transparent, and an opacity of 1 is
fully opaque.
# ScriptUIPen ScriptUIPen.lineWidth #
ScriptUIPen.lineWidth #

  Number lineWidth

Description #

The pixel width of the drawing line.
# ScriptUIPen ScriptUIPen.theme #
ScriptUIPen.theme #

  String theme

Description #

The theme name.

The name of a color theme to use for drawing when the type is
THEME_COLOR. Theme colors are defined by the host application.
# ScriptUIPen ScriptUIPen.type #
ScriptUIPen.type #

  String type

Description #

The pen type, solid or theme.

One of these constants: ScriptUIGraphics.PenType.SOLID_COLOR or
ScriptUIGraphics.PenType.THEME_COLOR
# ScriptUI ScriptUI.version #
ScriptUI.version #

  any version

Description #

A string containing the version number of the ScriptUI component
framework
# Scrollbar Scrollbar.active #
Scrollbar.active #

  Boolean active

Description #

True if this element is active.

An active control is the one with keyboard focus?that is, the one that
accepts keystrokes, or in the case of a?Button, is selected when the
user types Return or Enter in Windows, or the space bar in Mac OS.
# Scrollbar Scrollbar.addEventListener #
Scrollbar.addEventListener #

  Boolean addEventListener ( String eventName , Function handler ,
  Boolean capturePhase )

Parameters #

  -------------- ----------------------------------------------------------
  eventName      The name of the event.

  handler        The function that handles the event.

  capturePhase   When true, the handler is called only in the capturing
                 phase of the event propagation.
  -------------- ----------------------------------------------------------

Description #

Registers an event handler for a particular type of event occuring in
this element.
# Scrollbar Scrollbar.alignment #
Scrollbar.alignment #

  String alignment

Description #

The alignment style for this element. If defined, this value overrides
the alignChildren setting for the parent container.

This can be a single string, which indicates the alignment for the
orientation specified in the parent container, or an array of two
strings, indicating both the horizontal and vertical alignment (in that
order). Allowed values depend on the orientation value of the parent
container. They are not case sensitive. For orientation=row:top, bottom,
fill For orientation=column: left, right, fill For
orientation=stack:top, bottom, left, right, fill
# Scrollbar Scrollbar.bounds #
Scrollbar.bounds #

  Bounds bounds

Description #

The boundaries of the element, in parent-relative coordinates.

Setting an element’s size or location changes its bounds property, and
vice-versa.
# Scrollbar Scrollbar.children #
Scrollbar.children #

  Object children

Description #

An array of child elements.
# Scrollbar Scrollbar.dispatchEvent #
Scrollbar.dispatchEvent #

  Event dispatchEvent ()

Description #

Simulates the occurrence of an event in this target.

A script can create a?UIEvent?object for a specific event and pass it to
this method to start the event propagation for the event.
# Scrollbar Scrollbar.enabled #
Scrollbar.enabled #

  Boolean enabled

Description #

True if this element is enabled.

An enabled element can accept input, according to its type. When false,
control elements do not accept input, and all types of elements have a
dimmed appearance.
# Scrollbar Scrollbar.graphics #
Scrollbar.graphics #

  ScriptUIGraphics graphics

Description #

The graphics object that can be used to customize the element’s
appearance, in response to the?onDraw()?event.
# Scrollbar Scrollbar.helpTip #
Scrollbar.helpTip #

  String helpTip

Description #

The help text that is displayed when the mouse hovers over the element.
# Scrollbar Scrollbar.hide #
Scrollbar.hide #

  void hide ()

Description #

Hides this element.
# Scrollbar Scrollbar.indent #
Scrollbar.indent #

  Number indent

Description #

The number of pixels to indent the element during automatic layout.

Applies for column orientation and left alignment, or row orientation
and top alignment.
# Scrollbar Scrollbar.jumpdelta #
Scrollbar.jumpdelta #

  Number jumpdelta

Description #

The amount to increment or decrement a scrollbar indicator’s position
when the user clicks ahead or behind the moveable element.

Default is 20% of the range between the maxvalue and minvalue property
values.
# Scrollbar Scrollbar.location #
Scrollbar.location #

  Point location

Description #

The upper left corner of this element relative to its parent.

The location is defined as [bounds.x, bounds.y]. Setting an element’s
location changes its bounds property, and vice-versa.
# Scrollbar Scrollbar.maximumSize #
Scrollbar.maximumSize #

  Dimension maximumSize

Description #

The maximum height and width to which the element can be resized.
# Scrollbar Scrollbar.maxvalue #
Scrollbar.maxvalue #

  Number maxvalue

Description #

The maximum value allowed in the value property.

Together with?minvalue, sets the scrolling range. Default is 100.
# Scrollbar Scrollbar.minimumSize #
Scrollbar.minimumSize #

  Dimension minimumSize

Description #

The minimum height and width to which the element can be resized.
# Scrollbar Scrollbar.minvalue #
Scrollbar.minvalue #

  Number minvalue

Description #

The minimum value allowed in the value property.

Together with ?maxvalue, sets the scrolling range.Default is 0.
# Scrollbar Scrollbar.notify #
Scrollbar.notify #

  void notify ( String eventName )

Parameters #

  ----------------- -----------------------------------------------------
  eventName         The name of the control event handler to call.

  ----------------- -----------------------------------------------------

Description #

Sends a notification message, simulating the specified user interaction
event.
# Scrollbar Scrollbar.onActivate #
Scrollbar.onActivate #

  void onActivate ()

Description #

An event-handler callback function, called when the element acquires the
keyboard focus.

Called when the user gives the control the keyboard focus by clicking it
or tabbing into it.
# Scrollbar Scrollbar.onChange #
Scrollbar.onChange #

  void onChange ()

Description #

An event-handler callback function, called when the user has finished
dragging the position indicator, or has clicked the control.
# Scrollbar Scrollbar.onChanging #
Scrollbar.onChanging #

  void onChanging ()

Description #

An event-handler callback function, called when the content of the
element is in the process of changing

The handler is called for any motion of the position indicator while
this control has the input focus.
# Scrollbar Scrollbar.onDeactivate #
Scrollbar.onDeactivate #

  void onDeactivate ()

Description #

An event-handler callback function, called when the element loses the
keyboard focus.

Called when the user moves the keyboard focus from the previously active
control to another control.
# Scrollbar Scrollbar.onDraw #
Scrollbar.onDraw #

  void onDraw ()

Description #

An event-handler callback function, called when the window is about to
be drawn.

Allows the script to modify or control the appearance, using the
control?s associated?ScriptUIGraphics?object. Handler takes one
argument, a?DrawState?object.
# Scrollbar Scrollbar.onShortcutKey #
Scrollbar.onShortcutKey #

  void onShortcutKey ()

Description #

An event-handler callback function, called when the
element’s?shortcutKey?sequence is typed in the active window.

In Windows only.
# Scrollbar Scrollbar.parent #
Scrollbar.parent #

  Object parent

Description #

The parent element.
# Scrollbar Scrollbar.preferredSize #
Scrollbar.preferredSize #

  Dimension preferredSize

Description #

The preferred size, used by layout managers to determine the best size
for each element.

If not explicitly set by a script, value is established by the UI
framework in which ScriptUI is employed, and is based on such attributes
of the element as its text, font, font size, icon size, and other UI
framework-specific attributes.A script can explicitly set this value
before the layout manager is invoked in order to establish an element
size other than the default.
# Scrollbar Scrollbar.properties #
Scrollbar.properties #

  Object properties

Description #

An object that contains one or more creation properties of the container
(properties used only when the element is created).

A Scrollbar object has no creation properties. The third argument of
the?add()?method that creates it is the initial value, and the fourth
and fifth arguments are the minimum and maximum values of the range.
# Scrollbar Scrollbar.removeEventListener #
Scrollbar.removeEventListener #

  Boolean removeEventListener ( String eventName , Function handler ,
  Boolean capturePhase )

Parameters #

  -------------- ----------------------------------------------------------
  eventName      The name of the event.

  handler        The function that handles the event.

  capturePhase   Whether to call the handler only in the capturing phase of
                 the event propagation.
  -------------- ----------------------------------------------------------

Description #

Unregisters an event handler for a particular type of event occuring in
this element.

All arguments must be identical to those that were used to register the
event handler.
# Scrollbar Scrollbar.shortcutKey #
Scrollbar.shortcutKey #

  String shortcutKey

Description #

The key sequence that invokes the ?onShortcutKey()?callback for this
element (in Windows only).
# Scrollbar Scrollbar.show #
Scrollbar.show #

  void show ()

Description #

Shows this element.

When a window or container is hidden, its children are also hidden, but
when it is shown again, the children retain their own visibility states.
# Scrollbar Scrollbar.size #
Scrollbar.size #

  Dimension size

Description #

The current dimensions of this element.

Initially undefined, and unless explicitly set by a script, it is
defined by a?LayoutManager?. A script can explicitly set size before the
layout manager is invoked to establish an element size other than
the?preferredSize?or the default size, but this is not recommended.
Defined as [bounds.width, bounds.height]. Setting an element’s size
changes its bounds property, and vice-versa.
# Scrollbar Scrollbar.stepdelta #
Scrollbar.stepdelta #

  Number stepdelta

Description #

The amount by which to increment or decrement a scrollbar element’s
position when the user clicks a stepper button.
# Scrollbar Scrollbar.type #
Scrollbar.type #

  String type

Description #

The element type, “scrollbar”.
# Scrollbar Scrollbar.value #
Scrollbar.value #

  Number value

Description #

The current position of the indicator.

If set to a value outside the range specified by minvalue and maxvalue,
it is automatically reset to the closest boundary.
# Scrollbar Scrollbar.visible #
Scrollbar.visible #

  Boolean visible

Description #

True if this element is shown, false if it is hidden.

When a container is hidden, its children are also hidden, but they
retain their own visibility values, and are shown or hidden accordingly
when the parent is next shown.
# Scrollbar Scrollbar.windowBounds #
Scrollbar.windowBounds #

  Bounds windowBounds

Description #

The bounds of this element relative to the top-level parent window.
# Scrollbar Scrollbar.window #
Scrollbar.window #

  Window window

Description #

The window that this element belongs to.
# Slider Slider.active #
Slider.active #

  Boolean active

Description #

True if this element is active.

An active control is the one with keyboard focus?that is, the one that
accepts keystrokes, or in the case of a?Button, is selected when the
user types Return or Enter in Windows, or the space bar in Mac OS.
# Slider Slider.addEventListener #
Slider.addEventListener #

  Boolean addEventListener ( String eventName , Function handler ,
  Boolean capturePhase )

Parameters #

  -------------- ----------------------------------------------------------
  eventName      The name of the event.

  handler        The function that handles the event.

  capturePhase   When true, the handler is called only in the capturing
                 phase of the event propagation.
  -------------- ----------------------------------------------------------

Description #

Registers an event handler for a particular type of event occuring in
this element.
# Slider Slider.alignment #
Slider.alignment #

  String alignment

Description #

The alignment style for this element. If defined, this value overrides
the alignChildren setting for the parent container.

This can be a single string, which indicates the alignment for the
orientation specified in the parent container, or an array of two
strings, indicating both the horizontal and vertical alignment (in that
order). Allowed values depend on the orientation value of the parent
container. They are not case sensitive. For orientation=row:top, bottom,
fill For orientation=column: left, right, fill For
orientation=stack:top, bottom, left, right, fill
# Slider Slider.bounds #
Slider.bounds #

  Bounds bounds

Description #

The boundaries of the element, in parent-relative coordinates.

Setting an element’s size or location changes its bounds property, and
vice-versa.
# Slider Slider.children #
Slider.children #

  Object children

Description #

An array of child elements.
# Slider Slider.dispatchEvent #
Slider.dispatchEvent #

  Event dispatchEvent ()

Description #

Simulates the occurrence of an event in this target.

A script can create a?UIEvent?object for a specific event and pass it to
this method to start the event propagation for the event.
# Slider Slider.enabled #
Slider.enabled #

  Boolean enabled

Description #

True if this element is enabled.

An enabled element can accept input, according to its type. When false,
control elements do not accept input, and all types of elements have a
dimmed appearance.
# Slider Slider.graphics #
Slider.graphics #

  ScriptUIGraphics graphics

Description #

The graphics object that can be used to customize the element’s
appearance, in response to the?onDraw()?event.
# Slider Slider.helpTip #
Slider.helpTip #

  String helpTip

Description #

The help text that is displayed when the mouse hovers over the element.
# Slider Slider.hide #
Slider.hide #

  void hide ()

Description #

Hides this element.
# Slider Slider.indent #
Slider.indent #

  Number indent

Description #

The number of pixels to indent the element during automatic layout.

Applies for column orientation and left alignment, or row orientation
and top alignment.
# Slider Slider.location #
Slider.location #

  Point location

Description #

The upper left corner of this element relative to its parent.

The location is defined as [bounds.x, bounds.y]. Setting an element’s
location changes its bounds property, and vice-versa.
# Slider Slider.maximumSize #
Slider.maximumSize #

  Dimension maximumSize

Description #

The maximum height and width to which the element can be resized.
# Slider Slider.maxvalue #
Slider.maxvalue #

  Number maxvalue

Description #

The maximum value allowed in the?value?property.

Together with?minvalue, sets the range.Default is 100.
# Slider Slider.minimumSize #
Slider.minimumSize #

  Dimension minimumSize

Description #

The minimum height and width to which the element can be resized.
# Slider Slider.minvalue #
Slider.minvalue #

  Number minvalue

Description #

The minimum value allowed in the?value?property.

Together with?maxvalue, sets the range.Default is 0.
# Slider Slider.notify #
Slider.notify #

  void notify ( String eventName )

Parameters #

  ----------------- -----------------------------------------------------
  eventName         The name of the control event handler to call.

  ----------------- -----------------------------------------------------

Description #

Sends a notification message, simulating the specified user interaction
event.
# Slider Slider.onActivate #
Slider.onActivate #

  void onActivate ()

Description #

An event-handler callback function, called when the element acquires the
keyboard focus.

Called when the user gives the control the keyboard focus by clicking it
or tabbing into it.
# Slider Slider.onChange #
Slider.onChange #

  void onChange ()

Description #

An event-handler callback function, called when the user has finished
dragging the position indicator, or has clicked the control.
# Slider Slider.onChanging #
Slider.onChanging #

  void onChanging ()

Description #

An event-handler callback function, called when the content of the
element is in the process of changing

The handler is called for any motion of the position indicator while
this control has the input focus.
# Slider Slider.onDeactivate #
Slider.onDeactivate #

  void onDeactivate ()

Description #

An event-handler callback function, called when the element loses the
keyboard focus.

Called when the user moves the keyboard focus from the previously active
control to another control.
# Slider Slider.onDraw #
Slider.onDraw #

  void onDraw ()

Description #

An event-handler callback function, called when the window is about to
be drawn.

Allows the script to modify or control the appearance, using the
control?s associated?ScriptUIGraphics?object. Handler takes one
argument, a?DrawState?object.
# Slider Slider.onShortcutKey #
Slider.onShortcutKey #

  void onShortcutKey ()

Description #

An event-handler callback function, called when the
element’s?shortcutKey?sequence is typed in the active window.

In Windows only.
# Slider Slider.parent #
Slider.parent #

  Object parent

Description #

The parent element.
# Slider Slider.preferredSize #
Slider.preferredSize #

  Dimension preferredSize

Description #

The preferred size, used by layout managers to determine the best size
for each element.

If not explicitly set by a script, value is established by the UI
framework in which ScriptUI is employed, and is based on such attributes
of the element as its text, font, font size, icon size, and other UI
framework-specific attributes.A script can explicitly set this value
before the layout manager is invoked in order to establish an element
size other than the default.
# Slider Slider.properties #
Slider.properties #

  Object properties

Description #

An object that contains one or more creation properties of the container
(properties used only when the element is created).

A Slider object has no creation properties. The third argument of
the?add()?method that creates it is the initial value, and the fourth
and fifth arguments are the minimum and maximum values of the range.
# Slider Slider.removeEventListener #
Slider.removeEventListener #

  Boolean removeEventListener ( String eventName , Function handler ,
  Boolean capturePhase )

Parameters #

  -------------- ----------------------------------------------------------
  eventName      The name of the event.

  handler        The function that handles the event.

  capturePhase   Whether to call the handler only in the capturing phase of
                 the event propagation.
  -------------- ----------------------------------------------------------

Description #

Unregisters an event handler for a particular type of event occuring in
this element.

All arguments must be identical to those that were used to register the
event handler.
# Slider Slider.shortcutKey #
Slider.shortcutKey #

  String shortcutKey

Description #

The key sequence that invokes the?onShortcutKey()?callback for this
element (in Windows only).
# Slider Slider.show #
Slider.show #

  void show ()

Description #

Shows this element.

When a window or container is hidden, its children are also hidden, but
when it is shown again, the children retain their own visibility states.
# Slider Slider.size #
Slider.size #

  Dimension size

Description #

The current dimensions of this element.

Initially undefined, and unless explicitly set by a script, it is
defined by a?LayoutManager?. A script can explicitly set size before the
layout manager is invoked to establish an element size other than
the?preferredSize?or the default size, but this is not recommended.
Defined as [bounds.width, bounds.height]. Setting an element’s size
changes its bounds property, and vice-versa.
# Slider Slider.type #
Slider.type #

  String type

Description #

The element type, “slider”.
# Slider Slider.value #
Slider.value #

  Number value

Description #

The current position of the indicator.

If set to a value outside the range specified by?minvalue?and?maxvalue,
it is automatically reset to the closest boundary.
# Slider Slider.visible #
Slider.visible #

  Boolean visible

Description #

True if this element is shown, false if it is hidden.

When a container is hidden, its children are also hidden, but they
retain their own visibility values, and are shown or hidden accordingly
when the parent is next shown.
# Slider Slider.windowBounds #
Slider.windowBounds #

  Bounds windowBounds

Description #

The bounds of this element relative to the top-level parent window.
# Slider Slider.window #
Slider.window #

  Window window

Description #

The window that this element belongs to.
# StaticText StaticText.active #
StaticText.active #

  Boolean active

Description #

Always false. This element cannot have input focus.

An active control is the one with keyboard focus?that is, the one that
accepts keystrokes, or in the case of a?Button, is selected when the
user types Return or Enter in Windows, or the space bar in Mac OS.
# StaticText StaticText.addEventListener #
StaticText.addEventListener #

  Boolean addEventListener ( String eventName , Function handler ,
  Boolean capturePhase )

Parameters #

  -------------- ----------------------------------------------------------
  eventName      The name of the event.

  handler        The function that handles the event.

  capturePhase   When true, the handler is called only in the capturing
                 phase of the event propagation.
  -------------- ----------------------------------------------------------

Description #

Registers an event handler for a particular type of event occuring in
this element.
# StaticText StaticText.alignment #
StaticText.alignment #

  String alignment

Description #

The alignment style for this element. If defined, this value overrides
the alignChildren setting for the parent container.

This can be a single string, which indicates the alignment for the
orientation specified in the parent container, or an array of two
strings, indicating both the horizontal and vertical alignment (in that
order). Allowed values depend on the orientation value of the parent
container. They are not case sensitive. For orientation=row:top, bottom,
fill For orientation=column: left, right, fill For
orientation=stack:top, bottom, left, right, fill
# StaticText StaticText.bounds #
StaticText.bounds #

  Bounds bounds

Description #

The boundaries of the element, in parent-relative coordinates.

Setting an element’s size or location changes its bounds property, and
vice-versa.
# StaticText StaticText.characters #
StaticText.characters #

  Number characters

Description #

A number of characters for which to reserve space when calculating the
preferred size of the element.
# StaticText StaticText.children #
StaticText.children #

  Object children

Description #

An array of child elements.
# StaticText StaticText.dispatchEvent #
StaticText.dispatchEvent #

  Event dispatchEvent ()

Description #

Simulates the occurrence of an event in this target.

A script can create a?UIEvent?object for a specific event and pass it to
this method to start the event propagation for the event.
# StaticText StaticText.enabled #
StaticText.enabled #

  Boolean enabled

Description #

True if this element is enabled.

An enabled element can accept input, according to its type. When false,
control elements do not accept input, and all types of elements have a
dimmed appearance.
# StaticText StaticText.graphics #
StaticText.graphics #

  ScriptUIGraphics graphics

Description #

The graphics object that can be used to customize the element’s
appearance, in response to the?onDraw()?event.
# StaticText StaticText.helpTip #
StaticText.helpTip #

  String helpTip

Description #

The help text that is displayed when the mouse hovers over the element.
# StaticText StaticText.hide #
StaticText.hide #

  void hide ()

Description #

Hides this element.
# StaticText StaticText.indent #
StaticText.indent #

  Number indent

Description #

The number of pixels to indent the element during automatic layout.

Applies for column orientation and left alignment, or row orientation
and top alignment.
# StaticText StaticText.justify #
StaticText.justify #

  String justify

Description #

The text justification style.

One of left, center, or right. Justification only works if this value is
set on creation of the element.
# StaticText StaticText.location #
StaticText.location #

  Point location

Description #

The upper left corner of this element relative to its parent.

The location is defined as [bounds.x, bounds.y]. Setting an element’s
location changes its bounds property, and vice-versa.
# StaticText StaticText.maximumSize #
StaticText.maximumSize #

  Dimension maximumSize

Description #

The maximum height and width to which the element can be resized.
# StaticText StaticText.minimumSize #
StaticText.minimumSize #

  Dimension minimumSize

Description #

The minimum height and width to which the element can be resized.
# StaticText StaticText.notify #
StaticText.notify #

  void notify ( String eventName )

Parameters #

  ----------------- -----------------------------------------------------
  eventName         The name of the control event handler to call.

  ----------------- -----------------------------------------------------

Description #

Sends a notification message, simulating the specified user interaction
event.
# StaticText StaticText.onDraw #
StaticText.onDraw #

  void onDraw ()

Description #

An event-handler callback function, called when the window is about to
be drawn.

Allows the script to modify or control the appearance, using the
control?s associated?ScriptUIGraphics?object. Handler takes one
argument, a?DrawState?object.
# StaticText StaticText.onShortcutKey #
StaticText.onShortcutKey #

  void onShortcutKey ()

Description #

An event-handler callback function, called when the element’s
shortcutKey sequence is typed in the active window.

In Windows only.
# StaticText StaticText.parent #
StaticText.parent #

  Object parent

Description #

The parent element.
# StaticText StaticText.preferredSize #
StaticText.preferredSize #

  Dimension preferredSize

Description #

The preferred size, used by layout managers to determine the best size
for each element.

If not explicitly set by a script, value is established by the UI
framework in which ScriptUI is employed, and is based on such attributes
of the element as its text, font, font size, icon size, and other UI
framework-specific attributes.A script can explicitly set this value
before the layout manager is invoked in order to establish an element
size other than the default.
# StaticText StaticText.properties #
StaticText.properties #

  Object properties

Description #

An object that contains one or more creation properties of the container
(properties used only when the element is created).

Creation properties of a StaticText object can include: multiline: When
false (the default), the control displays a single line of text. When
true, the control displays multiple lines, in which case the text wraps
within the width of the control. scrolling: When false (the default),
the displayed text cannot be scrolled. When true, the displayed text can
be vertically scrolled using the Up Arrow and Down Arrow; this case
implies multiline=true.
# StaticText StaticText.removeEventListener #
StaticText.removeEventListener #

  Boolean removeEventListener ( String eventName , Function handler ,
  Boolean capturePhase )

Parameters #

  -------------- ----------------------------------------------------------
  eventName      The name of the event.

  handler        The function that handles the event.

  capturePhase   Whether to call the handler only in the capturing phase of
                 the event propagation.
  -------------- ----------------------------------------------------------

Description #

Unregisters an event handler for a particular type of event occuring in
this element.

All arguments must be identical to those that were used to register the
event handler.
# StaticText StaticText.shortcutKey #
StaticText.shortcutKey #

  String shortcutKey

Description #

The key sequence that invokes the?onShortcutKey()?callback for this
element (in Windows only).
# StaticText StaticText.show #
StaticText.show #

  void show ()

Description #

Shows this element.

When a window or container is hidden, its children are also hidden, but
when it is shown again, the children retain their own visibility states.
# StaticText StaticText.size #
StaticText.size #

  Dimension size

Description #

The current dimensions of this element.

Initially undefined, and unless explicitly set by a script, it is
defined by a?LayoutManager?. A script can explicitly set size before the
layout manager is invoked to establish an element size other than the
preferredSize or the default size, but this is not recommended. Defined
as [bounds.width, bounds.height]. Setting an element’s size changes its
bounds property, and vice-versa.
# StaticText StaticText.text #
StaticText.text #

  String text

Description #

The text to display, a localizable string.
# StaticText StaticText.type #
StaticText.type #

  String type

Description #

The element type, “statictext”.
# StaticText StaticText.visible #
StaticText.visible #

  Boolean visible

Description #

True if this element is shown, false if it is hidden.

When a container is hidden, its children are also hidden, but they
retain their own visibility values, and are shown or hidden accordingly
when the parent is next shown.
# StaticText StaticText.windowBounds #
StaticText.windowBounds #

  Bounds windowBounds

Description #

The bounds of this element relative to the top-level parent window.
# StaticText StaticText.window #
StaticText.window #

  Window window

Description #

The window that this element belongs to.
# TreeView TreeView.active #
TreeView.active #

  Boolean active

Description #

True if this element is active.

An active control is the one with keyboard focus?that is, the one that
accepts keystrokes, or in the case of a?Button, is selected when the
user types Return or Enter in Windows, or the space bar in Mac OS.
# TreeView TreeView.addEventListener #
TreeView.addEventListener #

  Boolean addEventListener ( String eventName , Function handler ,
  Boolean capturePhase )

Parameters #

  -------------- ----------------------------------------------------------
  eventName      The name of the event.

  handler        The function that handles the event.

  capturePhase   When true, the handler is called only in the capturing
                 phase of the event propagation.
  -------------- ----------------------------------------------------------

Description #

Registers an event handler for a particular type of event occuring in
this element.
# TreeView TreeView.add #
TreeView.add #

  ListItem add ( String type , String text )

Parameters #

  ----------- -----------------------------------------------------------
  type        The type of the child element, the string “item”.

  text        The localizable text label for the item.
  ----------- -----------------------------------------------------------

Description #

Adds an item to the top-level choices in this list.

Returns the item control object.
# TreeView TreeView.alignment #
TreeView.alignment #

  String alignment

Description #

The alignment style for this element. If defined, this value overrides
the alignChildren setting for the parent container.

This can be a single string, which indicates the alignment for the
orientation specified in the parent container, or an array of two
strings, indicating both the horizontal and vertical alignment (in that
order). Allowed values depend on the orientation value of the parent
container. They are not case sensitive. For orientation=row:top, bottom,
fill For orientation=column: left, right, fill For
orientation=stack:top, bottom, left, right, fill
# TreeView TreeView.bounds #
TreeView.bounds #

  Bounds bounds

Description #

The boundaries of the element, in parent-relative coordinates.

Setting an element’s size or location changes its bounds property, and
vice-versa.
# TreeView TreeView.children #
TreeView.children #

  Object children

Description #

An array of child elements.
# TreeView TreeView.dispatchEvent #
TreeView.dispatchEvent #

  Event dispatchEvent ()

Description #

Simulates the occurrence of an event in this target.

A script can create a?UIEvent?object for a specific event and pass it to
this method to start the event propagation for the event.
# TreeView TreeView.enabled #
TreeView.enabled #

  Boolean enabled

Description #

True if this element is enabled.

An enabled element can accept input, according to its type. When false,
control elements do not accept input, and all types of elements have a
dimmed appearance.
# TreeView TreeView.find #
TreeView.find #

  ListItem find ( String text )

Parameters #

  ------------------- ---------------------------------------------------
  text                The text string to match.

  ------------------- ---------------------------------------------------

Description #

Retrieves an item object from the list that has a given text label.
# TreeView TreeView.graphics #
TreeView.graphics #

  ScriptUIGraphics graphics

Description #

The graphics object that can be used to customize the element’s
appearance, in response to the?onDraw()?event.
# TreeView TreeView.helpTip #
TreeView.helpTip #

  String helpTip

Description #

The help text that is displayed when the mouse hovers over the element.
# TreeView TreeView.hide #
TreeView.hide #

  void hide ()

Description #

Hides this element.
# TreeView TreeView.indent #
TreeView.indent #

  Number indent

Description #

The number of pixels to indent the element during automatic layout.

Applies for column orientation and left alignment, or row orientation
and top alignment.
# TreeView TreeView.items #
TreeView.items #

  ListItem items

Description #

The array of top-level items displayed in the list.

Access this array with a 0-based index. To obtain the number of items in
the list, use items.length.The objects are created when items are
specified on creation of the parent list object, or afterward using the
list control?s?add()?method.
# TreeView TreeView.itemSize #
TreeView.itemSize #

  Dimension itemSize

Description #

The width and height in pixels of each item in the list.

Used by auto-layout to determine the?preferredSize?of the list, if not
otherwise specified. If not set explicitly, the size of each item is set
to match the largest height and width among all items in the list
# TreeView TreeView.location #
TreeView.location #

  Point location

Description #

The upper left corner of this element relative to its parent.

The location is defined as [bounds.x, bounds.y]. Setting an element’s
location changes its bounds property, and vice-versa.
# TreeView TreeView.maximumSize #
TreeView.maximumSize #

  Dimension maximumSize

Description #

The maximum height and width to which the element can be resized.
# TreeView TreeView.minimumSize #
TreeView.minimumSize #

  Dimension minimumSize

Description #

The minimum height and width to which the element can be resized.
# TreeView TreeView.notify #
TreeView.notify #

  void notify ( String eventName )

Parameters #

  ----------------- -----------------------------------------------------
  eventName         The name of the control event handler to call.

  ----------------- -----------------------------------------------------

Description #

Sends a notification message, simulating the specified user interaction
event.
# TreeView TreeView.onActivate #
TreeView.onActivate #

  void onActivate ()

Description #

An event-handler callback function, called when the element acquires the
keyboard focus.

Called when the user gives the control the keyboard focus by clicking it
or tabbing into it.
# TreeView TreeView.onChange #
TreeView.onChange #

  void onChange ()

Description #

An event-handler callback function, called when the content of the
element has been changed
# TreeView TreeView.onCollapse #
TreeView.onCollapse #

  void onCollapse ( ListItem item )

Parameters #

  --------------- -------------------------------------------------------
  item            The?ListItem?node that collapsed.

  --------------- -------------------------------------------------------

Description #

An event-handler callback function, called when the user collapses
(closes) an expanded node in the treeview.
# TreeView TreeView.onDeactivate #
TreeView.onDeactivate #

  void onDeactivate ()

Description #

An event-handler callback function, called when the element loses the
keyboard focus.

Called when the user moves the keyboard focus from the previously active
control to another control.
# TreeView TreeView.onDraw #
TreeView.onDraw #

  void onDraw ()

Description #

An event-handler callback function, called when the window is about to
be drawn.

Allows the script to modify or control the appearance, using the
control?s associated?ScriptUIGraphics?object. Handler takes one
argument, a?DrawState?object.
# TreeView TreeView.onExpand #
TreeView.onExpand #

  void onExpand ( ListItem item )

Parameters #

  ---------------- ------------------------------------------------------
  item             The?ListItem?node that expanded.

  ---------------- ------------------------------------------------------

Description #

An event-handler callback function, called when the user expands (opens)
a collapsed node in the treeview.
# TreeView TreeView.onShortcutKey #
TreeView.onShortcutKey #

  void onShortcutKey ()

Description #

An event-handler callback function, called when the
element’s?shortcutKey?sequence is typed in the active window.

In Windows only.
# TreeView TreeView.parent #
TreeView.parent #

  Object parent

Description #

The parent element.
# TreeView TreeView.preferredSize #
TreeView.preferredSize #

  Dimension preferredSize

Description #

The preferred size, used by layout managers to determine the best size
for each element.

If not explicitly set by a script, value is established by the UI
framework in which ScriptUI is employed, and is based on such attributes
of the element as its text, font, font size, icon size, and other UI
framework-specific attributes.A script can explicitly set this value
before the layout manager is invoked in order to establish an element
size other than the default.
# TreeView TreeView.properties #
TreeView.properties #

  Object properties

Description #

An object that contains one or more creation properties of the control
(properties used only when the element is created).

Creation properties of a ListBox object can include: items: An array of
strings for the text of each top-level list item. An item object is
created for each item. An item with the text string “-” creates a
separator item. Supply this property, or the items argument to
the?add()?method, not both. This form is most useful for elements
defined using Resource Specifications.
# TreeView TreeView.removeAll #
TreeView.removeAll #

  void removeAll ()

Description #

Removes all child items from the list.
# TreeView TreeView.removeEventListener #
TreeView.removeEventListener #

  Boolean removeEventListener ( String eventName , Function handler ,
  Boolean capturePhase )

Parameters #

  -------------- ----------------------------------------------------------
  eventName      The name of the event.

  handler        The function that handles the event.

  capturePhase   Whether to call the handler only in the capturing phase of
                 the event propagation.
  -------------- ----------------------------------------------------------

Description #

Unregisters an event handler for a particular type of event occuring in
this element.

All arguments must be identical to those that were used to register the
event handler.
# TreeView TreeView.remove #
TreeView.remove #

  void remove (any what )

Parameters #

  ------ -----------------------------------------------------------------
  what   The item or child to remove, specified by 0-based index in the
         top-level item list, text value, or as a?ListItem?object.

  ------ -----------------------------------------------------------------

Description #

Removes a child item from the list.
# TreeView TreeView.selection #
TreeView.selection #

  ListItem selection

Description #

The currently selected list item.

Setting this value causes the selected item to be highlighted and to be
scrolled into view if necessary. If no items are selected, the value is
null. Set to null to deselect all items.You can set the value using the
index of an item, rather than an object reference. If set to an index
value that is out of range, the operation is ignored. When set with an
index value, the property still returns an object reference.
# TreeView TreeView.shortcutKey #
TreeView.shortcutKey #

  String shortcutKey

Description #

The key sequence that invokes the?onShortcutKey()?callback for this
element (in Windows only).
# TreeView TreeView.show #
TreeView.show #

  void show ()

Description #

Shows this element.

When a window or container is hidden, its children are also hidden, but
when it is shown again, the children retain their own visibility states.
# TreeView TreeView.size #
TreeView.size #

  Dimension size

Description #

The current dimensions of this element.

Initially undefined, and unless explicitly set by a script, it is
defined by a?LayoutManager?. A script can explicitly set size before the
layout manager is invoked to establish an element size other than
the?preferredSize?or the default size, but this is not recommended.
Defined as [bounds.width, bounds.height]. Setting an element’s size
changes its bounds property, and vice-versa.
# TreeView TreeView.type #
TreeView.type #

  String type

Description #

The element type, “treeview”.
# TreeView TreeView.visible #
TreeView.visible #

  Boolean visible

Description #

True if this element is shown, false if it is hidden.

When a container is hidden, its children are also hidden, but they
retain their own visibility values, and are shown or hidden accordingly
when the parent is next shown.
# TreeView TreeView.windowBounds #
TreeView.windowBounds #

  Bounds windowBounds

Description #

The bounds of this element relative to the top-level parent window.
# TreeView TreeView.window #
TreeView.window #

  Window window

Description #

The window that this element belongs to.
# UIEvent UIEvent.bubbles #
UIEvent.bubbles #

  Boolean bubbles

Description #

True if the event is of a type that bubbles.
# UIEvent UIEvent.cancelable #
UIEvent.cancelable #

  Boolean cancelable

Description #

True if the default action associated with the event can be canceled
with preventDefault().
# UIEvent UIEvent.captures #
UIEvent.captures #

  Boolean captures

Description #

True if this event can be captured.
# UIEvent UIEvent.currentTarget #
UIEvent.currentTarget #

  Boolean currentTarget

Description #

The event target object which is currently handling the event. During
capturing and bubbling, this is different from the property target.
# UIEvent UIEvent.detail #
UIEvent.detail #

  any detail

Description #

The click count for a mouse-click event.
# UIEvent UIEvent.eventPhase #
UIEvent.eventPhase #

  String eventPhase

Description #

The current phase of event propagation; one of none, target, capture,
bubble.
# UIEvent UIEvent.initEvent #
UIEvent.initEvent #

  void initEvent ( String type , Boolean captures , Boolean bubbles ,
  Boolean cancelable )

Parameters #

  ----------------- -----------------------------------------------------
  type              The event type.

  captures          Set to true if this event can be captured.

  bubbles           Set to true if the event bubbles.

  cancelable        Set to true if the default action is cancelable.
  ----------------- -----------------------------------------------------

Description #

Initializes a UI event as a core W3C event.
# UIEvent UIEvent.initUIEvent #
UIEvent.initUIEvent #

  void initUIEvent ( String type , Boolean captures , Boolean bubbles ,
  Object view , Number detail )

Parameters #

  --------------- -------------------------------------------------------
  type            The event type.

  captures        Set to true if this event can be captured.

  bubbles         Set to true if the event bubbles.

  view            The ScriptUI element that this event relates to.

  detail          The click count for a mouse-click event.
  --------------- -------------------------------------------------------

Description #

Initializes an event.
# UIEvent UIEvent.preventDefault #
UIEvent.preventDefault #

  void preventDefault ()

Description #

Prevents the default action associated with this event from being
called.
# UIEvent UIEvent.stopPropagation #
UIEvent.stopPropagation #

  void stopPropagation ()

Description #

Stops the propagation of this event.
# UIEvent UIEvent.target #
UIEvent.target #

  Object target

Description #

The event target object for this event.
# UIEvent UIEvent.timeStamp #
UIEvent.timeStamp #

  Date timeStamp

Description #

The date and time at which the event occurred.
# UIEvent UIEvent.type #
UIEvent.type #

  String type

Description #

The name of the event that this object represents.

Event types are listed in the JavaScript Tools Guide.
# UIEvent UIEvent.UIEvent #
UIEvent.UIEvent #

  UIEvent UIEvent ( String type , Boolean captures , Boolean bubbles ,
  Object view , Number detail )

Parameters #

  --------------- -------------------------------------------------------
  type            The event type. See?UIEvent.type?property.

  captures        Set to true if this event can be captured.

  bubbles         Set to true if the event bubbles.

  view            The ScriptUI element that this event relates to.

  detail          The click count for a mouse-click event.
  --------------- -------------------------------------------------------

Description #

Creates an event.

The?UIEvent?object is normally created by ScriptUI and passed to your
event handler. However, you can simulate a user action by constructing
an event object and sending it to a target object?s dispatchEvent()
function.
# UIEvent UIEvent.view #
UIEvent.view #

  any view

Description #

The ScriptUI element that this event relates to.
# Window Window.active #
Window.active #

  Boolean active

Description #

Set to true to make this window active.

A modal dialog that is visible is by definition the active dialog. An
active palette is the front-most window. An active control is the one
with focus?that is, the one that accepts keystrokes, or in the case of
a?Button, be selected when the user types Return or Enter.
# Window Window.addEventListener #
Window.addEventListener #

  Boolean addEventListener ( String eventName , Function handler ,
  Boolean capturePhase )

Parameters #

  -------------- ----------------------------------------------------------
  eventName      The name of the event.

  handler        The function that handles the event.

  capturePhase   When true, the handler is called only in the capturing
                 phase of the event propagation.
  -------------- ----------------------------------------------------------

Description #

Registers an event handler for a particular type of event occuring in
this window.
# Window Window.add #
Window.add #

  Object add ( String type , Bounds bounds , String text , Object
  properties )

Parameters #

  ------------ ---------------------------------------------------------------
  type         The type of the child element, as specified for the type
               property.

  bounds       A bounds specification that describes the size and position of
               the new control or container, relative to its parent.

  text         The text or label, a localizable string.

  properties   An object that contains one or more creation properties of the
               new child (properties used only when the element is created).
  ------------ ---------------------------------------------------------------

Description #

Creates and returns a new control or container object and adds it to the
children of this window.
# Window Window.alert #
Window.alert #

  void alert ( String message , String title , Boolean errorIcon )

Parameters #

  ----------- --------------------------------------------------------------
  message     TThe string for the displayed message.

  title       A string to appear as the title of the dialog, if the platform
              supports a title.

  errorIcon   When true, the platform-standard alert icon is replaced by the
              platform-standard error icon in the dialog.
  ----------- --------------------------------------------------------------

Description #

Displays a platform-standard dialog containing a short message and an OK
button.
# Window Window.alignChildren #
Window.alignChildren #

  String alignChildren

Description #

Tells the layout manager how unlike-sized children of this container
should be aligned within a column or row.

Order of creation determines which children are at the top of a column
or the left of a row; the earlier a child is created, the closer it is
to the top or left of its column or row. If defined, alignment for a
child element overrides the alignChildren setting for the parent
container. See alignment property for values.
# Window Window.alignment #
Window.alignment #

  String alignment

Description #

The alignment style for child elements of a container. If defined, this
value overrides the alignChildren setting for the parent container.

This can be a single string, which indicates the alignment for the
orientation specified in the parent container, or an array of two
strings, indicating both the horizontal and vertical alignment (in that
order). Allowed values depend on the orientation value of the parent
container. They are not case sensitive. For orientation=row:top, bottom,
fill For orientation=column: left, right, fill For
orientation=stack:top, bottom, left, right, fill
# Window Window.bounds #
Window.bounds #

  Bounds bounds

Description #

The bounds of the window’s drawable area, excluding the frame, in screen
coordinates.
# Window Window.cancelElement #
Window.cancelElement #

  Object cancelElement

Description #

For windows of type dialog, the UI element to notify when the user
presses a cancellation key combination.

The cancellation key is the Esc key. By default, looks for a button
whose name or text is “cancel” (case disregarded).
# Window Window.center #
Window.center #

  void center ( Window window )

Parameters #

  ----------- -----------------------------------------------------------
  window      The relative window. If not specified, centers on the
              screen.

  ----------- -----------------------------------------------------------

Description #

Centers this window on screen or with repect to another window.
# Window Window.characters #
Window.characters #

  Number characters

Description #

A number of characters for which to reserve space when calculating the
preferred size of the window.
# Window Window.children #
Window.children #

  Object children

Description #

The collection of UI elements that have been added to this container.

An array indexed by number or by a string containing an element’s name.
The length property of this array is the number of child elements for
container elements, and is zero for controls.
# Window Window.close #
Window.close #

  void close (any return )

Parameters #

  -------- --------------------------------------------------------------
  return   A number to be returned from the show() method that invoked
           this window as a modal dialog.

  -------- --------------------------------------------------------------

Description #

Closes this window.

. If an?onClose()?callback is defined for the window, calls that
function before closing the window.
# Window Window.confirm #
Window.confirm #

  Boolean confirm ( String message , Boolean noAsDefault , String title
  )

Parameters #

  ------------- ----------------------------------------------------------
  message       The string for the displayed message.

  noAsDefault   When true, the No button is the default choice, selected
                when the user types Enter.

  title         A string to appear as the title of the dialog, if the
                platform supports a title.
  ------------- ----------------------------------------------------------

Description #

Displays a platform-standard dialog containing a short message and two
buttons labeled Yes and No.

Returns true if the user clicked Yes, false if the user clicked No.
# Window Window.defaultElement #
Window.defaultElement #

  Object defaultElement

Description #

For windows of type dialog, the UI element to notify when the user
presses a Enter key.

By default, looks for a button whose name or text is “ok” (case
disregarded).
# Window Window.dispatchEvent #
Window.dispatchEvent #

  UIEvent dispatchEvent ()

Description #

Simulates the occurrence of an event in this target.

A script can create a?UIEvent?object for a specific event and pass it to
this method to start the event propagation for the event.
# Window Window.enabled #
Window.enabled #

  Boolean enabled

Description #

True if this element is enabled.

An enabled element can accept input, according to its type. When false,
control elements do not accept input, and all types of elements have a
dimmed appearance.
# Window Window.find #
Window.find #

  Window find ( String type , String title )

Parameters #

  ------- ----------------------------------------------------------------
  type    The name of a predefined resource available to JavaScript in the
          current application; or the window type.

  title   The window title.
  ------- ----------------------------------------------------------------

Description #

Use this method to find an existing window.

This includes windows defined by ScriptUI resource strings, windows
already created by a script, and windows created by the application (if
the application supports this case). This function is not supported by
all applications. Returns a?Window?object found or generated from the
resource, or null if no such window or resource exists.
# Window Window.frameBounds #
Window.frameBounds #

  Bounds frameBounds

Description #

The bounds of the window frame in screen coordinates.

The frame consists of the title bar and borders that enclose the content
region of a window, depending on the windowing system.
# Window Window.frameLocation #
Window.frameLocation #

  Point frameLocation

Description #

The top left corner of the window frame in screen coordinates.

The same as [frameBounds.x, frameBounds.y]. Set this value to move the
window frame to the specified location on the screen.
The?frameBounds?value changes accordingly.
# Window Window.frameSize #
Window.frameSize #

  Dimension frameSize

Description #

The size and location of the window’s frame in screen coordinates.
# Window Window.frameworkName #
Window.frameworkName #

  String frameworkName

Description #

Deprecated. Use?ScriptUI.frameworkName?instead.
# Window Window.graphics #
Window.graphics #

  ScriptUIGraphics graphics

Description #

The graphics object that can be used to customize the window?s
appearance, in response to the onDraw event.
# Window Window.helpTip #
Window.helpTip #

  String helpTip

Description #

The help text that is displayed when the mouse hovers over the element.
# Window Window.hide #
Window.hide #

  void hide ()

Description #

Hides this windows.

When a window is hidden, its children are also hidden, but when it is
shown again, the children retain their own visibility states. For a
modal dialog, closes the dialog and sets its result to 0.
# Window Window.indent #
Window.indent #

  Number indent

Description #

The number of pixels to indent the element.
# Window Window.justify #
Window.justify #

  String justify

Description #

The default text justification style for child text elements.

One of left, center, or right. Justification only works if this value is
set on creation of the element.
# Window Window.layout #
Window.layout #

  LayoutManager layout

Description #

The layout manager for this container.

The first time a container object is made visible, ScriptUI invokes this
layout manager by calling its?layout()?function. Default is an instance
of the?LayoutManager?class that is automatically created when the
container element is created.
# Window Window.location #
Window.location #

  Point location

Description #

The upper left corner of the window’s drawable area.

The same as [bounds.x, bounds.y].
# Window Window.margins #
Window.margins #

  Number margins

Description #

The number of pixels between the edges of a container and the outermost
child elements.

You can specify different margins for each edge of the container. The
default value is based on the type of container, and is chosen to match
the standard Adobe UI guidelines.
# Window Window.maximized #
Window.maximized #

  Boolean maximized

Description #

True if the window is expanded.
# Window Window.maximumSize #
Window.maximumSize #

  Dimension maximumSize

Description #

The largest rectangle to which the window can be resized.
# Window Window.minimized #
Window.minimized #

  Boolean minimized

Description #

True if the window is minimized or iconified.
# Window Window.minimumSize #
Window.minimumSize #

  Dimension minimumSize

Description #

The smallest rectangle to which the window can be resized.
# Window Window.notify #
Window.notify #

  void notify ( String eventName )

Parameters #

  -------------- --------------------------------------------------------
  eventName      The event name; if omitted, the default event is sent.

  -------------- --------------------------------------------------------

Description #

Sends a notification message to all listeners, simulating the specified
user interaction event.
# Window Window.onActivate #
Window.onActivate #

  void onActivate ()

Description #

An event-handler callback function, called when the window acquires the
keyboard focus.

Called when the user gives the window the keyboard focus by clicking it
or otherwise making it the active window.
# Window Window.onClose #
Window.onClose #

  Boolean onClose ()

Description #

An event-handler callback function, called when the window is about to
be closed.

Called when a request is made to close the window, either by an explicit
call to the?close()?function or by a user action (clicking the
OS-specific close icon in the title bar). The function is called before
the window actually closes; it can return false to cancel the close
operation.
# Window Window.onDeactivate #
Window.onDeactivate #

  void onDeactivate ()

Description #

An event-handler callback function, called when the window loses the
keyboard focus.

Called when the user moves the keyboard focus from the previously active
window to another window.
# Window Window.onMove #
Window.onMove #

  void onMove ()

Description #

An event-handler callback function, called when the window has been
moved
# Window Window.onMoving #
Window.onMoving #

  void onMoving ()

Description #

An event-handler callback function, called when the window is being
moved

Called while a window in being moved, each time the position changes. A
handler can monitor the move operation.
# Window Window.onResize #
Window.onResize #

  void onResize ()

Description #

An event-handler callback function, called after the window has been
resized
# Window Window.onResizing #
Window.onResizing #

  void onResizing ()

Description #

An event-handler callback function, called while a window is being
resized

Called while a window is being resized, each time the height or width
changes. A handler can monitor the resize operation.
# Window Window.onShortcutKey #
Window.onShortcutKey #

  void onShortcutKey ()

Description #

In Windows only, an event-handler callback function, called a
shortcut-key sequence is typed that matches the?shortcutKey?value for
this window.
# Window Window.onShow #
Window.onShow #

  void onShow ()

Description #

An event-handler callback function, called just before the window is
displayed

Called when a request is made to open the window using
the?show()?method, before the window is made visible, but after
automatic layout is complete. A handler can modify the results of the
automatic layout.
# Window Window.opacity #
Window.opacity #

  Number opacity

Description #

The opacity of the window, in the range [0..1].

A value of 1.0 (the default) makes the window completely opaque, a value
of 0 makes it completely transparent. Intermediate values make it
partially transparent to any degree.
# Window Window.orientation #
Window.orientation #

  String orientation

Description #

The layout orientation of children in a container.

Interpreted by the layout manager for the container. The
default?LayoutManager? Object accepts the (case-insensitive) values row,
column, or stack. For window and panel, the default is column, and for
group the default is row. The allowed values for the container?s
alignChildren and its children?s alignment properties depend on the
orientation.
# Window Window.parent #
Window.parent #

  Object parent

Description #

The immediate parent element.
# Window Window.preferredSize #
Window.preferredSize #

  Dimension preferredSize

Description #

The preferred size of the window.

Used in automatic layout and resizing. To set a specific value for only
one dimension, specify the other dimension as -1.
# Window Window.prompt #
Window.prompt #

  String prompt ( String prompt , String default , String title )

Parameters #

  ------------ ----------------------------------------------------------
  prompt       The string for the displayed message.

  default      The initial value to be displayed in the text edit field.

  title        A string to appear as the title of the dialog.
  ------------ ----------------------------------------------------------

Description #

Displays a modal dialog that returns the user?s text input.

Returns the value of the text edit field if the user clicked OK, null if
the user clicked Cancel.
# Window Window.properties #
Window.properties #

  Object properties

Description #

An object that contains one or more creation properties of the container
(properties used only when the element is created).

Creation properties of a Window object can include: resizeable: When
true, the window can be resized by the user. Default is false.
su1PanelCoordinates: Photoshop only. When true, the child panels of this
window automatically adjust the positions of their children for
compatability with Photoshop CS (in which the vertical coordinate was
measured from outside the frame). Default is false. Individual panels
can override the parent window?s setting. closeButton: Bridge only. When
true, the title bar includes a button to close the window, if the
platform and window type allow it. When false, it does not. Default is
true. Not used for dialogs. maximizeButton: Bridge only. When true, the
title bar includes a button to expand the window to its maximum size
(typically, the entire screen), if the platform and window type allow
it. When false, it does not. Default is false for type palette, true for
type window. Not used for dialogs.
# Window Window.removeEventListener #
Window.removeEventListener #

  Boolean removeEventListener ( String eventName , Function handler ,
  Boolean capturePhase )

Parameters #

  -------------- ----------------------------------------------------------
  eventName      The name of the event.

  handler        The function that handles the event.

  capturePhase   Whether to call the handler only in the capturing phase of
                 the event propagation.
  -------------- ----------------------------------------------------------

Description #

Unregisters an event handler for a particular type of event occuring in
this window.

All arguments must be identical to those that were used to register the
event handler.
# Window Window.remove #
Window.remove #

  void remove (any what )

Parameters #

  ------ ----------------------------------------------------------------
  what   The child control to remove, specified by 0-based index, text
         property value, or as a control object.

  ------ ----------------------------------------------------------------

Description #

Removes the specified child control from this window?s children array.

No error results if the child does not exist.
# Window Window.shortcutKey #
Window.shortcutKey #

  String shortcutKey

Description #

The keypress combination that invokes this
element’s?onShortcutKey()?callback.
# Window Window.show #
Window.show #

  void show ()

Description #

Makes this window visible.

If an?onShow()?callback is defined for a window, calls that function
before showing the window.When a window or container is hidden, its
children are also hidden, but when it is shown again, the children
retain their own visibility states. For a modal dialog, opens the dialog
and does not return until the dialog is dismissed. If it is dismissed
via the close() method, this method returns any result value passed to
that method. Otherwise, returns 0.
# Window Window.size #
Window.size #

  Dimension size

Description #

The current size and location of the content area of the window in
screen coordinates.
# Window Window.spacing #
Window.spacing #

  Number spacing

Description #

The number of pixels separating one child element from its adjacent
sibling element.

Because each container holds only a single row or column of children,
only a single spacing value is needed for a container. The default value
is based on the type of container, and is chosen to match standard Adobe
UI guidelines.
# Window Window.text #
Window.text #

  String text

Description #

The title, label, or displayed text, a localizeable string.

Does not apply to containers of type group.
# Window Window.type #
Window.type #

  String type

Description #

The element type; “dialog”, “palette”, or “window”.
# Window Window.version #
Window.version #

  any version

Description #

Deprecated. Use?ScriptUI.version?instead.
# Window Window.visible #
Window.visible #

  Boolean visible

Description #

When true, the element is shown, when false it is hidden.

When a container is hidden, its children are also hidden, but they
retain their own visibility values, and are shown or hidden accordingly
when the parent is next shown.
# Window Window.windowBounds #
Window.windowBounds #

  Bounds windowBounds

Description #

The bounds of this window relative to the top-level parent window.
# Window Window.Window #
Window.Window #

  void Window ( String type , String title , Bounds bounds , Object
  properties )

Parameters #

  ----------------- -----------------------------------------------------
  type              The window type.

  title             The window title, a localizable string.

  bounds            The window’s position and size.

  properties        An object containing creation-only properties.
  ----------------- -----------------------------------------------------

Description #

Creates a new window.
